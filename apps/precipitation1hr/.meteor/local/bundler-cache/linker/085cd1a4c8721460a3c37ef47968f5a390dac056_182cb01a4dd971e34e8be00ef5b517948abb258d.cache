[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar Reload = Package.reload.Reload;\nvar Base64 = Package.base64.Base64;\nvar URL = Package.url.URL;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\n/* Package-scope variables */\nvar OAuth, Oauth;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"oauth\":{\"oauth_client.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/oauth/oauth_client.js                                                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n// credentialToken -> credentialSecret. You must provide both the\n// credentialToken and the credentialSecret to retrieve an access token from\n// the _pendingCredentials collection.\nvar credentialSecrets = {};\nOAuth = {};\n\nOAuth.showPopup = function (url, callback, dimensions) {\n  throw new Error(\"OAuth.showPopup must be implemented on this arch.\");\n}; // Determine the login style (popup or redirect) for this login flow.\n//\n//\n\n\nOAuth._loginStyle = function (service, config, options) {\n  if (Meteor.isCordova) {\n    return \"popup\";\n  }\n\n  var loginStyle = options && options.loginStyle || config.loginStyle || 'popup';\n  if (![\"popup\", \"redirect\"].includes(loginStyle)) throw new Error(\"Invalid login style: \" + loginStyle); // If we don't have session storage (for example, Safari in private\n  // mode), the redirect login flow won't work, so fallback to the\n  // popup style.\n\n  if (loginStyle === 'redirect') {\n    try {\n      sessionStorage.setItem('Meteor.oauth.test', 'test');\n      sessionStorage.removeItem('Meteor.oauth.test');\n    } catch (e) {\n      loginStyle = 'popup';\n    }\n  }\n\n  return loginStyle;\n};\n\nOAuth._stateParam = function (loginStyle, credentialToken, redirectUrl) {\n  var state = {\n    loginStyle: loginStyle,\n    credentialToken: credentialToken,\n    isCordova: Meteor.isCordova\n  };\n  if (loginStyle === 'redirect') state.redirectUrl = redirectUrl || '' + window.location; // Encode base64 as not all login services URI-encode the state\n  // parameter when they pass it back to us.\n  // Use the 'base64' package here because 'btoa' isn't supported in IE8/9.\n\n  return Base64.encode(JSON.stringify(state));\n}; // At the beginning of the redirect login flow, before we redirect to\n// the login service, save the credential token for this login attempt\n// in the reload migration data.\n//\n\n\nOAuth.saveDataForRedirect = function (loginService, credentialToken) {\n  Reload._onMigrate('oauth', function () {\n    return [true, {\n      loginService: loginService,\n      credentialToken: credentialToken\n    }];\n  });\n\n  Reload._migrate(null, {\n    immediateMigration: true\n  });\n}; // At the end of the redirect login flow, when we've redirected back\n// to the application, retrieve the credentialToken and (if the login\n// was successful) the credentialSecret.\n//\n// Called at application startup.  Returns null if this is normal\n// application startup and we weren't just redirected at the end of\n// the login flow.\n//\n\n\nOAuth.getDataAfterRedirect = function () {\n  var migrationData = Reload._migrationData('oauth');\n\n  if (!(migrationData && migrationData.credentialToken)) return null;\n  var credentialToken = migrationData.credentialToken;\n  var key = OAuth._storageTokenPrefix + credentialToken;\n  var credentialSecret;\n\n  try {\n    credentialSecret = sessionStorage.getItem(key);\n    sessionStorage.removeItem(key);\n  } catch (e) {\n    Meteor._debug('error retrieving credentialSecret', e);\n  }\n\n  return {\n    loginService: migrationData.loginService,\n    credentialToken: credentialToken,\n    credentialSecret: credentialSecret\n  };\n}; // Launch an OAuth login flow.  For the popup login style, show the\n// popup.  For the redirect login style, save the credential token for\n// this login attempt in the reload migration data, and redirect to\n// the service for the login.\n//\n// options:\n//  loginService: \"facebook\", \"google\", etc.\n//  loginStyle: \"popup\" or \"redirect\"\n//  loginUrl: The URL at the login service provider to start the OAuth flow.\n//  credentialRequestCompleteCallback: for the popup flow, call when the popup\n//    is closed and we have the credential from the login service.\n//  credentialToken: our identifier for this login flow.\n//\n\n\nOAuth.launchLogin = function (options) {\n  if (!options.loginService) throw new Error('loginService required');\n\n  if (options.loginStyle === 'popup') {\n    OAuth.showPopup(options.loginUrl, options.credentialRequestCompleteCallback.bind(null, options.credentialToken), options.popupOptions);\n  } else if (options.loginStyle === 'redirect') {\n    OAuth.saveDataForRedirect(options.loginService, options.credentialToken);\n    window.location = options.loginUrl;\n  } else {\n    throw new Error('invalid login style');\n  }\n}; // XXX COMPAT WITH 0.7.0.1\n// Private interface but probably used by many oauth clients in atmosphere.\n\n\nOAuth.initiateLogin = function (credentialToken, url, callback, dimensions) {\n  OAuth.showPopup(url, callback.bind(null, credentialToken), dimensions);\n}; // Called by the popup when the OAuth flow is completed, right before\n// the popup closes.\n\n\nOAuth._handleCredentialSecret = function (credentialToken, secret) {\n  check(credentialToken, String);\n  check(secret, String);\n\n  if (!Object.prototype.hasOwnProperty.call(credentialSecrets, credentialToken)) {\n    credentialSecrets[credentialToken] = secret;\n  } else {\n    throw new Error(\"Duplicate credential token from OAuth login\");\n  }\n}; // Used by accounts-oauth, which needs both a credentialToken and the\n// corresponding to credential secret to call the `login` method over DDP.\n\n\nOAuth._retrieveCredentialSecret = function (credentialToken) {\n  // First check the secrets collected by OAuth._handleCredentialSecret,\n  // then check localStorage. This matches what we do in\n  // end_of_login_response.html.\n  var secret = credentialSecrets[credentialToken];\n\n  if (!secret) {\n    var localStorageKey = OAuth._storageTokenPrefix + credentialToken;\n    secret = Meteor._localStorage.getItem(localStorageKey);\n\n    Meteor._localStorage.removeItem(localStorageKey);\n  } else {\n    delete credentialSecrets[credentialToken];\n  }\n\n  return secret;\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"oauth_browser.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/oauth/oauth_browser.js                                                                                   //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n// Browser specific code for the OAuth package.\n// Open a popup window, centered on the screen, and call a callback when it\n// closes.\n//\n// @param url {String} url to show\n// @param callback {Function} Callback function to call on completion. Takes no\n//   arguments.\n// @param dimensions {optional Object(width, height)} The dimensions of\n//   the popup. If not passed defaults to something sane.\nOAuth.showPopup = function (url, callback, dimensions) {\n  // default dimensions that worked well for facebook and google\n  var popup = openCenteredPopup(url, dimensions && dimensions.width || 650, dimensions && dimensions.height || 331);\n  var checkPopupOpen = setInterval(function () {\n    var popupClosed;\n\n    try {\n      // Fix for #328 - added a second test criteria (popup.closed === undefined)\n      // to humour this Android quirk:\n      // http://code.google.com/p/android/issues/detail?id=21061\n      popupClosed = popup.closed || popup.closed === undefined;\n    } catch (e) {\n      // For some unknown reason, IE9 (and others?) sometimes (when\n      // the popup closes too quickly?) throws \"SCRIPT16386: No such\n      // interface supported\" when trying to read 'popup.closed'. Try\n      // again in 100ms.\n      return;\n    }\n\n    if (popupClosed) {\n      clearInterval(checkPopupOpen);\n      callback();\n    }\n  }, 100);\n};\n\nvar openCenteredPopup = function (url, width, height) {\n  var screenX = typeof window.screenX !== 'undefined' ? window.screenX : window.screenLeft;\n  var screenY = typeof window.screenY !== 'undefined' ? window.screenY : window.screenTop;\n  var outerWidth = typeof window.outerWidth !== 'undefined' ? window.outerWidth : document.body.clientWidth;\n  var outerHeight = typeof window.outerHeight !== 'undefined' ? window.outerHeight : document.body.clientHeight - 22; // XXX what is the 22?\n  // Use `outerWidth - width` and `outerHeight - height` for help in\n  // positioning the popup centered relative to the current window\n\n  var left = screenX + (outerWidth - width) / 2;\n  var top = screenY + (outerHeight - height) / 2;\n  var features = \"width=\" + width + \",height=\" + height + (\",left=\" + left + \",top=\" + top + \",scrollbars=yes'\");\n  var newwindow = window.open(url, 'Login', features);\n\n  if (typeof newwindow === 'undefined') {\n    // blocked by a popup blocker maybe?\n    var err = new Error(\"The login popup was blocked by the browser\");\n    err.attemptedUrl = url;\n    throw err;\n  }\n\n  if (newwindow.focus) newwindow.focus();\n  return newwindow;\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"oauth_common.js\":function(require){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/oauth/oauth_common.js                                                                                    //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nOAuth._storageTokenPrefix = \"Meteor.oauth.credentialSecret-\";\n\nOAuth._redirectUri = function (serviceName, config, params, absoluteUrlOptions) {\n  // XXX COMPAT WITH 0.9.0\n  // The redirect URI used to have a \"?close\" query argument.  We\n  // detect whether we need to be backwards compatible by checking for\n  // the absence of the `loginStyle` field, which wasn't used in the\n  // code which had the \"?close\" argument.\n  // This logic is duplicated in the tool so that the tool can do OAuth\n  // flow with <= 0.9.0 servers (tools/auth.js).\n  var query = config.loginStyle ? null : \"close\"; // Clone because we're going to mutate 'params'. The 'cordova' and\n  // 'android' parameters are only used for picking the host of the\n  // redirect URL, and not actually included in the redirect URL itself.\n\n  var isCordova = false;\n  var isAndroid = false;\n\n  if (params) {\n    params = (0, _objectSpread2.default)({}, params);\n    isCordova = params.cordova;\n    isAndroid = params.android;\n    delete params.cordova;\n    delete params.android;\n\n    if (Object.keys(params).length === 0) {\n      params = undefined;\n    }\n  }\n\n  if (Meteor.isServer && isCordova) {\n    var url = Npm.require('url');\n\n    var rootUrl = process.env.MOBILE_ROOT_URL || __meteor_runtime_config__.ROOT_URL;\n\n    if (isAndroid) {\n      // Match the replace that we do in cordova boilerplate\n      // (boilerplate-generator package).\n      // XXX Maybe we should put this in a separate package or something\n      // that is used here and by boilerplate-generator? Or maybe\n      // `Meteor.absoluteUrl` should know how to do this?\n      var parsedRootUrl = url.parse(rootUrl);\n\n      if (parsedRootUrl.hostname === \"localhost\") {\n        parsedRootUrl.hostname = \"10.0.2.2\";\n        delete parsedRootUrl.host;\n      }\n\n      rootUrl = url.format(parsedRootUrl);\n    }\n\n    absoluteUrlOptions = (0, _objectSpread2.default)({}, absoluteUrlOptions, {\n      // For Cordova clients, redirect to the special Cordova root url\n      // (likely a local IP in development mode).\n      rootUrl: rootUrl\n    });\n  }\n\n  return URL._constructUrl(Meteor.absoluteUrl(\"_oauth/\" + serviceName, absoluteUrlOptions), query, params);\n};\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"deprecated.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                   //\n// packages/oauth/deprecated.js                                                                                      //\n//                                                                                                                   //\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                     //\n// XXX COMPAT WITH 0.8.0\nOauth = OAuth;\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nrequire(\"/node_modules/meteor/oauth/oauth_client.js\");\nrequire(\"/node_modules/meteor/oauth/oauth_browser.js\");\nrequire(\"/node_modules/meteor/oauth/oauth_common.js\");\nrequire(\"/node_modules/meteor/oauth/deprecated.js\");\n\n/* Exports */\nPackage._define(\"oauth\", {\n  OAuth: OAuth,\n  Oauth: Oauth\n});\n\n})();\n","servePath":"/packages/oauth.js","sourceMap":{"version":3,"sources":["packages/oauth/oauth_client.js","packages/oauth/oauth_browser.js","packages/oauth/oauth_common.js","packages/oauth/deprecated.js"],"names":["credentialSecrets","OAuth","showPopup","url","callback","dimensions","Error","_loginStyle","service","config","options","Meteor","isCordova","loginStyle","includes","sessionStorage","setItem","removeItem","e","_stateParam","credentialToken","redirectUrl","state","window","location","Base64","encode","JSON","stringify","saveDataForRedirect","loginService","Reload","_onMigrate","_migrate","immediateMigration","getDataAfterRedirect","migrationData","_migrationData","key","_storageTokenPrefix","credentialSecret","getItem","_debug","launchLogin","loginUrl","credentialRequestCompleteCallback","bind","popupOptions","initiateLogin","_handleCredentialSecret","secret","check","String","Object","prototype","hasOwnProperty","call","_retrieveCredentialSecret","localStorageKey","_localStorage","popup","openCenteredPopup","width","height","checkPopupOpen","setInterval","popupClosed","closed","undefined","clearInterval","screenX","screenLeft","screenY","screenTop","outerWidth","document","body","clientWidth","outerHeight","clientHeight","left","top","features","newwindow","open","err","attemptedUrl","focus","_redirectUri","serviceName","params","absoluteUrlOptions","query","isAndroid","cordova","android","keys","length","isServer","Npm","require","rootUrl","process","env","MOBILE_ROOT_URL","__meteor_runtime_config__","ROOT_URL","parsedRootUrl","parse","hostname","host","format","URL","_constructUrl","absoluteUrl","Oauth"],"mappings":"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","file":"/packages/oauth.js","sourcesContent":["// credentialToken -> credentialSecret. You must provide both the\n// credentialToken and the credentialSecret to retrieve an access token from\n// the _pendingCredentials collection.\nconst credentialSecrets = {};\n\nOAuth = {};\n\nOAuth.showPopup = (url, callback, dimensions) => {\n  throw new Error(\"OAuth.showPopup must be implemented on this arch.\");\n};\n\n// Determine the login style (popup or redirect) for this login flow.\n//\n//\nOAuth._loginStyle = (service, config, options) => {\n\n  if (Meteor.isCordova) {\n    return \"popup\";\n  }\n\n  let loginStyle = (options && options.loginStyle) || config.loginStyle || 'popup';\n\n  if (! [\"popup\", \"redirect\"].includes(loginStyle))\n    throw new Error(`Invalid login style: ${loginStyle}`);\n\n  // If we don't have session storage (for example, Safari in private\n  // mode), the redirect login flow won't work, so fallback to the\n  // popup style.\n  if (loginStyle === 'redirect') {\n    try {\n      sessionStorage.setItem('Meteor.oauth.test', 'test');\n      sessionStorage.removeItem('Meteor.oauth.test');\n    } catch (e) {\n      loginStyle = 'popup';\n    }\n  }\n\n  return loginStyle;\n};\n\nOAuth._stateParam = (loginStyle, credentialToken, redirectUrl) => {\n  const state = {\n    loginStyle,\n    credentialToken,\n    isCordova: Meteor.isCordova\n  };\n\n  if (loginStyle === 'redirect')\n    state.redirectUrl = redirectUrl || ('' + window.location);\n\n  // Encode base64 as not all login services URI-encode the state\n  // parameter when they pass it back to us.\n  // Use the 'base64' package here because 'btoa' isn't supported in IE8/9.\n  return Base64.encode(JSON.stringify(state));\n};\n\n\n// At the beginning of the redirect login flow, before we redirect to\n// the login service, save the credential token for this login attempt\n// in the reload migration data.\n//\nOAuth.saveDataForRedirect = (loginService, credentialToken) => {\n  Reload._onMigrate('oauth', () => [true, { loginService, credentialToken }]);\n  Reload._migrate(null, {immediateMigration: true});\n};\n\n// At the end of the redirect login flow, when we've redirected back\n// to the application, retrieve the credentialToken and (if the login\n// was successful) the credentialSecret.\n//\n// Called at application startup.  Returns null if this is normal\n// application startup and we weren't just redirected at the end of\n// the login flow.\n//\nOAuth.getDataAfterRedirect = () => {\n  const migrationData = Reload._migrationData('oauth');\n\n  if (! (migrationData && migrationData.credentialToken))\n    return null;\n\n  const { credentialToken } = migrationData;\n  const key = OAuth._storageTokenPrefix + credentialToken;\n  let credentialSecret;\n  try {\n    credentialSecret = sessionStorage.getItem(key);\n    sessionStorage.removeItem(key);\n  } catch (e) {\n    Meteor._debug('error retrieving credentialSecret', e);\n  }\n  return {\n    loginService: migrationData.loginService,\n    credentialToken,\n    credentialSecret,\n  };\n};\n\n// Launch an OAuth login flow.  For the popup login style, show the\n// popup.  For the redirect login style, save the credential token for\n// this login attempt in the reload migration data, and redirect to\n// the service for the login.\n//\n// options:\n//  loginService: \"facebook\", \"google\", etc.\n//  loginStyle: \"popup\" or \"redirect\"\n//  loginUrl: The URL at the login service provider to start the OAuth flow.\n//  credentialRequestCompleteCallback: for the popup flow, call when the popup\n//    is closed and we have the credential from the login service.\n//  credentialToken: our identifier for this login flow.\n//\nOAuth.launchLogin = options => {\n  if (! options.loginService)\n    throw new Error('loginService required');\n  if (options.loginStyle === 'popup') {\n    OAuth.showPopup(\n      options.loginUrl,\n      options.credentialRequestCompleteCallback.bind(null, options.credentialToken),\n      options.popupOptions);\n  } else if (options.loginStyle === 'redirect') {\n    OAuth.saveDataForRedirect(options.loginService, options.credentialToken);\n    window.location = options.loginUrl;\n  } else {\n    throw new Error('invalid login style');\n  }\n};\n\n// XXX COMPAT WITH 0.7.0.1\n// Private interface but probably used by many oauth clients in atmosphere.\nOAuth.initiateLogin = (credentialToken, url, callback, dimensions) => {\n  OAuth.showPopup(\n    url,\n    callback.bind(null, credentialToken),\n    dimensions\n  );\n};\n\n// Called by the popup when the OAuth flow is completed, right before\n// the popup closes.\nOAuth._handleCredentialSecret = (credentialToken, secret) => {\n  check(credentialToken, String);\n  check(secret, String);\n  if (! Object.prototype.hasOwnProperty.call(credentialSecrets, credentialToken)) {\n    credentialSecrets[credentialToken] = secret;\n  } else {\n    throw new Error(\"Duplicate credential token from OAuth login\");\n  }\n};\n\n// Used by accounts-oauth, which needs both a credentialToken and the\n// corresponding to credential secret to call the `login` method over DDP.\nOAuth._retrieveCredentialSecret = credentialToken => {\n  // First check the secrets collected by OAuth._handleCredentialSecret,\n  // then check localStorage. This matches what we do in\n  // end_of_login_response.html.\n  let secret = credentialSecrets[credentialToken];\n  if (! secret) {\n    const localStorageKey = OAuth._storageTokenPrefix + credentialToken;\n    secret = Meteor._localStorage.getItem(localStorageKey);\n    Meteor._localStorage.removeItem(localStorageKey);\n  } else {\n    delete credentialSecrets[credentialToken];\n  }\n  return secret;\n};\n","// Browser specific code for the OAuth package.\n\n// Open a popup window, centered on the screen, and call a callback when it\n// closes.\n//\n// @param url {String} url to show\n// @param callback {Function} Callback function to call on completion. Takes no\n//   arguments.\n// @param dimensions {optional Object(width, height)} The dimensions of\n//   the popup. If not passed defaults to something sane.\nOAuth.showPopup = (url, callback, dimensions) => {\n  // default dimensions that worked well for facebook and google\n  const popup = openCenteredPopup(\n    url,\n    (dimensions && dimensions.width) || 650,\n    (dimensions && dimensions.height) || 331\n  );\n\n  const checkPopupOpen = setInterval(() => {\n    let popupClosed;\n    try {\n      // Fix for #328 - added a second test criteria (popup.closed === undefined)\n      // to humour this Android quirk:\n      // http://code.google.com/p/android/issues/detail?id=21061\n      popupClosed = popup.closed || popup.closed === undefined;\n    } catch (e) {\n      // For some unknown reason, IE9 (and others?) sometimes (when\n      // the popup closes too quickly?) throws \"SCRIPT16386: No such\n      // interface supported\" when trying to read 'popup.closed'. Try\n      // again in 100ms.\n      return;\n    }\n\n    if (popupClosed) {\n      clearInterval(checkPopupOpen);\n      callback();\n    }\n  }, 100);\n};\n\nconst openCenteredPopup = function(url, width, height) {\n  const screenX = typeof window.screenX !== 'undefined'\n        ? window.screenX : window.screenLeft;\n  const screenY = typeof window.screenY !== 'undefined'\n        ? window.screenY : window.screenTop;\n  const outerWidth = typeof window.outerWidth !== 'undefined'\n        ? window.outerWidth : document.body.clientWidth;\n  const outerHeight = typeof window.outerHeight !== 'undefined'\n        ? window.outerHeight : (document.body.clientHeight - 22);\n  // XXX what is the 22?\n\n  // Use `outerWidth - width` and `outerHeight - height` for help in\n  // positioning the popup centered relative to the current window\n  const left = screenX + (outerWidth - width) / 2;\n  const top = screenY + (outerHeight - height) / 2;\n  const features = (`width=${width},height=${height}` +\n                  `,left=${left},top=${top},scrollbars=yes'`);\n\n  const newwindow = window.open(url, 'Login', features);\n\n  if (typeof newwindow === 'undefined') {\n    // blocked by a popup blocker maybe?\n    const err = new Error(\"The login popup was blocked by the browser\");\n    err.attemptedUrl = url;\n    throw err;\n  }\n\n  if (newwindow.focus)\n    newwindow.focus();\n  \n  return newwindow;\n};","OAuth._storageTokenPrefix = \"Meteor.oauth.credentialSecret-\";\n\nOAuth._redirectUri = (serviceName, config, params, absoluteUrlOptions) => {\n  // XXX COMPAT WITH 0.9.0\n  // The redirect URI used to have a \"?close\" query argument.  We\n  // detect whether we need to be backwards compatible by checking for\n  // the absence of the `loginStyle` field, which wasn't used in the\n  // code which had the \"?close\" argument.\n  // This logic is duplicated in the tool so that the tool can do OAuth\n  // flow with <= 0.9.0 servers (tools/auth.js).\n  const query = config.loginStyle ? null : \"close\";\n\n  // Clone because we're going to mutate 'params'. The 'cordova' and\n  // 'android' parameters are only used for picking the host of the\n  // redirect URL, and not actually included in the redirect URL itself.\n  let isCordova = false;\n  let isAndroid = false;\n  if (params) {\n    params = { ...params };\n    isCordova = params.cordova;\n    isAndroid = params.android;\n    delete params.cordova;\n    delete params.android;\n    if (Object.keys(params).length === 0) {\n      params = undefined;\n    }\n  }\n\n  if (Meteor.isServer && isCordova) {\n    const url = Npm.require('url');\n    let rootUrl = process.env.MOBILE_ROOT_URL ||\n          __meteor_runtime_config__.ROOT_URL;\n\n    if (isAndroid) {\n      // Match the replace that we do in cordova boilerplate\n      // (boilerplate-generator package).\n      // XXX Maybe we should put this in a separate package or something\n      // that is used here and by boilerplate-generator? Or maybe\n      // `Meteor.absoluteUrl` should know how to do this?\n      const parsedRootUrl = url.parse(rootUrl);\n      if (parsedRootUrl.hostname === \"localhost\") {\n        parsedRootUrl.hostname = \"10.0.2.2\";\n        delete parsedRootUrl.host;\n      }\n      rootUrl = url.format(parsedRootUrl);\n    }\n\n    absoluteUrlOptions = {\n      ...absoluteUrlOptions,\n      // For Cordova clients, redirect to the special Cordova root url\n      // (likely a local IP in development mode).\n      rootUrl,\n    };\n  }\n\n  return URL._constructUrl(\n    Meteor.absoluteUrl(`_oauth/${serviceName}`, absoluteUrlOptions),\n    query,\n    params);\n};\n","// XXX COMPAT WITH 0.8.0\n\nOauth = OAuth;\n"]}}]