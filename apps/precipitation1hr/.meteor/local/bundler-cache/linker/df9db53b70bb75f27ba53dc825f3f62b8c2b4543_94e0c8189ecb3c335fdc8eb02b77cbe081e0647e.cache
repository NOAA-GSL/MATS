[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar SimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nvar MongoObject = Package['aldeed:simple-schema'].MongoObject;\nvar ValidatedMethod = Package['mdg:validated-method'].ValidatedMethod;\nvar meteorInstall = Package.modules.meteorInstall;\nvar Template = Package['templating-runtime'].Template;\nvar Session = Package.session.Session;\nvar Hooks = Package['differential:event-hooks'].Hooks;\nvar EventHooksMonitoringCollection = Package['differential:event-hooks'].EventHooksMonitoringCollection;\nvar Log = Package.logging.Log;\nvar Reload = Package.reload.Reload;\nvar Random = Package.random.Random;\nvar EJSON = Package.ejson.EJSON;\nvar Spacebars = Package.spacebars.Spacebars;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar Picker = Package['meteorhacks:picker'].Picker;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Accounts = Package['accounts-base'].Accounts;\nvar Google = Package['google-oauth'].Google;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar HTML = Package.htmljs.HTML;\n\n/* Package-scope variables */\nvar matsTypes, matsCollections, matsMethods, plotResultData, matsCurveUtils, matsGraphUtils, matsSelectUtils, si, matsDataUtils, matsDataQueryUtils, matsDataDiffUtils, data, matsDataMatchUtils, matsDataCurveOpsUtils, matsDataPlotOpsUtils, matsDataProcessUtils, databases, databasesStr, matsPlotSpecUtils, matsCache, setError, clearError, getError, getStack, setInfo, clearInfo, getInfo, regression, matsParamUtils, matsPlotUtils, matsMathUtils, versionStr, pfuncs, graphPlotly, label, filterParams, dbs, errorMessage, i, authList;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"randyp:mats-common\":{\"client\":{\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/client/main.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"../imports/startup/client\");\nmodule.link(\"../imports/startup/both\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"error.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/client/error.js                                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\nsetError = function (error) {\n  var myError = \"\";\n  var myStackTrace = \"\";\n\n  if (typeof error === \"string\" || error instanceof String) {\n    myError = new Error(error);\n  } else {\n    myError = error;\n  }\n\n  if (myError.toLocaleString().indexOf(\"INFO:\") !== -1) {\n    var strinfo = myError && myError.error && myError.error.replace(\"INFO:\", \"\");\n    setInfo(strinfo);\n    return;\n  }\n\n  Session.set('errorMessage', myError.message);\n\n  if (myError.stack) {\n    myStackTrace = myError.stack;\n  } else {\n    myStackTrace = \"StackTrace unavailable\";\n  }\n\n  Session.set('stackTrace', myStackTrace);\n  $(\"#error\").modal('show');\n};\n\nclearError = function (message) {\n  Session.set('errorMessage', '');\n  Session.set('stackTrace', '');\n  $(\"#error\").modal('hide');\n};\n\ngetError = function () {\n  return Session.get('errorMessage');\n};\n\ngetStack = function () {\n  return Session.get('stackTrace');\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"info.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/client/info.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\nsetInfo = function (info) {\n  Session.set('infoMessage', info);\n  $(\"#info\").modal('show');\n};\n\nclearInfo = function (info) {\n  Session.set('infoMessage', '');\n  $(\"#info\").modal('hide');\n};\n\ngetInfo = function () {\n  return Session.get('infoMessage');\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"imports\":{\"startup\":{\"both\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/both/index.js                                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./mats-collections.js\");\nmodule.link(\"./mats-types.js\");\nmodule.link(\"../api/matsMethods.js\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mats-types.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/both/mats-types.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\n/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/31/16.\n */\nvar DatabaseRoles = {\n  MODEL_DATA: 'model_data',\n  META_DATA: 'meta_data',\n  SUMS_DATA: 'sums_data',\n  SITE_DATA: 'site_data'\n};\nvar AppTypes = {\n  mats: 'mats',\n  metexpress: 'metexpress',\n  mats4met: 'mats4met'\n};\nvar InputTypes = {\n  textInput: 'textInput',\n  select: 'select',\n  selectOrderEnforced: 'selectOrderEnforced',\n  numberSpinner: 'numberSpinner',\n  dateRange: 'dateRange',\n  radioGroup: 'radioGroup',\n  checkBoxGroup: 'checkBoxGroup',\n  resetButton: 'resetButton',\n  controlButton: 'controlButton',\n  element: 'element',\n  selectMap: 'selectMap',\n  custom: 'custom',\n  unused: \"unused\",\n  forecastSingleCycle: 'forecasts single cycle',\n  forecastMultiCycle: 'forecasts multi cycle'\n};\nvar PlotTypes = {\n  timeSeries: \"TimeSeries\",\n  profile: \"Profile\",\n  dieoff: \"DieOff\",\n  threshold: \"Threshold\",\n  validtime: \"ValidTime\",\n  dailyModelCycle: \"DailyModelCycle\",\n  reliability: \"Reliability\",\n  map: \"Map\",\n  histogram: \"Histogram\",\n  contour: \"Contour\",\n  contourDiff: \"ContourDiff\",\n  scatter2d: \"Scatter2d\"\n};\nvar ForecastTypes = {\n  dieoff: \"dieoff\",\n  utcCycle: \"utc cycle\",\n  singleCycle: \"single cycle\"\n};\nvar PlotFormats = {\n  none: \"none\",\n  matching: \"matching\",\n  pairwise: \"pairwise\",\n  absolute: \"absolute\"\n};\nvar PlotActions = {\n  matched: \"matched\",\n  unmatched: \"unmatched\"\n};\nvar BestFits = {\n  none: 'none',\n  linear: 'linear',\n  linearThroughOrigin: 'linearThroughOrigin',\n  exponential: 'exponential',\n  logarithmic: 'logarithmic',\n  power: 'power'\n};\nvar MatchFormats = {\n  none: \"none\",\n  time: \"time\",\n  level: \"level\",\n  site: \"site\"\n};\nvar PlotAxisFilters = {\n  none: \"none\",\n  level: \"level\",\n  site: \"site\"\n};\nvar PlotView = {\n  graph: \"graph\",\n  textSeries: \"text\"\n};\nvar ReservedWords = {\n  Zero: \"Zero\",\n  zero: \"zero\",\n  ideal0: \"ideal0\",\n  ideal1: \"ideal1\",\n  ideal2: \"ideal2\",\n  ideal3: \"ideal3\",\n  ideal4: \"ideal4\",\n  ideal5: \"ideal5\",\n  ideal6: \"ideal6\",\n  ideal7: \"ideal7\",\n  ideal8: \"ideal8\",\n  ideal9: \"ideal9\",\n  perfectReliability: \"Perfect Reliability\",\n  noSkill: \"No Skill\",\n  blueCurveText: \"blueCurveText\",\n  blackCurveText: \"blackCurveText\",\n  redCurveText: \"redCurveText\"\n};\nvar Messages = {\n  NO_DATA_FOUND: \"INFO:0 data records found\"\n}; //hide non-timeseries selectors at startup\n\nvar selectorsToHide = ['dieoff-type', 'utc-cycle-start', 'histogram-bin-controls', 'histogram-yaxis-controls', 'bin-number', 'bin-pivot', 'bin-start', 'bin-stride', 'bin-bounds', 'x-axis-parameter', 'y-axis-parameter'];\n/*\nClass for holding metaData records. These are stored in an array. An app can have multiple metadata databases and each database has a pool for connections.\nThese pools are global (although for future reference the access might be from this collection.). They are refenced in this script via the pool name.\nThis class enforces the types of the poolName (in case someone accidentally tries to store the whole pool object), and the database name and a list\nof table names. The internal list can be appended. The getRecords returns the internal list.\n */\n\nvar MetaDataDBRecord =\n/*#__PURE__*/\nfunction () {\n  function MetaDataDBRecord(poolName, dbName, tables) {\n    if (!(0, _typeof2.default)(poolName) === \"string\") {\n      throw new Error(\"MetaDataDBRecord.constructor : poolName is not a string\");\n    }\n\n    if (!(0, _typeof2.default)(dbName) === \"string\") {\n      throw new Error(\"MetaDataDBRecord.constructor : dbName is not a string\");\n    }\n\n    if (!tables instanceof Array) {\n      throw new Error(\"MetaDataDBRecord.constructor : tables is not an array\");\n    }\n\n    this._records = [];\n    var record = {\n      'pool': poolName,\n      'name': dbName,\n      'tables': tables\n    };\n\n    this._records.push(record);\n  }\n\n  var _proto = MetaDataDBRecord.prototype;\n\n  _proto.addRecord = function () {\n    function addRecord(poolName, dbName, tables) {\n      if (!(0, _typeof2.default)(poolName) === \"string\") {\n        throw new Error(\"MetaDataDBRecord.constructor : poolName is not a string\");\n      }\n\n      if (!(0, _typeof2.default)(dbName) === \"string\") {\n        throw new Error(\"MetaDataDBRecord.constructor : dbName is not a string\");\n      }\n\n      if (!tables instanceof Array) {\n        throw new Error(\"MetaDataDBRecord.constructor : tables is not an array\");\n      }\n\n      var record = {\n        'pool': poolName,\n        'name': dbName,\n        'tables': tables\n      };\n\n      this._records.push(record);\n    }\n\n    return addRecord;\n  }();\n\n  _proto.getRecords = function () {\n    function getRecords() {\n      return this._records;\n    }\n\n    return getRecords;\n  }();\n\n  return MetaDataDBRecord;\n}();\n\nmodule.exportDefault(matsTypes = {\n  InputTypes: InputTypes,\n  PlotTypes: PlotTypes,\n  PlotFormats: PlotFormats,\n  PlotActions: PlotActions,\n  BestFits: BestFits,\n  MatchFormats: MatchFormats,\n  PlotAxisFilters: PlotAxisFilters,\n  PlotView: PlotView,\n  Messages: Messages,\n  ForecastTypes: ForecastTypes,\n  ReservedWords: ReservedWords,\n  selectorsToHide: selectorsToHide,\n  MetaDataDBRecord: MetaDataDBRecord,\n  AppTypes: AppTypes,\n  DatabaseRoles: DatabaseRoles\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mats-collections.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/both/mats-collections.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar CurveParams = new Mongo.Collection(\"CurveParams\");\nvar Scatter2dParams = new Mongo.Collection(\"Scatter2dParams\");\nvar CurveTextPatterns = new Mongo.Collection(\"CurveTextPatterns\");\nvar ScatterAxisTextPattern = new Mongo.Collection(\"ScatterAxisTextPattern\");\nvar SavedCurveParams = new Mongo.Collection(\"SavedCurveParams\");\nvar PlotParams = new Mongo.Collection(\"PlotParams\");\nvar SavedPlotParams = new Mongo.Collection(\"SavedPlotParams\");\nvar PlotGraphFunctions = new Mongo.Collection(\"PlotGraphFunctions\");\nvar SavedPlotGraphFunctions = new Mongo.Collection(\"SavedPlotGraphFunctions\");\nvar RegionsPerModel = new Mongo.Collection(\"RegionsPerModel\");\nvar SitesPerModel = new Mongo.Collection(\"SitesPerModel\");\nvar RegionDescriptions = new Mongo.Collection(\"RegionDescriptions\");\nvar Models = new Mongo.Collection(\"Models\");\nvar Instruments = new Mongo.Collection(\"Instruments\");\nvar FcstLensPerModel = new Mongo.Collection(\"FcstLensPerModel\");\nvar CurveSettings = new Mongo.Collection(\"CurveSettings\");\nvar Settings = new Mongo.Collection(\"Settings\");\nvar ColorScheme = new Mongo.Collection(\"ColorScheme\");\nvar SentAddresses = new Mongo.Collection(\"SentAddresses\");\nvar Authorization = new Mongo.Collection(\"Authorization\");\nvar Roles = new Mongo.Collection(\"Roles\");\nvar SavedRoles = new Mongo.Collection(\"SavedRoles\");\nvar Databases = new Mongo.Collection(\"Databases\");\nvar SavedDatabases = new Mongo.Collection(\"SavedDatabases\");\nvar Credentials = new Mongo.Collection(\"Credentials\");\nvar SavedCredentials = new Mongo.Collection(\"SavedCredentials\");\nvar SiteMap = new Mongo.Collection(\"SiteMap\");\nvar StationMap = new Mongo.Collection(\"StationMap\");\nvar appName = new Mongo.Collection(\"appName\");\nmodule.exportDefault(matsCollections = {\n  CurveParams: CurveParams,\n  Scatter2dParams: Scatter2dParams,\n  CurveTextPatterns: CurveTextPatterns,\n  ScatterAxisTextPattern: ScatterAxisTextPattern,\n  SavedCurveParams: SavedCurveParams,\n  PlotParams: PlotParams,\n  SavedPlotParams: SavedPlotParams,\n  PlotGraphFunctions: PlotGraphFunctions,\n  SavedPlotGraphFunctions: SavedPlotGraphFunctions,\n  RegionsPerModel: RegionsPerModel,\n  SitesPerModel: SitesPerModel,\n  RegionDescriptions: RegionDescriptions,\n  Models: Models,\n  Instruments: Instruments,\n  FcstLensPerModel: FcstLensPerModel,\n  CurveSettings: CurveSettings,\n  Settings: Settings,\n  ColorScheme: ColorScheme,\n  SentAddresses: SentAddresses,\n  Authorization: Authorization,\n  Roles: Roles,\n  SavedRoles: SavedRoles,\n  Databases: Databases,\n  SavedDatabases: SavedDatabases,\n  Credentials: Credentials,\n  SavedCredentials: SavedCredentials,\n  SiteMap: SiteMap,\n  StationMap: StationMap,\n  appName: appName\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"api\":{\"matsMethods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/api/matsMethods.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar ValidatedMethod;\nmodule.link(\"meteor/mdg:validated-method\", {\n  ValidatedMethod: function (v) {\n    ValidatedMethod = v;\n  }\n}, 1);\nvar SimpleSchema;\nmodule.link(\"meteor/aldeed:simple-schema\", {\n  SimpleSchema: function (v) {\n    SimpleSchema = v;\n  }\n}, 2);\nvar matsCache, matsCollections, matsDataQueryUtils, matsDataUtils, matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCache: function (v) {\n    matsCache = v;\n  },\n  matsCollections: function (v) {\n    matsCollections = v;\n  },\n  matsDataQueryUtils: function (v) {\n    matsDataQueryUtils = v;\n  },\n  matsDataUtils: function (v) {\n    matsDataUtils = v;\n  },\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 3);\nvar mysql;\nmodule.link(\"meteor/pcel:mysql\", {\n  mysql: function (v) {\n    mysql = v;\n  }\n}, 4);\nvar url;\nmodule.link(\"url\", {\n  url: function (v) {\n    url = v;\n  }\n}, 5);\nvar Mongo;\nmodule.link(\"meteor/mongo\", {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 6);\n// PRIVATE\n// local collection used to keep the table update times for refresh - won't ever be synchronized or persisted.\nvar metaDataTableUpdates = new Mongo.Collection(null);\nvar LayoutStoreCollection = new Mongo.Collection(\"LayoutStoreCollection\"); // initialize collection used for pop-out window functionality\n\nvar DownSampleResults = new Mongo.Collection(\"DownSampleResults\");\nvar MV_DIRS = {}; // Define routes for server\n\nif (Meteor.isServer) {\n  if (Meteor.settings.private !== undefined && Meteor.settings.private !== null) {\n    var _MV_OUT = Meteor.settings.private.MV_OUTPUT;\n    var _MV_HOME = Meteor.settings.private.MV_HOME;\n\n    var _MV_LOGDIR = _MV_OUT + \"/xml/\";\n\n    var _MV_ERRDIR = _MV_OUT + \"/xml/\";\n\n    var _MV_DATADIR = _MV_OUT + \"/data/\";\n\n    var _MV_SQLDIR = _MV_OUT + \"/xml/\"; // sql output goes with the xml output\n\n\n    var _MV_XMLDIR = _MV_OUT + \"/xml/\";\n\n    var _MV_SCRIPTSDIR = _MV_OUT + \"/scripts/\";\n\n    var _MV_PLOTSSDIR = _MV_OUT + \"/plots/\";\n\n    process.env.JAVA_HOME = Meteor.settings.private.JAVA_HOME;\n    process.env.MV_HOME = Meteor.settings.private.MV_HOME;\n    MV_DIRS = {\n      LOGDIR: _MV_LOGDIR,\n      ERRDIR: _MV_ERRDIR,\n      DATADIR: _MV_DATADIR,\n      SQLDIR: _MV_SQLDIR,\n      XMLDIR: _MV_XMLDIR,\n      SCRIPTSDIR: _MV_SCRIPTSDIR,\n      PLOTSDIR: _MV_PLOTSSDIR,\n      HOME: _MV_HOME\n    };\n  } // add indexes to result and axes collections\n\n\n  DownSampleResults.rawCollection().createIndex({\n    \"createdAt\": 1\n  }, {\n    expireAfterSeconds: 3600 * 8\n  }); // 8 hour expiration\n\n  LayoutStoreCollection.rawCollection().createIndex({\n    \"createdAt\": 1\n  }, {\n    expireAfterSeconds: 900\n  }); // 15 min expiration\n  // define some server side routes\n\n  Picker.route('/_getCSV/:key', function (params, req, res, next) {\n    Picker.middleware(_getCSV(params, req, res, next));\n  });\n  Picker.route('/CSV/:f/:key/:m/:a', function (params, req, res, next) {\n    Picker.middleware(_getCSV(params, req, res, next));\n  });\n  Picker.route('/:app/CSV/:f/:key/:m/:a', function (params, req, res, next) {\n    Picker.middleware(_getCSV(params, req, res, next));\n  });\n  Picker.route('/gsd/mats/:app/CSV/:f/:key/:m/:a', function (params, req, res, next) {\n    Picker.middleware(_getCSV(params, req, res, next));\n  });\n  Picker.route('/_getJSON/:key', function (params, req, res, next) {\n    Picker.middleware(_getJSON(params, req, res, next));\n  });\n  Picker.route('/JSON/:f/:key/:m/:a', function (params, req, res, next) {\n    Picker.middleware(_getJSON(params, req, res, next));\n  });\n  Picker.route('/:app/JSON/:f/:key/:m/:a', function (params, req, res, next) {\n    Picker.middleware(_getJSON(params, req, res, next));\n  });\n  Picker.route('/gsd/mats/:app/JSON/:f/:key/:m/:a', function (params, req, res, next) {\n    Picker.middleware(_getJSON(params, req, res, next));\n  });\n  Picker.route('/_clearCache', function (params, req, res, next) {\n    Picker.middleware(_clearCache(params, req, res, next));\n  });\n  Picker.route('/:app/_clearCache', function (params, req, res, next) {\n    Picker.middleware(_clearCache(params, req, res, next));\n  });\n  Picker.route('/gsd/mats/:app/_clearCache', function (params, req, res, next) {\n    Picker.middleware(_clearCache(params, req, res, next));\n  });\n  Picker.route('/refreshMetadata', function (params, req, res, next) {\n    Picker.middleware(_refreshMetadataMWltData(params, req, res, next));\n  });\n  Picker.route('/:app/refreshMetadata', function (params, req, res, next) {\n    Picker.middleware(_refreshMetadataMWltData(params, req, res, next));\n  });\n  Picker.route('/gsd/mats/:app/refreshMetadata', function (params, req, res, next) {\n    Picker.middleware(_refreshMetadataMWltData(params, req, res, next));\n  }); // create picker routes for metviewer middleware static files\n\n  Picker.route('/:app/mvdata/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetData(params, req, res, next));\n  });\n  Picker.route('/gsd/mats/:app/mvdata/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetData(params, req, res, next));\n  });\n  Picker.route('/:app/mvpoints1/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetPoints1(params, req, res, next));\n  });\n  Picker.route('/gsd/mats/:app/mvpoints1/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetPoints1(params, req, res, next));\n  });\n  Picker.route('/:app/mvpoints2/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetPoints2(params, req, res, next));\n  });\n  Picker.route('/gsd/mats/:app/mvpoints2/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetPoints2(params, req, res, next));\n  });\n  Picker.route('/:app/mvxml/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetXml(params, req, res, next));\n  });\n  Picker.route('/gsd/mats/:app/mvxml/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetXml(params, req, res, next));\n  });\n  Picker.route('/:app/mvplot/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetPlot(params, req, res, next));\n  });\n  Picker.route('/gsd/mats/:app/mvplot/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetPlot(params, req, res, next));\n  });\n  Picker.route('/:app/mvscript/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetScript(params, req, res, next));\n  });\n  Picker.route('/gsd/mats/:app/mvscript/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetScript(params, req, res, next));\n  });\n  Picker.route('/:app/mvsql/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetSql(params, req, res, next));\n  });\n  Picker.route('/gsd/mats/:app/mvsql/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetSql(params, req, res, next));\n  });\n  Picker.route('/:app/mvlog/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetLog(params, req, res, next));\n  });\n  Picker.route('/gsd/mats/:app/mvlog/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetLog(params, req, res, next));\n  });\n  Picker.route('/:app/mverr/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetErr(params, req, res, next));\n  });\n  Picker.route('/gsd/mats/:app/mverr/:key', function (params, req, res, next) {\n    Picker.middleware(_mvGetErr(params, req, res, next));\n  });\n} // private - used to see if the main page needs to update its selectors\n\n\nvar _checkMetaDataRefresh = function () {\n  // This routine compares the current last modified time of the tables used for curveParameter metadata\n  // with the last update time to determine if an update is necessary. We really only do this for Curveparams\n\n  /*\n      metaDataTableUpdates:\n      {\n          name: dataBaseName,\n          tables: [tableName1, tableName2 ..],\n          lastRefreshed : timestamp\n      }\n   */\n  var refresh = false;\n  var tableUpdates = metaDataTableUpdates.find({}).fetch();\n\n  for (var tui = 0; tui < tableUpdates.length; tui++) {\n    var id = tableUpdates[tui]._id;\n    var poolName = tableUpdates[tui].pool;\n    var dbName = tableUpdates[tui].name;\n    var tableNames = tableUpdates[tui].tables;\n    var lastRefreshed = tableUpdates[tui]['lastRefreshed'];\n    var updatedEpoch = Number.MAX_VALUE;\n\n    for (var ti = 0; ti < tableNames.length; ti++) {\n      var tName = tableNames[ti];\n      var rows = matsDataQueryUtils.simplePoolQueryWrapSynchronous(global[poolName], \"SELECT UNIX_TIMESTAMP(UPDATE_TIME)\" + \"    FROM   information_schema.tables\" + \"    WHERE  TABLE_SCHEMA = '\" + dbName + \"'\" + \"    AND TABLE_NAME = '\" + tName + \"'\");\n\n      for (var i = 0; i < rows.length; i++) {\n        try {\n          updatedEpoch = rows[i]['UNIX_TIMESTAMP(UPDATE_TIME)'];\n          break;\n        } catch (e) {\n          throw new Error(\"_checkMetaDataRefresh - cannot find last update time for database: \" + dbName + \" and table: \" + tName + \" ERROR:\" + e.message);\n        }\n\n        if (updatedEpoch === Number.MAX_VALUE) {\n          throw new Error(\"_checkMetaDataRefresh - cannot find last update time for database: \" + dbName + \" and table: \" + tName);\n        }\n      }\n\n      var lastRefreshedEpoch = moment(lastRefreshed).valueOf() / 1000;\n\n      if (lastRefreshedEpoch < updatedEpoch) {\n        refresh = true;\n        console.log(\"Refreshing the metadata in the app selectors because table \" + dbName + \".\" + tName + \" was updated at \" + moment.utc(updatedEpoch * 1000).format(\"YYYY-MM-DD HH:mm:ss\") + \" while the metadata was last refreshed at \" + moment.utc(lastRefreshedEpoch * 1000).format(\"YYYY-MM-DD HH:mm:ss\"));\n        break;\n      }\n    }\n\n    if (refresh === true) {\n      // refresh the app metadata\n      // app specific routines\n      //const asrKeys = Object.keys(appSpecificResetRoutines);\n      var _asrKeys = appSpecificResetRoutines;\n\n      for (var ai = 0; ai < _asrKeys.length; ai++) {\n        global.appSpecificResetRoutines[ai]();\n      } // remember that we updated ALL the metadata tables just now\n\n\n      metaDataTableUpdates.update({\n        _id: id\n      }, {\n        $set: {\n          lastRefreshed: moment().format()\n        }\n      });\n    }\n  }\n\n  return true;\n}; // private middleware for clearing the cache\n\n\nvar _clearCache = function (params, req, res, next) {\n  if (Meteor.isServer) {\n    matsCache.clear();\n    res.end();\n  }\n}; // private middleware for _getCSV route\n\n\nvar _getCSV = function (params, req, res, next) {\n  if (Meteor.isServer) {\n    var stringify = require('csv-stringify');\n\n    var csv = \"\";\n\n    try {\n      var result = _getFlattenedResultData(params.key, 0, -1000);\n\n      var statArray = Object.values(result.stats);\n      var dataArray = Object.values(result.data);\n      var statResultArray = [];\n      var dataResultArray = [];\n\n      for (var si = 0; si < statArray.length; si++) {\n        statResultArray.push(Object.keys(statArray[si])); // push the stat header for this curve(keys)\n\n        statResultArray.push(statArray[si]['n'] === 0 ? [statArray[si].label] : Object.values(statArray[si])); // push the stats for this curve\n      }\n\n      for (var di = 0; di < dataArray.length; di++) {\n        var dataSubArray = Object.values(dataArray[di]);\n        var dataHeader = dataSubArray[0] === undefined ? statArray[di].label : Object.keys(dataSubArray[0]); //dataHeader[0] = 'label';\n\n        dataHeader[0] = dataSubArray[0] === undefined ? \"NO DATA\" : Object.keys(dataSubArray[0]).filter(function (key) {\n          return key.indexOf('Curve') != -1;\n        })[0];\n        dataResultArray.push(dataHeader); // push this curve data header (keys)\n\n        if (dataSubArray[0] === undefined) {\n          continue;\n        }\n\n        for (var dsi = 0; dsi < dataSubArray.length; dsi++) {\n          // push this curves data\n          dataResultArray.push(Object.values(dataSubArray[dsi]));\n        }\n      }\n\n      var fileName = \"matsplot-\" + moment.utc().format('YYYYMMDD-HH.mm.ss') + \".csv\";\n      res.setHeader('Content-disposition', 'attachment; filename=' + fileName);\n      res.setHeader('Content-Type', 'attachment.ContentType');\n      stringify(statResultArray, {\n        header: true\n      }, function (err, output) {\n        if (err) {\n          console.log(\"error in _getCSV:\", err);\n          res.write(\"error,\" + err.toLocaleString());\n          res.end();\n          return;\n        }\n\n        res.write(output);\n        stringify(dataResultArray, {\n          header: true\n        }, function (err, output) {\n          if (err) {\n            console.log(\"error in _getCSV:\", err);\n            res.write(\"error,\" + err.toLocaleString());\n            res.end();\n            return;\n          }\n\n          res.write(output);\n          res.end();\n        });\n        delete result;\n        delete statResultArray;\n        delete dataResultArray;\n      });\n    } catch (e) {\n      console.log('error retrieving data: ', e);\n      csv = \"error,\" + e.toLocaleString();\n      res.setHeader('Content-disposition', 'attachment; filename=matsplot.csv');\n      res.setHeader('Content-Type', 'attachment.ContentType');\n      res.end(csv);\n    }\n  }\n}; // private middleware for _getJSON route\n\n\nvar _getJSON = function (params, req, res, next) {\n  if (Meteor.isServer) {\n    var flatJSON = \"\";\n\n    try {\n      var result = _getPagenatedData(params.key, 0, -1000);\n\n      flatJSON = JSON.stringify(result);\n    } catch (e) {\n      console.log('error retrieving data: ', e);\n      flatJSON = JSON.stringify({\n        error: e\n      });\n      delete flatJSON.dsiRealPageIndex;\n      delete flatJSON.dsiTextDirection;\n    }\n\n    res.setHeader('Content-Type', 'application/json');\n    res.write(flatJSON);\n    res.end();\n    delete flatJSON;\n    delete result;\n  }\n}; // private method for getting pagenated results and flattening them in order to be appropriate for text display.\n\n\nvar _getFlattenedResultData = function (rk, p, np) {\n  if (Meteor.isServer) {\n    var resp;\n\n    try {\n      var r = rk;\n      var p = p;\n      var np = np; // get the pagenated data\n\n      var result = _getPagenatedData(r, p, np); // find the type\n\n\n      var plotTypes = result.basis.plotParams.plotTypes;\n\n      var plotType = _.invert(plotTypes)[true]; // extract data\n\n\n      var data = result.data;\n      var dsiRealPageIndex = result.dsiRealPageIndex;\n      var dsiTextDirection = result.dsiTextDirection;\n\n      switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.dailyModelCycle:\n          var returnData = {};\n          returnData.stats = {}; // map of maps\n\n          returnData.data = {}; // map of arrays of maps\n\n          /*\n          returnData is\n          {\n              stats: {\n                          curve0: {label:someLabel, mean:someMean,sd:someSd....}\n                          curve1: {label:someLabel, mean:someMean,sd:someSd....}\n                          ...\n                      }\n              data: {\n                          curve0: [\n                                      {time:someTime, stat: someStat, sd: someSd,....},\n                                      {time:someTime, stat: someStat, sd: someSd,....},\n                                      ....\n                                  ],\n                          curve1: [\n                                      {time:someTime, stat: someStat, sd: someSd,....},\n                                      {time:someTime, stat: someStat, sd: someSd,....},\n                                      ....\n                                  ],\n                                  ...\n                    }\n          }\n           */\n\n          for (var ci = 0; ci < data.length; ci++) {\n            // for each curve\n            // if the curve label is a reserved word do not process the curve (its a zero or max curve)\n            var reservedWords = Object.values(matsTypes.ReservedWords);\n\n            if (reservedWords.indexOf(data[ci].label) >= 0) {\n              continue; // don't process the zero or max curves\n            }\n\n            var stats = {};\n            stats['label'] = data[ci].label;\n            stats['mean'] = data[ci].glob_stats.d_mean;\n            stats['standard deviation'] = data[ci].glob_stats.sd;\n            stats['n'] = data[ci].glob_stats.n_good;\n            stats['standard error'] = data[ci].glob_stats.stde_betsy;\n            stats['lag1'] = data[ci].glob_stats.lag1;\n            stats['minimum'] = data[ci].glob_stats.minVal;\n            stats['maximum'] = data[ci].glob_stats.maxVal;\n            returnData.stats[data[ci].label] = stats;\n            var curveData = []; // map of maps\n\n            for (var cdi = 0; cdi < data[ci].x.length; cdi++) {\n              //for each datapoint\n              var curveDataElement = {};\n              curveDataElement[data[ci].label + ' time'] = data[ci].x[cdi];\n              curveDataElement['raw stat from query'] = data[ci].stats[cdi].raw_stat;\n              curveDataElement['plotted stat'] = data[ci].y[cdi];\n              curveDataElement['std dev'] = data[ci].stats[cdi].sd;\n              curveDataElement['std error'] = data[ci].stats[cdi].stde_betsy;\n              curveDataElement['lag1'] = data[ci].stats[cdi].lag1;\n              curveDataElement['n'] = data[ci].stats[cdi].n_good;\n              curveData.push(curveDataElement);\n            }\n\n            returnData.data[data[ci].label] = curveData;\n          }\n\n          break;\n\n        case matsTypes.PlotTypes.profile:\n          var returnData = {};\n          returnData.stats = {}; // map of maps\n\n          returnData.data = {}; // map of arrays of map\n\n          for (var ci = 0; ci < data.length; ci++) {\n            // for each curve\n            var reservedWords = Object.values(matsTypes.ReservedWords);\n\n            if (reservedWords.indexOf(data[ci].label) >= 0) {\n              continue; // don't process the zero or max curves\n            }\n\n            var stats = {};\n            stats['label'] = data[ci].label;\n            stats['mean'] = data[ci].glob_stats.d_mean;\n            stats['standard deviation'] = data[ci].glob_stats.sd;\n            stats['n'] = data[ci].glob_stats.n_good;\n            stats['standard error'] = data[ci].glob_stats.stde_betsy;\n            stats['lag1'] = data[ci].glob_stats.lag1;\n            stats['minimum'] = data[ci].glob_stats.minVal;\n            stats['maximum'] = data[ci].glob_stats.maxVal;\n            returnData.stats[data[ci].label] = stats;\n            var cdata = data[ci].data;\n            var curveData = []; // array of maps\n\n            for (var cdi = 0; cdi < data[ci].x.length; cdi++) {\n              // for each datapoint\n              var curveDataElement = {};\n              curveDataElement[data[ci].label + ' level'] = data[ci].y[cdi];\n              curveDataElement['raw stat from query'] = data[ci].stats[cdi].raw_stat;\n              curveDataElement['plotted stat'] = data[ci].x[cdi];\n              curveDataElement['std dev'] = data[ci].stats[cdi].sd;\n              curveDataElement['std error'] = data[ci].stats[cdi].stde_betsy;\n              curveDataElement['lag1'] = data[ci].stats[cdi].lag1;\n              curveDataElement['n'] = data[ci].stats[cdi].n_good;\n              curveData.push(curveDataElement);\n            }\n\n            returnData.data[data[ci].label] = curveData;\n          }\n\n          break;\n\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.threshold:\n        case matsTypes.PlotTypes.validtime:\n          var labelSuffix;\n\n          switch (plotType) {\n            case matsTypes.PlotTypes.dieoff:\n              labelSuffix = \" forecast lead time\";\n              break;\n\n            case matsTypes.PlotTypes.validtime:\n              labelSuffix = \" hour of day\";\n              break;\n\n            case matsTypes.PlotTypes.threshold:\n              labelSuffix = \" threshold (in)\";\n              break;\n          }\n\n          var returnData = {};\n          returnData.stats = {}; // map of maps\n\n          returnData.data = {}; // map of arrays of maps\n\n          for (var ci = 0; ci < data.length; ci++) {\n            // for each curve\n            var reservedWords = Object.values(matsTypes.ReservedWords);\n\n            if (reservedWords.indexOf(data[ci].label) >= 0) {\n              continue; // don't process the zero or max curves\n            }\n\n            var stats = {};\n            stats['label'] = data[ci].label;\n            stats['mean'] = data[ci].glob_stats.d_mean;\n            stats['standard deviation'] = data[ci].glob_stats.sd;\n            stats['n'] = data[ci].glob_stats.n_good;\n            stats['minimum'] = data[ci].glob_stats.minVal;\n            stats['maximum'] = data[ci].glob_stats.maxVal;\n            returnData.stats[data[ci].label] = stats;\n            var curveData = []; // map of maps\n\n            for (var cdi = 0; cdi < data[ci].x.length; cdi++) {\n              // for each datapoint\n              var curveDataElement = {};\n              curveDataElement[data[ci].label + labelSuffix] = data[ci].x[cdi];\n              curveDataElement['raw stat from query'] = data[ci].stats[cdi].raw_stat;\n              curveDataElement['plotted stat'] = data[ci].y[cdi];\n              curveDataElement['std dev'] = data[ci].stats[cdi].sd;\n              curveDataElement['n'] = data[ci].stats[cdi].n_good;\n              curveData.push(curveDataElement);\n            }\n\n            returnData.data[data[ci].label] = curveData;\n          }\n\n          break;\n\n        case matsTypes.PlotTypes.reliability:\n          var returnData = {};\n          returnData.stats = {}; // map of maps\n\n          returnData.data = {}; // map of arrays of map\n\n          for (var ci = 0; ci < data.length; ci++) {\n            // for each curve\n            var reservedWords = Object.values(matsTypes.ReservedWords);\n\n            if (reservedWords.indexOf(data[ci].label) >= 0) {\n              continue; // don't process the zero or max curves\n            }\n\n            var stats = {};\n            stats['label'] = data[ci].label;\n            stats['sample climo'] = data[ci].glob_stats.sample_climo;\n            returnData.stats[data[ci].label] = stats;\n            var cdata = data[ci].data;\n            var curveData = []; // array of maps\n\n            for (var cdi = 0; cdi < data[ci].y.length; cdi++) {\n              // for each datapoint\n              var curveDataElement = {};\n              curveDataElement[data[ci].label + ' probability bin'] = data[ci].stats[cdi].prob_bin;\n              curveDataElement['hit rate'] = data[ci].stats[cdi].hit_rate;\n              curveDataElement['oy'] = data[ci].stats[cdi].obs_y;\n              curveDataElement['on'] = data[ci].stats[cdi].obs_n;\n              curveData.push(curveDataElement);\n            }\n\n            returnData.data[data[ci].label] = curveData;\n          }\n\n          break;\n\n        case matsTypes.PlotTypes.map:\n          var returnData = {};\n          returnData.stats = {}; // map of maps\n\n          returnData.data = {}; // map of arrays of maps\n\n          var stats = {};\n          stats['label'] = data[0].label;\n          stats['total number of obs'] = data[0].stats.reduce(function (prev, curr) {\n            return prev + curr.N_times;\n          }, 0);\n          stats['mean difference'] = matsDataUtils.average(data[0].queryVal);\n          stats['standard deviation'] = matsDataUtils.stdev(data[0].queryVal);\n          stats['minimum time'] = data[0].stats.reduce(function (prev, curr) {\n            return prev < curr.min_time ? prev : curr.min_time;\n          });\n          stats['minimum time'] = moment.utc(stats['minimum time'] * 1000).format('YYYY-MM-DD HH:mm');\n          stats['maximum time'] = data[0].stats.reduce(function (prev, curr) {\n            return prev > curr.max_time ? prev : curr.max_time;\n          });\n          stats['maximum time'] = moment.utc(stats['maximum time'] * 1000).format('YYYY-MM-DD HH:mm');\n          returnData.stats[data[0].label] = stats;\n          var curveData = []; // map of maps\n\n          for (var si = 0; si < data[0].siteName.length; si++) {\n            var curveDataElement = {};\n            curveDataElement['Site Name'] = data[0].siteName[si];\n            curveDataElement['Number of Times'] = data[0].stats[si].N_times;\n            curveDataElement['Start Date'] = moment.utc(data[0].stats[si].min_time * 1000).format('YYYY-MM-DD HH:mm');\n            curveDataElement['End Date'] = moment.utc(data[0].stats[si].max_time * 1000).format('YYYY-MM-DD HH:mm');\n            curveDataElement['Average Difference'] = data[0].queryVal[si];\n            curveData.push(curveDataElement);\n          }\n\n          returnData.data[data[0].label] = curveData;\n          break;\n\n        case matsTypes.PlotTypes.histogram:\n          var returnData = {};\n          returnData.stats = {}; // map of maps\n\n          returnData.data = {}; // map of arrays of maps\n\n          for (var ci = 0; ci < data.length; ci++) {\n            // for each curve\n            var reservedWords = Object.values(matsTypes.ReservedWords);\n\n            if (reservedWords.indexOf(data[ci].label) >= 0) {\n              continue; // don't process the zero or max curves\n            }\n\n            var stats = {};\n            stats['label'] = data[ci].label;\n            stats['mean'] = data[ci].glob_stats.glob_mean;\n            stats['standard deviation'] = data[ci].glob_stats.glob_sd;\n            stats['n'] = data[ci].glob_stats.glob_n;\n            stats['minimum'] = data[ci].glob_stats.glob_min;\n            stats['maximum'] = data[ci].glob_stats.glob_max;\n            returnData.stats[data[ci].label] = stats;\n            var curveData = []; // map of maps\n\n            for (var cdi = 0; cdi < data[ci].x.length; cdi++) {\n              // for each datapoint\n              var curveDataElement = {};\n              curveDataElement[data[ci].label + ' bin range'] = data[ci].bin_stats[cdi]['binLabel'];\n              curveDataElement['n'] = data[ci].bin_stats[cdi].bin_n;\n              curveDataElement['bin rel freq'] = data[ci].bin_stats[cdi].bin_rf;\n              curveDataElement['bin lower bound'] = data[ci].bin_stats[cdi].binLowBound;\n              curveDataElement['bin upper bound'] = data[ci].bin_stats[cdi].binUpBound;\n              curveDataElement['bin mean'] = data[ci].bin_stats[cdi].bin_mean;\n              curveDataElement['bin std dev'] = data[ci].bin_stats[cdi].bin_sd;\n              curveData.push(curveDataElement);\n            }\n\n            returnData.data[data[ci].label] = curveData;\n          }\n\n          break;\n\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n          var returnData = {};\n          returnData.stats = {}; // map of maps\n\n          returnData.data = {}; // map of arrays of maps\n\n          var stats = {};\n          stats['label'] = data[0].label;\n          stats['total number of points'] = data[0].glob_stats.n;\n          stats['mean stat'] = data[0].glob_stats.mean;\n          stats['minimum time'] = data[0].glob_stats.minDate;\n          stats['minimum time'] = moment.utc(stats['minimum time'] * 1000).format('YYYY-MM-DD HH:mm');\n          stats['maximum time'] = data[0].glob_stats.maxDate;\n          stats['maximum time'] = moment.utc(stats['maximum time'] * 1000).format('YYYY-MM-DD HH:mm');\n          returnData.stats[data[0].label] = stats;\n          var curveData = []; // map of maps\n\n          for (var si = 0; si < data[0].xTextOutput.length; si++) {\n            var curveDataElement = {};\n            curveDataElement['xVal'] = data[0].xTextOutput[si];\n            curveDataElement['yVal'] = data[0].yTextOutput[si];\n            curveDataElement['stat'] = data[0].zTextOutput[si];\n            curveDataElement['N'] = data[0].nTextOutput[si];\n            curveDataElement['Start Date'] = moment.utc(data[0].minDateTextOutput[si] * 1000).format('YYYY-MM-DD HH:mm');\n            curveDataElement['End Date'] = moment.utc(data[0].maxDateTextOutput[si] * 1000).format('YYYY-MM-DD HH:mm');\n            curveData.push(curveDataElement);\n          }\n\n          returnData.data[data[0].label] = curveData;\n          break;\n\n        case matsTypes.PlotTypes.scatter2d:\n          var returnData = {}; // returns a map of arrays of maps\n\n          /*\n          returnData = {\n                          curve0: [\n                                      {\n                                      xval: number,\n                                      yval: number,\n                                      bestfit: number || none\n                                      },\n                                      {\n                                      xval: number,\n                                      yval: number,\n                                      bestfit: number || none\n                                      },\n                                     .....\n                                  ],\n                           curve1: [\n                                      {\n                                      xval: number,\n                                      yval: number,\n                                      bestfit: number || none\n                                      },\n                                      {\n                                      xval: number,\n                                      yval: number,\n                                      bestfit: number || none\n                                      },\n                                     .....\n                                  ],\n                                  ....\n                      }\n           */\n\n          var firstBestFitIndex = -1;\n          var bestFitIndexes = {};\n\n          for (var ci = 0; ci < data.length; ci++) {\n            if (ci == firstBestFitIndex) {\n              break; // best fit curves are at the end so do not do further processing\n            }\n\n            var curveData = data[ci]; // look for a best fit curve - only have to look at curves with higher index than this one\n\n            var bestFitIndex = -1;\n\n            for (var cbi = ci + 1; cbi < data.length; cbi++) {\n              if (data[cbi].label.indexOf(curveData.label) !== -1 && data[cbi].label.indexOf(\"-best fit\") != -1) {\n                bestFitIndexes[ci] = cbi;\n\n                if (firstBestFitIndex == -1) {\n                  firstBestFitIndex = cbi;\n                }\n\n                break;\n              }\n            }\n\n            var curveTextData = [];\n\n            for (var cdi = 0; cdi < curveData.data.length; cdi++) {\n              var element = {};\n              element['xAxis'] = curveData.data[cdi][0];\n              element['yAxis'] = curveData.data[cdi][1];\n\n              if (bestFitIndexes[ci] === undefined) {\n                element['best fit'] = \"none;\";\n              } else {\n                element['best fit'] = data[bestFitIndexes[ci]].data[cdi][1];\n              }\n\n              curveTextData.push(element);\n            }\n\n            returnData[curveData.label] = curveTextData;\n          }\n\n          break;\n\n        default:\n          return undefined;\n      }\n\n      returnData.dsiRealPageIndex = dsiRealPageIndex;\n      returnData.dsiTextDirection = dsiTextDirection;\n      return returnData;\n    } catch (error) {\n      throw new Meteor.Error(\"Error in _getFlattenedResultData function: \" + error.message);\n    }\n  }\n}; // private method for getting pagenated data\n// a newPageIndex of -1000 means get all the data (used for export)\n// a newPageIndex of -2000 means get just the last page\n\n\nvar _getPagenatedData = function (rky, p, np) {\n  if (Meteor.isServer) {\n    var key = rky;\n    var myPageIndex = p;\n    var newPageIndex = np;\n    var ret;\n    var rawReturn;\n\n    try {\n      var result = matsCache.getResult(key);\n      rawReturn = result === undefined ? undefined : result.result; // getResult structure is {key:something, result:resultObject}\n    } catch (e) {\n      console.log(\"_getPagenatedData: Error - \", e);\n      return undefined;\n    }\n\n    ret = rawReturn === undefined ? undefined : JSON.parse(JSON.stringify(rawReturn));\n    var start;\n    var end;\n    var direction = 1;\n\n    if (newPageIndex === -1000) {\n      // all the data\n      start = 0;\n      end = Number.MAX_VALUE;\n    } else if (newPageIndex === -2000) {\n      // just the last page\n      start = -2000;\n      direction = -1;\n    } else if (myPageIndex <= newPageIndex) {\n      // proceed forward\n      start = (newPageIndex - 1) * 100;\n      end = newPageIndex * 100;\n    } else {\n      // move back\n      direction = -1;\n      start = newPageIndex * 100;\n      end = (newPageIndex + 1) * 100;\n    }\n\n    var dsiStart;\n    var dsiEnd;\n\n    for (var csi = 0; csi < ret.data.length; csi++) {\n      if (ret.data[csi].x == null || ret.data[csi].x.length <= 100) {\n        continue; // don't bother pagenating datasets less than or equal to a page - ret is rawReturn\n      }\n\n      dsiStart = start;\n      dsiEnd = end;\n\n      if (dsiStart > ret.data[csi].x.length || dsiStart === -2000) {\n        // show the last page if we either requested it specifically or are trying to navigate past it\n        dsiStart = Math.floor(rawReturn.data[csi].x.length / 100) * 100;\n        dsiEnd = rawReturn.data[csi].x.length;\n\n        if (dsiEnd === dsiStart) {\n          // make sure the last page isn't empty--if rawReturn.data[csi].data.length/100 produces a whole number,\n          // dsiStart and dsiEnd would be the same. This makes sure that the last full page is indeed the last page, without a phantom empty page afterwards\n          dsiStart = dsiEnd - 100;\n        }\n      }\n\n      if (dsiStart < 0) {\n        // show the first page if we are trying to navigate before it\n        dsiStart = 0;\n        dsiEnd = 100;\n      }\n\n      if (dsiEnd < dsiStart) {\n        // make sure that the end is after the start\n        dsiEnd = dsiStart + 100;\n      }\n\n      if (dsiEnd > ret.data[csi].x.length) {\n        // make sure we don't request past the end -- if results are one page, this should convert the\n        // start and end from 0 and 100 to 0 and whatever the end is.\n        dsiEnd = ret.data[csi].x.length;\n      }\n\n      ret.data[csi].x = rawReturn.data[csi].x.slice(dsiStart, dsiEnd);\n      ret.data[csi].y = rawReturn.data[csi].y.slice(dsiStart, dsiEnd);\n      ret.data[csi].stats = rawReturn.data[csi].stats.slice(dsiStart, dsiEnd);\n      ret.data[csi].glob_stats = rawReturn.data[csi].glob_stats;\n    }\n\n    delete rawReturn;\n\n    if (direction === 1) {\n      ret.dsiRealPageIndex = Math.floor(dsiEnd / 100);\n    } else {\n      ret.dsiRealPageIndex = Math.floor(dsiStart / 100);\n    }\n\n    ret.dsiTextDirection = direction;\n    return ret;\n  }\n}; //private middleware for getting metviewer data file\n\n\nvar _mvGetData = function (params, req, res, next) {\n  var fse = require(\"fs-extra\");\n\n  var filePath = MV_DIRS.DATADIR;\n  var baseName = params.key + \".data\";\n  var fileName = filePath + '/' + baseName;\n\n  try {\n    fse.readFile(fileName, function (err, data) {\n      res.setHeader('Content-Type', 'text/plain');\n\n      if (err) {\n        console.log(err);\n      } // Fail if the file can't be read.\n\n\n      res.end(data); // Send the file data to the browser.\n    });\n  } catch (error) {\n    res.setHeader('Content-Type', 'text/plain');\n    res.write(\"Error Error getting data file :\" + baseName);\n    res.end();\n  }\n}; //private middleware for getting metviewer points1 file\n\n\nvar _mvGetPoints1 = function (params, req, res, next) {\n  var fse = require(\"fs-extra\");\n\n  var filePath = MV_DIRS.DATADIR;\n  var baseName = params.key + \".points1\";\n  var fileName = filePath + '/' + baseName;\n\n  try {\n    fse.readFile(fileName, function (err, data) {\n      res.setHeader('Content-Type', 'text/plain');\n\n      if (err) {\n        console.log(err);\n      } // Fail if the file can't be read.\n\n\n      res.end(data); // Send the file data to the browser.\n    });\n  } catch (error) {\n    res.setHeader('Content-Type', 'text/plain');\n    res.write(\"Error Error getting data file :\" + baseName);\n    res.end();\n  }\n}; //private middleware for getting metviewer points1 file\n\n\nvar _mvGetPoints2 = function (params, req, res, next) {\n  var fse = require(\"fs-extra\");\n\n  var filePath = MV_DIRS.DATADIR;\n  var baseName = params.key + \".points2\";\n  var fileName = filePath + '/' + baseName;\n\n  try {\n    fse.readFile(fileName, function (err, data) {\n      res.setHeader('Content-Type', 'text/plain');\n\n      if (err) {\n        console.log(err);\n      } // Fail if the file can't be read.\n\n\n      res.end(data); // Send the file data to the browser.\n    });\n  } catch (error) {\n    res.setHeader('Content-Type', 'text/plain');\n    res.write(\"Error Error getting data file :\" + baseName);\n    res.end();\n  }\n}; //private middleware for getting metviewer xml file\n\n\nvar _mvGetXml = function (params, req, res, next) {\n  var fse = require(\"fs-extra\");\n\n  var filePath = MV_DIRS.XMLDIR;\n  var baseName = params.key + \".xml\";\n  var fileName = filePath + '/' + baseName;\n\n  try {\n    fse.readFile(fileName, function (err, data) {\n      res.setHeader('Content-Type', 'text/plain');\n\n      if (err) {\n        console.log(err);\n      } // Fail if the file can't be read.\n\n\n      res.end(data); // Send the file data to the browser.\n    });\n  } catch (error) {\n    res.setHeader('Content-Type', 'text/plain');\n    res.write(\"Error Error getting xml file :\" + baseName);\n    res.end();\n  }\n}; //private middleware for getting metviewer plot file\n\n\nvar _mvGetPlot = function (params, req, res, next) {\n  var fse = require(\"fs-extra\");\n\n  var filePath = MV_DIRS.PLOTSDIR;\n  var baseName = params.key + \".png\";\n  var fileName = filePath + '/' + baseName;\n\n  try {\n    fse.readFile(fileName, function (err, data) {\n      res.setHeader('Content-Type', 'image/png');\n\n      if (err) {\n        console.log(err);\n      } // Fail if the file can't be read.\n\n\n      res.end(data); // Send the file data to the browser.\n    });\n  } catch (error) {\n    res.setHeader('Content-Type', 'application/txt');\n    res.write(\"Error Error getting plot file :\" + baseName);\n    res.end();\n  }\n}; //private middleware for getting metviewer script file\n\n\nvar _mvGetScript = function (params, req, res, next) {\n  var fse = require(\"fs-extra\");\n\n  var filePath = MV_DIRS.SCRIPTSDIR;\n  var baseName = params.key + \".R\";\n  var fileName = filePath + '/' + baseName;\n\n  try {\n    fse.readFile(fileName, function (err, data) {\n      res.setHeader('Content-Type', 'text/plain');\n\n      if (err) {\n        console.log(err);\n      } // Fail if the file can't be read.\n\n\n      res.end(data); // Send the file data to the browser.\n    });\n  } catch (error) {\n    res.setHeader('Content-Type', 'text/plain');\n    res.write(\"Error Error getting script file :\" + baseName);\n    res.end();\n  }\n}; //private middleware for getting metviewer sql file\n\n\nvar _mvGetSql = function (params, req, res, next) {\n  var fse = require(\"fs-extra\");\n\n  var filePath = MV_DIRS.SQLDIR;\n  var baseName = params.key + \".sql\";\n  var fileName = filePath + '/' + baseName;\n\n  try {\n    fse.readFile(fileName, function (err, data) {\n      res.setHeader('Content-Type', 'text/sql');\n\n      if (err) {\n        console.log(err);\n      } // Fail if the file can't be read.\n\n\n      res.end(data); // Send the file data to the browser.\n    });\n  } catch (error) {\n    res.setHeader('Content-Type', 'text/plain');\n    res.write(\"Error Error getting sql file :\" + baseName);\n    res.end();\n  }\n}; //private middleware for getting metviewer log file\n\n\nvar _mvGetLog = function (params, req, res, next) {\n  var fse = require(\"fs-extra\");\n\n  var filePath = MV_DIRS.LOGDIR;\n  var baseName = params.key + \".log\";\n  var fileName = filePath + '/' + baseName;\n\n  try {\n    fse.readFile(fileName, function (err, data) {\n      res.setHeader('Content-Type', 'text/plain');\n\n      if (err) {\n        console.log(err);\n      } // Fail if the file can't be read.\n\n\n      res.end(data); // Send the file data to the browser.\n    });\n  } catch (error) {\n    res.setHeader('Content-Type', 'text/plain');\n    res.write(\"Error Error getting log file :\" + baseName);\n    res.end();\n  }\n}; //private middleware for getting metviewer err file\n\n\nvar _mvGetErr = function (params, req, res, next) {\n  var fse = require(\"fs-extra\");\n\n  var filePath = MV_DIRS.ERRDIR;\n  var baseName = params.key + \".err\";\n  var fileName = filePath + '/' + baseName;\n\n  try {\n    fse.readFile(fileName, function (err, data) {\n      res.setHeader('Content-Type', 'text/plain');\n\n      if (err) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting err file :\" + baseName);\n        res.end();\n      } else {\n        res.end(data); // Send the file data to the browser.\n      }\n    });\n  } catch (error) {\n    res.setHeader('Content-Type', 'text/plain');\n    res.write(\"Error Error getting plot file :\" + baseName);\n    res.end();\n  }\n}; // private define a middleware for clearing the cache\n\n\nvar _refreshMetadataMWltData = function (params, req, res, next) {\n  if (Meteor.isServer) {\n    _checkMetaDataRefresh();\n\n    res.end();\n  }\n}; // private save the result from the query into mongo and downsample if that result's size is greater than 1Mb\n\n\nvar _saveResultData = function (result) {\n  if (Meteor.isServer) {\n    var sizeof = require('object-sizeof');\n\n    var hash = require('object-hash');\n\n    var key = hash(result.basis.plotParams);\n    var threshold = 1000000;\n    var ret = {};\n\n    try {\n      var dSize = sizeof(result.data); //console.log(\"result.basis.data size is \", dSize);\n      // TimeSeries and DailyModelCycle are the only plot types that require downSampling\n\n      if (dSize > threshold && (result.basis.plotParams.plotTypes.TimeSeries || result.basis.plotParams.plotTypes.DailyModelCycle)) {\n        // greater than threshold need to downsample\n        // downsample and save it in DownSampleResult\n        console.log(\"DownSampling\");\n\n        var downsampler = require(\"downsample-lttb\");\n\n        var totalPoints = 0;\n\n        for (var di = 0; di < result.data.length; di++) {\n          totalPoints += result.data[di].x_epoch.length;\n        }\n\n        var allowedNumberOfPoints = threshold / dSize * totalPoints;\n        var downSampleResult = result === undefined ? undefined : JSON.parse(JSON.stringify(result));\n\n        for (var ci = 0; ci < result.data.length; ci++) {\n          var dsData = {};\n          var xyDataset = result.data[ci].x_epoch.map(function (d, index) {\n            return [result.data[ci].x_epoch[index], result.data[ci].y[index]];\n          });\n          var ratioTotalPoints = xyDataset.length / totalPoints;\n          var myAllowedPoints = Math.round(ratioTotalPoints * allowedNumberOfPoints); // downsample the array\n\n          var downsampledSeries;\n\n          if (myAllowedPoints < xyDataset.length && xyDataset.length > 2) {\n            downsampledSeries = downsampler.processData(xyDataset, myAllowedPoints); // replace the y attributes (tooltips etc.) with the y attributes from the nearest x\n\n            var originalIndex = 0; // skip through the original dataset capturing each downSampled data point\n\n            var arrayKeys = [];\n            var nonArrayKeys = [];\n            var keys = Object.keys(result.data[ci]);\n\n            for (var ki = 0; ki < keys.length; ki++) {\n              if (keys[ki] !== 'x_epoch') {\n                if (Array.isArray(result.data[ci][keys[ki]])) {\n                  arrayKeys.push(keys[ki]);\n                  dsData[keys[ki]] = [];\n                } else {\n                  nonArrayKeys.push(keys[ki]);\n                }\n              }\n            } // We only ever downsample series plots - never profiles and series plots only ever have error_y arrays.\n            // This is a little hacky but what is happening is we putting error_y.array on the arrayKeys list so that it gets its\n            // downsampled equivalent values.\n\n\n            for (ki = 0; ki < nonArrayKeys.length; ki++) {\n              dsData[nonArrayKeys[ki]] = result.data[ci][nonArrayKeys[ki]];\n            } // remove the original error_y array data.\n\n\n            dsData['error_y'].array = [];\n\n            for (var dsi = 0; dsi < downsampledSeries.length; dsi++) {\n              while (originalIndex < result.data[ci].x_epoch.length && result.data[ci].x_epoch[originalIndex] < downsampledSeries[dsi][0]) {\n                originalIndex++;\n              } // capture the stuff related to this downSampled data point (downSampled data points are always a subset of original data points)\n\n\n              for (ki = 0; ki < arrayKeys.length; ki++) {\n                dsData[arrayKeys[ki]][dsi] = result.data[ci][arrayKeys[ki]][originalIndex];\n              }\n\n              dsData['error_y']['array'][dsi] = result.data[ci]['error_y']['array'][originalIndex];\n            } // add downsampled annotation to curve options\n\n\n            downSampleResult[ci] = dsData;\n            downSampleResult[ci].annotation += \"   **DOWNSAMPLED**\";\n          } else {\n            downSampleResult[ci] = result.data[ci];\n          }\n\n          downSampleResult.data[ci] = downSampleResult[ci];\n        }\n\n        DownSampleResults.rawCollection().insert({\n          \"createdAt\": new Date(),\n          key: key,\n          result: downSampleResult\n        }); // createdAt ensures expiration set in mats-collections\n\n        ret = {\n          key: key,\n          result: downSampleResult\n        };\n      } else {\n        ret = {\n          key: key,\n          result: result\n        };\n      } // save original dataset in the matsCache\n\n\n      if (result.basis.plotParams.plotTypes.TimeSeries || result.basis.plotParams.plotTypes.DailyModelCycle) {\n        for (var ci = 0; ci < result.data.length; ci++) {\n          delete result.data[ci]['x_epoch']; // we only needed this as an index for downsampling\n        }\n      }\n\n      matsCache.storeResult(key, {\n        key: key,\n        result: result\n      }); // lifespan is handled by lowDb (internally) in matscache\n    } catch (error) {\n      if (error.toLocaleString().indexOf(\"larger than the maximum size\") != -1) {\n        throw new Meteor.Error(+\": Requesting too much data... try averaging\");\n      }\n    }\n\n    return ret;\n  }\n}; // PUBLIC METHODS\n//administration tools\n\n\nvar addSentAddress = new ValidatedMethod({\n  name: 'matsMethods.addSentAddress',\n  validate: new SimpleSchema({\n    toAddress: {\n      type: String\n    }\n  }).validator(),\n  run: function (toAddress) {\n    if (!Meteor.userId()) {\n      throw new Meteor.Error(401, \"not-logged-in\");\n    }\n\n    matsCollections.SentAddresses.upsert({\n      address: toAddress\n    }, {\n      address: toAddress,\n      userId: Meteor.userId()\n    });\n    return false;\n  }\n}); //  administation tool\n\nvar applyAuthorization = new ValidatedMethod({\n  name: 'matsMethods.applyAuthorization',\n  validate: new SimpleSchema({\n    settings: {\n      type: Object,\n      blackbox: true\n    }\n  }).validator(),\n  run: function (settings) {\n    if (Meteor.isServer) {\n      var roles;\n      var roleName;\n      var authorization;\n      var userRoleName = settings.userRoleName;\n      var userRoleDescription = settings.userRoleDescription;\n      var authorizationRole = settings.authorizationRole;\n      var newUserEmail = settings.newUserEmail;\n      var existingUserEmail = settings.existingUserEmail;\n\n      if (authorizationRole) {\n        // existing role - the role roleName - no need to verify as the selection list came from the database\n        roleName = authorizationRole;\n      } else if (userRoleName && userRoleDescription) {\n        // possible new role - see if it happens to already exist\n        var role = matsCollections.Roles.findOne({\n          name: userRoleName\n        });\n\n        if (role === undefined) {\n          // need to add new role using description\n          matsCollections.Roles.upsert({\n            name: userRoleName\n          }, {\n            $set: {\n              description: userRoleDescription\n            }\n          });\n          roleName = userRoleName;\n        } else {\n          // see if the description matches...\n          roleName = role.name;\n          var description = role.description;\n\n          if (description != userRoleDescription) {\n            // have to update the description\n            matsCollections.Roles.upsert({\n              name: userRoleName\n            }, {\n              $set: {\n                description: userRoleDescription\n              }\n            });\n          }\n        }\n      } // now we have a role roleName - now we need an email\n\n\n      if (existingUserEmail) {\n        // existing user -  no need to verify as the selection list came from the database\n        // see if it already has the role\n        authorization = matsCollections.Authorization.findOne({\n          email: existingUserEmail\n        });\n        roles = authorization.roles;\n\n        if (roles.indexOf(roleName) == -1) {\n          // have to add the role\n          if (roleName) {\n            roles.push(roleName);\n          }\n\n          matsCollections.Authorization.upsert({\n            email: existingUserEmail\n          }, {\n            $set: {\n              roles: roles\n            }\n          });\n        }\n      } else if (newUserEmail) {\n        // possible new authorization - see if it happens to exist\n        authorization = matsCollections.Authorization.findOne({\n          email: newUserEmail\n        });\n\n        if (authorization !== undefined) {\n          // authorization exists - add role to roles if necessary\n          roles = authorization.roles;\n\n          if (roles.indexOf(roleName) == -1) {\n            // have to add the role\n            if (roleName) {\n              roles.push(roleName);\n            }\n\n            matsCollections.Authorization.upsert({\n              email: existingUserEmail\n            }, {\n              $set: {\n                roles: roles\n              }\n            });\n          }\n        } else {\n          // need a new authorization\n          roles = [];\n\n          if (roleName) {\n            roles.push(roleName);\n          }\n\n          if (newUserEmail) {\n            matsCollections.Authorization.upsert({\n              email: newUserEmail\n            }, {\n              $set: {\n                roles: roles\n              }\n            });\n          }\n        }\n      }\n\n      return false;\n    }\n  }\n}); // database controls\n\nvar applyDatabaseSettings = new ValidatedMethod({\n  name: 'matsMethods.applyDatabaseSettings',\n  validate: new SimpleSchema({\n    settings: {\n      type: Object,\n      blackbox: true\n    }\n  }).validator(),\n  run: function (settings) {\n    if (Meteor.isServer) {\n      if (settings.name) {\n        matsCollections.Databases.upsert({\n          name: settings.name\n        }, {\n          $set: {\n            name: settings.name,\n            role: settings.role,\n            status: settings.status,\n            host: settings.host,\n            database: settings.database,\n            user: settings.user,\n            password: settings.password\n          }\n        });\n      }\n\n      return false;\n    }\n  }\n}); //administration tools\n\nvar deleteSettings = new ValidatedMethod({\n  name: 'matsMethods.deleteSettings',\n  validate: new SimpleSchema({\n    name: {\n      type: String\n    }\n  }).validator(),\n  run: function (params) {\n    if (!Meteor.userId()) {\n      throw new Meteor.Error(\"not-logged-in\");\n    }\n\n    if (Meteor.isServer) {\n      matsCollections.CurveSettings.remove({\n        name: params.name\n      });\n    }\n  }\n}); //administration tools\n\nvar emailImage = new ValidatedMethod({\n  name: 'matsMethods.emailImage',\n  validate: new SimpleSchema({\n    imageStr: {\n      type: String\n    },\n    toAddress: {\n      type: String\n    },\n    subject: {\n      type: String\n    }\n  }).validator(),\n  run: function (params) {\n    var imageStr = params.imageStr;\n    var toAddress = params.toAddress;\n    var subject = params.subject;\n\n    if (!Meteor.userId()) {\n      throw new Meteor.Error(401, \"not-logged-in\");\n    }\n\n    var fromAddress = Meteor.user().services.google.email; // these come from google - see\n    // http://masashi-k.blogspot.fr/2013/06/sending-mail-with-gmail-using-xoauth2.html\n    //http://stackoverflow.com/questions/24098461/nodemailer-gmail-what-exactly-is-a-refresh-token-and-how-do-i-get-one/24123550\n    // the gmail account for the credentials is mats.mail.daemon@gmail.com - pwd mats2015!\n    //var clientId = \"339389735380-382sf11aicmgdgn7e72p4end5gnm9sad.apps.googleusercontent.com\";\n    //var clientSecret = \"7CfNN-tRl5QAL595JTW2TkRl\";\n    //var refresh_token = \"1/PDql7FR01N2gmq5NiTfnrT-OlCYC3U67KJYYDNPeGnA\";\n\n    var credentials = matsCollections.Credentials.findOne({\n      name: \"oauth_google\"\n    }, {\n      clientId: 1,\n      clientSecret: 1,\n      refresh_token: 1\n    });\n    var clientId = credentials.clientId;\n    var clientSecret = credentials.clientSecret;\n    var refresh_token = credentials.refresh_token;\n    var smtpTransporter;\n\n    try {\n      smtpTransporter = Nodemailer.createTransport(\"SMTP\", {\n        service: \"Gmail\",\n        auth: {\n          XOAuth2: {\n            user: \"mats.gsd@noaa.gov\",\n            clientId: clientId,\n            clientSecret: clientSecret,\n            refreshToken: refresh_token\n          }\n        }\n      });\n    } catch (e) {\n      throw new Meteor.Error(401, \"Transport error \" + e.message());\n    }\n\n    try {\n      var mailOptions = {\n        sender: fromAddress,\n        replyTo: fromAddress,\n        from: fromAddress,\n        to: toAddress,\n        subject: subject,\n        attachments: [{\n          filename: \"graph.png\",\n          contents: new Buffer(imageStr.split(\"base64,\")[1], \"base64\")\n        }]\n      };\n      smtpTransporter.sendMail(mailOptions, function (error, response) {\n        if (error) {\n          console.log(\"smtpTransporter error \" + error + \" from:\" + fromAddress + \" to:\" + toAddress);\n        } else {\n          console.log(response + \" from:\" + fromAddress + \" to:\" + toAddress);\n        }\n\n        smtpTransporter.close();\n      });\n    } catch (e) {\n      throw new Meteor.Error(401, \"Send error \" + e.message());\n    }\n\n    return false;\n  }\n}); // administation tool\n\nvar getAuthorizations = new ValidatedMethod({\n  name: 'matsMethods.getAuthorizations',\n  validate: new SimpleSchema({}).validator(),\n  run: function () {\n    var roles = [];\n\n    if (Meteor.isServer) {\n      var userEmail = Meteor.user().services.google.email.toLowerCase();\n      roles = matsCollections.Authorization.findOne({\n        email: userEmail\n      }).roles;\n    }\n\n    return roles;\n  }\n}); // administration tool\n\nvar getDataFunctionFileList = new ValidatedMethod({\n  name: 'matsMethods.getDataFunctionFileList',\n  validate: new SimpleSchema({}).validator(),\n  run: function () {\n    if (Meteor.isServer) {}\n  }\n}); // retrieves the saved query results (or downsampled results)\n\nvar getGraphData = new ValidatedMethod({\n  name: 'matsMethods.getGraphData',\n  validate: new SimpleSchema({\n    plotParams: {\n      type: Object,\n      blackbox: true\n    },\n    plotType: {\n      type: String\n    },\n    expireKey: {\n      type: Boolean\n    }\n  }).validator(),\n  run: function (params) {\n    if (Meteor.isServer) {\n      var plotGraphFunction = matsCollections.PlotGraphFunctions.findOne({\n        plotType: params.plotType\n      });\n      var dataFunction = plotGraphFunction.dataFunction;\n      var ret;\n\n      try {\n        var hash = require('object-hash');\n\n        var key = hash(params.plotParams);\n\n        if (process.env.NODE_ENV === \"development\" || params.expireKey) {\n          matsCache.expireKey(key);\n        }\n\n        var results = matsCache.getResult(key);\n\n        if (results === undefined) {\n          // results aren't in the cache - need to process data routine\n          var Future = require('fibers/future');\n\n          var future = new Future();\n          global[dataFunction](params.plotParams, function (results) {\n            ret = _saveResultData(results);\n            future[\"return\"](ret);\n          });\n          return future.wait();\n        } else {\n          // results were already in the matsCache (same params and not yet expired)\n          // are results in the downsampled collection?\n          var dsResults = DownSampleResults.findOne({\n            key: key\n          }, {}, {\n            disableOplog: true\n          });\n\n          if (dsResults !== undefined) {\n            // results are in the mongo cache downsampled collection - returned the downsampled graph data\n            ret = dsResults; // update the expire time in the downsampled collection - this requires a new Date\n\n            DownSampleResults.rawCollection().update({\n              key: key\n            }, {\n              $set: {\n                \"createdAt\": new Date()\n              }\n            });\n          } else {\n            ret = results; // {key:someKey, result:resultObject}\n            // refresh expire time. The only way to perform a refresh on matsCache is to re-save the result.\n\n            matsCache.storeResult(results.key, results);\n          }\n\n          var sizeof = require('object-sizeof');\n\n          console.log(\"result.data size is \", sizeof(results));\n          return ret;\n        }\n      } catch (dataFunctionError) {\n        if (dataFunctionError.toLocaleString().indexOf(\"INFO:\") !== -1) {\n          throw new Meteor.Error(dataFunctionError.message);\n        } else {\n          throw new Meteor.Error(\"Error in getGraphData function:\" + dataFunction + \" : \" + dataFunctionError.message);\n        }\n      }\n\n      return undefined; // probably won't get here\n    }\n  }\n}); // retrieves the saved query results (or downsampled results) for a specific key\n\nvar getGraphDataByKey = new ValidatedMethod({\n  name: 'matsMethods.getGraphDataByKey',\n  validate: new SimpleSchema({\n    resultKey: {\n      type: String\n    }\n  }).validator(),\n  run: function (params) {\n    if (Meteor.isServer) {\n      var ret;\n      var key = params.resultKey;\n\n      try {\n        var dsResults = DownSampleResults.findOne({\n          key: key\n        }, {}, {\n          disableOplog: true\n        });\n\n        if (dsResults !== undefined) {\n          ret = dsResults;\n        } else {\n          ret = matsCache.getResult(key); // {key:someKey, result:resultObject}\n        }\n\n        var sizeof = require('object-sizeof');\n\n        console.log(\"getGraphDataByKey results size is \", sizeof(dsResults));\n        return ret;\n      } catch (error) {\n        throw new Meteor.Error(\"Error in getGraphDataByKey function:\" + key + \" : \" + error.message);\n      }\n\n      return undefined;\n    }\n  }\n}); // administration tool\n\nvar getGraphFunctionFileList = new ValidatedMethod({\n  name: 'matsMethods.getGraphFunctionFileList',\n  validate: new SimpleSchema({}).validator(),\n  run: function () {\n    if (Meteor.isServer) {}\n  }\n});\nvar getLayout = new ValidatedMethod({\n  name: 'matsMethods.getLayout',\n  validate: new SimpleSchema({\n    resultKey: {\n      type: String\n    }\n  }).validator(),\n  run: function (params) {\n    if (Meteor.isServer) {\n      var ret;\n      var key = params.resultKey;\n\n      try {\n        ret = LayoutStoreCollection.rawCollection().findOne({\n          key: key\n        });\n        return ret;\n      } catch (error) {\n        throw new Meteor.Error(\"Error in getLayout function:\" + key + \" : \" + error.message);\n      }\n\n      return undefined;\n    }\n  }\n}); // retrieves the saved artifacts (file urls) that were generated by nvBatch for a specific key\n\nvar getMvArtifactsByKey = new ValidatedMethod({\n  name: 'matsMethods.getMvArtifactsByKey',\n  validate: new SimpleSchema({\n    key: {\n      type: String\n    }\n  }).validator(),\n  run: function (params) {\n    if (Meteor.isServer) {\n      var ret;\n      var key = params.key;\n\n      try {\n        ret = matsCache.getResult(key); // {key:someKey, result:resultObject}\n\n        return ret;\n      } catch (error) {\n        throw new Meteor.Error(\"Error in getMvArtifactsByKey function:\" + key + \" : \" + error.message);\n      }\n\n      return undefined;\n    }\n  }\n});\n/*\ngetPlotResult is used by the graph/text_*_output templates which are used to display textual results.\nBecause the data isn't being rendered graphically this data is always full size, i.e. NOT downsampled.\nThat is why it only finds it in the Result file cache, never the DownSampleResult collection.\n\nBecause the dataset can be so large ... e.g. megabytes the data retrieval is pagenated. The index is\napplied to the underlying datasets.The data gets stripped down and flattened to only contain the data neccesary for text presentation.\nA new page index of -1000 means get all the data i.e. no pagenation.\n */\n\nvar getPlotResult = new ValidatedMethod({\n  name: 'matsMethods.getPlotResult',\n  validate: new SimpleSchema({\n    resultKey: {\n      type: String\n    },\n    pageIndex: {\n      type: Number\n    },\n    newPageIndex: {\n      type: Number\n    }\n  }).validator(),\n  run: function (params) {\n    if (Meteor.isServer) {\n      var rKey = params.resultKey;\n      var pi = params.pageIndex;\n      var npi = params.newPageIndex;\n      var ret = {};\n\n      try {\n        ret = _getFlattenedResultData(rKey, pi, npi);\n      } catch (e) {\n        console.log(e);\n      }\n\n      return ret;\n    }\n  }\n});\nvar getReleaseNotes = new ValidatedMethod({\n  name: 'matsMethods.getReleaseNotes',\n  validate: new SimpleSchema({}).validator(),\n  run: function () {\n    //     return Assets.getText('public/MATSReleaseNotes.html');\n    // }\n    if (Meteor.isServer) {\n      var future = require('fibers/future');\n\n      var fse = require('fs-extra');\n\n      var dFuture = new future();\n      var fData;\n      console.log(process.env.PWD);\n      var file;\n\n      if (process.env.NODE_ENV === \"development\") {\n        file = process.env.PWD + \"/../../meteor_packages/mats-common/public/MATSReleaseNotes.html\";\n      } else {\n        file = process.env.PWD + \"/programs/server/assets/packages/randyp_mats-common/public/MATSReleaseNotes.html\";\n      }\n\n      try {\n        fse.readFile(file, 'utf8', function (err, data) {\n          if (err) {\n            fData = err.message;\n            dFuture[\"return\"]();\n          } else {\n            fData = data;\n            dFuture[\"return\"]();\n          }\n        });\n      } catch (e) {\n        fData = e.message;\n        dFuture[\"return\"]();\n      }\n\n      dFuture.wait();\n      return fData;\n    }\n  }\n}); // administration tool\n\nvar getUserAddress = new ValidatedMethod({\n  name: 'matsMethods.getUserAddress',\n  validate: new SimpleSchema({}).validator(),\n  run: function () {\n    if (Meteor.isServer) {\n      return Meteor.user().services.google.email.toLowerCase();\n    }\n  }\n}); // app utility\n\nvar insertColor = new ValidatedMethod({\n  name: 'matsMethods.insertColor',\n  validate: new SimpleSchema({\n    newColor: {\n      type: String\n    },\n    insertAfterIndex: {\n      type: Number\n    }\n  }).validator(),\n  run: function (params) {\n    if (params.newColor == \"rgb(255,255,255)\") {\n      return false;\n    }\n\n    var colorScheme = matsCollections.ColorScheme.findOne({});\n    colorScheme.colors.splice(params.insertAfterIndex, 0, newColor);\n    matsCollections.update({}, colorScheme);\n    return false;\n  }\n}); // checks to see if the mv artifacts are cached (based on plotspec hash) if not execs an mvbatch and caches the results\n\nvar mvBatch = new ValidatedMethod({\n  name: 'matsMethods.mvBatch',\n  validate: new SimpleSchema({\n    plotParams: {\n      type: Object,\n      blackbox: true\n    },\n    plotType: {\n      type: String\n    }\n  }).validator(),\n  run: function (params) {\n    if (Meteor.isServer) {\n      var mvbatch = MV_DIRS.HOME + \"/bin/mv_batch.sh\";\n      var plotGraphFunction = matsCollections.PlotGraphFunctions.findOne({\n        plotType: params.plotType\n      });\n      var plotSpecFunction = plotGraphFunction.plotSpecFunction;\n      var ret;\n      var _appName = matsCollections.appName.findOne({}).app;\n\n      var fse = require('fs-extra'); // generate the key from the params\n\n\n      var hash = require('object-hash');\n\n      var key = hash(params.plotParams); // generate the server router (Picker) urls according to the hash key.\n\n      var artifacts = {};\n\n      if (process.env.NODE_ENV === \"development\") {\n        artifacts = {\n          png: _appName + \"/mvplot/\" + key,\n          xml: _appName + \"/mvxml/\" + key,\n          sql: _appName + \"/mvsql/\" + key,\n          log: _appName + \"/mvlog/\" + key,\n          err: _appName + \"/mverr/\" + key,\n          R: _appName + \"/mvscript/\" + key,\n          data: _appName + \"/mvdata/\" + key,\n          points1: _appName + \"/mvpoints1/\" + key,\n          points2: _appName + \"/mvpoints2/\" + key\n        };\n      } else {\n        // in production the appName is already at the end of the location.href\n        // - which is used to form a url for retrieving the artifact\n        artifacts = {\n          png: \"/mvplot/\" + key,\n          xml: \"/mvxml/\" + key,\n          sql: \"/mvsql/\" + key,\n          log: \"/mvlog/\" + key,\n          err: \"/mverr/\" + key,\n          R: \"/mvscript/\" + key,\n          data: \"/mvdata/\" + key,\n          points1: \"/mvpoints1/\" + key,\n          points2: \"/mvpoints2/\" + key\n        };\n      } // generate the real file paths (these are not exposed to clients)\n\n\n      var plotSpecFilePath = MV_DIRS.XMLDIR + key + \".xml\";\n      var pngFilePath = MV_DIRS.PLOTSDIR + key + \".png\";\n      var sqlFilePath = MV_DIRS.SQLDIR + key + \".sql\";\n      var logFilePath = MV_DIRS.LOGDIR + key + \".log\";\n      var errFilePath = MV_DIRS.ERRDIR + key + \".err\";\n      var scriptFilePath = MV_DIRS.SCRIPTSDIR + key + \".R\";\n      var dataFilePath = MV_DIRS.DATADIR + key + \".data\";\n      var points1Path = MV_DIRS.DATADIR + key + \".points1\";\n      var points2Path = MV_DIRS.DATADIR + key + \".points2\"; // NOTE: the plotParams should include an mvPlot:true parameter.\n      // This should have been set in the caller. This makes the mv plotSpec cache entry unique from a MATS plot\n\n      if (params.plotParams.mvPlot !== true) {\n        throw new Meteor.Error(\"Error in mvBatch: Not an mv plot request: no plotParams.mvPlot:true\");\n      }\n\n      if (process.env.NODE_ENV === \"development\" || params.expireKey) {\n        matsCache.expireKey(key); // in development just blow away the files too\n\n        try {\n          fse.unlinkSync(plotSpecFilePath);\n        } catch (ignore) {}\n\n        try {\n          fse.unlinkSync(pngFilePath);\n        } catch (ignore) {}\n\n        try {\n          fse.unlinkSync(sqlFilePath);\n        } catch (ignore) {}\n\n        try {\n          fse.unlinkSync(logFilePath);\n        } catch (ignore) {}\n\n        try {\n          fse.unlinkSync(errFilePath);\n        } catch (ignore) {}\n\n        try {\n          fse.unlinkSync(scriptFilePath);\n        } catch (ignore) {}\n\n        try {\n          fse.unlinkSync(dataFilePath);\n        } catch (ignore) {}\n\n        try {\n          fse.unlinkSync(points1Path);\n        } catch (ignore) {}\n\n        try {\n          fse.unlinkSync(points2Path);\n        } catch (ignore) {}\n      } // try to get the key from the cache\n\n\n      var artifactPaths = matsCache.getResult(key);\n      var filesExist = false;\n\n      if (artifactPaths != null) {\n        // artifact paths were already cached\n        // do the files exist?\n        // check for file existence\n        var xmlSpecExists = fse.existsSync(plotSpecFilePath);\n        var plotExists = fse.existsSync(pngFilePath);\n        var scriptExists = fse.existsSync(scriptFilePath);\n        var dataExists = fse.existsSync(dataFilePath);\n        var sqlExists = fse.existsSync(sqlFilePath);\n        var logExists = fse.existsSync(logFilePath);\n        filesExist = xmlSpecExists && plotExists && scriptExists && dataExists && sqlExists && logExists;\n      } // either the artifacts were cached but the files don't exist or the artifacts were not cached\n\n\n      if (artifactPaths == null || filesExist === false) {\n        // artifactPaths are not in the cache - or the files are not there - need to process plotSpecFunction routine\n        // translate the plotparams to a plotSpec and use the key in the plotSpec reference\n        global[plotSpecFunction](params.plotParams, key, function (err, plotSpec) {\n          // callback\n          if (err) {\n            console.log(err, \"plotspecFunction:\", plotSpecFunction);\n            throw new Meteor.Error(err + \"plotspecFunction: \" + plotSpecFunction);\n          } else {\n            // no error and we have a plot spec\n            // see if the artifacts exist as files. They might have been run before and are still hanging around.\n            // NOTE: the MV_OUTPUT aren't cached at all (i.e. no expiration) -\n            // therefore the expiration of the MATS cache plotSpec and the actual artifacts is sloppy.\n            // check for file existence\n            var xmlSpecExists = fse.existsSync(plotSpecFilePath);\n            var plotExists = fse.existsSync(pngFilePath);\n            var scriptExists = fse.existsSync(scriptFilePath);\n            var dataExists = fse.existsSync(dataFilePath);\n            var sqlExists = fse.existsSync(sqlFilePath);\n            var logExists = fse.existsSync(logFilePath);\n            var filesExist = xmlSpecExists && plotExists && scriptExists && dataExists && sqlExists && logExists;\n\n            if (!filesExist) {\n              var mvBatchCmd = MV_DIRS.HOME + \"/bin/mv_batch.sh \" + ' ' + plotSpecFilePath;\n\n              var cp = require('child_process'); // save the plotSpec\n\n\n              fse.outputFileSync(plotSpecFilePath, plotSpec); // exec mv batch with this plotSpec - this should be synchronous\n\n              cp.execSync(mvBatchCmd, function (error, stdout, stderr) {\n                if (stderr) {\n                  fse.outputFileSync(errFilePath, stderr, function (err) {\n                    if (err) {\n                      console.log(\"Error:couldn't write error file\" + err); //null\n                    }\n                  });\n                } else {\n                  fse.outputFileSync(errFilePath, \"no stderr for key: \" + key, function (err) {\n                    if (err) {\n                      console.log(\"Error:couldn't write error file\" + err); //null\n                    }\n                  });\n                }\n\n                if (stdout) {\n                  if (stdout.match(/ERROR/)) {\n                    fse.outputFileSync(errFilePath, stdout, function (err) {\n                      if (err) {\n                        console.log(\"Error:couldn't write log/err file\" + err);\n                      }\n                    });\n                  }\n\n                  fse.outputFileSync(logFilePath, stdout, function (err) {\n                    if (err) {\n                      console.log(\"Error:couldn't write log file\" + err);\n                    }\n                  });\n                  var sqlout = stdout.match(/[\\s\\S]*#*(SELECT[\\s\\S]*)Database/) == null ? null : stdout.match(/[\\s\\S]*#*(SELECT[\\s\\S]*)Database/)[1];\n\n                  if (sqlout == null) {\n                    fse.outputFileSync(sqlFilePath, \"no sql statement found in output for key: \" + key, function (err) {\n                      if (err) {\n                        console.log(\"Error:couldn't write sql file\" + err);\n                      }\n                    });\n                  } else {\n                    fse.outputFileSync(sqlFilePath, sqlout, function (err) {\n                      if (err) {\n                        console.log(\"Error:couldn't write sql file\" + err);\n                      }\n                    });\n                  }\n                } else {\n                  fse.outputFileSync(logFilePath, \"No stdout captured for: \" + key, function (err) {\n                    if (err) {\n                      console.log(\"Error:couldn't write log file\" + err);\n                    }\n                  });\n                } // no error - check for the files and cache the spec and filePaths\n\n\n                var xmlSpecExists = fse.existsSync(plotSpecFilePath);\n                var plotExists = fse.existsSync(pngFilePath);\n                var scriptExists = fse.existsSync(scriptFilePath);\n                var dataExists = fse.existsSync(dataFilePath);\n                var sqlExists = fse.existsSync(sqlFilePath);\n                var logExists = fse.existsSync(logFilePath);\n                var filesExist = xmlSpecExists && plotExists && scriptExists && dataExists && sqlExists && logExists;\n\n                if (!filesExist) {\n                  console.error('exec error: expected files do not exist');\n                }\n\n                matsCache.storeResult(key, artifacts);\n                /*\n                    The mvbatch should have saved the plot artifacts according to the following plotSpec elements\n                        <data_file>key.data</data_file>\n                        <plot_file>key.png</plot_file>\n                        <r_file>key.R</r_file>\n                    where key is the same as the key for the matsCache\n                    The stored artifacts shoulkd be like ...\n                        MV_OUTPUT/plots/key.png\n                        MV_OUTPUT/xml/key.xml\n                        MV_OUTPUT/xml/key.sql\n                        MV_OUTPUT/xml/key.log\n                        MV_OUTPUT/scripts/key.R\n                        MV_OUTPUT/data/key.data\n                        MV_OUTPUT/data/key.sum_stat.info\n                        MV_OUTPUT/data/key.data.sum_stat\n                         MV_OUTPUT/xml/key.xml is the plotSpec\n                */\n\n                return {\n                  'key': key,\n                  'artifacts': artifacts\n                };\n              }); //ret = {key:key, result:{artifacts:artifacts}}\n              // return the key and the artifacts\n            } // plotspec did not exist\n            else {\n                // the files actually already existed but we needed the plotspec\n                // so just refresh the cache and return the key right away\n                matsCache.storeResult(key, artifacts);\n                return {\n                  'key': key,\n                  'artifacts': artifacts\n                };\n              }\n          }\n        });\n      } // either artifactPaths == null || filesExist === false\n      else {\n          // artifacts existed and plotspec existed - refresh the cache\n          matsCache.storeResult(key, artifacts);\n          return {\n            'key': key,\n            'artifacts': artifacts\n          };\n        }\n\n      return {\n        'key': key,\n        'artifacts': artifacts\n      };\n    } // if Meteor is Server\n\n  } // run\n\n}); // administration tool\n\nvar readFunctionFile = new ValidatedMethod({\n  name: 'matsMethods.readFunctionFile',\n  validate: new SimpleSchema({}).validator(),\n  run: function () {\n    if (Meteor.isServer) {\n      var future = require('fibers/future');\n\n      var fse = require('fs-extra');\n\n      var path = \"\";\n      var fData;\n\n      if (type == \"data\") {\n        path = \"/web/static/dataFunctions/\" + file;\n        console.log('exporting data file: ' + path);\n      } else if (type == \"graph\") {\n        path = \"/web/static/displayFunctions/\" + file;\n        console.log('exporting graph file: ' + path);\n      } else {\n        return \"error - wrong type\";\n      }\n\n      fse.readFile(path, function (err, data) {\n        if (err) throw err;\n        fData = data.toString();\n        future[\"return\"](fData);\n      });\n      return future.wait();\n    }\n  }\n}); // refreshes the metadata for the app that's running\n\nvar refreshMetaData = new ValidatedMethod({\n  name: 'matsMethods.refreshMetaData',\n  validate: new SimpleSchema({}).validator(),\n  run: function () {\n    if (Meteor.isServer) {\n      try {\n        //console.log(\"Asked to refresh metadata\");\n        _checkMetaDataRefresh();\n      } catch (e) {\n        console.log(e);\n        throw new Meteor.Error(\"Server error: \", e.message);\n      }\n    }\n\n    return metaDataTableUpdates.find({}).fetch();\n  }\n}); // administation tool\n\nvar removeAuthorization = new ValidatedMethod({\n  name: 'matsMethods.removeAuthorization',\n  validate: new SimpleSchema({\n    settings: {\n      type: Object,\n      blackbox: true\n    }\n  }).validator(),\n  run: function (settings) {\n    if (Meteor.isServer) {\n      var email;\n      var roleName;\n      var userRoleName = settings.userRoleName;\n      var authorizationRole = settings.authorizationRole;\n      var newUserEmail = settings.newUserEmail;\n      var existingUserEmail = settings.existingUserEmail;\n\n      if (authorizationRole) {\n        // existing role - the role roleName - no need to verify as the selection list came from the database\n        roleName = authorizationRole;\n      } else if (userRoleName) {\n        roleName = userRoleName;\n      }\n\n      if (existingUserEmail) {\n        email = existingUserEmail;\n      } else {\n        email = newUserEmail;\n      } // if user and role remove the role from the user\n\n\n      if (email && roleName) {\n        matsCollections.Authorization.update({\n          email: email\n        }, {\n          $pull: {\n            roles: roleName\n          }\n        });\n      } // if user and no role remove the user\n\n\n      if (email && !roleName) {\n        matsCollections.Authorization.remove({\n          email: email\n        });\n      } // if role and no user remove role and remove role from all users\n\n\n      if (roleName && !email) {\n        // remove the role\n        matsCollections.Roles.remove({\n          name: roleName\n        }); // remove the roleName role from all the authorizations\n\n        matsCollections.Authorization.update({\n          roles: roleName\n        }, {\n          $pull: {\n            roles: roleName\n          }\n        }, {\n          multi: true\n        });\n      }\n\n      return false;\n    }\n  }\n}); // app utility\n\nvar removeColor = new ValidatedMethod({\n  name: 'matsMethods.removeColor',\n  validate: new SimpleSchema({\n    removeColor: {\n      type: String\n    }\n  }).validator(),\n  run: function (removeColor) {\n    var colorScheme = matsCollections.ColorScheme.findOne({});\n    var removeIndex = colorScheme.colors.indexOf(removeColor);\n    colorScheme.colors.splice(removeIndex, 1);\n    matsCollections.ColorScheme.update({}, colorScheme);\n    return false;\n  }\n}); // database controls\n\nvar removeDatabase = new ValidatedMethod({\n  name: 'matsMethods.removeDatabase',\n  validate: new SimpleSchema({\n    dbName: {\n      type: String\n    }\n  }).validator(),\n  run: function (dbName) {\n    if (Meteor.isServer) {\n      matsCollections.Databases.remove({\n        name: dbName\n      });\n    }\n  }\n}); // makes sure all of the parameters display appropriate selections in relation to one another\n\nvar resetApp = function (appRef) {\n  var fse = require('fs-extra');\n\n  var metaDataTableRecords = appRef.appMdr;\n  var type = appRef.appType;\n  var appName = appRef.app;\n  var dep_env = process.env.NODE_ENV; // set some defaults for python processing - these can be overridden\n\n  if (Meteor.settings.private != null && Meteor.settings.private.PYTHON_PATH == null) {\n    Meteor.settings.private.PYTHON_PATH = \"/usr/bin/python\";\n  }\n\n  if (Meteor.settings.private != null && Meteor.settings.private.process != null && Meteor.settings.private.process.RUN_ENV != null) {\n    switch (Meteor.settings.private.process.RUN_ENV) {\n      case \"development\":\n      case \"integration\":\n      case \"production\":\n        dep_env = Meteor.settings.private.process.RUN_ENV;\n        break;\n\n      default:\n        dep_env = process.env.NODE_ENV;\n        break;\n    }\n  }\n\n  var deployment;\n  var deploymentText = Assets.getText('public/deployment/deployment.json');\n\n  if (deploymentText == null) {// equivilent to deploymentText === null || deploymentText === undefined\n  }\n\n  deployment = JSON.parse(deploymentText);\n  var app = {};\n\n  for (var ai = 0; ai < deployment.length; ai++) {\n    var dep = deployment[ai];\n\n    if (dep.deployment_environment == dep_env) {\n      app = dep.apps.filter(function (app) {\n        return app.app === appName;\n      })[0];\n    }\n  }\n\n  var appVersion = app ? app.version : \"unknown\";\n  var appTitle = app ? app.title : \"unknown\";\n  var buildDate = app ? app.buildDate : \"unknown\";\n  var appType = type ? type : matsTypes.AppTypes.mats;\n  matsCollections.appName.upsert({\n    app: appName\n  }, {\n    $set: {\n      app: appName\n    }\n  }); // remember that we updated the metadata tables just now - create metaDataTableUpdates\n\n  /*\n      metaDataTableUpdates:\n      {\n          name: dataBaseName,\n          tables: [tableName1, tableName2 ..],\n          lastRefreshed : timestamp\n      }\n   */\n  // only create metadata tables if the resetApp was called with a real metaDataTables object\n\n  if (metaDataTableRecords instanceof matsTypes.MetaDataDBRecord) {\n    var metaDataTables = metaDataTableRecords.getRecords();\n\n    for (var mdti = 0; mdti < metaDataTables.length; mdti++) {\n      var metaDataRef = metaDataTables[mdti];\n      metaDataRef.lastRefreshed = moment().format();\n\n      if (metaDataTableUpdates.find({\n        name: metaDataRef.name\n      }).count() == 0) {\n        metaDataTableUpdates.update({\n          name: metaDataRef.name\n        }, metaDataRef, {\n          upsert: true\n        });\n      }\n    }\n  } else {\n    throw new Meteor.Error(\"Server error: \", \"resetApp: bad pool-database entry\");\n  }\n\n  matsCollections.Roles.remove({});\n  matsDataUtils.doRoles();\n  matsCollections.Authorization.remove({});\n  matsDataUtils.doAuthorization();\n  matsCollections.Credentials.remove({});\n  matsDataUtils.doCredentials();\n  matsCollections.PlotGraphFunctions.remove({});\n  matsCollections.ColorScheme.remove({});\n  matsDataUtils.doColorScheme();\n  matsCollections.Settings.remove({});\n  matsDataUtils.doSettings(appTitle, appVersion, buildDate, appType);\n  matsCollections.CurveParams.remove({});\n  matsCollections.PlotParams.remove({});\n  matsCollections.CurveTextPatterns.remove({}); // app specific routines\n  //const asrKeys = Object.keys(appSpecificResetRoutines);\n\n  var asrKeys = appSpecificResetRoutines;\n\n  for (var ai = 0; ai < asrKeys.length; ai++) {\n    global.appSpecificResetRoutines[ai]();\n  }\n\n  matsCache.clear();\n}; // administration tool\n\n\nvar restoreFromFile = new ValidatedMethod({\n  name: 'matsMethods.restoreFromFile',\n  validate: new SimpleSchema({\n    type: {\n      type: String\n    },\n    name: {\n      type: String\n    },\n    data: {\n      type: Object,\n      blackbox: true\n    }\n  }).validator(),\n  run: function (params) {\n    if (Meteor.isServer) {\n      console.log(\"restoring \" + params.type + \" file \" + params.name);\n      var path = \"\";\n\n      if (params.type == \"data\") {\n        path = \"/web/static/dataFunctions/\" + params.name;\n      } else if (params.ype == \"graph\") {\n        path = \"/web/static/displayFunctions/\" + params.name;\n      } else {\n        return \"error - wrong tyoe\";\n      }\n\n      console.log('importing ' + params.type + ' file: ' + path);\n\n      var fse = require('fs-extra');\n\n      fse.writeFile(path, params.data.toString(), function (err) {\n        if (err) {\n          return err.toLocaleString();\n        }\n\n        console.log('imported ' + params.type + ' file: ' + path);\n      });\n    }\n  }\n}); // administration tool\n\nvar restoreFromParameterFile = new ValidatedMethod({\n  name: 'matsMethods.restoreFromParameterFile',\n  validate: new SimpleSchema({\n    name: {\n      type: String\n    },\n    data: {\n      type: Object,\n      blackbox: true\n    }\n  }).validator(),\n  run: function (params) {\n    var data = params.data;\n\n    if (Meteor.isServer) {\n      var d = [];\n\n      if (data.CurveParams) {\n        matsCollections.CurveParams.remove({});\n        d = _.map(data.CurveParams, function (o) {\n          return _.omit(o, '_id');\n        });\n        d.forEach(function (o) {\n          matsCollections.CurveParams.insert(o);\n        });\n      }\n\n      if (data.PlotParams) {\n        matsCollections.PlotParams.remove({});\n        d = _.map(data.PlotParams, function (o) {\n          return _.omit(o, '_id');\n        });\n        d.forEach(function (o) {\n          matsCollections.PlotParams.insert(o);\n        });\n      }\n\n      if (data.PlotGraphFunctions) {\n        matsCollections.PlotGraphFunctions.remove({});\n        d = _.map(data.PlotGraphFunctions, function (o) {\n          return _.omit(o, '_id');\n        });\n        d.forEach(function (o) {\n          matsCollections.PlotGraphFunctions.insert(o);\n        });\n      }\n\n      if (data.Settings) {\n        matsCollections.Settings.remove({});\n        d = _.map(data.Settings, function (o) {\n          return _.omit(o, '_id');\n        });\n        d.forEach(function (o) {\n          matsCollections.Settings.insert(o);\n        });\n      }\n\n      if (data.ColorScheme) {\n        matsCollections.ColorScheme.remove({});\n        d = _.map(data.ColorScheme, function (o) {\n          return _.omit(o, '_id');\n        });\n        d.forEach(function (o) {\n          matsCollections.ColorScheme.insert(o);\n        });\n      }\n\n      if (data.Authorization) {\n        matsCollections.Authorization.remove({});\n        d = _.map(data.Authorization, function (o) {\n          return _.omit(o, '_id');\n        });\n        d.forEach(function (o) {\n          matsCollections.Authorization.insert(o);\n        });\n      }\n\n      if (data.Roles) {\n        matsCollections.Roles.remove({});\n        d = _.map(data.Roles, function (o) {\n          return _.omit(o, '_id');\n        });\n        d.forEach(function (o) {\n          matsCollections.Roles.insert(o);\n        });\n      }\n\n      if (data.Databases) {\n        matsCollections.Databases.remove({});\n        d = _.map(data.Databases, function (o) {\n          return _.omit(o, '_id');\n        });\n        d.forEach(function (o) {\n          matsCollections.Databases.insert(o);\n        });\n      }\n\n      if (data.Credentials) {\n        matsCollections.Credentials.remove({});\n        d = _.map(data.Credentials, function (o) {\n          return _.omit(o, '_id');\n        });\n        d.forEach(function (o) {\n          matsCollections.Credentials.insert(o);\n        });\n      }\n    }\n  }\n});\nvar saveLayout = new ValidatedMethod({\n  name: 'matsMethods.saveLayout',\n  validate: new SimpleSchema({\n    resultKey: {\n      type: String\n    },\n    layout: {\n      type: Object,\n      blackbox: true\n    },\n    curveOpsUpdate: {\n      type: Object,\n      blackbox: true\n    }\n  }).validator(),\n  run: function (params) {\n    if (Meteor.isServer) {\n      var key = params.resultKey;\n      var layout = params.layout;\n      var curveOpsUpdate = params.curveOpsUpdate;\n\n      try {\n        LayoutStoreCollection.upsert({\n          key: key\n        }, {\n          $set: {\n            \"createdAt\": new Date(),\n            layout: layout,\n            curveOpsUpdate: curveOpsUpdate\n          }\n        });\n      } catch (error) {\n        throw new Meteor.Error(\"Error in saveLayout function:\" + key + \" : \" + error.message);\n      }\n    }\n  }\n}); //administration tools\n\nvar saveSettings = new ValidatedMethod({\n  name: 'matsMethods.saveSettings',\n  validate: new SimpleSchema({\n    saveAs: {\n      type: String\n    },\n    p: {\n      type: Object,\n      blackbox: true\n    },\n    permission: {\n      type: String\n    }\n  }).validator(),\n  run: function (params) {\n    var user = \"anonymous\";\n    matsCollections.CurveSettings.upsert({\n      name: params.saveAs\n    }, {\n      created: moment().format(\"MM/DD/YYYY HH:mm:ss\"),\n      name: params.saveAs,\n      data: params.p,\n      owner: Meteor.userId() == null ? \"anonymous\" : Meteor.userId(),\n      permission: params.permission,\n      savedAt: new Date(),\n      savedBy: Meteor.user() == null ? \"anonymous\" : user\n    });\n  }\n}); // administation tool\n\nvar setCredentials = new ValidatedMethod({\n  name: 'matsMethods.setCredentials',\n  validate: new SimpleSchema({\n    settings: {\n      type: Object,\n      blackbox: true\n    }\n  }).validator(),\n  run: function (settings) {\n    if (Meteor.isServer) {\n      var name = settings.name;\n      var clientId = settings.clientId;\n      var clientSecret = settings.clientSecret;\n      var clientRefreshToken = settings.clientRefreshToken;\n      matsCollections.Credentials.update({}, {\n        $set: {\n          name: name,\n          clientId: clientId,\n          clientSecret: clientSecret,\n          refresh_token: clientRefreshToken\n        }\n      });\n      return false;\n    }\n  }\n});\nvar setSettings = new ValidatedMethod({\n  name: 'matsMethods.setSettings',\n  validate: new SimpleSchema({\n    settings: {\n      type: Object,\n      blackbox: true\n    }\n  }).validator(),\n  run: function (params) {\n    if (Meteor.isServer) {\n      var settings = params.settings;\n      var labelPrefix = settings.labelPrefix;\n      var title = settings.title;\n      var lineWidth = settings.lineWidth;\n      var nullFillString = settings.nullFillString;\n      var resetFromCode = settings.resetFromCode;\n      matsCollections.Settings.update({}, {\n        $set: {\n          LabelPrefix: labelPrefix,\n          Title: title,\n          LineWidth: lineWidth,\n          NullFillString: nullFillString,\n          resetFromCode: resetFromCode\n        }\n      });\n    }\n\n    return false;\n  }\n});\n/* test methods */\n\nvar testGetMetaDataTableUpdates = new ValidatedMethod({\n  name: 'matsMethods.testGetMetaDataTableUpdates',\n  validate: new SimpleSchema({}).validator(),\n  run: function () {\n    return metaDataTableUpdates.find({}).fetch();\n  }\n});\nvar testGetTables = new ValidatedMethod({\n  name: 'matsMethods.testGetTables',\n  validate: new SimpleSchema({\n    host: {\n      type: String\n    },\n    user: {\n      type: String\n    },\n    password: {\n      type: String\n    },\n    database: {\n      type: String\n    }\n  }).validator(),\n  run: function (params) {\n    if (Meteor.isServer) {\n      var Future = require('fibers/future');\n\n      var queryWrap = Future.wrap(function (callback) {\n        var connection = mysql.createConnection({\n          host: params.host,\n          user: params.user,\n          password: params.password,\n          database: params.database\n        });\n        connection.query(\"show tables;\", function (err, result) {\n          var tables = result.map(function (a) {\n            return a.Tables_in_ruc_ua_sums2;\n          });\n          return callback(err, tables);\n        });\n        connection.end(function (err) {\n          if (err) {\n            console.log(\"testGetTables cannot end connection\");\n          }\n        });\n      });\n      return queryWrap().wait();\n    }\n  }\n});\nvar testSetMetaDataTableUpdatesLastRefreshedBack = new ValidatedMethod({\n  name: 'matsMethods.testSetMetaDataTableUpdatesLastRefreshedBack',\n  validate: new SimpleSchema({}).validator(),\n  run: function () {\n    var mtu = metaDataTableUpdates.find({}).fetch();\n    var id = mtu[0]._id;\n    metaDataTableUpdates.update({\n      _id: id\n    }, {\n      $set: {\n        lastRefreshed: 0\n      }\n    });\n    return metaDataTableUpdates.find({}).fetch();\n  }\n});\nmodule.exportDefault(matsMethods = {\n  addSentAddress: addSentAddress,\n  applyAuthorization: applyAuthorization,\n  applyDatabaseSettings: applyDatabaseSettings,\n  deleteSettings: deleteSettings,\n  emailImage: emailImage,\n  getAuthorizations: getAuthorizations,\n  getDataFunctionFileList: getDataFunctionFileList,\n  getGraphData: getGraphData,\n  getGraphDataByKey: getGraphDataByKey,\n  getGraphFunctionFileList: getGraphFunctionFileList,\n  getLayout: getLayout,\n  getMvArtifactsByKey: getMvArtifactsByKey,\n  getPlotResult: getPlotResult,\n  getReleaseNotes: getReleaseNotes,\n  getUserAddress: getUserAddress,\n  insertColor: insertColor,\n  mvBatch: mvBatch,\n  readFunctionFile: readFunctionFile,\n  refreshMetaData: refreshMetaData,\n  removeAuthorization: removeAuthorization,\n  removeColor: removeColor,\n  removeDatabase: removeDatabase,\n  resetApp: resetApp,\n  restoreFromFile: restoreFromFile,\n  restoreFromParameterFile: restoreFromParameterFile,\n  saveLayout: saveLayout,\n  saveSettings: saveSettings,\n  setCredentials: setCredentials,\n  setSettings: setSettings,\n  testGetMetaDataTableUpdates: testGetMetaDataTableUpdates,\n  testGetTables: testGetTables,\n  testSetMetaDataTableUpdatesLastRefreshedBack: testSetMetaDataTableUpdatesLastRefreshedBack,\n  MV_DIRS: MV_DIRS\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ui\":{\"layouts\":{\"template.notFound.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/ui/layouts/template.notFound.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"notFound\");\nTemplate[\"notFound\"] = new Template(\"Template.notFound\", (function() {\n  var view = this;\n  return HTML.Raw(\"<h1>404</h1>\\n    <p>No such page.</p>\");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"appBody.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/imports/startup/ui/layouts/appBody.html                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./template.appBody.js\", { \"*\": \"*+\" });\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.appBody.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/ui/layouts/template.appBody.js                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"AppBody\");\nTemplate[\"AppBody\"] = new Template(\"Template.AppBody\", (function() {\n  var view = this;\n  return HTML.DIV(\"\\n        \", Blaze._TemplateWith(function() {\n    return {\n      template: Spacebars.call(view.lookup(\"main\"))\n    };\n  }, function() {\n    return Spacebars.include(function() {\n      return Spacebars.call(Template.__dynamic);\n    });\n  }), \"\\n    \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"appBody.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/ui/layouts/appBody.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 0);\nvar FlowRouter;\nmodule.link(\"meteor/ostrio:flow-router-extra\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 1);\nmodule.link(\"./appBody.html\");\nTemplate.AppBody.onCreated(function () {\n  console.log(\"in AppBody onCreated\");\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"client\":{\"curve_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/client/curve_util.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 2);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 3);\nvar Info;\nmodule.link(\"meteor/randyp:mats-common\", {\n  Info: function (v) {\n    Info = v;\n  }\n}, 4);\nvar matsMethods;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsMethods: function (v) {\n    matsMethods = v;\n  }\n}, 5);\n\n/*\n global dataset variable - container for graph dataset.\n This (plotResult) is very important. It isn't \"var\" because it needs to be a meteor global scope.\n The page is rendered whe the graph page comes up, but the data from the data processing callback\n in plotList.js or curveList.js may not have set the global variable\n PlotResult.\n */\n//var plotResultData = null; -- this was the global variable for the text output data, but now it is set elsewhere\nvar graphResult = null; // this is the global variable for the data on the graph\n\nvar plot;\n\nvar sizeof = function (_1) {\n  var _2 = [_1];\n  var _3 = 0;\n\n  for (var _4 = 0; _4 < _2.length; _4++) {\n    switch ((0, _typeof2.default)(_2[_4])) {\n      case \"boolean\":\n        _3 += 4;\n        break;\n\n      case \"number\":\n        _3 += 8;\n        break;\n\n      case \"string\":\n        _3 += 2 * _2[_4].length;\n        break;\n\n      case \"object\":\n        if (Object.prototype.toString.call(_2[_4]) != \"[object Array]\") {\n          for (var _5 in meteorBabelHelpers.sanitizeForInObject(_2[_4])) {\n            _3 += 2 * _5.length;\n          }\n        }\n\n        for (var _5 in meteorBabelHelpers.sanitizeForInObject(_2[_4])) {\n          var _6 = false;\n\n          for (var _7 = 0; _7 < _2.length; _7++) {\n            if (_2[_7] === _2[_4][_5]) {\n              _6 = true;\n              break;\n            }\n          }\n\n          if (!_6) {\n            _2.push(_2[_4][_5]);\n          }\n        }\n\n    }\n  }\n\n  return _3;\n}; // Retrieves the globally stored plotResultData for the text output and other things.\n// Re-sets the plotResultData if the requested page range has changed, or if it has not been previously set.\n\n\nvar getPlotResultData = function () {\n  var pageIndex = Session.get(\"pageIndex\");\n  var newPageIndex = Session.get(\"newPageIndex\");\n\n  if (plotResultData === undefined || plotResultData === null || Session.get('textRefreshNeeded') === true) {\n    setPlotResultData();\n  }\n\n  return plotResultData;\n}; // Sets the global plotResultData variable for the text output to the requested range from the Results data stored in mongo, via a MatsMethod.\n\n\nvar setPlotResultData = function () {\n  var pageIndex = Session.get(\"pageIndex\");\n  var newPageIndex = Session.get(\"newPageIndex\");\n\n  if (Session.get('textRefreshNeeded') === true) {\n    showSpinner();\n    matsMethods.getPlotResult.call({\n      resultKey: Session.get(\"plotResultKey\"),\n      pageIndex: pageIndex,\n      newPageIndex: newPageIndex\n    }, function (error, result) {\n      if (error !== undefined) {\n        setError(new Error(\"matsMethods.getPlotResult failed : error: \" + error));\n        Session.set('textRefreshNeeded', false);\n      }\n\n      if (result == undefined) {\n        plotResultData = undefined;\n        Session.set('textRefreshNeeded', false);\n        hideSpinner();\n        return;\n      }\n\n      plotResultData = result;\n      Session.set(\"pageIndex\", result.dsiRealPageIndex);\n      Session.set(\"pageTextDirection\", result.dsiTextDirection);\n      Session.set('textLoaded', new Date());\n      console.log(\"size of plotResultData is \", sizeof(plotResultData));\n      Session.set('textRefreshNeeded', false);\n      hideSpinner();\n    });\n  }\n}; // resets the global plotResultData variable for the text output to null\n\n\nvar resetPlotResultData = function () {\n  plotResultData = null;\n  Session.set('textLoaded', new Date());\n}; // gets the global graphResult variable, which is the data object for the (possibly downsampled) data on the graph\n\n\nvar getGraphResult = function () {\n  if (graphResult === undefined || graphResult === null) {\n    return [];\n  }\n\n  return graphResult;\n}; // sets the global graphResult variable to the (possibly downsampled) data object returned from MatsMethods, in order to make the graph\n\n\nvar setGraphResult = function (result) {\n  graphResult = result;\n  Session.set('graphDataLoaded', new Date());\n  console.log(\"size of graphResultData is\", sizeof(graphResult));\n}; // resets the global graphResult variable to null\n\n\nvar resetGraphResult = function () {\n  graphResult = null;\n  Session.set('graphDataLoaded', new Date());\n};\n/*\n Curve utilities - used to determine curve labels and colors etc.\n */\n\n\nvar getUsedLabels = function () {\n  if (Session.get('UsedLabels') === undefined) {\n    return [];\n  }\n\n  return Session.get('UsedLabels');\n};\n\nvar getNextCurveLabel = function () {\n  if (Session.get('NextCurveLabel') === undefined) {\n    setNextCurveLabel();\n  }\n\n  return Session.get('NextCurveLabel');\n}; // determine the next curve Label and set it in the session\n// private, not exported\n\n\nvar setNextCurveLabel = function () {\n  var usedLabels = Session.get('UsedLabels');\n  var settings = matsCollections.Settings.findOne({}, {\n    fields: {\n      LabelPrefix: 1\n    }\n  });\n\n  if (settings === undefined) {\n    return false;\n  }\n\n  var labelPrefix = settings.LabelPrefix; // find all the labels that start with our prefix (some could be custom)\n\n  var prefixLabels = _.filter(usedLabels, function (l) {\n    return l && l.lastIndexOf(labelPrefix, 0) === 0 && l.match(new RegExp(labelPrefix, 'g')).length == 1;\n  });\n\n  var lastUsedLabel = _.last(prefixLabels);\n\n  var lastLabelNumber = -1;\n\n  if (lastUsedLabel !== undefined) {\n    var minusPrefix = lastUsedLabel.replace(labelPrefix, '');\n    var tryNum = parseInt(minusPrefix, 10);\n\n    if (!isNaN(tryNum)) {\n      lastLabelNumber = tryNum;\n    }\n  }\n\n  var newLabelNumber = lastLabelNumber + 1;\n  var nextCurveLabel = labelPrefix + newLabelNumber; // the label might be one from a removed curve so the next ones might be used\n\n  while (_.indexOf(usedLabels, nextCurveLabel) != -1) {\n    newLabelNumber++;\n    nextCurveLabel = labelPrefix + newLabelNumber;\n  }\n\n  Session.set('NextCurveLabel', nextCurveLabel);\n}; // determine the next curve color and set it in the session\n// private - not exported\n\n\nvar setNextCurveColor = function () {\n  var usedColors = Session.get('UsedColors');\n  var colors = matsCollections.ColorScheme.findOne({}, {\n    fields: {\n      colors: 1\n    }\n  }).colors;\n  var lastUsedIndex = -1;\n\n  if (usedColors !== undefined) {\n    lastUsedIndex = _.indexOf(colors, _.last(usedColors));\n  }\n\n  var nextCurveColor;\n\n  if (lastUsedIndex !== undefined && lastUsedIndex != -1) {\n    if (lastUsedIndex < colors.length - 1) {\n      var newIndex = lastUsedIndex + 1;\n      nextCurveColor = colors[newIndex]; // the color might be one from a removed curve so the next ones might be used\n\n      while (_.indexOf(usedColors, nextCurveColor) != -1) {\n        newIndex++;\n        nextCurveColor = colors[newIndex];\n      }\n    } else {\n      // out of defaults\n      var rint = Math.round(0xffffff * Math.random());\n      nextCurveColor = 'rgb(' + (rint >> 16) + ',' + (rint >> 8 & 255) + ',' + (rint & 255) + ')';\n    }\n  } else {\n    nextCurveColor = colors[0];\n  }\n\n  Session.set('NextCurveColor', nextCurveColor);\n}; // get the next curve color from the session\n// private - not exported\n\n\nvar getNextCurveColor = function () {\n  if (Session.get('NextCurveColor') === undefined) {\n    setNextCurveColor();\n  }\n\n  return Session.get('NextCurveColor');\n}; // clear a used label and set the nextCurveLabel to the one just cleared\n\n\nvar clearUsedLabel = function (label) {\n  var usedLabels = Session.get('UsedLabels');\n\n  var newUsedLabels = _.reject(usedLabels, function (l) {\n    return l == label;\n  });\n\n  Session.set('UsedLabels', newUsedLabels);\n  Session.set('NextCurveLabel', label);\n}; // clear a used color and set the nextCurveColor to the one just cleared\n\n\nvar clearUsedColor = function (color) {\n  var usedColors = Session.get('UsedColors');\n\n  var newUsedColors = _.reject(usedColors, function (c) {\n    return c == color;\n  });\n\n  Session.set('UsedColors', newUsedColors);\n  Session.set('NextCurveColor', color);\n}; // clear all the used colors and labels and set the nextCurve values\n// to the first in the scheme and the first of the labelPrefix.\n// This is used by the removeAll\n\n\nvar clearAllUsed = function () {\n  Session.set('UsedColors', undefined);\n  var colors = matsCollections.ColorScheme.findOne({}, {\n    fields: {\n      colors: 1\n    }\n  }).colors;\n  Session.set('NextCurveColor', colors[0]);\n  Session.set('UsedLabels', undefined);\n  var labelPrefix = matsCollections.Settings.findOne({}, {\n    fields: {\n      LabelPrefix: 1\n    }\n  }).LabelPrefix;\n  Session.set('NextCurveLabel', labelPrefix + 0);\n  Session.set('Curves', []);\n}; // use curves in session to determine which defaults are already used\n// and to set the usedColors in the session\n// this is used on restore settings to set up the usedColors\n// private - not exported\n//setUsedDefaults = function() {\n\n\nvar setUsedColors = function () {\n  var curves = Session.get('Curves');\n  var usedColors = [];\n\n  for (var i = 0; i < curves.length; i++) {\n    var color = curves[i].color;\n    usedColors.push(color);\n  }\n\n  Session.set('UsedColors', usedColors);\n  setNextCurveColor();\n}; // private - not exported\n\n\nvar setUsedLabels = function () {\n  var curves = Session.get('Curves');\n  var usedLabels = [];\n\n  for (var i = 0; i < curves.length; i++) {\n    var label = curves[i].label;\n    usedLabels.push(label);\n  }\n\n  Session.set('UsedLabels', usedLabels);\n  setNextCurveLabel();\n};\n\nvar setUsedColorsAndLabels = function () {\n  setUsedColors();\n  setUsedLabels();\n};\n\nvar resetScatterApply = function () {\n  if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n    Session.set('axisCurveIcon', 'fa-asterisk');\n    Session.set('xaxisCurveText', 'XAXIS NOT YET APPLIED');\n    Session.set('yaxisCurveText', 'YAXIS NOT YET APPLIED');\n    Session.set('xaxisCurveColor', 'red');\n    Session.set('yaxisCurveColor', 'red');\n\n    if (document.getElementById('Fit-Type-radioGroup-none') !== null) {\n      document.getElementById('Fit-Type-radioGroup-none').checked = true;\n    }\n  }\n}; // add the difference curves\n// private - not exported\n\n\nvar addDiffs = function () {\n  var curves = Session.get('Curves');\n  var newCurves = Session.get('Curves'); // diffs is checked -- have to add diff curves\n\n  var curvesLength = curves.length;\n\n  if (curvesLength <= 1) {\n    setInfo(\"You cannot difference less than two curves!\");\n    return false;\n  }\n\n  switch (matsPlotUtils.getPlotFormat()) {\n    case matsTypes.PlotFormats.matching:\n      var baseIndex = 0; // This will probably not default to curve 0 in the future\n\n      for (var ci = 1; ci < curves.length; ci++) {\n        var newCurve = $.extend(true, {}, curves[ci]);\n        newCurve.label = curves[ci].label + \"-\" + curves[0].label;\n        newCurve.color = getNextCurveColor();\n        newCurve.diffFrom = [ci, baseIndex]; // do not create extra diff if it already exists\n\n        if (_.findWhere(curves, {\n          label: newCurve.label\n        }) === undefined) {\n          newCurves.push(newCurve);\n          Session.set('Curves', newCurves);\n          setUsedColorsAndLabels();\n        }\n      }\n\n      break;\n\n    case matsTypes.PlotFormats.pairwise:\n      var baseIndex = 0; // This will probably not default to curve 0 in the future\n\n      for (var ci = 1; ci < curves.length; ci++) {\n        if (ci % 2 != 0) {\n          // only diff on odd curves against previous curve\n          var base_index = ci - 1;\n          var newCurve = $.extend(true, {}, curves[ci]);\n          newCurve.label = curves[ci].label + \"-\" + curves[base_index].label;\n          newCurve.color = getNextCurveColor();\n          newCurve.diffFrom = [ci, baseIndex]; // do not create extra diff if it already exists\n\n          if (_.findWhere(curves, {\n            label: newCurve.label\n          }) === undefined) {\n            newCurves.push(newCurve);\n            Session.set('Curves', newCurves);\n            setUsedColorsAndLabels();\n          }\n        }\n      }\n\n      break;\n\n    case matsTypes.PlotFormats.absolute:\n      var baseIndex = 0; // This will probably not default to curve 0 in the future\n\n      for (var ci = 1; ci < curves.length; ci++) {\n        var newCurve = $.extend(true, {}, curves[ci]);\n        newCurve.label = curves[ci].label + \"-\" + curves[0].label;\n        newCurve.color = getNextCurveColor();\n        newCurve.diffFrom = [ci, baseIndex]; // do not create extra diff if it already exists\n\n        if (_.findWhere(curves, {\n          label: newCurve.label\n        }) === undefined) {\n          newCurves.push(newCurve);\n          Session.set('Curves', newCurves);\n          setUsedColorsAndLabels();\n        }\n      }\n\n      break;\n  }\n}; // remove difference curves\n// private - not exported\n\n\nvar removeDiffs = function () {\n  var curves = Session.get('Curves');\n\n  var newCurves = _.reject(curves, function (curve) {\n    return curve.diffFrom != null;\n  });\n\n  Session.set('Curves', newCurves);\n  setUsedColorsAndLabels();\n}; // resolve the difference curves\n// (used after adding or removing a curve while the show diffs box is checked)\n\n\nvar checkDiffs = function () {\n  var curves = Session.get('Curves');\n\n  if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n    // scatter plots have no concept of difference curves.\n    return;\n  }\n\n  var plotFormat = matsPlotUtils.getPlotFormat();\n\n  if (curves.length > 1) {\n    if (plotFormat !== matsTypes.PlotFormats.none) {\n      removeDiffs();\n      addDiffs();\n    } else {\n      removeDiffs();\n    }\n  }\n}; // method to display the appropriate selectors for a timeseries curve\n\n\nvar showTimeseriesFace = function () {\n  // move dates selector to plot parameters - one date range for all curves\n  if (document.getElementById('plot-type-' + matsTypes.PlotTypes.timeSeries).checked === true) {\n    var faceOptions = {\n      'curve-dates': 'none',\n      'dates': 'block',\n      'region': 'block',\n      'statistic': 'block',\n      'threshold': 'block',\n      'pres-level': 'block',\n      'forecast-length': 'block',\n      'dieoff-type': 'none',\n      'average': 'block',\n      'valid-time': 'block',\n      'utc-cycle-start': 'none',\n      'histogram-bin-controls': 'none',\n      'histogram-yaxis-controls': 'none',\n      'bin-number': 'none',\n      'bin-bounds': 'none',\n      'truth': 'block',\n      'sites': 'none',\n      'sitesMap': 'none',\n      'x-axis-parameter': 'none',\n      'y-axis-parameter': 'none'\n    };\n    var faceSelectors = Object.keys(faceOptions);\n    var elem;\n\n    for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n      elem = document.getElementById(faceSelectors[fidx] + '-item');\n\n      if (elem && elem.style) {\n        elem.style.display = faceOptions[faceSelectors[fidx]];\n      }\n    }\n\n    elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n\n    if (elem && elem.style) {\n      elem.style.display = \"none\";\n    }\n\n    Session.set('plotType', matsTypes.PlotTypes.timeSeries); // matsParamUtils.setAllParamsToDefault();\n\n    Session.set('lastUpdate', Date.now());\n  }\n}; // method to display the appropriate selectors for a profile curve\n\n\nvar showProfileFace = function () {\n  // move dates selector to curve parameters - one date range for each curve\n  if (document.getElementById('plot-type-' + matsTypes.PlotTypes.profile).checked === true) {\n    var faceOptions = {\n      'curve-dates': 'block',\n      'dates': 'none',\n      'region': 'block',\n      'statistic': 'block',\n      'threshold': 'block',\n      'pres-level': 'none',\n      'forecast-length': 'block',\n      'dieoff-type': 'none',\n      'average': 'none',\n      'valid-time': 'block',\n      'utc-cycle-start': 'none',\n      'histogram-bin-controls': 'none',\n      'histogram-yaxis-controls': 'none',\n      'bin-number': 'none',\n      'bin-bounds': 'none',\n      'truth': 'block',\n      'sites': 'none',\n      'sitesMap': 'none',\n      'x-axis-parameter': 'none',\n      'y-axis-parameter': 'none'\n    };\n    var faceSelectors = Object.keys(faceOptions);\n    var elem;\n\n    for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n      elem = document.getElementById(faceSelectors[fidx] + '-item');\n\n      if (elem && elem.style) {\n        elem.style.display = faceOptions[faceSelectors[fidx]];\n      }\n    }\n\n    elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n\n    if (elem && elem.style) {\n      elem.style.display = \"none\";\n    }\n\n    Session.set('plotType', matsTypes.PlotTypes.profile); // matsParamUtils.setAllParamsToDefault();\n\n    Session.set('lastUpdate', Date.now());\n  }\n}; // method to display the appropriate selectors for a dieoff curve\n\n\nvar showDieOffFace = function () {\n  // move dates selector to curve parameters - one date range for each curve\n  if (document.getElementById('plot-type-' + matsTypes.PlotTypes.dieoff).checked === true) {\n    var faceOptions = {\n      'curve-dates': 'block',\n      'dates': 'none',\n      'region': 'block',\n      'statistic': 'block',\n      'threshold': 'block',\n      'pres-level': 'block',\n      'forecast-length': 'none',\n      'dieoff-type': 'block',\n      'average': 'none',\n      'valid-time': 'block',\n      'utc-cycle-start': 'none',\n      'histogram-bin-controls': 'none',\n      'histogram-yaxis-controls': 'none',\n      'bin-number': 'none',\n      'bin-bounds': 'none',\n      'truth': 'block',\n      'sites': 'none',\n      'sitesMap': 'none',\n      'x-axis-parameter': 'none',\n      'y-axis-parameter': 'none'\n    };\n    var faceSelectors = Object.keys(faceOptions);\n    var elem;\n\n    for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n      elem = document.getElementById(faceSelectors[fidx] + '-item');\n\n      if (elem && elem.style) {\n        elem.style.display = faceOptions[faceSelectors[fidx]];\n      }\n    } // reset the value for dieoff-type, so that the checkHideOther routine will work\n\n\n    var param = matsParamUtils.getParameterForName('dieoff-type');\n    matsParamUtils.setValueTextForParamName(param.name, param.default);\n    elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n\n    if (elem && elem.style) {\n      elem.style.display = \"none\";\n    }\n\n    Session.set('plotType', matsTypes.PlotTypes.dieoff); // matsParamUtils.setAllParamsToDefault();\n\n    Session.set('lastUpdate', Date.now());\n  }\n}; // method to display the appropriate selectors for a threshold curve\n\n\nvar showThresholdFace = function () {\n  // move dates selector to curve parameters - one date range for each curve\n  if (document.getElementById('plot-type-' + matsTypes.PlotTypes.threshold).checked === true) {\n    var faceOptions = {\n      'curve-dates': 'block',\n      'dates': 'none',\n      'region': 'block',\n      'statistic': 'block',\n      'threshold': 'none',\n      'pres-level': 'block',\n      'forecast-length': 'block',\n      'dieoff-type': 'none',\n      'average': 'none',\n      'valid-time': 'block',\n      'utc-cycle-start': 'none',\n      'histogram-bin-controls': 'none',\n      'histogram-yaxis-controls': 'none',\n      'bin-number': 'none',\n      'bin-bounds': 'none',\n      'truth': 'block',\n      'sites': 'none',\n      'sitesMap': 'none',\n      'x-axis-parameter': 'none',\n      'y-axis-parameter': 'none'\n    };\n    var faceSelectors = Object.keys(faceOptions);\n    var elem;\n\n    for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n      elem = document.getElementById(faceSelectors[fidx] + '-item');\n\n      if (elem && elem.style) {\n        elem.style.display = faceOptions[faceSelectors[fidx]];\n      }\n    }\n\n    elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n\n    if (elem && elem.style) {\n      elem.style.display = \"none\";\n    }\n\n    Session.set('plotType', matsTypes.PlotTypes.threshold); // matsParamUtils.setAllParamsToDefault();\n\n    Session.set('lastUpdate', Date.now());\n  }\n}; // method to display the appropriate selectors for a valid time curve\n\n\nvar showValidTimeFace = function () {\n  // move dates selector to curve parameters - one date range for each curve\n  if (document.getElementById('plot-type-' + matsTypes.PlotTypes.validtime).checked === true) {\n    var faceOptions = {\n      'curve-dates': 'block',\n      'dates': 'none',\n      'region': 'block',\n      'statistic': 'block',\n      'threshold': 'block',\n      'pres-level': 'block',\n      'forecast-length': 'block',\n      'dieoff-type': 'none',\n      'average': 'none',\n      'valid-time': 'none',\n      'utc-cycle-start': 'none',\n      'histogram-bin-controls': 'none',\n      'histogram-yaxis-controls': 'none',\n      'bin-number': 'none',\n      'bin-bounds': 'none',\n      'truth': 'block',\n      'sites': 'none',\n      'sitesMap': 'none',\n      'x-axis-parameter': 'none',\n      'y-axis-parameter': 'none'\n    };\n    var faceSelectors = Object.keys(faceOptions);\n    var elem;\n\n    for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n      elem = document.getElementById(faceSelectors[fidx] + '-item');\n\n      if (elem && elem.style) {\n        elem.style.display = faceOptions[faceSelectors[fidx]];\n      }\n    }\n\n    elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n\n    if (elem && elem.style) {\n      elem.style.display = \"none\";\n    }\n\n    Session.set('plotType', matsTypes.PlotTypes.validtime); // matsParamUtils.setAllParamsToDefault();\n\n    Session.set('lastUpdate', Date.now());\n  }\n}; // method to display the appropriate selectors for a daily model cycle curve\n\n\nvar showDailyModelCycleFace = function () {\n  // move dates selector to plot parameters - one date range for all curves\n  if (document.getElementById('plot-type-' + matsTypes.PlotTypes.dailyModelCycle).checked === true) {\n    var faceOptions = {\n      'curve-dates': 'none',\n      'dates': 'block',\n      'region': 'block',\n      'statistic': 'block',\n      'threshold': 'block',\n      'pres-level': 'block',\n      'forecast-length': 'none',\n      'dieoff-type': 'none',\n      'average': 'none',\n      'valid-time': 'none',\n      'utc-cycle-start': 'block',\n      'histogram-bin-controls': 'none',\n      'histogram-yaxis-controls': 'none',\n      'bin-number': 'none',\n      'bin-bounds': 'none',\n      'truth': 'block',\n      'sites': 'none',\n      'sitesMap': 'none',\n      'x-axis-parameter': 'none',\n      'y-axis-parameter': 'none'\n    };\n    var faceSelectors = Object.keys(faceOptions);\n    var elem;\n\n    for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n      elem = document.getElementById(faceSelectors[fidx] + '-item');\n\n      if (elem && elem.style) {\n        elem.style.display = faceOptions[faceSelectors[fidx]];\n      }\n    }\n\n    elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n\n    if (elem && elem.style) {\n      elem.style.display = \"none\";\n    }\n\n    Session.set('plotType', matsTypes.PlotTypes.dailyModelCycle); // matsParamUtils.setAllParamsToDefault();\n\n    Session.set('lastUpdate', Date.now());\n  }\n}; // method to display the appropriate selectors for a reliability curve\n\n\nvar showReliabilityFace = function () {\n  // move dates selector to curve parameters - one date range for each curve\n  if (document.getElementById('plot-type-' + matsTypes.PlotTypes.reliability).checked === true) {\n    var faceOptions = {\n      'curve-dates': 'none',\n      'dates': 'block',\n      'region': 'block',\n      'statistic': 'block',\n      'threshold': 'block',\n      'pres-level': 'block',\n      'forecast-length': 'block',\n      'dieoff-type': 'none',\n      'average': 'block',\n      'valid-time': 'block',\n      'utc-cycle-start': 'none',\n      'histogram-bin-controls': 'none',\n      'histogram-yaxis-controls': 'none',\n      'bin-number': 'none',\n      'bin-bounds': 'none',\n      'truth': 'none',\n      'sites': 'none',\n      'sitesMap': 'none',\n      'x-axis-parameter': 'none',\n      'y-axis-parameter': 'none'\n    };\n    var faceSelectors = Object.keys(faceOptions);\n    var elem;\n\n    for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n      elem = document.getElementById(faceSelectors[fidx] + '-item');\n\n      if (elem && elem.style) {\n        elem.style.display = faceOptions[faceSelectors[fidx]];\n      }\n    }\n\n    elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n\n    if (elem && elem.style) {\n      elem.style.display = \"none\";\n    }\n\n    Session.set('plotType', matsTypes.PlotTypes.reliability); // matsParamUtils.setAllParamsToDefault();\n\n    Session.set('lastUpdate', Date.now());\n  }\n}; // method to display the appropriate selectors for a map\n\n\nvar showMapFace = function () {\n  // move dates selector to plot parameters - one date range for all curves\n  if (document.getElementById('plot-type-' + matsTypes.PlotTypes.map).checked === true) {\n    var faceOptions;\n    faceOptions = {\n      'curve-dates': 'none',\n      'dates': 'block',\n      'region': 'none',\n      'statistic': 'none',\n      'threshold': 'none',\n      'pres-level': 'block',\n      'forecast-length': 'block',\n      'dieoff-type': 'none',\n      'average': 'none',\n      'valid-time': 'block',\n      'utc-cycle-start': 'none',\n      'histogram-bin-controls': 'none',\n      'histogram-yaxis-controls': 'none',\n      'bin-number': 'none',\n      'bin-bounds': 'none',\n      'truth': 'none',\n      'sites': 'block',\n      'sitesMap': 'block',\n      'x-axis-parameter': 'none',\n      'y-axis-parameter': 'none'\n    };\n    var faceSelectors = Object.keys(faceOptions);\n    var elem;\n\n    for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n      elem = document.getElementById(faceSelectors[fidx] + '-item');\n\n      if (elem && elem.style) {\n        elem.style.display = faceOptions[faceSelectors[fidx]];\n      }\n    }\n\n    elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n\n    if (elem && elem.style) {\n      elem.style.display = \"none\";\n    }\n\n    Session.set('plotType', matsTypes.PlotTypes.map); // matsParamUtils.setAllParamsToDefault();\n\n    Session.set('lastUpdate', Date.now());\n  }\n}; // method to display the appropriate selectors for a histogram\n\n\nvar showHistogramFace = function () {\n  // move dates selector to curve parameters - one date range for each curve\n  if (document.getElementById('plot-type-' + matsTypes.PlotTypes.histogram).checked === true) {\n    var faceOptions = {\n      'curve-dates': 'block',\n      'dates': 'none',\n      'region': 'block',\n      'statistic': 'block',\n      'threshold': 'block',\n      'pres-level': 'block',\n      'forecast-length': 'block',\n      'dieoff-type': 'none',\n      'average': 'none',\n      'valid-time': 'block',\n      'utc-cycle-start': 'none',\n      'histogram-bin-controls': 'block',\n      'histogram-yaxis-controls': 'block',\n      'bin-number': 'none',\n      'bin-bounds': 'none',\n      'truth': 'block',\n      'sites': 'none',\n      'sitesMap': 'none',\n      'x-axis-parameter': 'none',\n      'y-axis-parameter': 'none'\n    };\n    var faceSelectors = Object.keys(faceOptions);\n    var elem;\n\n    for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n      elem = document.getElementById(faceSelectors[fidx] + '-item');\n\n      if (elem && elem.style) {\n        elem.style.display = faceOptions[faceSelectors[fidx]];\n      }\n    }\n\n    elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n\n    if (elem && elem.style) {\n      elem.style.display = \"none\";\n    }\n\n    Session.set('plotType', matsTypes.PlotTypes.histogram); // matsParamUtils.setAllParamsToDefault();\n\n    Session.set('lastUpdate', Date.now());\n  }\n}; // method to display the appropriate selectors for a contour plot\n\n\nvar showContourFace = function () {\n  // move dates selector to plot parameters - one date range for all curves\n  var isContour = document.getElementById('plot-type-' + matsTypes.PlotTypes.contour) !== null && document.getElementById('plot-type-' + matsTypes.PlotTypes.contour).checked === true;\n  var isContourDiff = document.getElementById('plot-type-' + matsTypes.PlotTypes.contourDiff) !== null && document.getElementById('plot-type-' + matsTypes.PlotTypes.contourDiff).checked === true;\n\n  if (isContour || isContourDiff) {\n    var faceOptions = {\n      'curve-dates': 'none',\n      'dates': 'block',\n      'region': 'block',\n      'statistic': 'block',\n      'threshold': 'block',\n      'pres-level': 'block',\n      'forecast-length': 'block',\n      'dieoff-type': 'none',\n      'average': 'none',\n      'valid-time': 'block',\n      'utc-cycle-start': 'none',\n      'histogram-bin-controls': 'none',\n      'histogram-yaxis-controls': 'none',\n      'bin-number': 'none',\n      'bin-bounds': 'none',\n      'truth': 'block',\n      'sites': 'none',\n      'sitesMap': 'none',\n      'x-axis-parameter': 'block',\n      'y-axis-parameter': 'block'\n    };\n    var faceSelectors = Object.keys(faceOptions);\n    var elem;\n\n    for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n      elem = document.getElementById(faceSelectors[fidx] + '-item');\n\n      if (elem && elem.style) {\n        elem.style.display = faceOptions[faceSelectors[fidx]];\n      }\n    } // //need to be consistent with the x and y axis 'hideOtherFor' settings\n    // const xAxisVal = matsParamUtils.getValueForParamName('x-axis-parameter');\n    // const yAxisVal = matsParamUtils.getValueForParamName('y-axis-parameter');\n    // if (xAxisVal === 'Fcst lead time' || yAxisVal === 'Fcst lead time') {\n    //     elem = document.getElementById('forecast-length-item');\n    //     if (elem && elem.style) {\n    //         elem.style.display = 'none';\n    //     }\n    // }\n    // if (xAxisVal === 'Valid UTC hour' || yAxisVal === 'Valid UTC hour') {\n    //     elem = document.getElementById('valid-time-item');\n    //     if (elem && elem.style) {\n    //         elem.style.display = 'none';\n    //     }\n    // }\n    // if (xAxisVal === 'Pressure level' || yAxisVal === 'Pressure level') {\n    //     elem = document.getElementById('pres-level-item');\n    //     if (elem && elem.style) {\n    //         elem.style.display = 'none';\n    //     }\n    // }\n\n\n    elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n\n    if (elem && elem.style) {\n      elem.style.display = \"none\";\n    }\n\n    if (isContour) {\n      Session.set('plotType', matsTypes.PlotTypes.contour);\n    } else {\n      Session.set('plotType', matsTypes.PlotTypes.contourDiff);\n    } // matsParamUtils.setAllParamsToDefault();\n\n\n    Session.set('lastUpdate', Date.now());\n  }\n}; // method to display the appropriate selectors for a scatter plot\n\n\nvar showScatterFace = function () {\n  if (document.getElementById('plot-type-' + matsTypes.PlotTypes.scatter2d).checked === true) {\n    var faceOptions = {\n      'curve-dates': 'none',\n      'dates': 'block',\n      'region': 'block',\n      'statistic': 'block',\n      'threshold': 'block',\n      'pres-level': 'block',\n      'forecast-length': 'block',\n      'dieoff-type': 'none',\n      'average': 'none',\n      'valid-time': 'block',\n      'utc-cycle-start': 'none',\n      'histogram-bin-controls': 'none',\n      'histogram-yaxis-controls': 'none',\n      'bin-number': 'none',\n      'bin-bounds': 'none',\n      'truth': 'block',\n      'sites': 'none',\n      'sitesMap': 'none',\n      'x-axis-parameter': 'none',\n      'y-axis-parameter': 'none'\n    };\n    var faceSelectors = Object.keys(faceOptions);\n    var elem;\n\n    for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n      elem = document.getElementById(faceSelectors[fidx] + '-item');\n\n      if (elem && elem.style) {\n        elem.style.display = faceOptions[faceSelectors[fidx]];\n      }\n    }\n\n    elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n\n    if (elem && elem.style) {\n      elem.style.display = \"block\";\n    }\n\n    Session.set('plotType', matsTypes.PlotTypes.scatter2d);\n    Session.set('lastUpdate', Date.now()); // force curveParams to re-render\n    // matsParamUtils.setAllParamsToDefault();\n\n    Session.set('lastUpdate', Date.now());\n  }\n}; // this is no longer used, but it was once employed by the text output routines to calculate the stats for the entire curve\n\n\nvar get_err = function (sVals, sSecs) {\n  /* THIS IS DIFFERENT FROM THE ONE IN DATA_UTILS,\n     This one does not throw away outliers and it captures minVal and maxVal\n     refer to perl error_library.pl sub  get_stats\n      to see the perl implementation of these statics calculations.\n      These should match exactly those, except that they are processed in reverse order.\n   */\n  var subVals = [];\n  var subSecs = [];\n  var sVals = sVals;\n  var sSecs = sSecs;\n  var n = sVals.length;\n  var n_good = 0;\n  var sum_d = 0;\n  var sum2_d = 0;\n  var error = \"\";\n  var i;\n\n  for (i = 0; i < n; i++) {\n    if (sVals[i] !== null) {\n      n_good = n_good + 1;\n      sum_d = sum_d + sVals[i];\n      sum2_d = sum2_d + sVals[i] * sVals[i];\n      subVals.push(sVals[i]);\n      subSecs.push(sSecs[i]);\n    }\n  }\n\n  var d_mean = sum_d / n_good;\n  var sd2 = sum2_d / n_good - d_mean * d_mean;\n  var sd = sd2 > 0 ? Math.sqrt(sd2) : sd2;\n  var sd_limit = 3 * sd; //console.log(\"see error_library.pl l208 These are processed in reverse order to the perl code -  \\nmean is \" + d_mean + \" sd_limit is +/- \" + sd_limit + \" n_good is \" + n_good + \" sum_d is\" + sum_d + \" sum2_d is \" + sum2_d);\n  // find minimum delta_time, if any value missing, set null\n\n  var last_secs = Number.MIN_VALUE;\n  var minDelta = Number.MAX_VALUE;\n  var minSecs = Number.MAX_VALUE;\n  var max_secs = Number.MIN_VALUE;\n  var minVal = Number.MAX_VALUE;\n  var maxVal = Number.MIN_VALUE;\n\n  for (i = 0; i < subSecs.length; i++) {\n    var secs = subSecs[i];\n    var delta = Math.abs(secs - last_secs);\n\n    if (delta < minDelta) {\n      minDelta = delta;\n    }\n\n    if (secs < minSecs) {\n      minSecs = secs;\n    }\n\n    if (secs > max_secs) {\n      max_secs = secs;\n    }\n\n    last_secs = secs;\n  }\n\n  var data_wg = [];\n  var n_gaps = 0;\n  n_good = 0;\n  var sum = 0;\n  var sum2 = 0;\n  var loopTime = minSecs;\n\n  if (minDelta < 0) {\n    error = \"Invalid time interval - minDelta: \" + minDelta;\n  } // remove data more than $sd_limit from mean\n\n\n  for (i = 0; i < subVals.length; i++) {\n    minVal = minVal < subVals[i] ? minVal : subVals[i];\n    maxVal = maxVal > subVals[i] ? maxVal : subVals[i];\n    n_good++;\n  } //console.log(\"new mean after throwing away outliers is \" + sd + \" n_good is \" + n_good + \" sum is \" + sum  + \" sum2 is \" + sum2 + \" d_mean is \" + d_mean);\n  // look for gaps.... per Bill, we only need one gap per series of gaps...\n\n\n  var lastSecond = Number.MIN_VALUE;\n\n  for (i = 0; i < subSecs.length; i++) {\n    var sec = subSecs[i];\n\n    if (lastSecond >= 0) {\n      if (sec - lastSecond > minDelta) {\n        // insert a gap\n        data_wg.push(null);\n        n_gaps++;\n      }\n    }\n\n    lastSecond = sec;\n    data_wg.push(subVals[i]);\n  } //console.log (\"n_gaps: \" + n_gaps +  \" time gaps in subseries\");\n  //from http://www.itl.nist.gov/div898/handbook/eda/section3/eda35c.htm\n\n\n  var r = [];\n\n  for (var lag = 0; lag <= 1; lag++) {\n    r[lag] = 0;\n    var n_in_lag = 0;\n\n    for (var t = 0; t < n + n_gaps - lag; t++) {\n      if (data_wg[t] != null && data_wg[t + lag] != null) {\n        r[lag] += +(data_wg[t] - d_mean) * (data_wg[t + lag] - d_mean);\n        n_in_lag++;\n      }\n    }\n\n    if (n_in_lag > 0 && sd > 0) {\n      r[lag] /= n_in_lag * sd * sd;\n    } else {\n      r[lag] = null;\n    } //console.log('r for lag ' + lag + \" is \" + r[lag] + \" n_in_lag is \" + n_in_lag + \" n_good is \" + n_good);\n\n  } // Betsy Weatherhead's correction, based on lag 1\n\n\n  if (r[1] >= 1) {\n    r[1] = .99999;\n  }\n\n  var betsy = Math.sqrt((n_good - 1) * (1 - r[1]));\n  var stde_betsy;\n\n  if (betsy != 0) {\n    stde_betsy = sd / betsy;\n  } else {\n    stde_betsy = null;\n  }\n\n  var stats = {\n    d_mean: d_mean,\n    stde_betsy: stde_betsy,\n    sd: sd,\n    n_good: n_good,\n    lag1: r[1],\n    min: minSecs,\n    max: max_secs,\n    minVal: minVal,\n    maxVal: maxVal,\n    sum: sum_d\n  }; //console.log(\"stats are \" + JSON.stringify(stats));\n  // stde_betsy is standard error with auto correlation\n  //console.log(\"---------\\n\\n\");\n\n  return stats;\n};\n\nvar showSpinner = function () {\n  if (document.getElementById(\"spinner\")) {\n    document.getElementById(\"spinner\").style.display = \"block\";\n  }\n};\n\nvar hideSpinner = function () {\n  if (document.getElementById(\"spinner\")) {\n    document.getElementById(\"spinner\").style.display = \"none\";\n  }\n};\n\nmodule.exportDefault(matsCurveUtils = {\n  resetScatterApply: resetScatterApply,\n  getUsedLabels: getUsedLabels,\n  getNextCurveLabel: getNextCurveLabel,\n  getNextCurveColor: getNextCurveColor,\n  clearAllUsed: clearAllUsed,\n  clearUsedLabel: clearUsedLabel,\n  clearUsedColor: clearUsedColor,\n  setUsedLabels: setUsedLabels,\n  setUsedColorsAndLabels: setUsedColorsAndLabels,\n  addDiffs: addDiffs,\n  removeDiffs: removeDiffs,\n  checkDiffs: checkDiffs,\n  showScatterFace: showScatterFace,\n  showTimeseriesFace: showTimeseriesFace,\n  showProfileFace: showProfileFace,\n  showDieOffFace: showDieOffFace,\n  showThresholdFace: showThresholdFace,\n  showValidTimeFace: showValidTimeFace,\n  showDailyModelCycleFace: showDailyModelCycleFace,\n  showReliabilityFace: showReliabilityFace,\n  showMapFace: showMapFace,\n  showHistogramFace: showHistogramFace,\n  showContourFace: showContourFace,\n  get_err: get_err,\n  getPlotResultData: getPlotResultData,\n  //setPlotResultData: setPlotResultData,\n  resetPlotResultData: resetPlotResultData,\n  getGraphResult: getGraphResult,\n  setGraphResult: setGraphResult,\n  resetGraphResult: resetGraphResult,\n  showSpinner: showSpinner,\n  hideSpinner: hideSpinner\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"graph_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/client/graph_util.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\n\n// set the label for the hide show buttons (NO DATA) for the initial time here\nvar setNoDataLabels = function (dataset) {\n  for (var c = 0; c < dataset.length; c++) {\n    if (dataset[c].x.length === 0) {\n      Session.set(dataset[c].curveId + \"hideButtonText\", 'NO DATA');\n\n      if (document.getElementById(dataset[c].curveId + '-curve-show-hide')) {\n        document.getElementById(dataset[c].curveId + '-curve-show-hide').value = 'NO DATA';\n        document.getElementById(dataset[c].curveId + '-curve-show-hide').disabled = true;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"background-color\"] = \"red\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"border-color\"] = \"black\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"color\"] = \"white\";\n      }\n\n      Session.set(dataset[c].curveId + \"pointsButtonText\", 'NO DATA');\n\n      if (document.getElementById(dataset[c].curveId + '-curve-show-hide-points')) {\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-points').value = 'NO DATA';\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-points').disabled = true;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"background-color\"] = \"red\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"border-color\"] = \"black\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"color\"] = \"white\";\n      }\n\n      Session.set(dataset[c].curveId + \"errorBarButtonText\", 'NO DATA');\n\n      if (document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars')) {\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').value = 'NO DATA';\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').disabled = true;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"background-color\"] = \"red\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"border-color\"] = \"black\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"color\"] = \"white\";\n      }\n\n      Session.set(dataset[c].curveId + \"barChartButtonText\", 'NO DATA');\n\n      if (document.getElementById(dataset[c].curveId + '-curve-show-hide-bars')) {\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').value = 'NO DATA';\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').disabled = true;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"background-color\"] = \"red\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"border-color\"] = \"black\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"color\"] = \"white\";\n      }\n\n      Session.set(dataset[c].curveId + \"annotateButtonText\", 'NO DATA');\n\n      if (document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate')) {\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').value = 'NO DATA';\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').disabled = true;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"background-color\"] = \"red\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"border-color\"] = \"black\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"color\"] = \"white\";\n      }\n    } else {\n      Session.set(dataset[c].curveId + \"hideButtonText\", 'hide curve');\n\n      if (document.getElementById(dataset[c].curveId + '-curve-show-hide')) {\n        document.getElementById(dataset[c].curveId + '-curve-show-hide').value = 'hide curve';\n        document.getElementById(dataset[c].curveId + '-curve-show-hide').disabled = false;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"background-color\"] = \"white\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"border-color\"] = dataset[c].marker.color;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"color\"] = dataset[c].marker.color;\n      }\n\n      Session.set(dataset[c].curveId + \"pointsButtonText\", 'hide points');\n\n      if (document.getElementById(dataset[c].curveId + '-curve-show-hide-points')) {\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-points').value = 'hide points';\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-points').disabled = false;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"background-color\"] = \"white\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"border-color\"] = dataset[c].marker.color;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"color\"] = dataset[c].marker.color;\n      }\n\n      Session.set(dataset[c].curveId + \"errorBarButtonText\", 'hide error bars');\n\n      if (document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars')) {\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').value = 'hide error bars';\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').disabled = false;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"background-color\"] = \"white\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"border-color\"] = dataset[c].marker.color;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"color\"] = dataset[c].marker.color;\n      }\n\n      Session.set(dataset[c].curveId + \"barChartButtonText\", 'hide bars');\n\n      if (document.getElementById(dataset[c].curveId + '-curve-show-hide-bars')) {\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').value = 'hide bars';\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').disabled = false;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"background-color\"] = \"white\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"border-color\"] = dataset[c].marker.color;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"color\"] = dataset[c].marker.color;\n      }\n\n      Session.set(dataset[c].curveId + \"annotateButtonText\", 'hide annotation');\n\n      if (document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate')) {\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').value = 'hide annotation';\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').disabled = false;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"background-color\"] = \"white\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"border-color\"] = dataset[c].marker.color;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"color\"] = dataset[c].marker.color;\n      }\n    }\n  }\n};\n\nvar setNoDataLabelsMap = function (dataset) {\n  for (var c = 0; c < dataset.length; c++) {\n    if (dataset[c].lat.length === 0) {\n      Session.set(dataset[c].curveId + \"heatMapButtonText\", 'NO DATA');\n\n      if (document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap')) {\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').value = 'NO DATA';\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').disabled = true;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"background-color\"] = \"red\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"border-color\"] = \"black\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"color\"] = \"white\";\n      }\n    } else {\n      Session.set(dataset[c].curveId + \"heatMapButtonText\", 'show heat map');\n\n      if (document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap')) {\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').value = 'show heat map';\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').disabled = false;\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"background-color\"] = \"white\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"border-color\"] = \"red\";\n        document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"color\"] = \"red\";\n      }\n    }\n  }\n}; // plot width helper used in multiple places\n\n\nvar width = function (plotType) {\n  switch (plotType) {\n    case matsTypes.PlotTypes.profile:\n    case matsTypes.PlotTypes.scatter2d:\n      // set the width square\n      return squareWidthHeight();\n      break;\n\n    case matsTypes.PlotTypes.timeSeries:\n    case matsTypes.PlotTypes.dailyModelCycle:\n    case matsTypes.PlotTypes.dieoff:\n    case matsTypes.PlotTypes.threshold:\n    case matsTypes.PlotTypes.validtime:\n    case matsTypes.PlotTypes.reliability:\n    case matsTypes.PlotTypes.map:\n    case matsTypes.PlotTypes.histogram:\n    case matsTypes.PlotTypes.contour:\n    case matsTypes.PlotTypes.contourDiff:\n    default:\n      // set the width wide\n      return rectangleWidth();\n      break;\n  }\n}; // plot height helper used in multiple places\n\n\nvar height = function (plotType) {\n  switch (plotType) {\n    case matsTypes.PlotTypes.profile:\n    case matsTypes.PlotTypes.scatter2d:\n      // set the height square\n      return squareWidthHeight();\n      break;\n\n    case matsTypes.PlotTypes.timeSeries:\n    case matsTypes.PlotTypes.dailyModelCycle:\n    case matsTypes.PlotTypes.dieoff:\n    case matsTypes.PlotTypes.threshold:\n    case matsTypes.PlotTypes.validtime:\n    case matsTypes.PlotTypes.reliability:\n    case matsTypes.PlotTypes.map:\n    case matsTypes.PlotTypes.histogram:\n    case matsTypes.PlotTypes.contour:\n    case matsTypes.PlotTypes.contourDiff:\n    default:\n      // set the height wide\n      return rectangleHeight();\n      break;\n  }\n};\n\nvar standAloneWidth = function () {\n  var vpw = Math.min(document.documentElement.clientWidth, window.innerWidth || 0);\n  return (.9 * vpw).toString() + \"px\";\n};\n\nvar standAloneHeight = function () {\n  var vph = Math.min(document.documentElement.clientHeight, window.innerHeight || 0);\n  return (.825 * vph).toString() + \"px\";\n};\n\nvar squareWidthHeight = function () {\n  var vpw = Math.min(document.documentElement.clientWidth, window.innerWidth || 0);\n  var vph = Math.min(document.documentElement.clientHeight, window.innerHeight || 0);\n  var min = Math.min(vpw, vph);\n\n  if (min < 400) {\n    return (.9 * min).toString() + \"px\";\n  } else {\n    return (.7 * min).toString() + \"px\";\n  }\n};\n\nvar rectangleWidth = function () {\n  var vpw = Math.min(document.documentElement.clientWidth, window.innerWidth || 0);\n\n  if (vpw < 400) {\n    return (.9 * vpw).toString() + \"px\";\n  } else {\n    return (.9 * vpw).toString() + \"px\";\n  }\n};\n\nvar rectangleHeight = function () {\n  var vph = Math.min(document.documentElement.clientHeight, window.innerHeight || 0);\n\n  if (vph < 400) {\n    return (.8 * vph).toString() + \"px\";\n  } else {\n    return (.7 * vph).toString() + \"px\";\n  }\n};\n\nvar resizeGraph = function (plotType) {\n  document.getElementById('placeholder').style.width = width(plotType);\n  document.getElementById('placeholder').style.height = height(plotType);\n}; // helper to bring up the text page\n\n\nvar setTextView = function (plotType) {\n  //shows text page and proper text output, hides everything else\n  document.getElementById('placeholder').style.width = width(plotType);\n  document.getElementById('placeholder').style.height = height(plotType);\n  document.getElementById(\"text-page-button-group\").style.display = \"block\";\n  document.getElementById(\"plot-page-button-group\").style.display = \"none\";\n  document.getElementById(\"curves\").style.display = \"none\";\n  document.getElementById(\"graphView\").style.display = \"none\";\n  document.getElementById(\"textView\").style.display = \"block\";\n  document.getElementById('plot-control-button-group').style.display = \"none\";\n}; // helper to bring up the graph page\n\n\nvar setGraphView = function (plotType) {\n  document.getElementById('placeholder').style.width = width(plotType);\n  document.getElementById('placeholder').style.height = height(plotType); //shows graph page, hides everything else\n\n  document.getElementById('graph-container').style.display = 'block';\n  document.getElementById('plotType').style.display = 'none';\n  document.getElementById('paramList').style.display = 'none';\n  document.getElementById('plotList').style.display = 'none';\n  document.getElementById('curveList').style.display = 'none';\n\n  if (document.getElementById(\"plotTypeContainer\")) {\n    document.getElementById(\"plotTypeContainer\").style.display = \"none\";\n  }\n\n  if (document.getElementById(\"scatter2d\")) {\n    document.getElementById(\"scatter2d\").style.display = \"none\";\n  }\n\n  if (document.getElementById(\"scatterView\")) {\n    document.getElementById(\"scatterView\").style.display = \"none\";\n  }\n\n  document.getElementById(\"text-page-button-group\").style.display = \"none\";\n  document.getElementById(\"plot-page-button-group\").style.display = \"block\";\n  document.getElementById(\"curves\").style.display = \"block\";\n  document.getElementById(\"graphView\").style.display = \"block\";\n  document.getElementById(\"textView\").style.display = \"none\";\n\n  if (Session.get('plotType') !== matsTypes.PlotTypes.map) {\n    document.getElementById('plot-control-button-group').style.display = \"block\";\n  } else {\n    document.getElementById('plot-control-button-group').style.display = \"none\";\n  }\n}; // helper to bring up the graph page in a pop-up window\n\n\nvar standAloneSetGraphView = function () {\n  //shows graph page, hides everything else\n  document.getElementById('placeholder').style.width = standAloneWidth();\n  document.getElementById('placeholder').style.height = standAloneHeight();\n  document.getElementById('graph-container').style.display = 'block';\n  document.getElementById(\"curves\").style.display = \"block\";\n  document.getElementById(\"graphView\").style.display = \"block\";\n}; // helper to bring up the main selector page\n\n\nvar setDefaultView = function () {\n  // show elements of the main page\n  if (document.getElementById('paramList')) {\n    document.getElementById('paramList').style.display = 'block';\n  }\n\n  if (document.getElementById('plotList')) {\n    document.getElementById('plotList').style.display = 'block';\n  }\n\n  if (document.getElementById('curveList')) {\n    document.getElementById('curveList').style.display = 'block';\n  }\n\n  if (document.getElementById(\"plotTypeContainer\")) {\n    document.getElementById(\"plotTypeContainer\").style.display = \"block\";\n  }\n\n  if (document.getElementById(\"scatterView\")) {\n    document.getElementById(\"scatterView\").style.display = \"block\";\n  }\n\n  if (document.getElementById(\"scatter2d\")) {\n    document.getElementById(\"scatter2d\").style.display = \"block\";\n  } // hide graph page\n\n\n  if (document.getElementById('graph-container')) {\n    document.getElementById('graph-container').style.display = 'none';\n  }\n\n  document.getElementById(\"plot-page-button-group\").style.display = \"block\";\n  document.getElementById('plot-control-button-group').style.display = \"block\"; // hide text page\n\n  document.getElementById(\"textView\").style.display = \"none\";\n};\n\nvar downloadFile = function (fileURL, fileName) {\n  // for non-IE\n  if (!window.ActiveXObject) {\n    var save = document.createElement('a');\n    save.href = fileURL;\n    save.target = '_blank';\n    var filename = fileURL.substring(fileURL.lastIndexOf('/') + 1);\n    save.download = fileName || filename;\n\n    if (navigator.userAgent.toLowerCase().match(/(ipad|iphone|safari)/) && navigator.userAgent.search(\"Chrome\") < 0) {\n      document.location = save.href; // window event not working here\n    } else {\n      var evt = new MouseEvent('click', {\n        'view': window,\n        'bubbles': true,\n        'cancelable': false\n      });\n      save.dispatchEvent(evt);\n      (window.URL || window.webkitURL).revokeObjectURL(save.href);\n    }\n  } // for IE < 11\n  else if (!!window.ActiveXObject && document.execCommand) {\n      var _window = window.open(fileURL, '_blank');\n\n      _window.document.close();\n\n      _window.document.execCommand('SaveAs', true, fileName || fileURL);\n\n      _window.close();\n    }\n};\n\nmodule.exportDefault(matsGraphUtils = {\n  setNoDataLabels: setNoDataLabels,\n  setNoDataLabelsMap: setNoDataLabelsMap,\n  width: width,\n  height: height,\n  standAloneWidth: standAloneWidth,\n  standAloneHeight: standAloneHeight,\n  resizeGraph: resizeGraph,\n  setTextView: setTextView,\n  setGraphView: setGraphView,\n  standAloneSetGraphView: standAloneSetGraphView,\n  setDefaultView: setDefaultView,\n  downloadFile: downloadFile\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"select_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/client/select_util.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsCollections, matsMethods, matsParamUtils, matsPlotUtils, matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  },\n  matsMethods: function (v) {\n    matsMethods = v;\n  },\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  },\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  },\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\n\n// method to refresh the peers of the current selector\nvar refreshPeer = function (event, param) {\n  try {\n    var peerName = param.peerName;\n\n    if (peerName !== undefined) {\n      // refresh the peer\n      var targetParam = matsParamUtils.getParameterForName(peerName);\n      var targetId = targetParam.name + '-' + targetParam.type;\n      var targetElem = document.getElementById(targetId);\n      var refreshMapEvent = new CustomEvent(\"refresh\", {\n        detail: {\n          refElement: null\n        }\n      });\n      targetElem.dispatchEvent(refreshMapEvent);\n    }\n\n    refreshDependents(event, param);\n  } catch (e) {\n    e.message = \"INFO: Error in select.js refreshPeer: \" + e.message;\n    setInfo(e.message);\n  }\n}; // method to refresh the dependents of the current selector\n\n\nvar refreshDependents = function (event, param) {\n  try {\n    var dependentNames = param.dependentNames;\n\n    if (dependentNames && Object.prototype.toString.call(dependentNames) === '[object Array]' && dependentNames.length > 0) {\n      // refresh the dependents\n      var selectAllbool = false;\n\n      for (var i = 0; i < dependentNames.length; i++) {\n        var name = dependentNames[i];\n        var targetParam = matsParamUtils.getParameterForName(name);\n        var targetId;\n\n        if (targetParam.type === matsTypes.InputTypes.dateRange) {\n          targetId = \"element-\" + targetParam.name;\n        } else {\n          targetId = targetParam.name + '-' + targetParam.type;\n        }\n\n        var targetElem = document.getElementById(targetId);\n\n        if (document.getElementById('selectAll')) {\n          selectAllbool = document.getElementById('selectAll').checked;\n        }\n\n        try {\n          targetElem.dispatchEvent(new CustomEvent(\"refresh\"));\n        } catch (re) {\n          re.message = \"INFO: refreshDependents of: \" + param.name + \" dependent: \" + targetParam.name + \" - error: \" + re.message;\n          setInfo(re.message);\n        }\n\n        var elements = targetElem.options;\n        var select = true;\n\n        if (targetElem.multiple && elements !== undefined && elements.length > 0) {\n          if (selectAllbool) {\n            for (var i1 = 0; i1 < elements.length; i1++) {\n              elements[i1].selected = select;\n            }\n\n            matsParamUtils.setValueTextForParamName(name, \"\");\n          } else {\n            var previously_selected = Session.get('selected');\n\n            for (var i2 = 0; i2 < elements.length; i2++) {\n              if (_.indexOf(previously_selected, elements[i2].text) != -1) {\n                elements[i2].selected = select;\n              }\n            }\n          }\n        }\n      }\n    }\n  } catch (e) {\n    e.message = \"INFO: Error in select.js refreshDependents: \" + e.message;\n    setInfo(e.message);\n  }\n}; // check for enable controlled - This select might have control of another selector\n\n\nvar checkDisableOther = function (param, firstRender) {\n  try {\n    if (param.disableOtherFor !== undefined) {\n      // this param controls the enable/disable properties of at least one other param.\n      // Use the options to enable disable that param.\n      var controlledSelectors = Object.keys(param.disableOtherFor);\n\n      for (var i = 0; i < controlledSelectors.length; i++) {\n        var elem = matsParamUtils.getInputElementForParamName(param.name);\n\n        if (!elem) {\n          return;\n        }\n\n        var selectedOptions = elem.selectedOptions;\n        var selectedText = selectedOptions && selectedOptions.length > 0 ? selectedOptions[0].text : \"\";\n\n        if (firstRender == true && param.default == param.hideOtherFor[controlledSelectors[i]] || param.disableOtherFor[controlledSelectors[i]] === matsTypes.InputTypes.unused && selectedText === \"\" || $.inArray(selectedText, param.disableOtherFor[controlledSelectors[i]]) !== -1) {\n          matsParamUtils.getInputElementForParamName(controlledSelectors[i]).disabled = true;\n          matsParamUtils.setValueTextForParamName(controlledSelectors[i], matsTypes.InputTypes.unused);\n        } else {\n          matsParamUtils.getInputElementForParamName(controlledSelectors[i]).disabled = false;\n        }\n      }\n    }\n  } catch (e) {\n    e.message = \"INFO: Error in select.js checkDisableOther: \" + e.message;\n    setInfo(e.message);\n  }\n}; // check for hide controlled - This select might have control of another selector's visibility\n\n\nvar checkHideOther = function (param, firstRender) {\n  try {\n    if (param.hideOtherFor !== undefined) {\n      // this param controls the visibility of at least one other param.\n      var controlledSelectors = Object.keys(param.hideOtherFor);\n\n      for (var i = 0; i < controlledSelectors.length; i++) {\n        var elem = matsParamUtils.getInputElementForParamName(param.name);\n\n        if (!elem) {\n          return;\n        }\n\n        var selectedOptions = elem.selectedOptions;\n        var selectedText = selectedOptions && selectedOptions.length > 0 ? selectedOptions[0].text : \"\";\n        var otherInputElement = matsParamUtils.getInputElementForParamName(controlledSelectors[i]);\n        var selectorControlElem;\n\n        if (firstRender == true && param.default == param.hideOtherFor[controlledSelectors[i]] || param.hideOtherFor[controlledSelectors[i]] === matsTypes.InputTypes.unused && selectedText === \"\" || $.inArray(selectedText, param.hideOtherFor[controlledSelectors[i]]) !== -1) {\n          selectorControlElem = document.getElementById(controlledSelectors[i] + '-item');\n\n          if (selectorControlElem && selectorControlElem.style) {\n            selectorControlElem.style.display = \"none\";\n          }\n\n          matsParamUtils.setValueTextForParamName(controlledSelectors[i], matsTypes.InputTypes.unused);\n        } else {\n          selectorControlElem = document.getElementById(controlledSelectors[i] + '-item');\n\n          if (selectorControlElem && selectorControlElem.style) {\n            selectorControlElem.style.display = \"block\";\n          }\n\n          otherInputElement && otherInputElement.options && otherInputElement.selectedIndex >= 0 && otherInputElement.options[otherInputElement.selectedIndex].scrollIntoView();\n        }\n      }\n\n      matsSelectUtils.checkDisableOther(param), firstRender;\n    }\n  } catch (e) {\n    e.message = \"INFO: Error in select.js checkHideOther: \" + e.message;\n    setInfo(e.message);\n  }\n}; // refresh the selector in question to the appropriate options indicated by the values of any superior selectors\n\n\nvar refresh = function (event, paramName) {\n  if (paramName.search('axis') === 1) {\n    // this is a \"brother\" (hidden) scatterplot param. There is no need to refresh it or add event listeners etc.\n    return;\n  }\n\n  var param = matsParamUtils.getParameterForName(paramName);\n  var elem = matsParamUtils.getInputElementForParamName(paramName);\n  /*\n  OptionsGroups are a mechanism for displaying the select options in groups.\n  A disabled option is used for the group header. Disabled options simply show up\n  in the selector list in bold font and act as group titles. They are disabled so that\n  they cannot be clicked. DisabledOptions are the headers that the options are to be grouped under.\n  disabledOptions are optional so if there are disabledOptions they are the keys in the optionsGroups\n  and they are the sort order of those keys.\n  */\n\n  var disabledOptions = matsParamUtils.getDisabledOptionsForParamName(paramName);\n  var optionsGroups = param.optionsGroups;\n  var optionsMap = param.optionsMap;\n  var superiorNames = param.superiorNames;\n  var superiorDimensionality = superiorNames !== undefined && superiorNames !== null && superiorNames.length > 0 && Array.isArray(superiorNames[0]) ? superiorNames.length : 1;\n  var superiors = []; // get a list of the current superior selected values - in order of superiority i.e. [databaseValue,dataSourceValue]\n\n  var sNames;\n\n  if (superiorNames !== undefined) {\n    if (superiorDimensionality === 1) {\n      sNames = superiorNames;\n    } else {\n      sNames = superiorNames[0];\n    }\n\n    for (var sn = 0; sn < sNames.length; sn++) {\n      var superiorElement = matsParamUtils.getInputElementForParamName(sNames[sn]);\n      var selectedSuperiorValue = superiorElement.options[superiorElement.selectedIndex] === undefined ? matsParamUtils.getParameterForName(sNames[sn]).default : superiorElement.options[superiorElement.selectedIndex].text;\n      superiors[0] = superiors[0] === undefined ? [] : superiors[0];\n      superiors[0].push({\n        element: superiorElement,\n        value: selectedSuperiorValue\n      });\n    }\n\n    for (var sNameIndex = 1; sNameIndex < superiorDimensionality; sNameIndex++) {\n      sNames = superiorNames[sNameIndex];\n\n      for (var sn = 0; sn < sNames.length; sn++) {\n        var superiorElement = matsParamUtils.getInputElementForParamName(sNames[sn]);\n        var selectedSuperiorValue = superiorElement.options[superiorElement.selectedIndex] === undefined ? matsParamUtils.getParameterForName(sNames[sn]).default : superiorElement.options[superiorElement.selectedIndex].text;\n        superiors[sNameIndex] = superiors[sNameIndex] === undefined ? [] : superiors[sNameIndex];\n        superiors[sNameIndex].push({\n          element: superiorElement,\n          value: selectedSuperiorValue\n        });\n      }\n    }\n  }\n  /*\n  So what are superiors now.....\n  superiors = [[{element:anElement,value:aValue},{element:anElement,value:aValue}...]]\n  or they might be [[{element:anElement,value:aValue},{element:anElement,value:aValue}...],[{element:anElement,value:aValue},{element:anElement,value:aValue}...],...]\n     Axis-brothers:\n   Axis-brothers are for scatter plots. They are a second hidden set of parameters that apply to a different axis.\n   Because there may be axis \"brothers\" This refresh must go and\n   see if there are any brother elements that are essentially hidden copies\n   of this one, and also refresh their options lists\n    Superior Heirarchy:\n   There can be a heirarchy of superiors and dependents. The superiorNames are a list of paramNames. The most superior has the 0th index and\n   the least superior has the highest index.\n   The Refresh uses the superiors to get the appropriate options for a given options map.\n   The way it works is that superiors are always refreshed first. The superior heirarchy selections are then used by a\n   dependent to retrieve its appropriate optionsMap from the superiorOptionsMap.\n   superiorsOptionsMap = {\n      mostSuperiorValue0: {  // optionsMap for the most superior first value\n          nextSuperiorValue0: [value0,value1,value2,value3,...],\n          nextSuperiorValue1: [value0,value1,value2,value3,...],\n          nextSuperiorValue2: [value0,value1,value2,value3,...],\n          ...\n      },\n      mostSuperiorValue1:{  // optionsMap for the most superior second value\n          nextSuperiorValue0: [value0,value1,value2,value3,...],\n          nextSuperiorValue1: [value0,value1,value2,value3,...],\n          nextSuperiorValue2: [value0,value1,value2,value3,...],\n          ...\n      },\n      ...,\n      mostSuperiorValue2:{  // optionsMap for the most superior third value\n          nextSuperiorValue0: [value0,value1,value2,value3,...],\n          nextSuperiorValue1: [value0,value1,value2,value3,...],\n          nextSuperiorValue2: [value0,value1,value2,value3,...],\n          ...\n      },\n   }\n   */\n  // find all the elements that have ids like .... \"x|y|z\" + \"axis-\" + this.name\n\n\n  var name = param.name;\n  var elems = document.getElementsByClassName(\"data-input\") === undefined ? [] : document.getElementsByClassName(\"data-input\");\n  Session.set('selected', $(elem).val());\n\n  if (elem && elem.options) {\n    if (elem.selectedIndex === undefined || elem.selectedIndex === -1) {\n      if (param.default !== matsTypes.InputTypes.unused) {\n        elem.selectedIndex = 0;\n      }\n    }\n\n    var selectedText = elem.selectedIndex >= 0 ? elem.options[elem.selectedIndex].text : matsTypes.InputTypes.unused;\n    var brothers = [];\n\n    for (var i = 0; i < elems.length; i++) {\n      if (elems[i].id.indexOf(name) >= 0 && elems[i].id !== elem.id) brothers.push(elems[i]);\n    }\n\n    var myOptions = [];\n    var selectedSuperiorValues = [];\n\n    try {\n      // index down through the options for the list of superiors\n      // starting with the most superior down through the least superior\n      // and get the options list for the first set of superiors.\n      // These are the ancestral options.\n      if (param.optionsMap) {\n        var firstSuperiorOptions = optionsMap;\n        var theseSuperiors = superiors === undefined || superiors.length === 0 ? [] : superiors[0];\n\n        for (var theseSuperiorsIndex = 0; theseSuperiorsIndex < theseSuperiors.length; theseSuperiorsIndex++) {\n          var superior = theseSuperiors[theseSuperiorsIndex];\n          var selectedSuperiorValue = superior.value;\n          firstSuperiorOptions = firstSuperiorOptions[selectedSuperiorValue];\n        }\n\n        myOptions = Array.isArray(firstSuperiorOptions) ? firstSuperiorOptions : Object.keys(firstSuperiorOptions);\n      } else {\n        myOptions = param.options;\n      } // need to get the ancestral truth options because we may need to intersect the options\n\n      /* tricky little bit here:\n      SuperiorDimensionality:\n       It is possible to have two superior options maps.. i.e. datasource and truth.\n       In that case the superiorNames won't look like [\"something\",\"somethingelse\"],\n       instead it will look like [[\"something\",\"somethingelse\"],[\"someotherthing\",\"someotherthingelse\"]]\n       i.e. it will be a multidimensional array.\n        If the controlButton for one of these multi-dimensional superior elements is hidden ....\n       matsParamUtils.getControlElementForParamName(superior.element.name).offsetParent !== null\n       it has been hidden because it has a visibility dependency on another param\n       i.e. truth-data-source and truth-variable (for mean there would be no truth, but for bias\n       there must always be truth...).\n       In this case these are dependent upon statistic such that if the statistic is \"mean\" the truth-data-source and truth-variable\n       are hidden. See the wfip2 main.js statistic param as an example....\n       \"disableOtherFor:{'truth-data-source':[statisticOptionsMap.mean][0]},\"\n       and\n       \"hideOtherFor:{'truth-data-source':[statisticOptionsMap.mean][0]},\"\n       are the fields that cause the truth-data-source to be hidden when statistic is set to \"mean\".\n       In that condition (the controlButton is hidden) the superior should not be used as an intersection in the selected sites.\n       matsParamUtils.getControlElementForParamName(superior.element.name).offsetParent will be null if the controlButton\n       for this element (this superior) is hidden. That is the tricky part ... it will be null.\n        Also the unused superior is tested against the superior according to the truth table...\n       used && unused  -> use the used\n       unused and used -> use the used\n       used and used -> use the intersection\n       unused and unused - set the options to []\n        A select may have a list of disabledOptions. These are used as optionGroup markers.\n       */\n      // need to get the actual options here\n\n\n      for (var sNameIndex = 1; sNameIndex < superiorDimensionality; sNameIndex++) {\n        // index down through the options for the list of superiors\n        // starting with the most superior down through the least superior\n        // and get the options list for the first set of superiors.\n        // These are the ancestral options.\n        var nextSuperiorOptions = optionsMap;\n        var theseSuperiors = superiors === undefined || superiors.length === 0 ? [] : superiors[sNameIndex];\n\n        for (var theseSuperiorsIndex = 0; theseSuperiorsIndex < theseSuperiors.length; theseSuperiorsIndex++) {\n          var superior = theseSuperiors[theseSuperiorsIndex];\n          var selectedSuperiorValue = superior.value;\n          nextSuperiorOptions = nextSuperiorOptions[selectedSuperiorValue];\n        } // since we now have multiple options we have to intersect them\n\n\n        myOptions = _.intersection(myOptions, nextSuperiorOptions);\n      }\n\n      if (myOptions === []) {\n        // none used - set to []\n        matsParamUtils.setValueTextForParamName(name, matsTypes.InputTypes.unused);\n      }\n    } catch (e) {\n      e.message = \"INFO: Error in select.js refresh: determining options from superiors: \" + e.message;\n      setInfo(e.message);\n    }\n\n    try {\n      // reset the options of the select\n      // if the options are null it might be that this is the initial setup.\n      // so use the optionsmap and the default options for the map\n      // it might also mean that there are no superiors for this param\n      if (myOptions == null) {\n        // get the default options\n        if (optionsGroups) {\n          // optionGroups are an ordered map. It probably has options that are in the disabledOption list\n          // which are used as markers in the select options pulldown. This is typical for models\n          var optionsGroupsKeys = Object.keys(optionsGroups);\n\n          for (var k = 0; k < optionsGroupsKeys.length; k++) {\n            if (myOptions === null) {\n              myOptions = [];\n              myOptions.push(optionsGroupsKeys[k]);\n              myOptions = myOptions.concat(optionsGroups[optionsGroupsKeys[k]]); // the primary group does not get sorted\n            } else {\n              myOptions.push(optionsGroupsKeys[k]);\n              myOptions = myOptions.concat(optionsGroups[optionsGroupsKeys[k]].sort()); // non primary  groups get sorted\n            }\n          }\n        } else {\n          myOptions = param.options;\n        }\n      }\n\n      var optionsAsString = \"\";\n\n      if (myOptions === undefined || myOptions == null) {\n        return;\n      }\n\n      var firstGroup = true;\n\n      for (var i = 0; i < myOptions.length; i++) {\n        var dIndex = disabledOptions === undefined ? -1 : disabledOptions.indexOf(myOptions[i]);\n\n        if (dIndex >= 0) {\n          // the option was found in the disabled options so it needs to be an optgroup label\n          // disabled option\n          if (firstGroup === true) {\n            // first in group\n            optionsAsString += \"<optgroup label=\" + myOptions[i] + \">\";\n            firstGroup = false;\n          } else {\n            optionsAsString += \"</optgroup>\";\n            optionsAsString += \"<optgroup label=\" + myOptions[i] + \">\";\n          }\n        } else {\n          //regular option - the option was not found in the disabled options\n          optionsAsString += \"<option value='\" + myOptions[i] + \"'>\" + myOptions[i] + \"</option>\";\n        }\n      }\n\n      if (disabledOptions !== undefined) {\n        optionsAsString += \"</optgroup>\";\n      }\n\n      $('select[name=\"' + name + '\"]').empty().append(optionsAsString); //reset the selected index if it had been set prior (the list may have changed so the index may have changed)\n\n      var selectedOptionIndex;\n\n      if (selectedText === 'initial') {\n        selectedOptionIndex = myOptions.indexOf(param.default);\n      } else {\n        selectedOptionIndex = myOptions.indexOf(selectedText);\n      }\n\n      var sviText = \"\";\n\n      if (selectedOptionIndex == -1 && elem.selectedIndex >= 0) {\n        for (var svi = 0; svi < selectedSuperiorValues.length; svi++) {\n          superior = superiors[svi];\n\n          if (matsParamUtils.getControlElementForParamName(superior.element.name).offsetParent !== null) {\n            if (svi > 0) {\n              sviText += \" and \";\n            }\n\n            sviText += selectedSuperiorValues[svi];\n          }\n        }\n\n        setInfo(\"I changed your selected \" + name + \": '\" + selectedText + \"' to '\" + myOptions[0] + \"' because '\" + selectedText + \"' is no longer an option for \" + sviText);\n      } // if the selectedText existed in the new options list then the selectedOptionIndex won't be -1 and we have to choose the default option\n\n\n      if (selectedOptionIndex === -1) {\n        // if the param default is unused set it to unused\n        // else just choose the 0th element in the element options. default?\n        if (param.default === matsTypes.InputTypes.unused) {\n          matsParamUtils.setValueTextForParamName(name, matsTypes.InputTypes.unused);\n        } else {\n          elem.selectedIndex = 0;\n          elem && elem.options && elem.selectedIndex >= 0 && elem.options[elem.selectedIndex].scrollIntoView();\n          elem && elem.options && elem.selectedIndex >= 0 && matsParamUtils.setValueTextForParamName(name, elem.options[elem.selectedIndex].text);\n        }\n      } else {\n        elem.selectedIndex = selectedOptionIndex;\n        elem && elem.options && elem.selectedIndex >= 0 && elem.options[elem.selectedIndex].scrollIntoView();\n        elem && elem.options && elem.selectedIndex >= 0 && matsParamUtils.setValueTextForParamName(name, elem.options[elem.selectedIndex].text);\n      }\n\n      for (var i = 0; i < brothers.length; i++) {\n        var belem = brothers[i];\n        var belemSelectedOptions = $(belem.selectedOptions).map(function () {\n          return this.value;\n        }).get();\n\n        if (belemSelectedOptions === undefined || belemSelectedOptions.length === 0) {\n          belem.options = [];\n\n          for (var i1 = 0; i1 < myOptions.length; i1++) {\n            belem.options[belem.options.length] = new Option(myOptions[i1], myOptions[i1], i1 == 0, i1 == 0);\n          }\n        }\n      }\n    } catch (e) {\n      e.message = \"INFO: Error in select.js refresh: resetting selected options: \" + e.message;\n      setInfo(e.message);\n    }\n  }\n\n  refreshPeer(event, param);\n}; // refresh function\n\n\nmodule.exportDefault(matsSelectUtils = {\n  refresh: refresh,\n  refreshPeer: refreshPeer,\n  refreshDependents: refreshDependents,\n  checkDisableOther: checkDisableOther,\n  checkHideOther: checkHideOther\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/client/index.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./curve_util.js\");\nmodule.link(\"./graph_util.js\");\nmodule.link(\"./select_util.js\");\nmodule.link(\"./init.js\");\nmodule.link(\"../both\");\nmodule.link(\"./routes.js\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/client/init.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  \"default\": function (v) {\n    matsCollections = v;\n  }\n}, 1);\n\nif (Meteor.isClient) {\n  Meteor.subscribe(\"CurveParams\");\n  Meteor.subscribe(\"Scatter2dParams\");\n  Meteor.subscribe(\"SavedCurveParams\");\n  Meteor.subscribe(\"PlotParams\");\n  Meteor.subscribe(\"PlotGraphFunctions\");\n  Meteor.subscribe(\"RegionsPerModel\");\n  Meteor.subscribe(\"SitesPerModel\");\n  Meteor.subscribe(\"RegionDescriptions\");\n  Meteor.subscribe(\"Models\");\n  Meteor.subscribe(\"FcstLensPerModel\");\n  Meteor.subscribe(\"ColorScheme\");\n  Meteor.subscribe(\"Settings\");\n  Meteor.subscribe(\"CurveSettings\");\n  Meteor.subscribe(\"SentAddresses\");\n  Meteor.subscribe(\"Roles\");\n  Meteor.subscribe(\"Authorization\");\n  Meteor.subscribe(\"Credentials\");\n  Meteor.subscribe(\"Databases\");\n  Meteor.subscribe(\"CurveTextPatterns\");\n  Meteor.subscribe(\"ScatterAxisTextPattern\");\n  Meteor.subscribe(\"RangePerDescriptor\");\n  Meteor.subscribe(\"SiteMap\");\n  Meteor.subscribe(\"StationMap\");\n  Meteor.subscribe(\"appName\");\n  Meteor.subscribe(\"LayoutStoreCollection\");\n  Session.set('Curves', []);\n  Session.set('PlotParams', []);\n  Accounts.ui.config({\n    requestOfflineToken: {\n      google: true\n    }\n  });\n  var ref = location.href;\n  var pathArray = location.href.split('/');\n  var protocol = pathArray[0];\n  var hostport = pathArray[2];\n  var hostName = hostport.split(':')[0];\n  var app = pathArray[3] == \"\" ? \"/\" : pathArray[3];\n  var matsRef = protocol + \"//\" + hostport;\n  var helpRef = ref.endsWith('/') ? ref + \"help\" : ref + \"/help\";\n  Session.set(\"app\", {\n    appName: app,\n    matsref: matsRef,\n    appref: ref,\n    helpref: helpRef,\n    hostName: hostName\n  });\n  var collections = Object.keys(matsCollections).map(function (key) {\n    return matsCollections[key];\n  });\n  Session.set(\"Mongol\", {\n    'collections': collections,\n    'display': false,\n    'opacity_normal': \".7\",\n    'opacity_expand': \".9\",\n    'disable_warning': true\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"routes.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/client/routes.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar FlowRouter;\nmodule.link(\"meteor/ostrio:flow-router-extra\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 1);\nFlowRouter.route('/', {\n  name: 'main',\n  action: function () {\n    this.render('Home');\n  }\n});\nFlowRouter.route('/CSV/:graphFunction/:key/:matching/:appName', {\n  name: 'csv',\n  action: function (params) {\n    console.log(\"in csv route\");\n    window.location.href = FlowRouter.path;\n  }\n});\nFlowRouter.route('/JSON/:graphFunction/:key/:matching/:appName', {\n  name: 'json',\n  action: function (params) {\n    console.log(\"in json route\");\n    window.location.href = FlowRouter.path;\n  }\n});\nFlowRouter.route('/preview/:graphFunction/:key/:matching/:appName', {\n  name: 'preview',\n  action: function (params) {\n    console.log(\"in preview route- setting params\", params);\n    this.render('GraphStandAlone', params);\n  }\n});\nFlowRouter.route('/gsd/mats/*/preview/:graphFunction/:key/:matching/:appName', {\n  name: 'preview',\n  action: function (params) {\n    console.log(\"in preview route- setting params\", params);\n    this.render('GraphStandAlone', params);\n  }\n});\nFlowRouter.route('/gsd/mats/*/', {\n  name: 'main',\n  action: function () {\n    this.render('Home');\n  }\n});\nFlowRouter.route('*', {\n  action: function () {\n    console.log('route: ' + ' not found');\n    this.render('notFound');\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"data_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/server/data_util.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 2);\n\n//this function checks if two JSON objects are identical\nvar areObjectsEqual = function (o, p) {\n  if (o && !p || p && !o) {\n    return false;\n  }\n\n  if (JSON.stringify(o) === JSON.stringify(p)) {\n    return true;\n  } else {\n    return false;\n  }\n}; //this function checks if values of subArray are also in superArray\n\n\nvar arrayContainsArray = function (superArray, subArray) {\n  superArray.sort(function (a, b) {\n    return Number(a) - Number(b);\n  });\n  subArray.sort(function (a, b) {\n    return Number(a) - Number(b);\n  });\n  var i, j;\n\n  for (i = 0, j = 0; i < superArray.length && j < subArray.length;) {\n    if (superArray[i] < subArray[j]) {\n      ++i;\n    } else if (superArray[i] === subArray[j]) {\n      ++i;\n      ++j;\n    } else {\n      // subArray[j] not in superArray, so superArray does not contain all elements of subArray\n      return false;\n    }\n  } // make sure there are no elements left in sub\n\n\n  return j === subArray.length;\n}; //this function checks if the entire array subArray is contained in superArray\n\n\nvar arrayContainsSubArray = function (superArray, subArray) {\n  var i, j, current;\n\n  for (i = 0; i < superArray.length; ++i) {\n    if (subArray.length === superArray[i].length) {\n      current = superArray[i];\n\n      for (j = 0; j < subArray.length && subArray[j] === current[j]; ++j) {\n        ;\n      }\n\n      if (j === subArray.length) return true;\n    }\n  }\n\n  return false;\n}; //this function checks if two arrays are identical\n\n\nvar arraysEqual = function (a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n\n  return true;\n};\n\nvar arrayUnique = function (a) {\n  var arr = [];\n\n  for (var i = 0; i < a.length; i++) {\n    if (!arr.includes(a[i])) {\n      arr.push(a[i]);\n    }\n  }\n\n  return arr;\n}; //this function finds the position of the array subArray in superArray\n\n\nvar findArrayInSubArray = function (superArray, subArray) {\n  var i, j, current;\n\n  for (i = 0; i < superArray.length; ++i) {\n    if (subArray.length === superArray[i].length) {\n      current = superArray[i];\n\n      for (j = 0; j < subArray.length && subArray[j] === current[j]; ++j) {\n        ;\n      }\n\n      if (j === subArray.length) return i;\n    }\n  }\n\n  return -1;\n}; //this function checks if an object is a value in another object\n\n\nvar objectContainsObject = function (superObject, subObject) {\n  var superObjectKeys = Object.keys(superObject);\n  var currentObject;\n\n  for (var i = 0; i < superObjectKeys.length; i++) {\n    currentObject = superObject[superObjectKeys[i]];\n\n    if (areObjectsEqual(subObject, currentObject)) {\n      return true;\n    }\n  } // if the loop completes, the subObject was not found\n\n\n  return false;\n}; //utility for calculating the average of an array\n\n\nvar average = function (data) {\n  var sum = data.reduce(function (sum, value) {\n    return value == null ? sum : sum + value;\n  }, 0);\n  var avg = sum / data.length;\n  return avg;\n}; //utility for calculating the stdev of an array\n\n\nvar stdev = function (data) {\n  var avg = average(data);\n  var squareDiffs = data.map(function (value) {\n    var diff = value - avg;\n    return diff * diff;\n  });\n  var avgSquareDiff = average(squareDiffs);\n  var stdDev = Math.sqrt(avgSquareDiff);\n  return stdDev;\n}; //this function makes sure date strings are in the correct format\n\n\nvar dateConvert = function (dStr) {\n  if (dStr === undefined || dStr === \" \") {\n    var now = new Date();\n    var date = new Date(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(), now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds());\n    var yr = date.getUTCFullYear();\n    var day = date.getUTCDate();\n    var month = date.getUTCMonth();\n    var hour = date.getUTCHours();\n    var minute = date.getUTCMinutes();\n    return month + \"/\" + day + '/' + yr + ' ' + hour + \":\" + minute;\n  }\n\n  var dateParts = dStr.split(' ');\n  var dateArray = dateParts[0].split(/[\\-\\/]/); // split on - or /    01-01-2017 OR 01/01/2017\n\n  var month = dateArray[0];\n  var day = dateArray[1];\n  var yr = dateArray[2];\n  var hour = 0;\n  var minute = 0;\n\n  if (dateParts[1]) {\n    var timeArray = dateParts[1].split(\":\");\n    hour = timeArray[0];\n    minute = timeArray[1];\n  }\n\n  return month + \"/\" + day + '/' + yr + ' ' + hour + \":\" + minute;\n}; //splits the date range string from the date selector into standardized fromDate/toDate strings,\n// plus the epochs for the fromDate and toDate\n\n\nvar getDateRange = function (dateRange) {\n  var dates = dateRange.split(' - ');\n  var fromDateStr = dates[0];\n  var fromDate = dateConvert(fromDateStr);\n  var toDateStr = dates[1];\n  var toDate = dateConvert(toDateStr);\n  var fromSecs = secsConvert(fromDateStr);\n  var toSecs = secsConvert(toDateStr);\n  return {\n    fromDate: fromDate,\n    toDate: toDate,\n    fromSeconds: fromSecs,\n    toSeconds: toSecs\n  };\n}; //this function converts a date string into an epoch\n\n\nvar secsConvert = function (dStr) {\n  if (dStr === undefined || dStr === \" \") {\n    var now = new Date();\n    return now.getTime() / 1000;\n  } else {\n    var dateParts = dStr.split(' ');\n    var dateArray = dateParts[0].split(/[\\-\\/]/); // split on - or /    01-01-2017 OR 01/01/2017\n\n    var month = dateArray[0];\n    var day = dateArray[1];\n    var yr = dateArray[2];\n    var hour = 0;\n    var minute = 0;\n\n    if (dateParts[1]) {\n      var timeArray = dateParts[1].split(\":\");\n      hour = timeArray[0];\n      minute = timeArray[1];\n    }\n\n    var my_date = new Date(Date.UTC(yr, month - 1, day, hour, minute, 0)); // to UTC time, not local time\n\n    var date_in_secs = my_date.getTime();\n  } // to UTC time, not local time\n  //return date_in_secs/1000 -3600*6;\n\n\n  return date_in_secs / 1000;\n}; //function to manage authorized logins for MATS\n\n\nvar doAuthorization = function () {\n  if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n    matsCollections.Authorization.remove({});\n  }\n\n  if (matsCollections.Authorization.find().count() == 0) {\n    matsCollections.Authorization.insert({\n      email: \"randy.pierce@noaa.gov\",\n      roles: [\"administrator\"]\n    });\n    matsCollections.Authorization.insert({\n      email: \"kirk.l.holub@noaa.gov\",\n      roles: [\"administrator\"]\n    });\n    matsCollections.Authorization.insert({\n      email: \"jeffrey.a.hamilton@noaa.gov\",\n      roles: [\"administrator\"]\n    });\n    matsCollections.Authorization.insert({\n      email: \"bonny.strong@noaa.gov\",\n      roles: [\"administrator\"]\n    });\n    matsCollections.Authorization.insert({\n      email: \"molly.b.smith@noaa.gov\",\n      roles: [\"administrator\"]\n    });\n    matsCollections.Authorization.insert({\n      email: \"mats.gsd@noaa.gov\",\n      roles: [\"administrator\"]\n    });\n  }\n}; //master list of colors for MATS curves\n\n\nvar doColorScheme = function () {\n  if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n    matsCollections.ColorScheme.remove({});\n  }\n\n  if (matsCollections.ColorScheme.find().count() == 0) {\n    matsCollections.ColorScheme.insert({\n      colors: [\"rgb(255,0,0)\", \"rgb(0,0,255)\", \"rgb(255,165,0)\", \"rgb(128,128,128)\", \"rgb(238,130,238)\", \"rgb(238,130,238)\", \"rgb(0,0,139)\", \"rgb(148,0,211)\", \"rgb(105,105,105)\", \"rgb(255,140,0)\", \"rgb(235,92,92)\", \"rgb(82,92,245)\", \"rgb(133,143,143)\", \"rgb(235,143,92)\", \"rgb(190,120,120)\", \"rgb(225,82,92)\", \"rgb(72,82,245)\", \"rgb(123,133,143)\", \"rgb(225,133,92)\", \"rgb(180,120,120)\"]\n    });\n  }\n}; //utility for google login capabilities in MATS -- broken for esrl.noaa.gov/gsd/mats?\n\n\nvar doCredentials = function () {\n  // the gmail account for the credentials is mats.mail.daemon@gmail.com - pwd mats2015!\n  if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n    matsCollections.Credentials.remove({});\n  }\n\n  if (matsCollections.Credentials.find().count() == 0) {\n    matsCollections.Credentials.insert({\n      name: \"oauth_google\",\n      clientId: \"499180266722-aai2tddo8s9edv4km1pst88vebpf9hec.apps.googleusercontent.com\",\n      clientSecret: \"xdU0sc7SbdOOEzSyID_PTIRE\",\n      refresh_token: \"1/3bhWyvCMMfwwDdd4F3ftlJs3-vksgg7G8POtiOBwYnhIgOrJDtdun6zK6XiATCKT\"\n    });\n  }\n}; //another utility to assist at logging into MATS\n\n\nvar doRoles = function () {\n  if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n    matsCollections.Roles.remove({});\n  }\n\n  if (matsCollections.Roles.find().count() == 0) {\n    matsCollections.Roles.insert({\n      name: \"administrator\",\n      description: \"administrator privileges\"\n    });\n  }\n}; //for use in matsMethods.resetApp() to establish default settings\n\n\nvar doSettings = function (title, version, buildDate, appType) {\n  if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n    matsCollections.Settings.remove({});\n  }\n\n  if (matsCollections.Settings.find().count() == 0) {\n    matsCollections.Settings.insert({\n      LabelPrefix: \"Curve\",\n      Title: title,\n      appVersion: version,\n      buildDate: buildDate,\n      appType: appType,\n      LineWidth: 3.5,\n      NullFillString: \"---\",\n      resetFromCode: false\n    });\n  } // always update the version, roles, and the hostname, not just if it doesn't exist...\n\n\n  var settings = matsCollections.Settings.findOne({});\n  var deploymentRoles = {\n    \"mats-dev\": \"development\",\n    \"mats-int\": \"integration\",\n    \"mats\": \"production\"\n  };\n  var settingsId = settings._id;\n\n  var os = Npm.require('os');\n\n  var hostname = os.hostname().split('.')[0];\n  settings['appVersion'] = version;\n  settings['hostname'] = hostname;\n  settings['deploymentRoles'] = JSON.stringify(deploymentRoles);\n  matsCollections.Settings.update(settingsId, {\n    $set: settings\n  });\n}; //Utility for transferring client-side parameters to the server-side methods via the \"PlotParams\" object in the stack.\n//Add values to this object in the 'click .submit-params' event handler in plot_list.js\n\n\nvar getPlotParamsFromStack = function () {\n  var params = {};\n  var err = new Error();\n  Error.captureStackTrace(err, arguments.callee.arguments.callee);\n  var stack = err.stack;\n  var stackElems = stack.split(\"\\n\");\n\n  for (si = 0; si < stackElems.length; si++) {\n    var sElem = stackElems[si].trim();\n\n    if (sElem.indexOf('dataFunctions') !== -1 && sElem.startsWith(\"at data\")) {\n      var dataFunctionName = sElem.split('at ')[1];\n\n      try {\n        params = global[sElem.split('at ')[1].split(' ')[0]].arguments[0];\n      } catch (noJoy) {}\n\n      break;\n    }\n  }\n\n  return params;\n}; //calculates mean, stdev, and other statistics for curve data points in all apps and plot types\n\n\nvar get_err = function (sVals, sSecs, sLevs) {\n  /* refer to perl error_library.pl sub  get_stats\n   to see the perl implementation of these statics calculations.\n   These should match exactly those, except that they are processed in reverse order.\n   */\n  var autocorr_limit = 0.95;\n  var hasLevels = sLevs.length > 0;\n  var plotParams = getPlotParamsFromStack();\n  var outlierQCParam;\n\n  if (plotParams[\"outliers\"] !== \"all\") {\n    outlierQCParam = Number(plotParams[\"outliers\"]);\n  } else {\n    outlierQCParam = 100;\n  }\n\n  var subVals = [];\n  var subSecs = [];\n  var subLevs = [];\n  var n = sVals.length;\n  var n_good = 0;\n  var sum_d = 0;\n  var sum2_d = 0;\n  var error = \"\";\n  var i;\n\n  for (i = 0; i < n; i++) {\n    if (sVals[i] !== null && !isNaN(sVals[i])) {\n      n_good = n_good + 1;\n      sum_d = sum_d + sVals[i];\n      sum2_d = sum2_d + sVals[i] * sVals[i];\n      subVals.push(sVals[i]);\n      subSecs.push(sSecs[i]);\n\n      if (hasLevels) {\n        subLevs.push(sLevs[i]);\n      }\n    }\n  }\n\n  var d_mean = sum_d / n_good;\n  var sd2 = sum2_d / n_good - d_mean * d_mean;\n  var sd = sd2 > 0 ? Math.sqrt(sd2) : sd2;\n  var sd_limit = outlierQCParam * sd; //console.log(\"see error_library.pl l208 These are processed in reverse order to the perl code -  \\nmean is \" + d_mean + \" sd_limit is +/- \" + sd_limit + \" n_good is \" + n_good + \" sum_d is\" + sum_d + \" sum2_d is \" + sum2_d);\n  // find minimum delta_time, if any value missing, set null\n\n  var last_secs = 0;\n  var minDelta = Number.MAX_VALUE;\n  var minSecs = Number.MAX_VALUE;\n  var max_secs = Number.MIN_VALUE;\n  var minVal = Number.MAX_VALUE;\n  var maxVal = -1 * Number.MAX_VALUE;\n  var secs;\n  var delta;\n\n  for (i = 0; i < subSecs.length; i++) {\n    secs = subSecs[i];\n    delta = Math.abs(secs - last_secs);\n\n    if (delta > 0 && delta < minDelta) {\n      minDelta = delta;\n    }\n\n    if (secs < minSecs) {\n      minSecs = secs;\n    }\n\n    if (secs > max_secs) {\n      max_secs = secs;\n    }\n\n    last_secs = secs;\n  }\n\n  var data_wg = [];\n  var n_gaps = 0;\n  n_good = 0;\n  var sum = 0;\n  var sum2 = 0;\n\n  if (minDelta < 0) {\n    error = \"Invalid time interval - minDelta: \" + minDelta;\n    console.log(\"matsDataUtil.getErr: Invalid time interval - minDelta: \" + minDelta);\n  } // remove data more than $sd_limit from mean\n\n\n  var qaCorrected = [];\n\n  for (i = 0; i < subVals.length; i++) {\n    if (Math.abs(subVals[i] - d_mean) > sd_limit) {\n      qaCorrected.push(\"removing datum \" + i + \" with value \" + subVals[i] + \" because it exceeds \" + outlierQCParam + \" standard deviations from the mean - mean: \" + d_mean + \" \" + outlierQCParam + \" * sd: \" + sd_limit + \" delta: \" + (subVals[i] - d_mean)); // console.log(qaCorrected.join('\\n'));\n\n      subVals[i] = null;\n    } else {\n      minVal = minVal < subVals[i] ? minVal : subVals[i];\n      maxVal = maxVal > subVals[i] ? maxVal : subVals[i];\n      sum += subVals[i];\n      sum2 += subVals[i] * subVals[i];\n      n_good++;\n    }\n  }\n\n  if (n_good < 1) {\n    return {\n      d_mean: null,\n      stde_betsy: null,\n      sd: null,\n      n_good: n_good,\n      lag1: null,\n      min: null,\n      max: null,\n      sum: null\n    };\n  } // recalculate if we threw anything away.\n\n\n  d_mean = sum / n_good;\n  sd2 = sum2 / n_good - d_mean * d_mean;\n  sd = 0;\n\n  if (sd2 > 0) {\n    sd = Math.sqrt(sd2);\n  } //console.log(\"new mean after throwing away outliers is \" + sd + \" n_good is \" + n_good + \" sum is \" + sum  + \" sum2 is \" + sum2 + \" d_mean is \" + d_mean);\n  // look for gaps\n\n\n  var lastSecond = -1 * Number.MAX_VALUE;\n  var lastPressure = -1 * Number.MAX_VALUE;\n  var n_pressures;\n\n  if (hasLevels) {\n    n_pressures = arrayUnique(subLevs).length;\n  } else {\n    n_pressures = 1;\n  } // set lag1_t to the first time the time changes from its initial value + 1 (data zero based)\n  // set lag1_p to the first time the pressure changes from its initial value + 1 (data zero based)\n\n\n  var lag1_t = 0;\n  var lag1_p = 0;\n  var r1_t = 0; // autocorrelation for time\n\n  var r1_p = 0; // autocorrelation for pressure\n\n  var j = 0; // i is loop index without gaps; j is loop index with gaps\n\n  var n_deltas = 0;\n\n  for (i = 0; i < subSecs.length; i++) {\n    var sec = subSecs[i];\n    var lev;\n\n    if (hasLevels) {\n      lev = subLevs[i]; // find first time the pressure changes\n\n      if (lag1_p === 0 && lastPressure > 0) {\n        if (lev !== lastPressure) {\n          lag1_p = j;\n        }\n      }\n    }\n\n    if (lastSecond >= 0) {\n      if (lag1_t === 0 && sec !== lastSecond) {\n        lag1_t = j;\n      }\n\n      if (Math.abs(sec - lastSecond) > minDelta) {\n        n_deltas = (Math.abs(sec - lastSecond) / minDelta - 1) * n_pressures; // for the Autocorrelation at lag 1, it doesn't matter how many missing\n        // data we put in within gaps! (But for the other AC's it does.)\n        // since we're using only the AC at lag 1 for calculating std err, let's\n        // save cpu time and only put in one missing datum per gap, no matter\n        // how long. WRM 2/22/2019\n        // but if we're using a different lag, which could happen, we'll need\n        // to insert all the missing data in each gap. WRM 2/22/2019\n        // $n_deltas=1;\n\n        for (var count = 0; count < n_deltas; count++) {\n          data_wg.push(null);\n          n_gaps++;\n          j++;\n        }\n      }\n    }\n\n    lastSecond = sec;\n\n    if (hasLevels) {\n      lastPressure = lev;\n    }\n\n    data_wg.push(subVals[i]);\n    j++;\n  } //from http://www.itl.nist.gov/div898/handbook/eda/section3/eda35c.htm\n\n\n  var r = [];\n  var lag_by_r = {};\n  var lag1_max = lag1_p > lag1_t ? lag1_p : lag1_t;\n  var r_sum = 0;\n  var n_r = 0;\n  var n_in_lag;\n  var lag;\n  var t;\n\n  for (lag = 0; lag <= lag1_max; lag++) {\n    r[lag] = 0;\n    n_in_lag = 0;\n\n    for (t = 0; t < n + n_gaps - lag; t++) {\n      if (data_wg[t] != null && data_wg[t + lag] != null) {\n        r[lag] += +(data_wg[t] - d_mean) * (data_wg[t + lag] - d_mean);\n        n_in_lag++;\n      }\n    }\n\n    if (n_in_lag > 0 && sd > 0) {\n      r[lag] /= n_in_lag * sd * sd;\n      r_sum += r[lag];\n      n_r++;\n    } else {\n      r[lag] = null;\n    }\n\n    if (lag >= 1 && lag < (n + n_gaps) / 2) {\n      lag_by_r[r[lag]] = lag;\n    }\n  }\n\n  if (lag1_t > 0) {\n    r1_t = r[lag1_t] !== undefined ? r[lag1_t] : 0;\n  }\n\n  if (lag1_p > 0) {\n    r1_p = r[lag1_p] !== undefined ? r[lag1_p] : 0;\n  } // Betsy Weatherhead's correction, based on lag 1, augmented by the highest\n  // lag > 1 and < n/2\n\n\n  if (r1_p >= autocorr_limit) {\n    r1_p = autocorr_limit;\n  }\n\n  if (r1_t >= autocorr_limit) {\n    r1_t = autocorr_limit;\n  }\n\n  var betsy = Math.sqrt((n_good - 1) * (1. - r1_p) * (1. - r1_t));\n  var stde_betsy;\n\n  if (betsy !== 0) {\n    stde_betsy = sd / betsy;\n  } else {\n    stde_betsy = null;\n  }\n\n  var stats = {\n    d_mean: d_mean,\n    stde_betsy: stde_betsy,\n    sd: sd,\n    n_good: n_good,\n    lag1: r[1],\n    min: minSecs,\n    max: max_secs,\n    minVal: minVal,\n    maxVal: maxVal,\n    sum: sum_d,\n    qaCorrected: qaCorrected\n  }; //console.log(\"stats are \" + JSON.stringify(stats));\n  // stde_betsy is standard error with auto correlation\n  //console.log(\"---------\\n\\n\");\n\n  return stats;\n}; // utility to process the user-input histogram customization controls\n\n\nvar setHistogramParameters = function (plotParams) {\n  var yAxisFormat = plotParams['histogram-yaxis-controls'];\n  var binType = plotParams['histogram-bin-controls'];\n  var binNum = 12; // default bin number\n\n  var binStart = undefined; // default is no mandated bin start\n\n  var binStride = undefined; // default is no mandated stride\n\n  var pivotVal = undefined; // default is not to shift the bins over to a pivot\n\n  var binBounds = []; // default is no specified bin bounds -- our algorithm will figure them out if this array stays empty\n\n  switch (binType) {\n    case \"Set number of bins\":\n      // get the user's chosen number of bins\n      binNum = Number(plotParams['bin-number']);\n\n      if (isNaN(binNum)) {\n        throw new Error(\"Error parsing bin number: please enter the desired number of bins.\");\n      }\n\n      break;\n\n    case \"Make zero a bin bound\":\n      // let the histogram routine know that we want the bins shifted over to zero\n      pivotVal = 0;\n      break;\n\n    case \"Choose a bin bound\":\n      // let the histogram routine know that we want the bins shifted over to whatever was input\n      pivotVal = Number(plotParams['bin-pivot']);\n\n      if (isNaN(pivotVal)) {\n        throw new Error(\"Error parsing bin pivot: please enter the desired bin pivot.\");\n      }\n\n      break;\n\n    case \"Set number of bins and make zero a bin bound\":\n      // get the user's chosen number of bins and let the histogram routine know that we want the bins shifted over to zero\n      binNum = Number(plotParams['bin-number']);\n\n      if (isNaN(binNum)) {\n        throw new Error(\"Error parsing bin number: please enter the desired number of bins.\");\n      }\n\n      pivotVal = 0;\n      break;\n\n    case \"Set number of bins and choose a bin bound\":\n      // get the user's chosen number of bins and let the histogram routine know that we want the bins shifted over to whatever was input\n      binNum = Number(plotParams['bin-number']);\n\n      if (isNaN(binNum)) {\n        throw new Error(\"Error parsing bin number: please enter the desired number of bins.\");\n      }\n\n      pivotVal = Number(plotParams['bin-pivot']);\n\n      if (isNaN(pivotVal)) {\n        throw new Error(\"Error parsing bin pivot: please enter the desired bin pivot.\");\n      }\n\n      break;\n\n    case \"Manual bins\":\n      // try to parse whatever we've been given for bin bounds. Throw an error if they didn't follow directions to enter a comma-separated list of numbers.\n      try {\n        binBounds = plotParams['bin-bounds'].split(\",\").map(function (item) {\n          item.trim();\n          item = Number(item);\n\n          if (!isNaN(item)) {\n            return item;\n          } else {\n            throw new Error(\"Error parsing bin bounds: please enter  at least two numbers delimited by commas.\");\n          }\n        });\n        binNum = binBounds.length + 1; // add 1 because these are inner bin bounds\n      } catch (e) {\n        throw new Error(\"Error parsing bin bounds: please enter  at least two numbers delimited by commas.\");\n      } // make sure that we've been given at least two good bin bounds (enough to make one bin).\n\n\n      if (binNum < 3) {\n        throw new Error(\"Error parsing bin bounds: please enter at least two numbers delimited by commas.\");\n      }\n\n      break;\n\n    case \"Manual bin start, number, and stride\":\n      // get the bin start, number, and stride.\n      binNum = Number(plotParams['bin-number']);\n\n      if (isNaN(binNum)) {\n        throw new Error(\"Error parsing bin number: please enter the desired number of bins.\");\n      }\n\n      binStart = Number(plotParams['bin-start']);\n\n      if (isNaN(binStart)) {\n        throw new Error(\"Error parsing bin start: please enter the desired bin start.\");\n      }\n\n      binStride = Number(plotParams['bin-stride']);\n\n      if (isNaN(binStride)) {\n        throw new Error(\"Error parsing bin stride: please enter the desired bin stride.\");\n      }\n\n      break;\n\n    case \"Default bins\":\n    default:\n      break;\n  }\n\n  return {\n    yAxisFormat: yAxisFormat,\n    binNum: binNum,\n    binStart: binStart,\n    binStride: binStride,\n    pivotVal: pivotVal,\n    binBounds: binBounds\n  };\n}; // utility that takes arrays of seconds and values and produces a data structure containing bin information for histogram plotting\n\n\nvar calculateHistogramBins = function (curveSubStats, curveSubSecs, binParams) {\n  // binStart and binStride will only be defined if the user wants to specify the bin spacing.\n  // otherwise, we'll use the mean and standard deviation of the data to space the bins.\n  // pivotVal will only be defined if the user wants to shift the bin limits to align with a certain value.\n  // otherwise, we'll keep everything aligned with the data mean.\n  var binStats = {};\n  var binUpBounds = [];\n  var binLowBounds = [];\n  var binMeans = []; // calculate the global stats across all of the data\n\n  var globalStats = get_err(curveSubStats, curveSubSecs, []); // we don't need levels for the mean or sd calculations, so just pass in an empty array\n\n  var glob_mean = globalStats.d_mean;\n  var glob_sd = globalStats.sd;\n  var fullLowBound;\n  var fullUpBound;\n  var fullRange;\n  var binInterval;\n\n  if (binParams.binStart === undefined || binParams.binStride === undefined) {\n    // use the global stats to determine the bin bounds -- should be based on dividing up +/- 3*sd from the mean into requested number of bins\n    fullLowBound = glob_mean - 3 * glob_sd;\n    fullUpBound = glob_mean + 3 * glob_sd;\n    fullRange = 6 * glob_sd;\n    binInterval = fullRange / (binParams.binNum - 2); // take off two bins from the total number of requested bins to represent values either less than - 3*sd from the mean or greater than 3*sd from the mean\n  } else {\n    // use the user-defined start, number, and stride to determine the bin bounds\n    fullLowBound = binParams.binStart;\n    fullUpBound = binParams.binStart + (binParams.binNum - 2) * binParams.binStride; // take off two bins from the total number of requested bins to represent values that fall outside of the prescribed range\n\n    fullRange = (binParams.binNum - 2) * binParams.binStride;\n    binInterval = binParams.binStride;\n  } // store an array of the upper and lower bounding values for each bin.\n\n\n  binUpBounds[0] = fullLowBound; // the first upper bound should be exactly - 3*sd from the mean, or the previously calculated fullLowBound\n\n  binLowBounds[0] = -1 * Number.MAX_VALUE;\n  binMeans[0] = fullLowBound - binInterval / 2;\n\n  for (var b_idx = 1; b_idx < binParams.binNum - 1; b_idx++) {\n    binUpBounds[b_idx] = binUpBounds[b_idx - 1] + binInterval; // increment from fullLowBound to get the rest of the bin upper limits\n\n    binLowBounds[b_idx] = binUpBounds[b_idx - 1];\n    binMeans[b_idx] = binUpBounds[b_idx - 1] + binInterval / 2;\n  }\n\n  binUpBounds[binParams.binNum - 1] = Number.MAX_VALUE; // the last bin should have everything too large to fit into the previous bins, so make its upper bound the max number value\n\n  binLowBounds[binParams.binNum - 1] = fullUpBound;\n  binMeans[binParams.binNum - 1] = fullUpBound + binInterval / 2;\n\n  if (binParams.pivotVal !== undefined && !isNaN(binParams.pivotVal)) {\n    // need to shift the bounds and means over so that one of the bounds is on the chosen pivot\n    var closestBoundToPivot = binLowBounds.reduce(function (prev, curr) {\n      return Math.abs(curr - binParams.pivotVal) < Math.abs(prev - binParams.pivotVal) ? curr : prev;\n    });\n    binUpBounds = binUpBounds.map(function (val) {\n      return val - (closestBoundToPivot - binParams.pivotVal);\n    });\n    binLowBounds = binLowBounds.map(function (val) {\n      return val - (closestBoundToPivot - binParams.pivotVal);\n    });\n    binMeans = binMeans.map(function (val) {\n      return val - (closestBoundToPivot - binParams.pivotVal);\n    });\n  } // calculate the labels for each bin, based on the data bounding range, for the graph x-axis later\n\n\n  var binLabels = [];\n  var lowSdFromMean;\n  var upSdFromMean;\n\n  for (b_idx = 0; b_idx < binParams.binNum; b_idx++) {\n    lowSdFromMean = binLowBounds[b_idx].toFixed(2);\n    upSdFromMean = binUpBounds[b_idx].toFixed(2);\n\n    if (b_idx === 0) {\n      binLabels[b_idx] = \"< \" + upSdFromMean;\n    } else if (b_idx === binParams.binNum - 1) {\n      binLabels[b_idx] = \"> \" + lowSdFromMean;\n    } else {\n      binLabels[b_idx] = lowSdFromMean + \"-\" + upSdFromMean;\n    }\n  }\n\n  binStats['glob_mean'] = glob_mean;\n  binStats['glob_sd'] = glob_sd;\n  binStats['binUpBounds'] = binUpBounds;\n  binStats['binLowBounds'] = binLowBounds;\n  binStats['binMeans'] = binMeans;\n  binStats['binLabels'] = binLabels;\n  return {\n    'binStats': binStats\n  };\n}; // utility that takes an array of user-defined bin bounds and produces a data structure containing bin information for histogram plotting\n\n\nvar prescribeHistogramBins = function (curveSubStats, curveSubSecs, binParams) {\n  var binStats = {}; // calculate the global stats across all of the data\n\n  var globalStats = get_err(curveSubStats, curveSubSecs, []); // we don't need levels for the mean or sd calculations, so just pass in an empty array\n\n  var glob_mean = globalStats.d_mean;\n  var glob_sd = globalStats.sd; // make sure the user-defined bins are in order from least to greatest\n\n  binParams.binBounds = binParams.binBounds.sort(function (a, b) {\n    return Number(a) - Number(b);\n  }); // store an array of the upper and lower bounding values for each bin.\n\n  var binUpBounds = [];\n  var binLowBounds = [];\n  var binMeans = [];\n  var binIntervalSum = 0;\n\n  for (var b_idx = 1; b_idx < binParams.binNum - 1; b_idx++) {\n    binUpBounds[b_idx] = binParams.binBounds[b_idx];\n    binLowBounds[b_idx] = binParams.binBounds[b_idx - 1];\n    binMeans[b_idx] = (binUpBounds[b_idx] + binLowBounds[b_idx]) / 2;\n    binIntervalSum = binIntervalSum + (binUpBounds[b_idx] - binLowBounds[b_idx]);\n  }\n\n  var binIntervalAverage = binIntervalSum / (binParams.binNum - 2);\n  binUpBounds[0] = binLowBounds[1];\n  binLowBounds[0] = -1 * Number.MAX_VALUE; // the first bin should have everything too small to fit into the other bins, so make its lower bound -1 * the max number value\n\n  binMeans[0] = binLowBounds[1] - binIntervalAverage / 2; // the bin means for the edge bins is a little arbitrary, so base it on the average bin width\n\n  binUpBounds[binParams.binNum - 1] = Number.MAX_VALUE; // the last bin should have everything too large to fit into the previous bins, so make its upper bound the max number value\n\n  binLowBounds[binParams.binNum - 1] = binUpBounds[binParams.binNum - 2];\n  binMeans[binParams.binNum - 1] = binUpBounds[binParams.binNum - 2] + binIntervalAverage / 2; // the bin means for the edge bins is a little arbitrary, so base it on the average bin width\n  // calculate the labels for each bin, based on the data bounding range, for the graph x-axis later\n\n  var binLabels = [];\n  var lowSdFromMean;\n  var upSdFromMean;\n\n  for (b_idx = 0; b_idx < binParams.binNum; b_idx++) {\n    lowSdFromMean = binLowBounds[b_idx].toFixed(2);\n    upSdFromMean = binUpBounds[b_idx].toFixed(2);\n\n    if (b_idx === 0) {\n      binLabels[b_idx] = \"< \" + upSdFromMean;\n    } else if (b_idx === binParams.binNum - 1) {\n      binLabels[b_idx] = \"> \" + lowSdFromMean;\n    } else {\n      binLabels[b_idx] = lowSdFromMean + \"-\" + upSdFromMean;\n    }\n  }\n\n  binStats['glob_mean'] = glob_mean;\n  binStats['glob_sd'] = glob_sd;\n  binStats['binUpBounds'] = binUpBounds;\n  binStats['binLowBounds'] = binLowBounds;\n  binStats['binMeans'] = binMeans;\n  binStats['binLabels'] = binLabels;\n  return {\n    'binStats': binStats\n  };\n}; // utility that takes arrays of seconds, values, and optionally levels, and produces a data structure for histogram data\n// processing. Used in the initial histogram DB query and in matching.\n\n\nvar sortHistogramBins = function (curveSubStats, curveSubSecs, curveSubLevs, binNum, masterBinStats, hasLevels, d) {\n  // need maps to hold the sub values and seconds (and levels) for each bin, after the bin bounds are calculated.\n  var binSubStats = {};\n  var binSubSecs = {};\n  var binSubLevs = {};\n\n  for (var b_idx = 0; b_idx < binNum; b_idx++) {\n    binSubStats[b_idx] = [];\n    binSubSecs[b_idx] = [];\n    binSubLevs[b_idx] = [];\n  } // calculate the global stats across all of the data\n\n\n  var globalStats;\n\n  if (hasLevels) {\n    globalStats = get_err(curveSubStats, curveSubSecs, curveSubLevs);\n  } else {\n    globalStats = get_err(curveSubStats, curveSubSecs, []);\n  }\n\n  var glob_mean = globalStats.d_mean;\n  var glob_sd = globalStats.sd;\n  var glob_n = globalStats.n_good;\n  var glob_max = globalStats.maxVal;\n  var glob_min = globalStats.minVal; // sort data into bins\n\n  var binUpBounds = masterBinStats.binUpBounds;\n  var binLowBounds = masterBinStats.binLowBounds;\n  var binMeans = masterBinStats.binMeans;\n  var binLabels = masterBinStats.binLabels;\n\n  for (var d_idx = 0; d_idx < curveSubStats.length; d_idx++) {\n    // iterate through all of the bins until we find one where the upper limit is greater than our datum.\n    for (b_idx = 0; b_idx < binNum; b_idx++) {\n      if (curveSubStats[d_idx] <= binUpBounds[b_idx]) {\n        binSubStats[b_idx].push(curveSubStats[d_idx]);\n        binSubSecs[b_idx].push(curveSubSecs[d_idx]);\n\n        if (hasLevels) {\n          binSubLevs[b_idx].push(curveSubLevs[d_idx]);\n        }\n\n        break;\n      }\n    }\n  } // calculate the statistics for each bin\n  // we are especially interested in the number of values in each bin, as that is the plotted stat in a histogram\n\n\n  var binStats;\n  var bin_mean;\n  var bin_sd;\n  var bin_n;\n  var bin_rf;\n  var sum = 0;\n  var count = 0;\n\n  for (b_idx = 0; b_idx < binNum; b_idx++) {\n    if (hasLevels) {\n      binStats = get_err(binSubStats[b_idx], binSubSecs[b_idx], binSubLevs[b_idx]);\n    } else {\n      binStats = get_err(binSubStats[b_idx], binSubSecs[b_idx], []);\n    }\n\n    bin_mean = binStats.d_mean;\n    bin_sd = binStats.sd;\n    bin_n = binStats.n_good;\n    bin_rf = bin_n / glob_n;\n    /*\n    var d = {// d will contain the curve data\n        x: [], //placeholder\n        y: [], //placeholder\n        error_x: [], // unused\n        error_y: [], // unused\n        subVals: [],\n        subSecs: [],\n        subLevs: [],\n        glob_stats: {}, // placeholder\n        bin_stats: [], // placeholder\n        text: [], //placeholder\n        xmax: Number.MIN_VALUE,\n        xmin: Number.MAX_VALUE,\n        ymax: Number.MIN_VALUE,\n        ymin: Number.MAX_VALUE\n    };\n    */\n\n    d.x.push(binMeans[b_idx]);\n    d.y.push(bin_n);\n    d.subVals.push(binSubStats[b_idx]);\n    d.subSecs.push(binSubSecs[b_idx]);\n    d.bin_stats.push({\n      'bin_mean': bin_mean,\n      'bin_sd': bin_sd,\n      'bin_n': bin_n,\n      'bin_rf': bin_rf,\n      'binLowBound': binLowBounds[b_idx],\n      'binUpBound': binUpBounds[b_idx],\n      'binLabel': binLabels[b_idx]\n    });\n    d.text.push(null);\n\n    if (hasLevels) {\n      d.subLevs.push(binSubLevs[b_idx]);\n    } // set axis limits based on returned data\n\n\n    if (d.y[b_idx] !== null) {\n      sum = sum + d.y[b_idx];\n      count++;\n      d.ymin = d.ymin < d.y[b_idx] ? d.ymin : d.y[b_idx];\n      d.ymax = d.ymax > d.y[b_idx] ? d.ymax : d.y[b_idx];\n    }\n  }\n\n  d.glob_stats = {\n    'glob_mean': glob_mean,\n    'glob_sd': glob_sd,\n    'glob_n': glob_n,\n    'glob_max': glob_max,\n    'glob_min': glob_min\n  };\n  d.xmin = d.x[0];\n  d.xmax = d.x[binNum - 1];\n  return {\n    d: d\n  };\n}; // utility that takes the curve params for two contour plots and collapses them into the curve params for one diff contour.\n\n\nvar getDiffContourCurveParams = function (curves) {\n  var newCurve = {};\n  var curveKeys = Object.keys(curves[0]);\n  var currKey;\n\n  for (var ckidx = 0; ckidx < curveKeys.length; ckidx++) {\n    currKey = curveKeys[ckidx];\n\n    if (currKey === 'color') {\n      newCurve['color'] = \"rgb(255,165,0)\";\n    } else if (curves[0][currKey] === curves[1][currKey]) {\n      newCurve[currKey] = curves[0][currKey];\n    } else {\n      newCurve[currKey] = curves[1][currKey] + \"-\" + curves[0][currKey];\n    }\n  }\n\n  return [newCurve];\n}; //used for sorting arrays\n\n\nvar sortFunction = function (a, b) {\n  if (a[0] === b[0]) {\n    return 0;\n  } else {\n    return a[0] < b[0] ? -1 : 1;\n  }\n};\n\nmodule.exportDefault(matsDataUtils = {\n  areObjectsEqual: areObjectsEqual,\n  arrayContainsArray: arrayContainsArray,\n  arrayContainsSubArray: arrayContainsSubArray,\n  arraysEqual: arraysEqual,\n  arrayUnique: arrayUnique,\n  findArrayInSubArray: findArrayInSubArray,\n  objectContainsObject: objectContainsObject,\n  average: average,\n  stdev: stdev,\n  dateConvert: dateConvert,\n  getDateRange: getDateRange,\n  secsConvert: secsConvert,\n  doAuthorization: doAuthorization,\n  doColorScheme: doColorScheme,\n  doCredentials: doCredentials,\n  doRoles: doRoles,\n  doSettings: doSettings,\n  getPlotParamsFromStack: getPlotParamsFromStack,\n  get_err: get_err,\n  setHistogramParameters: setHistogramParameters,\n  calculateHistogramBins: calculateHistogramBins,\n  prescribeHistogramBins: prescribeHistogramBins,\n  sortHistogramBins: sortHistogramBins,\n  getDiffContourCurveParams: getDiffContourCurveParams,\n  sortFunction: sortFunction\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"data_query_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/server/data_query_util.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar matsDataUtils, matsTypes, matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsDataUtils: function (v) {\n    matsDataUtils = v;\n  },\n  matsTypes: function (v) {\n    matsTypes = v;\n  },\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 0);\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\n\n//const Future = require('fibers/future');\n//utility to get the cadence for a particular model, so that the query function\n//knows where to include null points for missing data.\nvar getModelCadence = function (pool, dataSource, startDate, endDate) {\n  var rows = [];\n  var cycles;\n\n  try {\n    //this query should only return data if the model cadence is irregular.\n    //otherwise, the cadence will be calculated later by the query function.\n    rows = simplePoolQueryWrapSynchronous(pool, \"select cycle_seconds \" + \"from mats_common.primary_model_orders \" + \"where model = \" + \"(select new_model as display_text from mats_common.standardized_model_list where old_model = '\" + dataSource + \"');\");\n    var cycles_raw = JSON.parse(rows[0].cycle_seconds);\n    var cycles_keys = Object.keys(cycles_raw).sort(); //there can be difference cadences for different time periods (each time period is a key in cycles_keys,\n    //with the cadences for that period represented as values in cycles_raw), so this section identifies all\n    //time periods relevant to the requested date range, and returns the union of their cadences.\n\n    if (cycles_keys.length !== 0) {\n      var newTime;\n      var chosenStartTime;\n      var chosenEndTime;\n      var chosenStartIdx;\n      var chosenEndIdx;\n      var foundStart = false;\n      var foundEnd = false;\n\n      for (var ti = cycles_keys.length - 1; ti >= 0; ti--) {\n        newTime = cycles_keys[ti];\n\n        if (startDate >= Number(newTime) && !foundStart) {\n          chosenStartTime = newTime;\n          chosenStartIdx = ti;\n          foundStart = true;\n        }\n\n        if (endDate >= Number(newTime) && !foundEnd) {\n          chosenEndTime = newTime;\n          chosenEndIdx = ti;\n          foundEnd = true;\n        }\n\n        if (foundStart && foundEnd) {\n          break;\n        }\n      }\n\n      if (chosenStartTime !== undefined && chosenEndTime !== undefined) {\n        if (Number(chosenStartTime) === Number(chosenEndTime)) {\n          cycles = cycles_raw[chosenStartTime];\n        } else if (chosenEndIdx - chosenStartIdx === 1) {\n          var startCycles = cycles_raw[chosenStartTime];\n          var endCycles = cycles_raw[chosenEndTime];\n          cycles = _.union(startCycles, endCycles);\n        } else {\n          var middleCycles = [];\n          var currCycles;\n\n          for (ti = chosenStartIdx + 1; ti < chosenEndIdx; ti++) {\n            currCycles = cycles_raw[cycles_keys[ti]];\n            middleCycles = _.union(middleCycles, currCycles);\n          }\n\n          var _startCycles = cycles_raw[chosenStartTime];\n          var _endCycles = cycles_raw[chosenEndTime];\n          cycles = _.union(_startCycles, _endCycles, middleCycles);\n        }\n      }\n    }\n  } catch (e) {//ignore - just a safety check, don't want to exit if there isn't a cycles_per_model entry\n    //if there isn't a cycles_per_model entry, it just means that the model has a regular cadence\n  }\n\n  if (cycles !== null && cycles !== undefined && cycles.length > 0) {\n    for (var c = 0; c < cycles.length; c++) {\n      cycles[c] = cycles[c] * 1000; // convert to milliseconds\n    }\n  } else {\n    cycles = []; //regular cadence model--cycles will be calculated later by the query function\n  }\n\n  return cycles;\n}; //this function calculates the interval between the current time and the next time for irregular cadence models.\n\n\nvar getTimeInterval = function (avTime, time_interval, foreCastOffset, cycles) {\n  //have to calculate the time_interval\n  var ti;\n  var dayInMilliSeconds = 24 * 3600 * 1000;\n  var minCycleTime = Math.min.apply(Math, (0, _toConsumableArray2.default)(cycles));\n  var thisCadence = avTime % dayInMilliSeconds; //current hour of day (valid time)\n\n  if (Number(thisCadence) - Number(foreCastOffset) * 3600 * 1000 < 0) {\n    //check to see if cycle time was on previous day -- if so, need to wrap around 00Z to get current hour of day (cycle time)\n    thisCadence = Number(thisCadence) - Number(foreCastOffset) * 3600 * 1000 + dayInMilliSeconds; //current hour of day (cycle time)\n  } else {\n    thisCadence = Number(thisCadence) - Number(foreCastOffset) * 3600 * 1000; //current hour of day (cycle time)\n  }\n\n  var thisCadenceIdx = cycles.indexOf(thisCadence); //fnd our where the current hour of day is in the cycles array\n\n  if (thisCadenceIdx !== -1) {\n    var nextCadenceIdx = thisCadenceIdx + 1; //choose the next hour of the day\n\n    if (nextCadenceIdx >= cycles.length) {\n      ti = dayInMilliSeconds - thisCadence + minCycleTime; //if we were at the last cycle cadence, wrap back around to the first cycle cadence\n    } else {\n      ti = cycles[nextCadenceIdx] - cycles[thisCadenceIdx]; //otherwise take the difference between the current and next hours of the day.\n    }\n  } else {\n    ti = time_interval; //if for some reason the current hour of the day isn't in the cycles array, default to the regular cadence interval\n  }\n\n  return ti;\n}; //utility for querying the DB\n\n\nvar simplePoolQueryWrapSynchronous = function (pool, statement) {\n  /*\n   simple synchronous query of statement to the specified pool.\n   params :\n   pool - a predefined db pool (usually defined in main.js). i.e. wfip2Pool = mysql.createPool(wfip2Settings);\n   statement - String - a valid sql statement\n   actions - queries database and will wait until query returns.\n   return: rowset - an array of rows\n   throws: error\n   */\n  if (Meteor.isServer) {\n    var Future = require('fibers/future');\n\n    var queryWrap = Future.wrap(function (pool, statement, callback) {\n      pool.query(statement, function (err, rows) {\n        return callback(err, rows);\n      });\n    });\n    return queryWrap(pool, statement).wait();\n  }\n}; //this method queries the database for timeseries plots\n\n\nvar queryDBTimeSeries = function (pool, statement, dataSource, forecastOffset, startDate, endDate, averageStr, validTimes, hasLevels, forceRegularCadence) {\n  //upper air is only verified at 00Z and 12Z, so you need to force irregular models to verify at that regular cadence\n  var Future = require('fibers/future');\n\n  if (Meteor.isServer) {\n    var plotParams = matsDataUtils.getPlotParamsFromStack();\n    var completenessQCParam = Number(plotParams[\"completeness\"]) / 100;\n    var cycles = getModelCadence(pool, dataSource, startDate, endDate); // if irregular model cadence, get cycle times. If regular, get empty array.\n\n    if (validTimes.length > 0 && validTimes !== matsTypes.InputTypes.unused) {\n      var vtCycles = validTimes.map(function (x) {\n        return (Number(x) - forecastOffset) * 3600 * 1000;\n      }); // selecting validTimes makes the cadence irregular\n\n      vtCycles = vtCycles.map(function (x) {\n        return x < 0 ? x + 24 * 3600 * 1000 : x;\n      }); // make sure no cycles are negative\n\n      vtCycles = vtCycles.sort(function (a, b) {\n        return Number(a) - Number(b);\n      }); //sort 'em\n\n      cycles = cycles.length > 0 ? _.intersection(cycles, vtCycles) : vtCycles; // if we already had cycles get the ones that correspond to valid times\n    }\n\n    var regular = forceRegularCadence || averageStr !== \"None\" || !(cycles !== null && cycles.length > 0); // If curves have averaging, the cadence is always regular, i.e. it's the cadence of the average\n\n    var dFuture = new Future();\n    var d = {\n      // d will contain the curve data\n      x: [],\n      y: [],\n      error_x: [],\n      error_y: [],\n      subVals: [],\n      subSecs: [],\n      subLevs: [],\n      stats: [],\n      text: [],\n      xmin: Number.MAX_VALUE,\n      xmax: Number.MIN_VALUE,\n      ymin: Number.MAX_VALUE,\n      ymax: Number.MIN_VALUE,\n      sum: 0\n    };\n    var error = \"\";\n    var N0 = [];\n    var N_times = [];\n    pool.query(statement, function (err, rows) {\n      // query callback - build the curve data from the results - or set an error\n      if (err !== undefined && err !== null) {\n        error = err.message;\n      } else if (rows === undefined || rows === null || rows.length === 0) {\n        error = matsTypes.Messages.NO_DATA_FOUND;\n      } else {\n        var parsedData = parseQueryDataTimeSeries(pool, rows, d, completenessQCParam, hasLevels, averageStr, forecastOffset, cycles, regular);\n        d = parsedData.d;\n        N0 = parsedData.N0;\n        N_times = parsedData.N_times;\n        cycles = parsedData.cycles;\n      } // done waiting - have results\n\n\n      dFuture['return']();\n    }); // wait for future to finish\n\n    dFuture.wait();\n    return {\n      data: d,\n      error: error,\n      N0: N0,\n      N_times: N_times,\n      averageStr: averageStr,\n      cycles: cycles\n    };\n  }\n}; //this method queries the database for specialty curves such as profiles, dieoffs, threshold plots, valid time plots, and histograms\n\n\nvar queryDBSpecialtyCurve = function (pool, statement, plotType, hasLevels) {\n  if (Meteor.isServer) {\n    var Future = require('fibers/future');\n\n    var plotParams = matsDataUtils.getPlotParamsFromStack();\n    var completenessQCParam = Number(plotParams[\"completeness\"]) / 100;\n    var appType = matsCollections.Settings.findOne({}).appType;\n    var dFuture = new Future();\n    var d = {\n      // d will contain the curve data\n      x: [],\n      y: [],\n      error_x: [],\n      error_y: [],\n      subVals: [],\n      subSecs: [],\n      subLevs: [],\n      stats: [],\n      text: [],\n      xmin: Number.MAX_VALUE,\n      xmax: Number.MIN_VALUE,\n      ymin: Number.MAX_VALUE,\n      ymax: Number.MIN_VALUE,\n      sum: 0\n    };\n    var error = \"\";\n    var N0 = [];\n    var N_times = [];\n    pool.query(statement, function (err, rows) {\n      // query callback - build the curve data from the results - or set an error\n      if (err !== undefined && err !== null) {\n        error = err.message;\n      } else if (rows === undefined || rows === null || rows.length === 0) {\n        error = matsTypes.Messages.NO_DATA_FOUND;\n      } else {\n        var parsedData;\n\n        if (plotType !== matsTypes.PlotTypes.histogram) {\n          parsedData = parseQueryDataSpecialtyCurve(rows, d, completenessQCParam, plotType, appType, hasLevels);\n        } else {\n          parsedData = parseQueryDataHistogram(d, rows, hasLevels);\n        }\n\n        d = parsedData.d;\n        N0 = parsedData.N0;\n        N_times = parsedData.N_times;\n      }\n\n      dFuture['return']();\n    }); // wait for future to finish\n\n    dFuture.wait();\n    return {\n      data: d,\n      error: error,\n      N0: N0,\n      N_times: N_times\n    };\n  }\n}; //this method queries the database for map plots\n\n\nvar queryMapDB = function (pool, statement, dataSource, variable, varUnits, siteMap) {\n  if (Meteor.isServer) {\n    // d will contain the curve data\n    var d = {\n      siteName: [],\n      queryVal: [],\n      lat: [],\n      lon: [],\n      color: [],\n      stats: [],\n      text: []\n    }; // for biases <= -1\n\n    var dBlue = {\n      siteName: [],\n      queryVal: [],\n      lat: [],\n      lon: [],\n      stats: [],\n      text: [],\n      color: \"rgb(0,0,255)\"\n    }; // for biases > -1 and < 1\n\n    var dBlack = {\n      siteName: [],\n      queryVal: [],\n      lat: [],\n      lon: [],\n      stats: [],\n      text: [],\n      color: \"rgb(0,0,0)\"\n    }; // for biases >= 1\n\n    var dRed = {\n      siteName: [],\n      queryVal: [],\n      lat: [],\n      lon: [],\n      stats: [],\n      text: [],\n      color: \"rgb(255,0,0)\"\n    };\n    var error = \"\";\n\n    var Future = require('fibers/future');\n\n    var pFuture = new Future();\n    pool.query(statement, function (err, rows) {\n      // query callback - build the curve data from the results - or set an error\n      if (err !== undefined && err !== null) {\n        error = err.message;\n      } else if (rows === undefined || rows === null || rows.length === 0) {\n        error = matsTypes.Messages.NO_DATA_FOUND;\n      } else {\n        var queryVal;\n\n        var _loop = function () {\n          var site = rows[rowIndex].sta_name;\n          queryVal = rows[rowIndex].model_ob_diff;\n          d.siteName.push(site);\n          d.queryVal.push(queryVal);\n          d.stats.push({\n            N_times: rows[rowIndex].N_times,\n            min_time: rows[rowIndex].min_time,\n            max_time: rows[rowIndex].max_time\n          });\n          tooltips = site + \"<br>\" + \"variable: \" + variable + \"<br>\" + \"model: \" + dataSource + \"<br>\" + \"model-obs: \" + queryVal + \" \" + varUnits + \"<br>\" + \"n: \" + rows[rowIndex].N_times;\n          d.text.push(tooltips);\n          thisSite = siteMap.find(function (obj) {\n            return obj.name === site;\n          });\n          d.lat.push(thisSite.point[0]);\n          d.lon.push(thisSite.point[1]);\n          textMarker = queryVal === null ? \"\" : queryVal.toFixed(0);\n\n          if (queryVal <= -1) {\n            d.color.push(\"rgb(0,0,255)\");\n            dBlue.siteName.push(site);\n            dBlue.queryVal.push(queryVal);\n            dBlue.text.push(textMarker);\n            dBlue.lat.push(thisSite.point[0]);\n            dBlue.lon.push(thisSite.point[1]);\n          } else if (queryVal >= 1) {\n            d.color.push(\"rgb(255,0,0)\");\n            dRed.siteName.push(site);\n            dRed.queryVal.push(queryVal);\n            dRed.text.push(textMarker);\n            dRed.lat.push(thisSite.point[0]);\n            dRed.lon.push(thisSite.point[1]);\n          } else {\n            d.color.push(\"rgb(0,0,0)\");\n            dBlack.siteName.push(site);\n            dBlack.queryVal.push(queryVal);\n            dBlack.text.push(textMarker);\n            dBlack.lat.push(thisSite.point[0]);\n            dBlack.lon.push(thisSite.point[1]);\n          }\n        };\n\n        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n          var tooltips;\n          var thisSite;\n          var textMarker;\n\n          _loop();\n        } // end of loop row\n\n      } // done waiting - have results\n\n\n      pFuture['return']();\n    }); // wait for future to finish\n\n    pFuture.wait();\n    return {\n      data: d,\n      // [sub_values,sub_secs] as arrays\n      dataBlue: dBlue,\n      // [sub_values,sub_secs] as arrays\n      dataBlack: dBlack,\n      // [sub_values,sub_secs] as arrays\n      dataRed: dRed,\n      // [sub_values,sub_secs] as arrays\n      error: error\n    };\n  }\n}; //this method queries the database for contour plots\n\n\nvar queryDBContour = function (pool, statement) {\n  if (Meteor.isServer) {\n    var Future = require('fibers/future');\n\n    var dFuture = new Future();\n    var d = {\n      // d will contain the curve data\n      x: [],\n      y: [],\n      z: [],\n      n: [],\n      text: [],\n      xTextOutput: [],\n      yTextOutput: [],\n      zTextOutput: [],\n      nTextOutput: [],\n      minDateTextOutput: [],\n      maxDateTextOutput: [],\n      stats: [],\n      glob_stats: {},\n      xmin: Number.MAX_VALUE,\n      xmax: Number.MIN_VALUE,\n      ymin: Number.MAX_VALUE,\n      ymax: Number.MIN_VALUE,\n      zmin: Number.MAX_VALUE,\n      zmax: Number.MIN_VALUE,\n      sum: 0\n    };\n    var error = \"\";\n    pool.query(statement, function (err, rows) {\n      // query callback - build the curve data from the results - or set an error\n      if (err !== undefined && err !== null) {\n        error = err.message;\n      } else if (rows === undefined || rows === null || rows.length === 0) {\n        error = matsTypes.Messages.NO_DATA_FOUND;\n      } else {\n        var parsedData = parseQueryDataContour(rows, d);\n        d = parsedData.d;\n      }\n\n      dFuture['return']();\n    }); // wait for future to finish\n\n    dFuture.wait();\n    return {\n      data: d,\n      error: error\n    };\n  }\n}; //this method parses the returned query data for timeseries plots\n\n\nvar parseQueryDataTimeSeries = function (pool, rows, d, completenessQCParam, hasLevels, averageStr, foreCastOffset, cycles, regular) {\n  /*\n      var d = {// d will contain the curve data\n          x: [],\n          y: [],\n          error_x: [],   // curveTime\n          error_y: [],   // values\n          subVals: [],   //subVals\n          subSecs: [],   //subSecs\n          subLevs: [],   //subLevs\n          stats: [],     //pointStats\n          text: [],\n          glob_stats: {},     //curveStats\n          xmin: Number.MAX_VALUE,\n          xmax: Number.MIN_VALUE,\n          ymin: Number.MAX_VALUE,\n          ymax: Number.MIN_VALUE,\n          sum: 0\n      };\n  */\n  d.error_x = null; // time series doesn't use x errorbars\n\n  var N0 = [];\n  var N_times = [];\n  var xmax = Number.MIN_VALUE;\n  var xmin = Number.MAX_VALUE;\n  var curveTime = [];\n  var curveStats = [];\n  var subVals = [];\n  var subSecs = [];\n  var subLevs = [];\n  var time_interval = rows.length > 1 ? Number(rows[1].avtime) - Number(rows[0].avtime) : undefined; //calculate a base time interval -- will be used if data is regular\n\n  for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n    var avSeconds = Number(rows[rowIndex].avtime);\n    var avTime = avSeconds * 1000;\n    xmin = avTime < xmin ? avTime : xmin;\n    xmax = avTime > xmax ? avTime : xmax;\n    var stat = rows[rowIndex].stat;\n    N0.push(rows[rowIndex].N0); // number of values that go into a time series point\n\n    N_times.push(rows[rowIndex].N_times); // number of times that go into a time series point\n    // find the minimum time_interval. For regular models, this will differ from the previous time_interval\n    // if the interval was artificially large due to missing values. For irregular models, we need the minimum\n    // interval to be sure we don't accidentally go past the next data point.\n\n    if (rowIndex < rows.length - 1) {\n      var time_diff = Number(rows[rowIndex + 1].avtime) - Number(rows[rowIndex].avtime);\n\n      if (time_diff < time_interval) {\n        time_interval = time_diff;\n      }\n    } // store sub values that will later be used for calculating error bar statistics.\n\n\n    var sub_values = [];\n    var sub_secs = [];\n    var sub_levs = [];\n\n    if (stat !== null && stat !== \"NULL\" && rows[rowIndex].sub_data !== undefined) {\n      try {\n        var sub_data = rows[rowIndex].sub_data.toString().split(',');\n        var curr_sub_data;\n\n        for (var sd_idx = 0; sd_idx < sub_data.length; sd_idx++) {\n          curr_sub_data = sub_data[sd_idx].split(';');\n          sub_values.push(Number(curr_sub_data[0]));\n          sub_secs.push(Number(curr_sub_data[1]));\n\n          if (hasLevels) {\n            if (!isNaN(Number(curr_sub_data[2]))) {\n              sub_levs.push(Number(curr_sub_data[2]));\n            } else {\n              sub_levs.push(curr_sub_data[2]);\n            }\n          }\n        }\n      } catch (e) {\n        // this is an error produced by a bug in the query function, not an error returned by the mysql database\n        e.message = \"Error in parseQueryDataTimeSeries. The expected fields don't seem to be present in the results cache: \" + e.message;\n        throw new Error(e.message);\n      }\n    } else {\n      sub_values = NaN;\n      sub_secs = NaN;\n\n      if (hasLevels) {\n        sub_levs = NaN;\n      }\n    }\n\n    curveTime.push(avTime);\n    curveStats.push(stat);\n    subVals.push(sub_values);\n    subSecs.push(sub_secs);\n\n    if (hasLevels) {\n      subLevs.push(sub_levs);\n    }\n  }\n\n  var N0_max = Math.max.apply(Math, N0);\n  var N_times_max = Math.max.apply(Math, N_times);\n\n  if (xmin < Number(rows[0].avtime) * 1000 || averageStr !== \"None\") {\n    xmin = Number(rows[0].avtime) * 1000;\n  }\n\n  time_interval = time_interval * 1000;\n  var loopTime = xmin;\n  var sum = 0;\n\n  while (loopTime <= xmax) {\n    var d_idx = curveTime.indexOf(loopTime);\n\n    if (d_idx < 0) {\n      if (hasLevels) {\n        //d.push([loopTime, null, -1, NaN, NaN, NaN]);// add a null for missing data\n        d.x.push(loopTime);\n        d.y.push(null); //d.error_x not used\n\n        d.error_y.push(null); //placeholder\n\n        d.subVals.push(NaN);\n        d.subSecs.push(NaN);\n        d.subLevs.push(NaN);\n      } else {\n        //d.push([loopTime, null, -1, NaN, NaN]);     // add a null for missing data\n        d.x.push(loopTime);\n        d.y.push(null); //d.error_x not used\n\n        d.error_y.push(null); //placeholder\n\n        d.subVals.push(NaN);\n        d.subSecs.push(NaN);\n      }\n    } else {\n      var this_N0 = N0[d_idx];\n      var this_N_times = N_times[d_idx]; // Make sure that we don't have any points with far less data than the rest of the graph, and that\n      // we don't have any points with a smaller completeness value than specified by the user.\n\n      if (this_N0 < 0.1 * N0_max || this_N_times < completenessQCParam * N_times_max) {\n        if (hasLevels) {\n          //                    d.push([loopTime, null, -1, NaN, NaN, NaN]);     // add a null if this time doesn't pass QC\n          d.x.push(loopTime);\n          d.y.push(null); //d.error_x not used\n\n          d.error_y.push(null); //placeholder\n\n          d.subVals.push(NaN);\n          d.subSecs.push(NaN);\n          d.subLevs.push(NaN);\n        } else {\n          //                    d.push([loopTime, null, -1, NaN, NaN]);     // add a null if this time doesn't pass QC\n          d.x.push(loopTime);\n          d.y.push(null); //d.error_x not used\n\n          d.error_y.push(null); //placeholder\n\n          d.subVals.push(NaN);\n          d.subSecs.push(NaN);\n        }\n      } else {\n        sum += curveStats[d_idx];\n\n        if (hasLevels) {\n          //d.push([loopTime, curveStats[d_idx], -1, subVals[d_idx], subSecs[d_idx], subLevs[d_idx]]);   // else add the real data\n          d.x.push(loopTime);\n          d.y.push(curveStats[d_idx]); //d.error_x not used\n\n          d.error_y.push(null);\n          d.subVals.push(subVals[d_idx]);\n          d.subSecs.push(subSecs[d_idx]);\n          d.subLevs.push(subLevs[d_idx]);\n        } else {\n          //d.push([loopTime, curveStats[d_idx], -1, subVals[d_idx], subSecs[d_idx]]);   // else add the real data\n          d.x.push(loopTime);\n          d.y.push(curveStats[d_idx]); //d.error_x not used\n\n          d.error_y.push(null);\n          d.subVals.push(subVals[d_idx]);\n          d.subSecs.push(subSecs[d_idx]);\n        }\n      }\n    }\n\n    if (!regular) {\n      // it is a model that has an irregular set of intervals, i.e. an irregular cadence\n      time_interval = getTimeInterval(loopTime, time_interval, foreCastOffset, cycles); // the time interval most likely will not be the one calculated above\n    }\n\n    loopTime = loopTime + time_interval; // advance to the next time.\n  }\n\n  if (regular) {\n    cycles = [time_interval]; // regular models will return one cycle cadence\n  }\n\n  var filteredx = d.x.filter(function (x) {\n    return x;\n  });\n  var filteredy = d.y.filter(function (y) {\n    return y;\n  });\n  d.xmin = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredx));\n  d.xmax = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredx));\n  d.ymin = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredy));\n  d.ymax = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredy));\n  d.sum = sum;\n\n  if (d.xmin == \"-Infinity\" || d.x.indexOf(0) !== -1 && 0 < d.xmin) {\n    d.xmin = 0;\n  }\n\n  if (d.ymin == \"-Infinity\" || d.y.indexOf(0) !== -1 && 0 < d.ymin) {\n    d.ymin = 0;\n  }\n\n  if (d.xmax == \"-Infinity\") {\n    d.xmax = 0;\n  }\n\n  if (d.ymax == \"-Infinity\") {\n    d.ymax = 0;\n  }\n\n  return {\n    d: d,\n    N0: N0,\n    N_times: N_times,\n    cycles: cycles\n  };\n}; //this method parses the returned query data for specialty curves such as profiles, dieoffs, threshold plots, and valid time plots\n\n\nvar parseQueryDataSpecialtyCurve = function (rows, d, completenessQCParam, plotType, appType, hasLevels) {\n  /*\n      var d = {// d will contain the curve data\n          x: [],\n          y: [],\n          error_x: [],   // curveTime\n          error_y: [],   // values\n          subVals: [],   //subVals\n          subSecs: [],   //subSecs\n          subLevs: [],   //subLevs\n          stats: [],     //pointStats\n          text: [],\n          glob_stats: {},     //curveStats\n          xmin:num,\n          ymin:num,\n          xmax:num,\n          ymax:num,\n          sum:num;\n      };\n  */\n  var N0 = [];\n  var N_times = [];\n  var curveIndependentVars = [];\n  var curveStats = [];\n  var subVals = [];\n  var subSecs = [];\n  var subLevs = [];\n\n  for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n    var independentVar;\n\n    if (plotType === matsTypes.PlotTypes.validtime) {\n      independentVar = Number(rows[rowIndex].hr_of_day);\n    } else if (plotType === matsTypes.PlotTypes.profile) {\n      independentVar = Number(rows[rowIndex].avVal.toString().replace('P', ''));\n    } else if (plotType === matsTypes.PlotTypes.dailyModelCycle) {\n      independentVar = Number(rows[rowIndex].avtime) * 1000;\n    } else {\n      independentVar = Number(rows[rowIndex].avtime);\n    }\n\n    var stat = rows[rowIndex].stat;\n    N0.push(rows[rowIndex].N0); // number of values that go into a point on the graph\n\n    N_times.push(rows[rowIndex].N_times); // number of times that go into a point on the graph\n\n    var sub_stats = [];\n    var sub_secs = [];\n    var sub_levs = [];\n\n    if (stat !== null && stat !== \"NULL\" && rows[rowIndex].sub_data !== undefined) {\n      try {\n        var sub_data = rows[rowIndex].sub_data.toString().split(',');\n        var curr_sub_data;\n\n        for (var sd_idx = 0; sd_idx < sub_data.length; sd_idx++) {\n          curr_sub_data = sub_data[sd_idx].split(';');\n          sub_stats.push(Number(curr_sub_data[0]));\n          sub_secs.push(Number(curr_sub_data[1]));\n\n          if (hasLevels) {\n            if (!isNaN(Number(curr_sub_data[2]))) {\n              sub_levs.push(Number(curr_sub_data[2]));\n            } else {\n              sub_levs.push(curr_sub_data[2]);\n            }\n          }\n        }\n      } catch (e) {\n        // this is an error produced by a bug in the query function, not an error returned by the mysql database\n        e.message = \"Error in parseQueryDataSpecialtyCurve. The expected fields don't seem to be present in the results cache: \" + e.message;\n        throw new Error(e.message);\n      }\n    } else {\n      sub_stats = NaN;\n      sub_secs = NaN;\n\n      if (hasLevels) {\n        sub_levs = NaN;\n      }\n    } // deal with missing forecast cycles for dailyModelCycle plot type\n\n\n    if (plotType === matsTypes.PlotTypes.dailyModelCycle && rowIndex > 0 && Number(independentVar) - Number(rows[rowIndex - 1].avtime * 1000) > 3600 * 24 * 1000) {\n      var cycles_missing = Math.floor((Number(independentVar) - Number(rows[rowIndex - 1].avtime * 1000)) / (3600 * 24 * 1000));\n\n      for (var missingIdx = cycles_missing; missingIdx > 0; missingIdx--) {\n        curveIndependentVars.push(independentVar - 3600 * 24 * 1000 * missingIdx);\n        curveStats.push(null);\n        subVals.push(NaN);\n        subSecs.push(NaN);\n\n        if (hasLevels) {\n          subLevs.push(NaN);\n        }\n      }\n    }\n\n    curveIndependentVars.push(independentVar);\n    curveStats.push(stat);\n    subVals.push(sub_stats);\n    subSecs.push(sub_secs);\n\n    if (hasLevels) {\n      subLevs.push(sub_levs);\n    }\n  }\n\n  var N0_max = Math.max.apply(Math, N0);\n  var N_times_max = Math.max.apply(Math, N_times);\n  var sum = 0;\n\n  for (var d_idx = 0; d_idx < curveIndependentVars.length; d_idx++) {\n    var this_N0 = N0[d_idx];\n    var this_N_times = N_times[d_idx]; // Make sure that we don't have any points with far less data than the rest of the graph, and that\n    // we don't have any points with a smaller completeness value than specified by the user.\n\n    if (this_N0 < 0.05 * N0_max || this_N_times < completenessQCParam * N_times_max) {\n      if (plotType === matsTypes.PlotTypes.profile) {\n        // profile has the stat first, and then the independent var. The others have independent var and then stat.\n        // this is in the pattern of x-plotted-variable, y-plotted-variable.\n        //d.push([null, curveIndependentVars[d_idx], -1, NaN, NaN, NaN]);\n        d.x.push(null);\n        d.y.push(curveIndependentVars[d_idx]);\n        d.error_x.push(null); // placeholder\n        //d.error_y not used for profile\n\n        d.subVals.push(NaN);\n        d.subSecs.push(NaN);\n        d.subLevs.push(NaN);\n      } else if (plotType !== matsTypes.PlotTypes.dieoff) {\n        // for dieoffs, we don't want to add a null for missing data. Just don't have a point for that FHR.\n        if (hasLevels) {\n          //d.push([curveIndependentVars[d_idx], null, -1, NaN, NaN, NaN]);\n          d.x.push(curveIndependentVars[d_idx]);\n          d.y.push(null); //d.error_x not used for curves other than profile\n\n          d.error_y.push(null); // placeholder\n\n          d.subVals.push(NaN);\n          d.subSecs.push(NaN);\n          d.subLevs.push(NaN);\n        } else {\n          //d.push([curveIndependentVars[d_idx], null, -1, NaN, NaN]);\n          d.x.push(curveIndependentVars[d_idx]);\n          d.y.push(null); //d.error_x not used for curves other than profile\n\n          d.error_y.push(null); // placeholder\n\n          d.subVals.push(NaN);\n          d.subSecs.push(NaN);\n        }\n      }\n    } else {\n      // else add the real data\n      sum += curveStats[d_idx];\n\n      if (plotType === matsTypes.PlotTypes.profile) {\n        // profile has the stat first, and then the independent var. The others have independent var and then stat.\n        // this is in the pattern of x-plotted-variable, y-plotted-variable.\n        //                d.push([curveStats[d_idx], curveIndependentVars[d_idx], -1, subVals[d_idx], subSecs[d_idx], subLevs[d_idx]]);\n        d.x.push(curveStats[d_idx]);\n        d.y.push(curveIndependentVars[d_idx]);\n        d.error_x.push(null); // placeholder\n        //d.error_y not used for curves other than profile\n\n        d.subVals.push(subVals[d_idx]);\n        d.subSecs.push(subSecs[d_idx]);\n        d.subLevs.push(subLevs[d_idx]);\n      } else if (hasLevels) {\n        //                d.push([curveIndependentVars[d_idx], curveStats[d_idx], -1, subVals[d_idx], subSecs[d_idx], subLevs[d_idx]]);\n        d.x.push(curveIndependentVars[d_idx]);\n        d.y.push(curveStats[d_idx]); //d.error_x not used for curves other than profile\n\n        d.error_y.push(null); // placeholder\n\n        d.subVals.push(subVals[d_idx]);\n        d.subSecs.push(subSecs[d_idx]);\n        d.subLevs.push(subLevs[d_idx]);\n      } else {\n        //                d.push([curveIndependentVars[d_idx], curveStats[d_idx], -1, subVals[d_idx], subSecs[d_idx]]);\n        d.x.push(curveIndependentVars[d_idx]);\n        d.y.push(curveStats[d_idx]); //d.error_x not used for curves other than profile\n\n        d.error_y.push(null); // placeholder\n\n        d.subVals.push(subVals[d_idx]);\n        d.subSecs.push(subSecs[d_idx]);\n      }\n    }\n  } // the met levels are ordered as strings, so we need to re-sort them\n\n\n  if (plotType === matsTypes.PlotTypes.profile && appType === matsTypes.AppTypes.metexpress) {\n    var dSorted = [];\n\n    for (var didx = 0; didx < d.y.length; didx++) {\n      dSorted.push({\n        y: d.y[didx],\n        x: d.x[didx],\n        error_x: d.error_x[didx],\n        subVals: d.subVals[didx],\n        subSecs: d.subSecs[didx],\n        subLevs: d.subLevs[didx]\n      });\n    }\n\n    d.y = [];\n    d.x = [];\n    d.error_x = [];\n    d.subVals = [];\n    d.subSecs = [];\n    d.subLevs = [];\n    dSorted.sort(function (a, b) {\n      return a.y - b.y;\n    });\n    dSorted.map(function (elem) {\n      d.y.push(elem.y);\n      d.x.push(elem.x);\n      d.error_x.push(elem.error_x);\n      d.subVals.push(elem.subVals);\n      d.subSecs.push(elem.subSecs);\n      d.subLevs.push(elem.subLevs);\n    });\n  }\n\n  var filteredx = d.x.filter(function (x) {\n    return x;\n  });\n  var filteredy = d.y.filter(function (y) {\n    return y;\n  });\n  d.xmin = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredx));\n  d.xmax = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredx));\n  d.ymin = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredy));\n  d.ymax = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredy));\n  d.sum = sum;\n\n  if (d.xmin == \"-Infinity\" || d.x.indexOf(0) !== -1 && 0 < d.xmin) {\n    d.xmin = 0;\n  }\n\n  if (d.ymin == \"-Infinity\" || d.y.indexOf(0) !== -1 && 0 < d.ymin) {\n    d.ymin = 0;\n  }\n\n  if (d.xmax == \"-Infinity\") {\n    d.xmax = 0;\n  }\n\n  if (d.ymax == \"-Infinity\") {\n    d.ymax = 0;\n  }\n\n  return {\n    d: d,\n    N0: N0,\n    N_times: N_times\n  };\n}; // this method parses the returned query data for histograms\n\n\nvar parseQueryDataHistogram = function (d, rows, hasLevels) {\n  /*\n      var d = {// d will contain the curve data\n          x: [], //placeholder\n          y: [], //placeholder\n          error_x: [], // unused\n          error_y: [], // unused\n          subVals: [],\n          subSecs: [],\n          subLevs: [],\n          glob_stats: [], // placeholder\n          bin_stats: [], // placeholder\n          text: [] //placeholder\n          xmin:num,\n          xmax:num,\n          ymin:num,\n          ymax:num\n      };\n  */\n  // these arrays hold all the sub values and seconds (and levels) until they are sorted into bins\n  var curveSubStatsRaw = [];\n  var curveSubSecsRaw = [];\n  var curveSubLevsRaw = []; // parse the data returned from the query\n\n  for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n    var stat = rows[rowIndex].stat;\n    var sub_stats = [];\n    var sub_secs = [];\n    var sub_levs = [];\n\n    if (stat !== null && stat !== \"NULL\" && rows[rowIndex].sub_data !== undefined) {\n      try {\n        var sub_data = rows[rowIndex].sub_data.toString().split(',');\n        var curr_sub_data;\n\n        for (var sd_idx = 0; sd_idx < sub_data.length; sd_idx++) {\n          curr_sub_data = sub_data[sd_idx].split(';');\n          sub_stats.push(Number(curr_sub_data[0]));\n          sub_secs.push(Number(curr_sub_data[1]));\n\n          if (hasLevels) {\n            if (!isNaN(Number(curr_sub_data[2]))) {\n              sub_levs.push(Number(curr_sub_data[2]));\n            } else {\n              sub_levs.push(curr_sub_data[2]);\n            }\n          }\n\n          curveSubLevsRaw.push(sub_levs);\n        }\n\n        curveSubStatsRaw.push(sub_stats);\n        curveSubSecsRaw.push(sub_secs);\n      } catch (e) {\n        // this is an error produced by a bug in the query function, not an error returned by the mysql database\n        e.message = \"Error in parseQueryDataHistogram. The expected fields don't seem to be present in the results cache: \" + e.message;\n        throw new Error(e.message);\n      }\n    }\n  } // we don't have bins yet, so we want all of the data in one array\n\n\n  var subVals = [].concat.apply([], curveSubStatsRaw);\n  var subSecs = [].concat.apply([], curveSubSecsRaw);\n  var subLevs;\n\n  if (hasLevels) {\n    subLevs = [].concat.apply([], curveSubLevsRaw);\n  }\n\n  d.subVals = subVals;\n  d.subSecs = subSecs;\n  d.subLevs = subLevs;\n  return {\n    d: d,\n    N0: subVals.length,\n    N_times: subSecs.length\n  };\n}; //this method parses the returned query data for contour plots\n\n\nvar parseQueryDataContour = function (rows, d) {\n  /*\n      var d = {// d will contain the curve data\n          x: [],\n          y: [],\n          z: [],\n          n: [],\n          text: [],\n          xTextOutput: [],\n          yTextOutput: [],\n          zTextOutput: [],\n          nTextOutput: [],\n          minDateTextOutput: [],\n          maxDateTextOutput: [],\n          stats: []],\n          glob_stats: {},\n          xmin:num,\n          ymin:num,\n          zmin:num,\n          xmax:num,\n          ymax:num,\n          zmax:num,\n          sum:num\n      };\n  */\n  var curveStatLookup = {};\n  var curveNLookup = {}; // get all the data out of the query array\n\n  for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n    var rowXVal = rows[rowIndex].xVal;\n    var rowYVal = rows[rowIndex].yVal;\n    var statKey = rowXVal.toString() + '_' + rowYVal.toString();\n    var stat = rows[rowIndex].stat;\n    var n = rows[rowIndex].sub_data !== null ? rows[rowIndex].sub_data.toString().split(',').length : 0;\n    var minDate = rows[rowIndex].min_secs;\n    var maxDate = rows[rowIndex].max_secs;\n\n    if (stat === undefined || stat === null || stat === 'NULL') {\n      stat = null;\n      n = 0;\n      minDate = null;\n      maxDate = null;\n    } // store flat arrays of all the parsed data, used by the text output and for some calculations later\n\n\n    d.xTextOutput.push(Number(rowXVal));\n    d.yTextOutput.push(Number(rowYVal));\n    d.zTextOutput.push(stat);\n    d.nTextOutput.push(n);\n    d.minDateTextOutput.push(minDate);\n    d.maxDateTextOutput.push(maxDate);\n    curveStatLookup[statKey] = stat;\n    curveNLookup[statKey] = n;\n  } // get the unique x and y values and sort the stats into the 2D z array accordingly\n\n\n  d.x = matsDataUtils.arrayUnique(d.xTextOutput).sort(function (a, b) {\n    return a - b;\n  });\n  d.y = matsDataUtils.arrayUnique(d.yTextOutput).sort(function (a, b) {\n    return a - b;\n  });\n  var i;\n  var j;\n  var currX;\n  var currY;\n  var currStat;\n  var currN;\n  var currStatKey;\n  var currYStatArray;\n  var currYNArray;\n  var sum = 0;\n  var nPoints = 0;\n\n  for (j = 0; j < d.y.length; j++) {\n    currY = d.y[j];\n    currYStatArray = [];\n    currYNArray = [];\n\n    for (i = 0; i < d.x.length; i++) {\n      currX = d.x[i];\n      currStatKey = currX.toString() + '_' + currY.toString();\n      currStat = curveStatLookup[currStatKey];\n      currN = curveNLookup[currStatKey];\n\n      if (currStat === undefined) {\n        currYStatArray.push(null);\n        currYNArray.push(0);\n      } else {\n        sum += currStat;\n        nPoints = nPoints + 1;\n        currYStatArray.push(currStat);\n        currYNArray.push(currN);\n      }\n    }\n\n    d.z.push(currYStatArray);\n    d.n.push(currYNArray);\n  } // calculate statistics\n\n\n  var filteredx = d.x.filter(function (x) {\n    return x;\n  });\n  var filteredy = d.y.filter(function (y) {\n    return y;\n  });\n  var filteredz = d.zTextOutput.filter(function (z) {\n    return z;\n  });\n  d.xmin = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredx));\n  d.xmax = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredx));\n  d.ymin = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredy));\n  d.ymax = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredy));\n  d.zmin = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredz));\n  d.zmax = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredz));\n  d.sum = sum;\n\n  if (d.xmin == \"-Infinity\" || d.x.indexOf(0) !== -1 && 0 < d.xmin) {\n    d.xmin = 0;\n  }\n\n  if (d.ymin == \"-Infinity\" || d.y.indexOf(0) !== -1 && 0 < d.ymin) {\n    d.ymin = 0;\n  }\n\n  if (d.zmin == \"-Infinity\" || d.zTextOutput.indexOf(0) !== -1 && 0 < d.zmin) {\n    d.zmin = 0;\n  }\n\n  if (d.xmax == \"-Infinity\") {\n    d.xmax = 0;\n  }\n\n  if (d.ymax == \"-Infinity\") {\n    d.ymax = 0;\n  }\n\n  if (d.zmax == \"-Infinity\") {\n    d.zmax = 0;\n  }\n\n  var filteredMinDate = d.minDateTextOutput.filter(function (t) {\n    return t;\n  });\n  var filteredMaxDate = d.maxDateTextOutput.filter(function (t) {\n    return t;\n  });\n  d.glob_stats['mean'] = sum / nPoints;\n  d.glob_stats['minDate'] = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredMinDate));\n  d.glob_stats['maxDate'] = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredMaxDate));\n  d.glob_stats['n'] = nPoints;\n  return {\n    d: d\n  };\n};\n\nmodule.exportDefault(matsDataQueryUtils = {\n  simplePoolQueryWrapSynchronous: simplePoolQueryWrapSynchronous,\n  queryDBTimeSeries: queryDBTimeSeries,\n  queryDBSpecialtyCurve: queryDBSpecialtyCurve,\n  queryMapDB: queryMapDB,\n  queryDBContour: queryDBContour\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"data_diff_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/server/data_diff_util.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 2);\n\n// returns the data for whichever curve has the larger interval in its independent variable\nvar getLargeIntervalCurveData = function (dataset, diffFrom, independentVarName) {\n  var dataMaxInterval = Number.MIN_VALUE;\n  var largeIntervalCurveData = dataset[diffFrom[0]]; // set up the indexes and determine the minimum independentVarName value for the dataset\n\n  for (var ci = 0; ci < dataset.length; ci++) {\n    if (dataset[ci][independentVarName] === undefined || dataset[ci][independentVarName].length === 0) {\n      // one of the curves has no data. No match possible. Just use interval from first curve\n      break;\n    }\n\n    if (dataset[ci][independentVarName].length > 1) {\n      var diff;\n\n      for (var di = 0; di < dataset[ci][independentVarName].length - 1; di++) {\n        // don't go all the way to the end - one shy\n        diff = dataset[ci][independentVarName][di + 1] - dataset[ci][independentVarName][di];\n\n        if (diff > dataMaxInterval) {\n          dataMaxInterval = diff;\n          largeIntervalCurveData = dataset[ci];\n        }\n      }\n    }\n  }\n\n  return largeIntervalCurveData;\n}; // generates diff curves for all plot types that have diff curves.\n\n\nvar getDataForDiffCurve = function (dataset, diffFrom, plotType, hasLevels) {\n  /*\n   DATASET ELEMENTS:\n      series: [data,data,data ...... ]   each data is itself an object\n      d = {\n          x: [],\n          y: [],\n          error_x: [],   // curveTime\n          error_y: [],   // values\n          subVals: [],   //subVals\n          subSecs: [],   //subSecs\n          subLevs: [],   //subLevs\n          stats: [],     //pointStats\n          text: [],\n          glob_stats: {},     //curveStats\n          xmin: Number.MAX_VALUE,\n          xmax: Number.MIN_VALUE,\n          ymin: Number.MAX_VALUE,\n          ymax: Number.MIN_VALUE,\n          sum: 0\n      };\n    NOTE -- for profiles, x is the statVarName and y is the independentVarName, because profiles plot the statVarName\n      on the x axis and the independentVarName on the y axis.\n   For histograms:\n  DATASET ELEMENTS:\n      series: [data,data,data ...... ]   each data is itself an array\n      d = {\n          x: [], //placeholder\n          y: [], //placeholder\n          error_x: [], // unused\n          error_y: [], // unused\n          subVals: [],\n          subSecs: [],\n          subLevs: [],\n          glob_stats: [], // placeholder\n          bin_stats: [], // placeholder\n          text: [] //placeholder\n      };\n    */\n  // determine whether data[0] or data[1] is the independent variable, and which is the stat value\n  var independentVarName;\n  var statVarName;\n\n  if (plotType !== matsTypes.PlotTypes.profile) {\n    independentVarName = 'x';\n    statVarName = 'y';\n  } else {\n    independentVarName = 'y';\n    statVarName = 'x';\n  } // initialize variables\n\n\n  var minuendData = dataset[diffFrom[0]];\n  var subtrahendData = dataset[diffFrom[1]];\n  var subtrahendIndex = 0;\n  var minuendIndex = 0;\n  var d;\n\n  if (plotType !== matsTypes.PlotTypes.histogram) {\n    d = {\n      x: [],\n      y: [],\n      error_x: [],\n      // curveTime\n      error_y: [],\n      // values\n      subVals: [],\n      //subVals\n      subSecs: [],\n      //subSecs\n      subLevs: [],\n      //subLevs\n      glob_stats: [],\n      stats: [],\n      //curveStats\n      text: [],\n      xmin: Number.MAX_VALUE,\n      xmax: Number.MIN_VALUE,\n      ymin: Number.MAX_VALUE,\n      ymax: Number.MIN_VALUE,\n      sum: 0\n    };\n  } else {\n    d = {\n      x: [],\n      y: [],\n      error_x: [],\n      error_y: [],\n      subVals: [],\n      subSecs: [],\n      subLevs: [],\n      glob_stats: {\n        'glob_mean': null,\n        'glob_sd': null,\n        'glob_n': null,\n        'glob_max': null,\n        'glob_min': null\n      },\n      bin_stats: [],\n      text: [],\n      xmin: Number.MAX_VALUE,\n      xmax: Number.MIN_VALUE,\n      ymin: Number.MAX_VALUE,\n      ymax: Number.MIN_VALUE\n    };\n  } // make sure neither curve is empty\n\n\n  if (minuendData.x.length === 0 || subtrahendData.x.length === 0) {\n    return {\n      'dataset': d\n    };\n  } // this is a difference curve - we are differencing diffFrom[0] - diffFrom[1] based on the\n  // independentVarName values of whichever has the largest interval\n  // find the largest interval between diffFrom[0] curve and diffFrom[1] curve\n\n\n  var largeIntervalCurveData = getLargeIntervalCurveData(dataset, diffFrom, independentVarName); // calculate the differences\n\n  for (var largeIntervalCurveIndex = 0; largeIntervalCurveIndex < largeIntervalCurveData[independentVarName].length; largeIntervalCurveIndex++) {\n    // make sure that we are actually on the same independentVarName value for each curve\n    var subtrahendIndependentVar = subtrahendData[independentVarName][subtrahendIndex];\n    var minuendIndependentVar = minuendData[independentVarName][minuendIndex];\n    var largeIntervalIndependentVar = largeIntervalCurveData[independentVarName][largeIntervalCurveIndex]; // increment the minuendIndex until it reaches this iteration's largeIntervalIndependentVar\n\n    var minuendChanged = false;\n\n    while (largeIntervalIndependentVar > minuendIndependentVar && minuendIndex < minuendData[independentVarName].length - 1) {\n      minuendIndependentVar = minuendData[independentVarName][++minuendIndex];\n      minuendChanged = true;\n    } // if the end of the curve was reached without finding the largeIntervalIndependentVar, increase the minuendIndex to trigger the end conditions.\n\n\n    if (!minuendChanged && minuendIndex >= minuendData[independentVarName].length - 1) {\n      ++minuendIndex;\n    } // increment the subtrahendIndex until it reaches this iteration's largeIntervalIndependentVar\n\n\n    var subtrahendChanged = false;\n\n    while (largeIntervalIndependentVar > subtrahendIndependentVar && subtrahendIndex < subtrahendData[independentVarName].length - 1) {\n      subtrahendIndependentVar = subtrahendData[independentVarName][++subtrahendIndex];\n      subtrahendChanged = true;\n    } // if the end of the curve was reached without finding the largeIntervalIndependentVar, increase the subtrahendIndex to trigger the end conditions.\n\n\n    if (!subtrahendChanged && subtrahendIndex >= subtrahendData[independentVarName].length - 1) {\n      ++subtrahendIndex;\n    }\n\n    var diffValue = null;\n    var tempSubValsArray;\n    var tempSubSecsArray;\n    var tempSubLevsArray;\n\n    if (minuendData[independentVarName][minuendIndex] !== undefined && subtrahendData[independentVarName][subtrahendIndex] !== undefined) {\n      // make sure both curves actually have data at this index\n      if (minuendData[statVarName][minuendIndex] !== null && subtrahendData[statVarName][subtrahendIndex] !== null && minuendData[independentVarName][minuendIndex] === subtrahendData[independentVarName][subtrahendIndex]) {\n        // make sure data is not null at this point and the independentVars actually match\n        diffValue = minuendData[statVarName][minuendIndex] - subtrahendData[statVarName][subtrahendIndex];\n        d[independentVarName].push(largeIntervalIndependentVar);\n        d[statVarName].push(diffValue);\n        d.error_x.push(null);\n        d.error_y.push(null);\n        tempSubValsArray = [];\n        tempSubSecsArray = [];\n\n        if (hasLevels) {\n          tempSubLevsArray = [];\n        }\n\n        if (plotType !== matsTypes.PlotTypes.histogram) {\n          var minuendDataSubValues = minuendData.subVals[minuendIndex];\n          var minuendDataSubSeconds = minuendData.subSecs[minuendIndex];\n\n          if (hasLevels) {\n            var minuendDataSubLevels = minuendData.subLevs[minuendIndex];\n          }\n\n          var subtrahendDataSubValues = subtrahendData.subVals[subtrahendIndex];\n          var subtrahendDataSubSeconds = subtrahendData.subSecs[subtrahendIndex];\n\n          if (hasLevels) {\n            var subtrahendDataSubLevels = subtrahendData.subLevs[subtrahendIndex];\n          } // find matching sub values and diff those\n\n\n          for (var mvalIdx = 0; mvalIdx < minuendDataSubValues.length; mvalIdx++) {\n            for (var svalIdx = 0; svalIdx < subtrahendDataSubValues.length; svalIdx++) {\n              if (hasLevels && minuendDataSubSeconds[mvalIdx] === subtrahendDataSubSeconds[svalIdx] && minuendDataSubLevels[mvalIdx] === subtrahendDataSubLevels[svalIdx]) {\n                tempSubValsArray.push(minuendDataSubValues[mvalIdx] - subtrahendDataSubValues[svalIdx]);\n                tempSubSecsArray.push(minuendDataSubSeconds[mvalIdx]);\n                tempSubLevsArray.push(minuendDataSubLevels[mvalIdx]);\n              } else if (!hasLevels && minuendDataSubSeconds[mvalIdx] === subtrahendDataSubSeconds[svalIdx]) {\n                tempSubValsArray.push(minuendDataSubValues[mvalIdx] - subtrahendDataSubValues[svalIdx]);\n                tempSubSecsArray.push(minuendDataSubSeconds[mvalIdx]);\n              }\n            }\n          }\n\n          d.subVals.push(tempSubValsArray);\n          d.subSecs.push(tempSubSecsArray);\n\n          if (hasLevels) {\n            d.subLevs.push(tempSubLevsArray);\n          }\n\n          d.sum = d.sum + d[independentVarName][largeIntervalCurveIndex];\n        } else {\n          d.bin_stats.push({\n            'bin_mean': null,\n            'bin_sd': null,\n            'bin_n': diffValue,\n            'bin_rf': minuendData.bin_stats[minuendIndex].bin_rf - subtrahendData.bin_stats[subtrahendIndex].bin_rf,\n            'binLowBound': minuendData.bin_stats[minuendIndex].binLowBound,\n            'binUpBound': minuendData.bin_stats[minuendIndex].binUpBound,\n            'binLabel': minuendData.bin_stats[minuendIndex].binLabel\n          });\n        }\n      } else {\n        // no match for this independentVarName\n        d[independentVarName].push(largeIntervalIndependentVar);\n        d[statVarName].push(null);\n        d.error_x.push(null);\n        d.error_y.push(null);\n        d.subVals.push([]);\n        d.subSecs.push([]);\n\n        if (hasLevels) {\n          d.subLevs.push([]);\n        }\n\n        if (plotType === matsTypes.PlotTypes.histogram) {\n          d.bin_stats.push({\n            'bin_mean': null,\n            'bin_sd': null,\n            'bin_n': null,\n            'bin_rf': null,\n            'binLowBound': minuendData.bin_stats[minuendIndex].binLowBound,\n            'binUpBound': minuendData.bin_stats[minuendIndex].binUpBound,\n            'binLabel': minuendData.bin_stats[minuendIndex].binLabel\n          });\n        }\n      }\n    } else if (!subtrahendChanged && subtrahendIndex >= subtrahendData[independentVarName].length - 1 || !minuendChanged && minuendIndex >= minuendData[independentVarName].length - 1) {\n      // we've reached the end of at least one curve, so end the diffing.\n      break;\n    }\n  }\n\n  var filteredx = d.x.filter(function (x) {\n    return x;\n  });\n  var filteredy = d.y.filter(function (y) {\n    return y;\n  });\n  d.xmin = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredx));\n  d.xmax = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredx));\n  d.ymin = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredy));\n  d.ymax = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredy));\n  return {\n    'dataset': d\n  };\n}; // generates diff of two contours.\n\n\nvar getDataForDiffContour = function (dataset) {\n  /*\n   DATASET ELEMENTS:\n      d[i] = {\n          label: string,\n          curveId: string,\n          name: string,\n          annotateColor: string,\n          annotation: string,             -----\n          x: [],                          *****\n          y: [],                          *****\n          z: [[]],                        *****\n          n: [[]],                        *****\n          text: [],\n          stats: [],\n          glob_stats: object,             -----\n          type: string,\n          autocontour: boolean,\n          ncontours: number,\n          colorbar: object,\n          colorscale: string,\n          reversescale: boolean,\n          contours: object,\n          marker: object,\n          xAxisKey: [],\n          yAxisKey: [],\n          visible: boolean,\n          xTextOutput: [],                *****\n          yTextOutput: [],                *****\n          zTextOutput: [],                *****\n          nTextOutput: [],                *****\n          maxDateTextOutput: [],          *****\n          minDateTextOutput: [],          *****\n          xmax: number,                   -----\n          xmin: number,                   -----\n          ymax: number,                   -----\n          ymin: number,                   -----\n          zmax: number,                   -----\n          zmin: number,                   -----\n          sum: number                     *****\n      };\n       ***** indicates calculation in loops\n      ----- indicates calculation after loops\n   */\n  // initialize output object\n  var diffDataset = {};\n  diffDataset['label'] = dataset[1].label + '-' + dataset[0].label;\n  diffDataset['curveId'] = dataset[1].curveId + '-' + dataset[0].curveId;\n  diffDataset['name'] = dataset[1].name + '-' + dataset[0].name;\n  diffDataset['annotateColor'] = \"rgb(255,165,0)\";\n  diffDataset['annotation'] = \"\";\n  diffDataset['text'] = [];\n  diffDataset['type'] = dataset[0].type;\n  diffDataset['marker'] = dataset[0].marker;\n  diffDataset['xAxisKey'] = dataset[0].xAxisKey;\n  diffDataset['yAxisKey'] = dataset[0].yAxisKey;\n  diffDataset['visible'] = dataset[0].visible;\n  diffDataset['x'] = [];\n  diffDataset['y'] = [];\n  diffDataset['z'] = [];\n  diffDataset['n'] = [];\n  diffDataset['xTextOutput'] = [];\n  diffDataset['yTextOutput'] = [];\n  diffDataset['zTextOutput'] = [];\n  diffDataset['nTextOutput'] = [];\n  diffDataset['maxDateTextOutput'] = [];\n  diffDataset['minDateTextOutput'] = [];\n  diffDataset['stats'] = [];\n  diffDataset['glob_stats'] = {};\n  diffDataset['xmax'] = -1 * Number.MAX_VALUE;\n  diffDataset['xmin'] = Number.MAX_VALUE;\n  diffDataset['ymax'] = -1 * Number.MAX_VALUE;\n  diffDataset['ymin'] = Number.MAX_VALUE;\n  diffDataset['zmax'] = -1 * Number.MAX_VALUE;\n  diffDataset['zmin'] = Number.MAX_VALUE;\n  diffDataset['sum'] = 0; // initialize local variables\n\n  var minuendData = dataset[1];\n  var subtrahendData = dataset[0]; // get common x and y\n\n  diffDataset.x = _.intersection(minuendData.x, subtrahendData.x).sort(function (a, b) {\n    return a - b;\n  });\n  diffDataset.y = _.intersection(minuendData.y, subtrahendData.y).sort(function (a, b) {\n    return a - b;\n  }); // make we actually have matches\n\n  if (diffDataset.x.length === 0 || diffDataset.y.length === 0) {\n    diffDataset.x = [];\n    diffDataset.y = [];\n    return [diffDataset];\n  } // make sure neither dataset is empty\n\n\n  if (minuendData.x.length === 0 || subtrahendData.x.length === 0 || minuendData.y.length === 0 || subtrahendData.y.length === 0) {\n    return [diffDataset];\n  }\n\n  var minuendYIndex = 0;\n  var subtrahendYIndex = 0;\n  var nPoints = 0; // loop through common Ys\n\n  for (var diffDataYIndex = 0; diffDataYIndex < diffDataset.y.length; diffDataYIndex++) {\n    //make sure that we are actually on the same y value for each curve\n    var diffDataY = diffDataset.y[diffDataYIndex];\n    var minuendY = minuendData.y[minuendYIndex];\n    var subtrahendY = subtrahendData.y[subtrahendYIndex]; //increment the minuendYIndex until it reaches this iteration's diffDataY\n\n    while (diffDataY > minuendY && minuendYIndex < minuendData.y.length - 1) {\n      minuendY = minuendData.y[++minuendYIndex];\n    } //increment the subtrahendYIndex until it reaches this iteration's diffDataY\n\n\n    while (diffDataY > subtrahendY && subtrahendYIndex < subtrahendData.y.length - 1) {\n      subtrahendY = subtrahendData.y[++subtrahendYIndex];\n    } // initialize n and z arrays for this Y\n\n\n    diffDataset.z[diffDataYIndex] = [];\n    diffDataset.n[diffDataYIndex] = [];\n    var minuendXIndex = 0;\n    var subtrahendXIndex = 0;\n\n    for (var diffDataXIndex = 0; diffDataXIndex < diffDataset.x.length; diffDataXIndex++) {\n      //make sure that we are actually on the same x value for each curve\n      var diffDataX = diffDataset.x[diffDataXIndex];\n      var minuendX = minuendData.x[minuendXIndex];\n      var subtrahendX = subtrahendData.x[subtrahendXIndex]; //increment the minuendXIndex until it reaches this iteration's diffDataX\n\n      while (diffDataX > minuendX && minuendXIndex < minuendData.x.length - 1) {\n        minuendX = minuendData.x[++minuendXIndex];\n      } //increment the subtrahendXIndex until it reaches this iteration's diffDataX\n\n\n      while (diffDataX > subtrahendX && subtrahendXIndex < subtrahendData.x.length - 1) {\n        subtrahendX = subtrahendData.x[++subtrahendXIndex];\n      }\n\n      var diffValue = null;\n      var diffNumber = 0;\n      var diffMinDate = null;\n      var diffMaxDate = null;\n\n      if (minuendData.z[minuendYIndex][minuendXIndex] !== undefined && subtrahendData.z[subtrahendYIndex][subtrahendXIndex] !== undefined && minuendData.z[minuendYIndex][minuendXIndex] !== null && subtrahendData.z[subtrahendYIndex][subtrahendXIndex] !== null && minuendX === subtrahendX && minuendY === subtrahendY) {\n        // make sure both contours actually have data at these indices, data is not null at this point, and the x and y actually match\n        // calculate the difference values\n        diffValue = minuendData.z[minuendYIndex][minuendXIndex] - subtrahendData.z[subtrahendYIndex][subtrahendXIndex];\n        diffNumber = minuendData.n[minuendYIndex][minuendXIndex] <= subtrahendData.n[subtrahendYIndex][subtrahendXIndex] ? minuendData.n[minuendYIndex][minuendXIndex] : subtrahendData.n[subtrahendYIndex][subtrahendXIndex];\n        diffMinDate = minuendData.minDateTextOutput[minuendYIndex * minuendData.x.length + minuendXIndex] <= subtrahendData.minDateTextOutput[subtrahendYIndex * subtrahendData.x.length + subtrahendXIndex] ? minuendData.minDateTextOutput[minuendYIndex * minuendData.x.length + minuendXIndex] : subtrahendData.minDateTextOutput[subtrahendYIndex * subtrahendData.x.length + subtrahendXIndex];\n        diffMaxDate = minuendData.maxDateTextOutput[minuendYIndex * minuendData.x.length + minuendXIndex] >= subtrahendData.maxDateTextOutput[subtrahendYIndex * subtrahendData.x.length + subtrahendXIndex] ? minuendData.maxDateTextOutput[minuendYIndex * minuendData.x.length + minuendXIndex] : subtrahendData.maxDateTextOutput[subtrahendYIndex * subtrahendData.x.length + subtrahendXIndex];\n        diffDataset['sum'] += diffValue;\n        nPoints = nPoints + 1;\n      }\n\n      diffDataset.z[diffDataYIndex].push(diffValue);\n      diffDataset.n[diffDataYIndex].push(diffNumber);\n      diffDataset.xTextOutput.push(diffDataX);\n      diffDataset.yTextOutput.push(diffDataY);\n      diffDataset.zTextOutput.push(diffValue);\n      diffDataset.nTextOutput.push(diffNumber);\n      diffDataset.minDateTextOutput.push(diffMinDate);\n      diffDataset.maxDateTextOutput.push(diffMaxDate);\n    }\n  } // calculate statistics\n\n\n  var filteredx = diffDataset.x.filter(function (x) {\n    return x;\n  });\n  var filteredy = diffDataset.y.filter(function (y) {\n    return y;\n  });\n  var filteredz = diffDataset.zTextOutput.filter(function (z) {\n    return z;\n  });\n  diffDataset.xmin = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredx));\n  diffDataset.xmax = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredx));\n  diffDataset.ymin = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredy));\n  diffDataset.ymax = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredy));\n  diffDataset.zmin = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredz));\n  diffDataset.zmax = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredz));\n\n  if (diffDataset.xmin == \"-Infinity\" || diffDataset.x.indexOf(0) !== -1 && 0 < diffDataset.xmin) {\n    diffDataset.xmin = 0;\n  }\n\n  if (diffDataset.ymin == \"-Infinity\" || diffDataset.y.indexOf(0) !== -1 && 0 < diffDataset.ymin) {\n    diffDataset.ymin = 0;\n  }\n\n  if (diffDataset.zmin == \"-Infinity\" || diffDataset.zTextOutput.indexOf(0) !== -1 && 0 < diffDataset.zmin) {\n    diffDataset.zmin = 0;\n  }\n\n  if (diffDataset.xmax == \"-Infinity\") {\n    diffDataset.xmax = 0;\n  }\n\n  if (diffDataset.ymax == \"-Infinity\") {\n    diffDataset.ymax = 0;\n  }\n\n  if (diffDataset.zmax == \"-Infinity\") {\n    diffDataset.zmax = 0;\n  }\n\n  var filteredMinDate = diffDataset.minDateTextOutput.filter(function (t) {\n    return t;\n  });\n  var filteredMaxDate = diffDataset.maxDateTextOutput.filter(function (t) {\n    return t;\n  });\n  diffDataset.glob_stats['mean'] = diffDataset.sum / nPoints;\n  diffDataset.glob_stats['minDate'] = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredMinDate));\n  diffDataset.glob_stats['maxDate'] = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredMaxDate));\n  diffDataset.glob_stats['n'] = nPoints;\n  diffDataset['annotation'] = diffDataset.glob_stats.mean === undefined ? diffDataset.label + \"- mean = NaN\" : diffDataset.label + \"- mean = \" + diffDataset.glob_stats.mean.toPrecision(4); // make contours symmetrical around 0\n\n  diffDataset['autocontour'] = false;\n  diffDataset['ncontours'] = 15;\n  diffDataset['colorbar'] = dataset[0].colorbar;\n  diffDataset['colorbar']['title'] = dataset[0].colorbar.title === dataset[1].colorbar.title ? dataset[0].colorbar.title : dataset[1].colorbar.title + \" - \" + dataset[0].colorbar.title;\n  diffDataset['colorscale'] = [[0, \"rgb(5,10,172)\"], [0.35, \"rgb(106,137,247)\"], [0.45, \"rgb(255,255,255)\"], [0.55, \"rgb(255,255,255)\"], [0.6, \"rgb(220,170,132)\"], [0.7, \"rgb(230,145,90)\"], [1, \"rgb(178,10,28)\"]];\n  diffDataset['reversescale'] = dataset[0].reversescale;\n  diffDataset['contours'] = dataset[0].contours;\n  var maxZ = Math.abs(diffDataset.zmax) > Math.abs(diffDataset.zmin) ? Math.abs(diffDataset.zmax) : Math.abs(diffDataset.zmin);\n  diffDataset['contours']['start'] = -1 * maxZ + 2 * maxZ / 16;\n  diffDataset['contours']['end'] = maxZ - 2 * maxZ / 16;\n  diffDataset['contours']['size'] = 2 * maxZ / 16;\n  return [diffDataset];\n};\n\nmodule.exportDefault(matsDataDiffUtils = {\n  getDataForDiffCurve: getDataForDiffCurve,\n  getDataForDiffContour: getDataForDiffContour\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"data_match_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/server/data_match_util.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsDataUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsDataUtils: function (v) {\n    matsDataUtils = v;\n  }\n}, 0);\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 1);\n\n// function for removing unmatched data from a dataset containing multiple curves *without* levels\nvar getMatchedDataSet = function (dataset, curvesLength) {\n  var subSecs = [];\n  var subValues = [];\n  var newSubSecs = [];\n  var newSubValues = [];\n  var independentVarGroups = [];\n  var independentVarHasPoint = [];\n  var currIndependentVar;\n  var curveIndex;\n  var data;\n  var di;\n  var fi;\n  var si; // matching in this function is based on a curve's independent variable. For a timeseries, the independentVar is epoch,\n  // for a profile, it's level, for a dieoff, it's forecast hour, for a threshold plot, it's threshold, and for a\n  // valid time plot, it's hour of day. This function identifies the the independentVar values common across all of\n  // the curves, and then the common sub times/levels/values for those independentVar values.\n  // find the matching independentVars shared across all curves\n\n  for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) {\n    // every curve\n    independentVarGroups[curveIndex] = []; // store the independentVars for each curve that are not null\n\n    independentVarHasPoint[curveIndex] = []; // store the *all* of the independentVars for each curve\n\n    subSecs[curveIndex] = {}; // store the individual record times (subSecs) going into each independentVar for each curve\n\n    data = dataset[curveIndex];\n\n    for (di = 0; di < data.x.length; di++) {\n      // loop over every independentVar value in this curve\n      currIndependentVar = data.x[di];\n\n      if (data.y[di] !== null) {\n        subSecs[curveIndex][currIndependentVar] = data.subSecs[di]; // store raw secs for this independentVar value, since it's not a null point\n\n        independentVarGroups[curveIndex].push(currIndependentVar); // store this independentVar value, since it's not a null point\n      }\n\n      independentVarHasPoint[curveIndex].push(currIndependentVar); // store all the independentVar values, regardless of whether they're null\n    }\n  }\n\n  var matchingIndependentVars = _.intersection.apply(_, independentVarGroups); // find all of the non-null independentVar values common across all the curves\n\n\n  var matchingIndependentHasPoint = _.intersection.apply(_, independentVarHasPoint); // find all of the independentVar values common across all the curves, regardless of whether or not they're null\n\n\n  var subSecIntersection = {}; // eventually find the intersecting subSecs for each common non-null independentVar value\n\n  for (fi = 0; fi < matchingIndependentVars.length; fi++) {\n    // loop over each common non-null independentVar value\n    currIndependentVar = matchingIndependentVars[fi];\n    var currSubSecIntersection = subSecs[0][currIndependentVar]; // fill current subSecs intersection array with subSecs from the first curve\n\n    for (curveIndex = 1; curveIndex < curvesLength; curveIndex++) {\n      // loop over every curve\n      currSubSecIntersection = _.intersection(currSubSecIntersection, subSecs[curveIndex][currIndependentVar]); // keep taking the intersection of the current subSecs intersection array with each curve's subSecs array for this independentVar value\n    }\n\n    subSecIntersection[currIndependentVar] = currSubSecIntersection; // store the final intersecting subSecs array for this common non-null independentVar value\n  } // remove non-matching independentVars and subSecs\n\n\n  for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) {\n    // loop over every curve\n    data = dataset[curveIndex]; // need to loop backwards through the data array so that we can splice non-matching indices\n    // while still having the remaining indices in the correct order\n\n    var dataLength = data.x.length;\n\n    for (di = dataLength - 1; di >= 0; di--) {\n      if (matchingIndependentVars.indexOf(data.x[di]) === -1) {\n        // if this is not a common non-null independentVar value, we'll have to remove some data\n        if (matchingIndependentHasPoint.indexOf(data.x[di]) === -1) {\n          // if at least one curve doesn't even have a null here, much less a matching value (beacause of the cadence), just drop this independentVar\n          data.x.splice(di, 1);\n          data.y.splice(di, 1);\n          data.error_y.array.splice(di, 1);\n          data.subVals.splice(di, 1);\n          data.subSecs.splice(di, 1);\n          data.stats.splice(di, 1);\n          data.text.splice(di, 1);\n        } else {\n          // if all of the curves have either data or nulls at this independentVar, and there is at least one null, ensure all of the curves are null\n          data.y[di] = null;\n          data.subVals[di] = NaN;\n          data.subSecs[di] = NaN;\n        }\n\n        continue; // then move on to the next independentVar. There's no need to mess with the subSecs\n      }\n\n      subSecs = data.subSecs[di];\n      subValues = data.subVals[di];\n\n      if (subSecs.length > 0) {\n        currIndependentVar = data.x[di];\n        newSubValues = [];\n        newSubSecs = [];\n\n        for (si = 0; si < subSecs.length; si++) {\n          // loop over all subSecs for this independentVar\n          if (subSecIntersection[currIndependentVar].indexOf(subSecs[si]) !== -1) {\n            // keep the subValue only if its associated subSec is common to all curves for this independentVar\n            var newVal = subValues[si];\n            var newSec = subSecs[si];\n\n            if (newVal !== undefined) {\n              newSubValues.push(newVal);\n              newSubSecs.push(newSec);\n            }\n          }\n        } // store the filtered data\n\n\n        data.subVals[di] = newSubValues;\n        data.subSecs[di] = newSubSecs;\n      }\n    }\n\n    dataset[curveIndex] = data;\n  }\n\n  return dataset;\n}; // function for removing unmatched data from a dataset containing multiple curves *with* levels\n\n\nvar getMatchedDataSetWithLevels = function (dataset, curvesLength, plotType) {\n  var subSecs = [];\n  var subLevs = [];\n  var subValues = [];\n  var newSubSecs = [];\n  var newSubLevs = [];\n  var newSubValues = [];\n  var independentVarGroups = [];\n  var independentVarHasPoint = [];\n  var currIndependentVar;\n  var curveIndex;\n  var data;\n  var di;\n  var fi;\n  var si; // matching in this function is based on a curve's independent variable. For a timeseries, the independentVar is epoch,\n  // for a profile, it's level, for a dieoff, it's forecast hour, for a threshold plot, it's threshold, and for a\n  // valid time plot, it's hour of day. This function identifies the the independentVar values common across all of\n  // the curves, and then the common sub times/levels/values for those independentVar values.\n  //determine whether data.x or data.y is the independent variable, and which is the stat value\n\n  var independentVarName;\n  var statVarName;\n\n  if (plotType !== matsTypes.PlotTypes.profile) {\n    independentVarName = 'x';\n    statVarName = 'y';\n  } else {\n    independentVarName = 'y';\n    statVarName = 'x';\n  }\n\n  for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) {\n    // every curve\n    independentVarGroups[curveIndex] = []; // store the independentVars for each curve that are not null\n\n    independentVarHasPoint[curveIndex] = []; // store the *all* of the independentVars for each curve\n\n    subSecs[curveIndex] = {}; // store the individual record times (subSecs) going into each independentVar for each curve\n\n    subLevs[curveIndex] = {}; // store the individual record levels (subLevs) going into each independentVar for each curve\n\n    data = dataset[curveIndex];\n\n    for (di = 0; di < data[independentVarName].length; di++) {\n      // loop over every independentVar value in this curve\n      currIndependentVar = data[independentVarName][di];\n\n      if (data[statVarName][di] !== null) {\n        subSecs[curveIndex][currIndependentVar] = data.subSecs[di]; // store raw secs for this independentVar value, since it's not a null point\n\n        subLevs[curveIndex][currIndependentVar] = data.subLevs[di]; // store raw levs for this independentVar value, since it's not a null point\n\n        independentVarGroups[curveIndex].push(currIndependentVar); // store this independentVar value, since it's not a null point\n      }\n\n      independentVarHasPoint[curveIndex].push(currIndependentVar); // store all the independentVar values, regardless of whether they're null\n    }\n  }\n\n  var matchingIndependentVars = _.intersection.apply(_, independentVarGroups); // find all of the non-null independentVar values common across all the curves\n\n\n  var matchingIndependentHasPoint = _.intersection.apply(_, independentVarHasPoint); // find all of the independentVar values common across all the curves, regardless of whether or not they're null\n\n\n  var subIntersections = []; // eventually find the intersecting subSecs and subLevs for each common non-null independentVar value\n\n  for (fi = 0; fi < matchingIndependentVars.length; fi++) {\n    // loop over each common non-null independentVar value\n    currIndependentVar = matchingIndependentVars[fi];\n    subIntersections[currIndependentVar] = [];\n    var currSubIntersections = [];\n\n    for (si = 0; si < subSecs[0][currIndependentVar].length; si++) {\n      // fill current intersection array with sec-lev pairs from the first curve\n      currSubIntersections.push([subSecs[0][currIndependentVar][si], subLevs[0][currIndependentVar][si]]);\n    }\n\n    for (curveIndex = 1; curveIndex < curvesLength; curveIndex++) {\n      // loop over every curve after the first\n      var tempSubIntersections = [];\n      var tempPair;\n\n      for (si = 0; si < subSecs[curveIndex][currIndependentVar].length; si++) {\n        // loop over every subSecs value\n        tempPair = [subSecs[curveIndex][currIndependentVar][si], subLevs[curveIndex][currIndependentVar][si]]; // create an individual sec-lev pair for each index in the subSecs and subLevs arrays\n\n        if (matsDataUtils.arrayContainsSubArray(currSubIntersections, tempPair)) {\n          // see if the individual sec-lev pair matches a pair from the current intersection array\n          tempSubIntersections.push(tempPair); // store matching pairs\n        }\n      }\n\n      currSubIntersections = tempSubIntersections; //replace current intersection array with array of only pairs that matched from this loop through.\n    }\n\n    subIntersections[currIndependentVar] = currSubIntersections; // store the final intersecting subSecs array for this common non-null independentVar value\n  } // remove non-matching independentVars and subSecs\n\n\n  for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) {\n    // loop over every curve\n    data = dataset[curveIndex]; // need to loop backwards through the data array so that we can splice non-matching indices\n    // while still having the remaining indices in the correct order\n\n    var dataLength = data[independentVarName].length;\n\n    for (di = dataLength - 1; di >= 0; di--) {\n      if (matchingIndependentVars.indexOf(data[independentVarName][di]) === -1) {\n        // if this is not a common non-null independentVar value, we'll have to remove some data\n        if (matchingIndependentHasPoint.indexOf(data[independentVarName][di]) === -1) {\n          // if at least one curve doesn't even have a null here, much less a matching value (beacause of the cadence), just drop this independentVar\n          data.x.splice(di, 1);\n          data.y.splice(di, 1);\n          data['error_' + statVarName].array.splice(di, 1);\n          data.subVals.splice(di, 1);\n          data.subSecs.splice(di, 1);\n          data.subLevs.splice(di, 1);\n          data.stats.splice(di, 1);\n          data.text.splice(di, 1);\n        } else {\n          // if all of the curves have either data or nulls at this independentVar, and there is at least one null, ensure all of the curves are null\n          data[statVarName][di] = null;\n          data.subVals[di] = NaN;\n          data.subSecs[di] = NaN;\n          data.subLevs[di] = NaN;\n        }\n\n        continue; // then move on to the next independentVar. There's no need to mess with the subSecs or subLevs\n      }\n\n      subSecs = data.subSecs[di];\n      subLevs = data.subLevs[di];\n      subValues = data.subVals[di];\n\n      if (subSecs.length > 0 && subLevs.length > 0) {\n        currIndependentVar = data[independentVarName][di];\n        newSubValues = [];\n        newSubSecs = [];\n        newSubLevs = [];\n\n        for (si = 0; si < subSecs.length; si++) {\n          // loop over all subSecs for this independentVar\n          tempPair = [subSecs[si], subLevs[si]]; //create sec-lev pair for each sub value\n\n          if (matsDataUtils.arrayContainsSubArray(subIntersections[currIndependentVar], tempPair)) {\n            // keep the subValue only if its sec-lev pair is common to all curves for this independentVar\n            var newVal = subValues[si];\n            var newSec = subSecs[si];\n            var newLev = subLevs[si];\n\n            if (newVal !== undefined) {\n              newSubValues.push(newVal);\n              newSubSecs.push(newSec);\n              newSubLevs.push(newLev);\n            }\n          }\n        } // store the filtered data\n\n\n        data.subVals[di] = newSubValues;\n        data.subSecs[di] = newSubSecs;\n        data.subLevs[di] = newSubLevs;\n      }\n    }\n\n    dataset[curveIndex] = data;\n  }\n\n  return dataset;\n}; // function for removing unmatched data from a dataset containing multiple curves for a histogram *without* levels.\n// separate matching functions are needed for histograms because you have to take all of the data out of the bins, then\n// match it, then recalculate the bins. For other plot types, you can just leave the data in its already-sorted fhr, level, etc.\n\n\nvar getMatchedDataSetHistogram = function (dataset, curvesLength, binStats) {\n  var subStatsRaw = {};\n  var subSecsRaw = {};\n  var subStats = {};\n  var subSecs = {};\n  var newSubStats = {};\n  var newSubSecs = {};\n  var newCurveData;\n  var curveIndex;\n  var di;\n  var si; // pull all subSecs and subStats out of their bins, and back into one master array\n\n  for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) {\n    data = dataset[curveIndex];\n    subStatsRaw[curveIndex] = [];\n    subSecsRaw[curveIndex] = [];\n    subStats[curveIndex] = [];\n    subSecs[curveIndex] = [];\n\n    for (di = 0; di < data.x.length; di++) {\n      subStatsRaw[curveIndex].push(data.subVals[di]);\n      subSecsRaw[curveIndex].push(data.subSecs[di]);\n    }\n\n    subStats[curveIndex] = [].concat.apply([], subStatsRaw[curveIndex]);\n    subSecs[curveIndex] = [].concat.apply([], subSecsRaw[curveIndex]);\n  } // determine which seconds are present in all curves\n\n\n  var subSecIntersection = subSecs[0]; // fill current subSecs intersection array with subSecs from the first curve\n\n  for (curveIndex = 1; curveIndex < curvesLength; curveIndex++) {\n    // loop over every curve\n    subSecIntersection = _.intersection(subSecIntersection, subSecs[curveIndex]); // keep taking the intersection of the current subSecs intersection array with each curve's subSecs array\n  } // remove non-matching subSecs and subStats\n\n\n  for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) {\n    // loop over every curve\n    data = dataset[curveIndex];\n\n    if (subSecIntersection.length > 0) {\n      newSubStats[curveIndex] = [];\n      newSubSecs[curveIndex] = [];\n\n      for (si = 0; si < subSecs[curveIndex].length; si++) {\n        // loop over all subSecs for this curve\n        if (subSecIntersection.indexOf(subSecs[curveIndex][si]) !== -1) {\n          // keep the subStat only if its associated subSec is common to all curves\n          var newStat = subStats[curveIndex][si];\n          var newSec = subSecs[curveIndex][si];\n\n          if (newStat !== undefined) {\n            newSubStats[curveIndex].push(newStat);\n            newSubSecs[curveIndex].push(newSec);\n          }\n        }\n      } // re-sort all of the data into histogram bins\n\n\n      var d = {\n        // d will contain the curve data\n        x: [],\n        //placeholder\n        y: [],\n        //placeholder\n        error_x: [],\n        // unused\n        error_y: [],\n        // unused\n        subVals: [],\n        subSecs: [],\n        subLevs: [],\n        glob_stats: {},\n        // placeholder\n        bin_stats: [],\n        // placeholder\n        text: [],\n        //placeholder\n        xmin: Number.MAX_VALUE,\n        xmax: Number.MIN_VALUE,\n        ymin: Number.MAX_VALUE,\n        ymax: Number.MIN_VALUE\n      };\n      newCurveData = matsDataUtils.sortHistogramBins(newSubStats[curveIndex], newSubSecs[curveIndex], [], data.x.length, binStats, false, d);\n      var newCurveDataKeys = Object.keys(newCurveData.d);\n\n      for (var didx = 0; didx < newCurveDataKeys.length; didx++) {\n        dataset[curveIndex][newCurveDataKeys[didx]] = newCurveData.d[newCurveDataKeys[didx]];\n      }\n    } else {\n      // if there are no matching values, set data to an empty array\n      dataset[curveIndex] = {\n        x: [],\n        y: [],\n        error_x: [],\n        error_y: [],\n        subVals: [],\n        subSecs: [],\n        subLevs: [],\n        glob_stats: {},\n        bin_stats: [],\n        text: [],\n        xmin: Number.MAX_VALUE,\n        xmax: Number.MIN_VALUE,\n        ymin: Number.MAX_VALUE,\n        ymax: Number.MIN_VALUE\n      };\n    }\n  }\n\n  return dataset;\n}; // function for removing unmatched data from a dataset containing multiple curves for a histogram *with* levels.\n// separate matching functions are needed for histograms because you have to take all of the data out of the bins, then\n// match it, then recalculate the bins. For other plot types, you can just leave the data in its already-sorted fhr, level, etc.\n\n\nvar getMatchedDataSetHistogramWithLevels = function (dataset, curvesLength, binStats) {\n  var subStatsRaw = {};\n  var subSecsRaw = {};\n  var subLevsRaw = {};\n  var subStats = {};\n  var subSecs = {};\n  var subLevs = {};\n  var newSubStats = {};\n  var newSubSecs = {};\n  var newSubLevs = {};\n  var newCurveData;\n  var curveIndex;\n  var di;\n  var si; // pull all subSecs and subStats out of their bins, and back into one master array\n\n  for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) {\n    data = dataset[curveIndex];\n    subStatsRaw[curveIndex] = [];\n    subSecsRaw[curveIndex] = [];\n    subLevsRaw[curveIndex] = [];\n    subStats[curveIndex] = [];\n    subSecs[curveIndex] = [];\n    subLevs[curveIndex] = [];\n\n    for (di = 0; di < data.x.length; di++) {\n      subStatsRaw[curveIndex].push(data.subVals[di]);\n      subSecsRaw[curveIndex].push(data.subSecs[di]);\n      subLevsRaw[curveIndex].push(data.subLevs[di]);\n    }\n\n    subStats[curveIndex] = [].concat.apply([], subStatsRaw[curveIndex]);\n    subSecs[curveIndex] = [].concat.apply([], subSecsRaw[curveIndex]);\n    subLevs[curveIndex] = [].concat.apply([], subLevsRaw[curveIndex]);\n  } // determine which seconds and levels are present in all curves\n\n\n  var subIntersections = []; // eventually find the intersecting subSecs and subLevs across all curves\n\n  for (si = 0; si < subSecs[0].length; si++) {\n    // fill current intersection array with sec-lev pairs from the first curve\n    subIntersections.push([subSecs[0][si], subLevs[0][si]]);\n  }\n\n  for (curveIndex = 1; curveIndex < curvesLength; curveIndex++) {\n    // loop over every curve after the first\n    var tempSubIntersections = [];\n    var tempPair;\n\n    for (si = 0; si < subSecs[curveIndex].length; si++) {\n      // loop over every subSecs value\n      tempPair = [subSecs[curveIndex][si], subLevs[curveIndex][si]]; // create an individual sec-lev pair for each index in the subSecs and subLevs arrays\n\n      if (matsDataUtils.arrayContainsSubArray(subIntersections, tempPair)) {\n        // see if the individual sec-lev pair matches a pair from the current intersection array\n        tempSubIntersections.push(tempPair); // store matching pairs\n      }\n    }\n\n    subIntersections = tempSubIntersections; //replace current intersection array with array of only pairs that matched from this loop through.\n  } // remove non-matching subSecs, subLevs, and subStats\n\n\n  for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) {\n    // loop over every curve\n    data = dataset[curveIndex];\n\n    if (subIntersections.length > 0) {\n      newSubStats[curveIndex] = [];\n      newSubSecs[curveIndex] = [];\n      newSubLevs[curveIndex] = [];\n\n      for (si = 0; si < subSecs[curveIndex].length; si++) {\n        // loop over all subSecs for this curve\n        tempPair = [subSecs[curveIndex][si], subLevs[curveIndex][si]]; //create sec-lev pair for each subStat\n\n        if (matsDataUtils.arrayContainsSubArray(subIntersections, tempPair)) {\n          // keep the subStat only if its sec-lev pair is common to all curves\n          var newStat = subStats[curveIndex][si];\n          var newSec = subSecs[curveIndex][si];\n          var newLev = subLevs[curveIndex][si];\n\n          if (newStat !== undefined) {\n            newSubStats[curveIndex].push(newStat);\n            newSubSecs[curveIndex].push(newSec);\n            newSubLevs[curveIndex].push(newLev);\n          }\n        }\n      } // re-sort all of the data into histogram bins\n\n\n      var d = {\n        // d will contain the curve data\n        x: [],\n        //placeholder\n        y: [],\n        //placeholder\n        error_x: [],\n        // unused\n        error_y: [],\n        // unused\n        subVals: [],\n        subSecs: [],\n        subLevs: [],\n        glob_stats: {},\n        // placeholder\n        bin_stats: [],\n        // placeholder\n        text: [],\n        //placeholder\n        xmin: Number.MAX_VALUE,\n        xmax: Number.MIN_VALUE,\n        ymin: Number.MAX_VALUE,\n        ymax: Number.MIN_VALUE\n      };\n      newCurveData = matsDataUtils.sortHistogramBins(newSubStats[curveIndex], newSubSecs[curveIndex], newSubLevs[curveIndex], data.x.length, binStats, true, d);\n      var newCurveDataKeys = Object.keys(newCurveData.d);\n\n      for (var didx = 0; didx < newCurveDataKeys.length; didx++) {\n        dataset[curveIndex][newCurveDataKeys[didx]] = newCurveData.d[newCurveDataKeys[didx]];\n      }\n    } else {\n      // if there are no matching values, set data to an empty dataset\n      dataset[curveIndex] = {\n        x: [],\n        y: [],\n        error_x: [],\n        error_y: [],\n        subVals: [],\n        subSecs: [],\n        subLevs: [],\n        glob_stats: {},\n        bin_stats: [],\n        text: [],\n        xmin: Number.MAX_VALUE,\n        xmax: Number.MIN_VALUE,\n        ymin: Number.MAX_VALUE,\n        ymax: Number.MIN_VALUE\n      };\n    }\n  }\n\n  return dataset;\n};\n\nmodule.exportDefault(matsDataMatchUtils = {\n  getMatchedDataSet: getMatchedDataSet,\n  getMatchedDataSetWithLevels: getMatchedDataSetWithLevels,\n  getMatchedDataSetHistogram: getMatchedDataSetHistogram,\n  getMatchedDataSetHistogramWithLevels: getMatchedDataSetHistogramWithLevels\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"data_curve_ops_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/server/data_curve_ops_util.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\n/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n// adds a horizontal black line along a specific y value\nvar getHorizontalValueLine = function (xmax, xmin, yValue, cLabel) {\n  var valueLine = {\n    \"label\": cLabel,\n    \"curveId\": cLabel,\n    \"annotation\": \"\",\n    \"name\": \"y = \" + yValue.toString(),\n    \"mode\": \"lines\",\n    \"x\": [xmin, xmax],\n    \"x_epoch\": [xmin, xmax],\n    \"y\": [yValue, yValue],\n    \"error_x\": [null, null],\n    \"error_y\": [null, null],\n    \"subVals\": [],\n    \"subSecs\": [],\n    \"subLevs\": [],\n    \"stats\": [{\n      \"d_mean\": 0,\n      \"sd\": 0,\n      \"n_good\": 0,\n      \"lag1\": 0,\n      \"stde\": 0\n    }, {\n      \"d_mean\": 0,\n      \"sd\": 0,\n      \"n_good\": 0,\n      \"lag1\": 0,\n      \"stde\": 0\n    }],\n    \"tooltip\": [\"y = \" + yValue.toString(), \"y = \" + yValue.toString()],\n    \"xmin\": xmin,\n    \"xmax\": xmax,\n    \"ymin\": yValue,\n    \"ymax\": yValue,\n    \"line\": {\n      \"color\": \"rgb(0,0,0)\"\n    }\n  };\n  return valueLine;\n}; // adds a vertical black line along a specific x value\n\n\nvar getVerticalValueLine = function (ymax, ymin, xValue, cLabel) {\n  var valueLine = {\n    \"label\": cLabel,\n    \"curveId\": cLabel,\n    \"annotation\": \"\",\n    \"name\": \"x = \" + xValue.toString(),\n    \"mode\": \"lines\",\n    \"x\": [xValue, xValue],\n    \"y\": [ymin, ymax],\n    \"error_x\": [null, null],\n    \"error_y\": [null, null],\n    \"subVals\": [],\n    \"subSecs\": [],\n    \"subLevs\": [],\n    \"stats\": [{\n      \"d_mean\": 0,\n      \"sd\": 0,\n      \"n_good\": 0,\n      \"lag1\": 0,\n      \"stde\": 0\n    }, {\n      \"d_mean\": 0,\n      \"sd\": 0,\n      \"n_good\": 0,\n      \"lag1\": 0,\n      \"stde\": 0\n    }],\n    \"tooltip\": [\"x = \" + xValue.toString(), \"x = \" + xValue.toString()],\n    \"xmin\": xValue,\n    \"xmax\": xValue,\n    \"ymin\": ymin,\n    \"ymax\": ymax,\n    \"line\": {\n      \"color\": \"rgb(0,0,0)\"\n    }\n  };\n  return valueLine;\n}; // adds a linear line\n\n\nvar getLinearValueLine = function (xmax, xmin, ymax, ymin, cLabel) {\n  var valueLine = {\n    \"label\": cLabel,\n    \"curveId\": cLabel,\n    \"annotation\": \"\",\n    \"name\": cLabel,\n    \"mode\": \"lines\",\n    \"x\": [xmin, xmax],\n    \"x_epoch\": [xmin, xmax],\n    \"y\": [ymin, ymax],\n    \"error_x\": [null, null],\n    \"error_y\": [null, null],\n    \"subVals\": [],\n    \"subSecs\": [],\n    \"subLevs\": [],\n    \"stats\": [{\n      \"d_mean\": 0,\n      \"sd\": 0,\n      \"n_good\": 0,\n      \"lag1\": 0,\n      \"stde\": 0\n    }, {\n      \"d_mean\": 0,\n      \"sd\": 0,\n      \"n_good\": 0,\n      \"lag1\": 0,\n      \"stde\": 0\n    }],\n    \"tooltip\": \"\",\n    \"xmin\": xmin,\n    \"xmax\": xmax,\n    \"ymin\": ymin,\n    \"ymax\": ymax,\n    \"line\": {\n      \"color\": \"rgb(0,0,0)\"\n    }\n  };\n  return valueLine;\n}; // provides curve options for all plot types with an independent x axis and a dependent y axis\n\n\nvar generateSeriesCurveOptions = function (curve, curveIndex, axisMap, dataSeries) {\n  var label = curve['label'];\n  var annotation = curve['annotation']; // adjust axes for later setting of the plot options\n\n  var ymin = curve['ymin'];\n  var ymax = curve['ymax'];\n  var xmin = curve['xmin'];\n  var xmax = curve['xmax'];\n  var axisKey = curve['axisKey'];\n\n  if (axisKey in axisMap) {\n    axisMap[axisKey].axisLabel = axisKey;\n    axisMap[axisKey].ymin = ymin < axisMap[axisKey].ymin ? ymin : axisMap[axisKey].ymin;\n    axisMap[axisKey].ymax = ymax > axisMap[axisKey].ymax ? ymax : axisMap[axisKey].ymax;\n    axisMap[axisKey].xmin = xmin < axisMap[axisKey].xmin ? xmin : axisMap[axisKey].xmin;\n    axisMap[axisKey].xmax = xmax > axisMap[axisKey].xmax ? xmax : axisMap[axisKey].xmax;\n  } else {\n    axisMap[axisKey] = {\n      index: Object.keys(axisMap).length + 1,\n      xmin: xmin,\n      xmax: xmax,\n      ymin: ymin,\n      ymax: ymax,\n      axisLabel: axisKey\n    };\n  }\n\n  var axisNumber = Object.keys(axisMap).indexOf(axisKey);\n  var error_y_temp = {\n    error_y: {\n      array: dataSeries.error_y,\n      thickness: 1,\n      // set the thickness of the error bars\n      color: curve['color'],\n      visible: false // changed later if matching\n      // width: 0\n\n    }\n  };\n  var curveOptions = (0, _objectSpread2.default)({}, {\n    label: label,\n    curveId: label,\n    name: label,\n    xaxis: \"x1\",\n    yaxis: \"y\" + (axisNumber + 1),\n    annotation: annotation,\n    annotateColor: curve['color'],\n    mode: \"lines+markers\",\n    marker: {\n      symbol: \"circle\",\n      color: curve['color'],\n      size: 8\n    },\n    line: {\n      dash: 'solid',\n      color: curve['color'],\n      width: 2\n    },\n    visible: true\n  }, dataSeries);\n  delete curveOptions.error_y;\n  curveOptions['error_y'] = error_y_temp.error_y;\n  return curveOptions;\n}; // provides curve options for all plot types with an independent y axis and a dependent x axis\n\n\nvar generateProfileCurveOptions = function (curve, curveIndex, axisMap, dataProfile) {\n  var label = curve['label'];\n  var annotation = curve['annotation']; // adjust axes for later setting of the plot options\n\n  var ymin = curve['ymin'];\n  var ymax = curve['ymax'];\n  var xmin = curve['xmin'];\n  var xmax = curve['xmax'];\n  var axisKey = curve['axisKey'];\n\n  if (axisKey in axisMap) {\n    axisMap[axisKey].axisLabel = axisKey;\n    axisMap[axisKey].ymin = ymin < axisMap[axisKey].ymin ? ymin : axisMap[axisKey].ymin;\n    axisMap[axisKey].ymax = ymax > axisMap[axisKey].ymax ? ymax : axisMap[axisKey].ymax;\n    axisMap[axisKey].xmin = xmin < axisMap[axisKey].xmin ? xmin : axisMap[axisKey].xmin;\n    axisMap[axisKey].xmax = xmax > axisMap[axisKey].xmax ? xmax : axisMap[axisKey].xmax;\n  } else {\n    axisMap[axisKey] = {\n      index: Object.keys(axisMap).length + 1,\n      xmin: xmin,\n      xmax: xmax,\n      ymin: ymin,\n      ymax: ymax,\n      axisLabel: axisKey\n    };\n  }\n\n  var axisNumber = Object.keys(axisMap).indexOf(axisKey);\n  var error_x_temp = {\n    error_x: {\n      array: dataProfile.error_x,\n      thickness: 1,\n      // set the thickness of the error bars\n      color: curve['color'],\n      visible: false // changed later if matching\n      // width: 0\n\n    }\n  };\n  var curveOptions = (0, _objectSpread2.default)({}, {\n    label: label,\n    curveId: label,\n    name: label,\n    xaxis: \"x\" + (axisNumber + 1),\n    yaxis: \"y1\",\n    annotation: annotation,\n    annotateColor: curve['color'],\n    mode: \"lines+markers\",\n    marker: {\n      symbol: \"circle\",\n      color: curve['color'],\n      size: 8\n    },\n    line: {\n      dash: 'solid',\n      color: curve['color'],\n      width: 2\n    },\n    visible: true\n  }, dataProfile);\n  delete curveOptions.error_x;\n  curveOptions['error_x'] = error_x_temp.error_x;\n  return curveOptions;\n}; // provides curve options for reliability diagrams\n\n\nvar generateReliabilityCurveOptions = function (curve, curveIndex, axisMap, dataSeries) {\n  var label = curve['label'];\n  var annotation = curve['annotation']; // adjust axes for later setting of the plot options\n\n  var ymin = curve['ymin'];\n  var ymax = curve['ymax'];\n  var xmin = curve['xmin'];\n  var xmax = curve['xmax'];\n  var axisKey = curve['axisKey'];\n\n  if (axisKey in axisMap) {\n    axisMap[axisKey].axisLabel = axisKey;\n    axisMap[axisKey].ymin = ymin < axisMap[axisKey].ymin ? ymin : axisMap[axisKey].ymin;\n    axisMap[axisKey].ymax = ymax > axisMap[axisKey].ymax ? ymax : axisMap[axisKey].ymax;\n    axisMap[axisKey].xmin = xmin < axisMap[axisKey].xmin ? xmin : axisMap[axisKey].xmin;\n    axisMap[axisKey].xmax = xmax > axisMap[axisKey].xmax ? xmax : axisMap[axisKey].xmax;\n  } else {\n    axisMap[axisKey] = {\n      index: Object.keys(axisMap).length + 1,\n      xmin: xmin,\n      xmax: xmax,\n      ymin: ymin,\n      ymax: ymax,\n      axisLabel: axisKey\n    };\n  }\n\n  var axisNumber = Object.keys(axisMap).indexOf(axisKey);\n  var error_y_temp = {\n    error_y: {\n      array: dataSeries.error_y,\n      thickness: 1,\n      // set the thickness of the error bars\n      color: curve['color'],\n      visible: false // changed later if matching\n      // width: 0\n\n    }\n  };\n  var curveOptions = (0, _objectSpread2.default)({}, {\n    label: label,\n    curveId: label,\n    name: label,\n    xaxis: \"x1\",\n    yaxis: \"y\" + (axisNumber + 1),\n    annotation: annotation,\n    annotateColor: curve['color'],\n    mode: \"lines+markers\",\n    marker: {\n      symbol: \"circle\",\n      color: curve['color'],\n      size: 8\n    },\n    line: {\n      dash: 'solid',\n      color: curve['color'],\n      width: 2\n    },\n    visible: true\n  }, dataSeries);\n  delete curveOptions.error_y;\n  curveOptions['error_y'] = error_y_temp.error_y;\n  return curveOptions;\n}; // provides curve options for all plot types with an independent x axis and a dependent y axis\n\n\nvar generateBarChartCurveOptions = function (curve, curveIndex, axisMap, dataBars) {\n  var label = curve['label'];\n  var annotation = curve['annotation']; // adjust axes for later setting of the plot options\n\n  var ymin = curve['ymin'];\n  var ymax = curve['ymax'];\n  var xmin = curve['xmin'];\n  var xmax = curve['xmax'];\n  var axisKey = curve['axisKey'];\n\n  if (axisKey in axisMap) {\n    axisMap[axisKey].axisLabel = axisKey;\n    axisMap[axisKey].ymin = ymin < axisMap[axisKey].ymin ? ymin : axisMap[axisKey].ymin;\n    axisMap[axisKey].ymax = ymax > axisMap[axisKey].ymax ? ymax : axisMap[axisKey].ymax;\n    axisMap[axisKey].xmin = xmin < axisMap[axisKey].xmin ? xmin : axisMap[axisKey].xmin;\n    axisMap[axisKey].xmax = xmax > axisMap[axisKey].xmax ? xmax : axisMap[axisKey].xmax;\n  } else {\n    axisMap[axisKey] = {\n      index: Object.keys(axisMap).length + 1,\n      xmin: xmin,\n      xmax: xmax,\n      ymin: ymin,\n      ymax: ymax,\n      axisLabel: axisKey\n    };\n  }\n\n  var curveOptions = (0, _objectSpread2.default)({}, {\n    label: label,\n    curveId: label,\n    name: label,\n    annotation: annotation,\n    annotateColor: curve['color'],\n    marker: {\n      color: curve['color'],\n      line: {\n        color: \"rgb(0,0,0)\"\n      }\n    },\n    type: 'bar',\n    visible: true\n  }, dataBars);\n  return curveOptions;\n};\n\nvar generateMapCurveOptions = function (curve, dataSeries) {\n  var markerSizes = dataSeries.queryVal.map(function (val) {\n    return Math.ceil(Math.abs(val * 4)) + 2;\n  });\n  var label = curve['label'];\n  var curveOptions = (0, _objectSpread2.default)({}, {\n    label: label,\n    curveId: label,\n    name: label,\n    type: 'scattermapbox',\n    mode: 'markers',\n    marker: {\n      color: dataSeries.color,\n      size: markerSizes,\n      opacity: 0\n    }\n  }, dataSeries);\n  delete curveOptions.color;\n  return curveOptions;\n};\n\nvar generateMapColorTextOptions = function (label, dataSeries) {\n  var curveOptions = (0, _objectSpread2.default)({}, {\n    label: label,\n    type: 'scattermapbox',\n    mode: 'markers+text',\n    marker: {\n      opacity: 0\n    },\n    textfont: {\n      family: 'sans serif',\n      // size: 18,\n      color: dataSeries.color\n    },\n    hoverinfo: 'skip',\n    visible: true\n  }, dataSeries);\n  delete curveOptions.color;\n  return curveOptions;\n};\n\nvar generateContourCurveOptions = function (curve, axisMap, dataset) {\n  var label = curve['label'];\n  var annotation = curve['annotation'];\n  var unitKey = curve['unitKey'];\n  var curveOptions = (0, _objectSpread2.default)({}, {\n    label: label,\n    curveId: label,\n    name: label,\n    annotation: annotation,\n    annotateColor: curve['color'],\n    xAxisKey: curve['xAxisKey'],\n    yAxisKey: curve['yAxisKey'],\n    marker: {\n      color: curve['color']\n    },\n    type: 'contour',\n    autocontour: false,\n    ncontours: 15,\n    // apparently plotly regards this as a \"less than or equal to\" field\n    contours: {\n      // these are only used if autocontour is set to false and ncontour is disregarded\n      start: dataset.zmin + (dataset.zmax - dataset.zmin) / 16,\n      end: dataset.zmax - (dataset.zmax - dataset.zmin) / 16,\n      size: (dataset.zmax - dataset.zmin) / 16,\n      showlabels: false\n    },\n    colorscale: 'RdBu',\n    reversescale: false,\n    colorbar: {\n      title: unitKey,\n      titleside: 'right',\n      titlefont: {\n        size: 20,\n        family: 'Arial, sans-serif'\n      }\n    },\n    // connectgaps: true,   // this option will interpolate to fill in nulls\n    visible: true\n  }, dataset);\n  return curveOptions;\n};\n\nmodule.exportDefault(matsDataCurveOpsUtils = {\n  getHorizontalValueLine: getHorizontalValueLine,\n  getVerticalValueLine: getVerticalValueLine,\n  getLinearValueLine: getLinearValueLine,\n  generateSeriesCurveOptions: generateSeriesCurveOptions,\n  generateReliabilityCurveOptions: generateReliabilityCurveOptions,\n  generateProfileCurveOptions: generateProfileCurveOptions,\n  generateBarChartCurveOptions: generateBarChartCurveOptions,\n  generateMapCurveOptions: generateMapCurveOptions,\n  generateMapColorTextOptions: generateMapColorTextOptions,\n  generateContourCurveOptions: generateContourCurveOptions\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"data_plot_ops_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/server/data_plot_ops_util.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 0);\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 1);\nvar moment;\nmodule.link(\"meteor/momentjs:moment\", {\n  moment: function (v) {\n    moment = v;\n  }\n}, 2);\n\n// sets plot options for timeseries graphs\nvar generateSeriesPlotOptions = function (dataset, curves, axisMap, errorMax) {\n  var xmin = axisMap[Object.keys(axisMap)[0]].xmin;\n  var xmax = axisMap[Object.keys(axisMap)[0]].xmax;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  layout['xaxis'] = {\n    title: 'Time',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 12\n    }\n  };\n  var axisAnchor = {\n    0: 'x',\n    1: 'x',\n    2: 'free',\n    3: 'free',\n    4: 'free',\n    5: 'free',\n    6: 'free',\n    7: 'free'\n  };\n  var axisSide = {\n    0: 'left',\n    1: 'right',\n    2: 'left',\n    3: 'right',\n    4: 'left',\n    5: 'right',\n    6: 'left',\n    7: 'right'\n  };\n  var axisPosition = {\n    0: 0,\n    1: 1,\n    2: 0.1,\n    3: 0.9,\n    4: 0.2,\n    5: 0.8,\n    6: 0.3,\n    7: 0.7\n  };\n  var yAxisNumber = Object.keys(axisMap).length;\n  var axisKey;\n  var axisIdx;\n  var axisLabel;\n\n  for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n    axisKey = Object.keys(axisMap)[axisIdx];\n    var ymin = axisMap[axisKey].ymin;\n    var ymax = axisMap[axisKey].ymax;\n    ymax = ymax + errorMax;\n    ymin = ymin - errorMax;\n    var yPad = (ymax - ymin) * 0.05 !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n    xmin = axisMap[axisKey].xmin < xmin ? axisMap[axisKey].xmin : xmin;\n    xmax = axisMap[axisKey].xmax > xmax ? axisMap[axisKey].xmax : xmax;\n    axisLabel = axisMap[axisKey].axisLabel;\n    var axisObjectKey;\n\n    if (axisIdx === 0) {\n      axisObjectKey = 'yaxis';\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        zeroline: false\n      };\n    } else if (axisIdx < Object.keys(axisPosition).length) {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[axisIdx],\n        overlaying: 'y',\n        side: axisSide[axisIdx],\n        position: axisPosition[axisIdx],\n        zeroline: false\n      };\n    } else {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n        overlaying: 'y',\n        side: axisSide[Object.keys(axisPosition).length - 1],\n        position: axisPosition[Object.keys(axisPosition).length - 1],\n        zeroline: false\n      };\n    }\n  }\n\n  var xPad = (xmax - xmin) * 0.075 !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n  xmax = moment.utc(xmax + xPad * Math.ceil(yAxisNumber / 2)).format(\"YYYY-MM-DD HH:mm\");\n  xmin = moment.utc(xmin - xPad * Math.ceil(yAxisNumber / 2)).format(\"YYYY-MM-DD HH:mm\");\n  layout['xaxis']['range'] = [xmin, xmax];\n  return layout;\n}; // sets plot options for profile graphs\n\n\nvar generateProfilePlotOptions = function (dataset, curves, axisMap, errorMax) {\n  var ymin = 10;\n  var ymax = 1075;\n  var xAxisNumber = Object.keys(axisMap).length;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: xAxisNumber > 1 ? 80 : 20,\n      pad: 4\n    },\n    zeroline: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  var tickVals;\n  var tickText;\n\n  if (matsCollections.Settings.findOne({}).appType === matsTypes.AppTypes.metexpress) {\n    tickVals = [1000, 850, 700, 600, 500, 400, 300, 250, 200, 150, 100, 50, 10];\n    tickText = ['1000', '850', '700', '600', '500', '400', '300', '250', '200', '150', '100', '50', '10'];\n  } else {\n    tickVals = [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100];\n    tickText = ['1000', '900', '800', '700', '600', '500', '400', '300', '200', '100'];\n  }\n\n  layout['yaxis'] = {\n    title: 'Pressure Level',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    },\n    tickvals: tickVals,\n    ticktext: tickText,\n    type: 'linear',\n    autorange: 'reversed'\n  };\n  var axisAnchor = {\n    0: 'x',\n    1: 'x',\n    2: 'free',\n    3: 'free',\n    4: 'free',\n    5: 'free',\n    6: 'free',\n    7: 'free'\n  };\n  var axisSide = {\n    0: 'bottom',\n    1: 'top',\n    2: 'bottom',\n    3: 'top',\n    4: 'bottom',\n    5: 'top',\n    6: 'bottom',\n    7: 'top'\n  };\n  var axisPosition = {\n    0: 0,\n    1: 1,\n    2: 0.15,\n    3: 0.85,\n    4: 0.3,\n    5: 0.7,\n    6: 0.45,\n    7: 0.55\n  };\n  var axisKey;\n  var axisIdx;\n  var axisLabel;\n\n  for (axisIdx = 0; axisIdx < xAxisNumber; axisIdx++) {\n    axisKey = Object.keys(axisMap)[axisIdx];\n    var xmin = axisMap[axisKey].xmin;\n    var xmax = axisMap[axisKey].xmax;\n    xmax = xmax + errorMax;\n    xmin = xmin - errorMax;\n    axisLabel = axisMap[axisKey].axisLabel;\n    var xPad = (xmax - xmin) * 0.05 !== 0 ? (xmax - xmin) * 0.05 : 0.05;\n    axisLabel = axisMap[axisKey].axisLabel;\n    var axisObjectKey;\n\n    if (axisIdx === 0) {\n      axisObjectKey = 'xaxis';\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [xmin - xPad, xmax + xPad],\n        zeroline: false\n      };\n    } else if (axisIdx < Object.keys(axisPosition).length) {\n      axisObjectKey = 'xaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [xmin - xPad, xmax + xPad],\n        anchor: axisAnchor[axisIdx],\n        overlaying: 'x',\n        side: axisSide[axisIdx],\n        position: axisPosition[axisIdx],\n        zeroline: false\n      };\n    } else {\n      axisObjectKey = 'xaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [xmin - xPad, xmax + xPad],\n        anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n        overlaying: 'x',\n        side: axisSide[Object.keys(axisPosition).length - 1],\n        position: axisPosition[Object.keys(axisPosition).length - 1],\n        zeroline: false\n      };\n    }\n  }\n\n  var yPad = (ymax - ymin) * 0.25 !== 0 ? (ymax - ymin) * 0.25 : 0.25;\n  ymax = ymax + yPad * Math.ceil(xAxisNumber / 2);\n  ymin = ymin - yPad * Math.ceil(xAxisNumber / 2);\n  layout['yaxis']['range'] = [ymin, ymax];\n  return layout;\n}; // sets plot options for dieoff graphs\n\n\nvar generateDieoffPlotOptions = function (dataset, curves, axisMap, errorMax) {\n  var xmin = axisMap[Object.keys(axisMap)[0]].xmin;\n  var xmax = axisMap[Object.keys(axisMap)[0]].xmax;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  layout['xaxis'] = {\n    title: 'Forecast Hour',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    }\n  };\n  var axisAnchor = {\n    0: 'x',\n    1: 'x',\n    2: 'free',\n    3: 'free',\n    4: 'free',\n    5: 'free',\n    6: 'free',\n    7: 'free'\n  };\n  var axisSide = {\n    0: 'left',\n    1: 'right',\n    2: 'left',\n    3: 'right',\n    4: 'left',\n    5: 'right',\n    6: 'left',\n    7: 'right'\n  };\n  var axisPosition = {\n    0: 0,\n    1: 1,\n    2: 0.1,\n    3: 0.9,\n    4: 0.2,\n    5: 0.8,\n    6: 0.3,\n    7: 0.7\n  };\n  var yAxisNumber = Object.keys(axisMap).length;\n  var axisKey;\n  var axisIdx;\n  var axisLabel;\n\n  for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n    axisKey = Object.keys(axisMap)[axisIdx];\n    var ymin = axisMap[axisKey].ymin;\n    var ymax = axisMap[axisKey].ymax;\n    ymax = ymax + errorMax;\n    ymin = ymin - errorMax;\n    var yPad = (ymax - ymin) * 0.05 !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n    xmin = axisMap[axisKey].xmin < xmin ? axisMap[axisKey].xmin : xmin;\n    xmax = axisMap[axisKey].xmax > xmax ? axisMap[axisKey].xmax : xmax;\n    axisLabel = axisMap[axisKey].axisLabel;\n    var axisObjectKey;\n\n    if (axisIdx === 0) {\n      axisObjectKey = 'yaxis';\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        zeroline: false\n      };\n    } else if (axisIdx < Object.keys(axisPosition).length) {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[axisIdx],\n        overlaying: 'y',\n        side: axisSide[axisIdx],\n        position: axisPosition[axisIdx],\n        zeroline: false\n      };\n    } else {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n        overlaying: 'y',\n        side: axisSide[Object.keys(axisPosition).length - 1],\n        position: axisPosition[Object.keys(axisPosition).length - 1],\n        zeroline: false\n      };\n    }\n  }\n\n  var xPad = (xmax - xmin) * 0.075 !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n  xmax = xmax + xPad * Math.ceil(yAxisNumber / 2);\n  xmin = xmin - xPad * Math.ceil(yAxisNumber / 2);\n  layout['xaxis']['range'] = [xmin, xmax];\n  return layout;\n}; // sets plot options for threshold graphs\n\n\nvar generateThresholdPlotOptions = function (dataset, curves, axisMap, errorMax) {\n  var xmin = 0;\n  var xmax = 3;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  layout['xaxis'] = {\n    title: 'Threshold',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    },\n    tickvals: [0.01, 0.1, 0.25, 0.5, 1.0, 1.5, 2.0, 3.0],\n    ticktext: [\"0.01\", \"0.10\", \"0.25\", \"0.50\", \"1.00\", \"1.50\", \"2.00\", \"3.00\"]\n  };\n  var axisAnchor = {\n    0: 'x',\n    1: 'x',\n    2: 'free',\n    3: 'free',\n    4: 'free',\n    5: 'free',\n    6: 'free',\n    7: 'free'\n  };\n  var axisSide = {\n    0: 'left',\n    1: 'right',\n    2: 'left',\n    3: 'right',\n    4: 'left',\n    5: 'right',\n    6: 'left',\n    7: 'right'\n  };\n  var axisPosition = {\n    0: 0,\n    1: 1,\n    2: 0.1,\n    3: 0.9,\n    4: 0.2,\n    5: 0.8,\n    6: 0.3,\n    7: 0.7\n  };\n  var yAxisNumber = Object.keys(axisMap).length;\n  var axisKey;\n  var axisIdx;\n  var axisLabel;\n\n  for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n    axisKey = Object.keys(axisMap)[axisIdx];\n    var ymin = axisMap[axisKey].ymin;\n    var ymax = axisMap[axisKey].ymax;\n    ymax = ymax + errorMax;\n    ymin = ymin - errorMax;\n    var yPad = (ymax - ymin) * 0.05 !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n    axisLabel = axisMap[axisKey].axisLabel;\n    var axisObjectKey;\n\n    if (axisIdx === 0) {\n      axisObjectKey = 'yaxis';\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        zeroline: false\n      };\n    } else if (axisIdx < Object.keys(axisPosition).length) {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[axisIdx],\n        overlaying: 'y',\n        side: axisSide[axisIdx],\n        position: axisPosition[axisIdx],\n        zeroline: false\n      };\n    } else {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n        overlaying: 'y',\n        side: axisSide[Object.keys(axisPosition).length - 1],\n        position: axisPosition[Object.keys(axisPosition).length - 1],\n        zeroline: false\n      };\n    }\n  }\n\n  var xPad = (xmax - xmin) * 0.075 !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n  xmax = xmax + xPad * Math.ceil(yAxisNumber / 2);\n  xmin = xmin - xPad * Math.ceil(yAxisNumber / 2);\n  layout['xaxis']['range'] = [xmin, xmax];\n  return layout;\n}; // sets plot options for valid time graphs\n\n\nvar generateValidTimePlotOptions = function (dataset, curves, axisMap, errorMax) {\n  var xmin = 0;\n  var xmax = 23;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  layout['xaxis'] = {\n    title: 'Hour of Day',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    },\n    tickvals: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\n    ticktext: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"]\n  };\n  var axisAnchor = {\n    0: 'x',\n    1: 'x',\n    2: 'free',\n    3: 'free',\n    4: 'free',\n    5: 'free',\n    6: 'free',\n    7: 'free'\n  };\n  var axisSide = {\n    0: 'left',\n    1: 'right',\n    2: 'left',\n    3: 'right',\n    4: 'left',\n    5: 'right',\n    6: 'left',\n    7: 'right'\n  };\n  var axisPosition = {\n    0: 0,\n    1: 1,\n    2: 0.1,\n    3: 0.9,\n    4: 0.2,\n    5: 0.8,\n    6: 0.3,\n    7: 0.7\n  };\n  var yAxisNumber = Object.keys(axisMap).length;\n  var axisKey;\n  var axisIdx;\n  var axisLabel;\n\n  for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n    axisKey = Object.keys(axisMap)[axisIdx];\n    var ymin = axisMap[axisKey].ymin;\n    var ymax = axisMap[axisKey].ymax;\n    ymax = ymax + errorMax;\n    ymin = ymin - errorMax;\n    var yPad = (ymax - ymin) * 0.05 !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n    axisLabel = axisMap[axisKey].axisLabel;\n    var axisObjectKey;\n\n    if (axisIdx === 0) {\n      axisObjectKey = 'yaxis';\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        zeroline: false\n      };\n    } else if (axisIdx < Object.keys(axisPosition).length) {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[axisIdx],\n        overlaying: 'y',\n        side: axisSide[axisIdx],\n        position: axisPosition[axisIdx],\n        zeroline: false\n      };\n    } else {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n        overlaying: 'y',\n        side: axisSide[Object.keys(axisPosition).length - 1],\n        position: axisPosition[Object.keys(axisPosition).length - 1],\n        zeroline: false\n      };\n    }\n  }\n\n  var xPad = (xmax - xmin) * 0.075 !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n  xmax = xmax + xPad * Math.ceil(yAxisNumber / 2);\n  xmin = xmin - xPad * Math.ceil(yAxisNumber / 2);\n  layout['xaxis']['range'] = [xmin, xmax];\n  return layout;\n}; // sets plot options for reliability graphs\n\n\nvar generateReliabilityPlotOptions = function (dataset) {\n  var xmin = 0;\n  var xmax = 1;\n  var ymin = 0;\n  var ymax = 1;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: true,\n    perfectLine: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  layout['xaxis'] = {\n    title: 'Forecast Probability',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    },\n    tickvals: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n    ticktext: [\"0.0\", \"0.1\", \"0.2\", \"0.3\", \"0.4\", \"0.5\", \"0.6\", \"0.7\", \"0.8\", \"0.9\", \"1.0\"],\n    range: [xmin, xmax]\n  };\n  layout['yaxis'] = {\n    title: 'Observed Relative Frequency',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    },\n    tickvals: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n    ticktext: [\"0.0\", \"0.1\", \"0.2\", \"0.3\", \"0.4\", \"0.5\", \"0.6\", \"0.7\", \"0.8\", \"0.9\", \"1.0\"],\n    range: [ymin, ymax]\n  };\n  return layout;\n}; // sets plot options for map graphs\n\n\nvar generateMapPlotOptions = function () {\n  var options = {\n    autosize: true,\n    hovermode: 'closest',\n    mapbox: {\n      bearing: 0,\n      center: {\n        lat: 39.834,\n        lon: -98.604\n      },\n      pitch: 0,\n      zoom: 3.25,\n      accesstoken: 'pk.eyJ1IjoibWF0cy1nc2QiLCJhIjoiY2pvN2l1N2MyMG9xdTN3bWR3ODV5a2E2ZiJ9.PtgcGhxaoD43N0OwJSNVMg',\n      style: 'light'\n    },\n    margin: {\n      l: 30,\n      r: 30,\n      b: 40,\n      t: 10,\n      pad: 4\n    },\n    showlegend: false\n  };\n  return options;\n}; // sets plot options for valid time graphs\n\n\nvar generateHistogramPlotOptions = function (dataset, curves, axisMap, plotBins) {\n  var axisKey = curves[0].axisKey;\n  var axisLabel = axisMap[axisKey].axisLabel;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: false,\n    bargap: 0.25,\n    barmode: 'group',\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  layout['xaxis'] = {\n    title: 'Bin',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 12\n    },\n    tickvals: plotBins.binMeans,\n    ticktext: plotBins.binLabels\n  };\n  layout['yaxis'] = {\n    title: axisLabel,\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    }\n  };\n  return layout;\n}; // sets plot options for valid time graphs\n\n\nvar generateContourPlotOptions = function (dataset, axisMap) {\n  var xAxisKey = dataset[0]['xAxisKey'];\n  var yAxisKey = dataset[0]['yAxisKey'];\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    }\n  };\n  layout['xaxis'] = {\n    title: xAxisKey,\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 12\n    }\n  };\n\n  if (yAxisKey === \"Pressure level\") {\n    layout['yaxis'] = {\n      title: yAxisKey,\n      titlefont: {\n        color: '#000000',\n        size: 22\n      },\n      tickfont: {\n        color: '#000000',\n        size: 14\n      },\n      tickvals: [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100],\n      ticktext: ['1000', '900', '800', '700', '600', '500', '400', '300', '200', '100'],\n      range: [1100, 0],\n      type: 'linear',\n      autorange: 'reversed'\n    };\n  } else {\n    layout['yaxis'] = {\n      title: yAxisKey,\n      titlefont: {\n        color: '#000000',\n        size: 22\n      },\n      tickfont: {\n        color: '#000000',\n        size: 14\n      }\n    };\n  }\n\n  return layout;\n};\n\nmodule.exportDefault(matsDataPlotOpsUtils = {\n  generateSeriesPlotOptions: generateSeriesPlotOptions,\n  generateProfilePlotOptions: generateProfilePlotOptions,\n  generateDieoffPlotOptions: generateDieoffPlotOptions,\n  generateThresholdPlotOptions: generateThresholdPlotOptions,\n  generateValidTimePlotOptions: generateValidTimePlotOptions,\n  generateReliabilityPlotOptions: generateReliabilityPlotOptions,\n  generateMapPlotOptions: generateMapPlotOptions,\n  generateHistogramPlotOptions: generateHistogramPlotOptions,\n  generateContourPlotOptions: generateContourPlotOptions\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"data_process_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/server/data_process_util.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsDataUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsDataUtils: function (v) {\n    matsDataUtils = v;\n  }\n}, 2);\nvar matsDataMatchUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsDataMatchUtils: function (v) {\n    matsDataMatchUtils = v;\n  }\n}, 3);\nvar matsDataDiffUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsDataDiffUtils: function (v) {\n    matsDataDiffUtils = v;\n  }\n}, 4);\nvar matsDataCurveOpsUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsDataCurveOpsUtils: function (v) {\n    matsDataCurveOpsUtils = v;\n  }\n}, 5);\nvar matsDataPlotOpsUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsDataPlotOpsUtils: function (v) {\n    matsDataPlotOpsUtils = v;\n  }\n}, 6);\nvar moment;\nmodule.link(\"meteor/momentjs:moment\", {\n  moment: function (v) {\n    moment = v;\n  }\n}, 7);\n\nvar processDataXYCurve = function (dataset, appParams, curveInfoParams, plotParams, bookkeepingParams) {\n  // variable to store maximum error bar length\n  var errorMax = Number.MIN_VALUE;\n  var error = \"\";\n  var appName = matsCollections.appName.findOne({}).app; // if matching, pare down dataset to only matching data\n\n  if (curveInfoParams.curvesLength > 1 && appParams.matching) {\n    if (appParams.hasLevels) {\n      dataset = matsDataMatchUtils.getMatchedDataSetWithLevels(dataset, curveInfoParams.curvesLength, appParams.plotType);\n    } else {\n      dataset = matsDataMatchUtils.getMatchedDataSet(dataset, curveInfoParams.curvesLength);\n    }\n  } // we may need to recalculate the axis limits after unmatched data and outliers are removed\n\n\n  var axisLimitReprocessed = {}; // calculate data statistics (including error bars) for each curve\n\n  for (var curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n    if (appName !== \"surfrad\") {\n      axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] = axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] !== undefined;\n    }\n\n    var diffFrom = curveInfoParams.curves[curveIndex].diffFrom;\n    var statisticSelect = appName.indexOf(\"anomalycor\") !== -1 ? \"ACC\" : curveInfoParams.curves[curveIndex]['statistic'];\n    var data = dataset[curveIndex];\n    var _label = dataset[curveIndex].label;\n    var di = 0;\n    var values = [];\n    var indVars = [];\n    var means = [];\n    var rawStat;\n    /*\n    dataset[curveIndex] is the dataset.\n    it looks like:\n     d = {\n        x: [],\n        y: [],\n        error_x: [],   // curveTime\n        error_y: [],   // values\n        subVals: [],   //subVals\n        subSecs: [],   //subSecs\n        subLevs: [],   //subLevs\n        stats: [],     //pointStats\n        text: [],\n        glob_stats: {},     //curveStats\n        xmin: Number.MAX_VALUE,\n        xmax: Number.MIN_VALUE,\n        ymin: Number.MAX_VALUE,\n        ymax: Number.MIN_VALUE,\n        sum: 0\n    };\n    */\n\n    while (di < data.x.length) {\n      // errorResult holds all the calculated curve stats like mean, sd, etc.\n      var errorResult;\n\n      if (appParams.hasLevels) {\n        errorResult = matsDataUtils.get_err(data.subVals[di], data.subSecs[di], data.subLevs[di]);\n      } else {\n        errorResult = matsDataUtils.get_err(data.subVals[di], data.subSecs[di], []);\n      } // store raw statistic from query before recalculating that statistic to account for data removed due to matching, QC, etc.\n\n\n      rawStat = data.y[di]; // this ungainly if statement is because the surfrad3 database doesn't support recalculating some stats.\n\n      if (appName !== \"surfrad\" || !(appName === \"surfrad\" && (statisticSelect === 'Std deviation (do not plot matched)' || statisticSelect === 'RMS (do not plot matched)') && !appParams.matching)) {\n        if (diffFrom === null || diffFrom === undefined || !appParams.matching) {\n          // assign recalculated statistic to data[di][1], which is the value to be plotted\n          data.y[di] = errorResult.d_mean;\n        } else {\n          if (dataset[diffFrom[0]].y[di] !== null && dataset[diffFrom[1]].y[di] !== null) {\n            // make sure that the diff curve actually shows the difference when matching. Otherwise outlier filtering etc. can make it slightly off.\n            data.y[di] = dataset[diffFrom[0]].y[di] - dataset[diffFrom[1]].y[di];\n          } else {\n            // keep the null for no data at this point\n            data.y[di] = null;\n          }\n        }\n      }\n\n      values.push(data.y[di]);\n      indVars.push(data.x[di]);\n      means.push(errorResult.d_mean); // store error bars if matching\n\n      var errorBar = errorResult.stde_betsy * 1.96;\n\n      if (appParams.matching) {\n        errorMax = errorMax > errorBar ? errorMax : errorBar;\n        data.error_y.array[di] = errorBar;\n      } else {\n        data.error_y.array[di] = null;\n      } // remove sub values and times to save space\n\n\n      data.subVals[di] = [];\n      data.subSecs[di] = [];\n      data.subLevs[di] = []; // store statistics for this di datapoint\n\n      data.stats[di] = {\n        raw_stat: rawStat,\n        d_mean: errorResult.d_mean,\n        sd: errorResult.sd,\n        n_good: errorResult.n_good,\n        lag1: errorResult.lag1,\n        stde_betsy: errorResult.stde_betsy\n      }; // this is the tooltip, it is the last element of each dataseries element.\n      // also change the x array from epoch to date for timeseries and DMC, as we are now done with it for calculations.\n\n      data.text[di] = _label;\n\n      switch (appParams.plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n          data.text[di] = data.text[di] + \"<br>time: \" + moment.utc(data.x[di]).format(\"YYYY-MM-DD HH:mm\");\n          break;\n\n        case matsTypes.PlotTypes.dailyModelCycle:\n          var fhr = data.x[di] / 1000 % (24 * 3600) / 3600 - curveInfoParams.utcCycleStarts[curveIndex];\n          fhr = fhr < 0 ? fhr + 24 : fhr;\n          data.text[di] = data.text[di] + \"<br>time: \" + moment.utc(data.x[di]).format(\"YYYY-MM-DD HH:mm\");\n          data.text[di] = data.text[di] + \"<br>forecast hour: \" + fhr;\n          break;\n\n        case matsTypes.PlotTypes.dieoff:\n          data.text[di] = data.text[di] + \"<br>fhr: \" + data.x[di];\n          break;\n\n        case matsTypes.PlotTypes.threshold:\n          data.text[di] = data.text[di] + \"<br>threshold: \" + data.x[di];\n          break;\n\n        case matsTypes.PlotTypes.validtime:\n          data.text[di] = data.text[di] + \"<br>hour of day: \" + data.x[di];\n          break;\n\n        default:\n          data.text[di] = data.text[di] + \"<br>\" + data.x[di];\n          break;\n      }\n\n      data.text[di] = data.text[di] + \"<br>\" + statisticSelect + \": \" + (data.y[di] === null ? null : data.y[di].toPrecision(4)) + \"<br>sd: \" + (errorResult.sd === null ? null : errorResult.sd.toPrecision(4)) + \"<br>mean: \" + (errorResult.d_mean === null ? null : errorResult.d_mean.toPrecision(4)) + \"<br>n: \" + errorResult.n_good + // \"<br>lag1: \" + (errorResult.lag1 === null ? null : errorResult.lag1.toPrecision(4)) +\n      // \"<br>stde: \" + errorResult.stde_betsy +\n      \"<br>errorbars: \" + Number(data.y[di] - errorResult.stde_betsy * 1.96).toPrecision(4) + \" to \" + Number(data.y[di] + errorResult.stde_betsy * 1.96).toPrecision(4);\n      di++;\n    } // enable error bars if matching and they aren't null\n\n\n    if (appParams.matching && data.error_y.array.filter(function (x) {\n      return x;\n    }).length > 0) {\n      data.error_y.visible = true;\n    } // get the overall stats for the text output - this uses the means not the stats.\n\n\n    var stats = matsDataUtils.get_err(values, indVars, []);\n    var filteredMeans = means.filter(function (x) {\n      return x;\n    });\n    var miny = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredMeans));\n    var maxy = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredMeans));\n\n    if (means.indexOf(0) !== -1 && 0 < miny) {\n      miny = 0;\n    }\n\n    if (means.indexOf(0) !== -1 && 0 > maxy) {\n      maxy = 0;\n    }\n\n    stats.miny = miny;\n    stats.maxy = maxy;\n    dataset[curveIndex]['glob_stats'] = stats; // recalculate axis options after QC and matching\n\n    if (appName !== \"surfrad\") {\n      var minx = Math.min.apply(Math, indVars);\n      var maxx = Math.max.apply(Math, indVars);\n      curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymax'] = curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymax'] < maxy || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] ? maxy : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymax'];\n      curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymin'] = curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymin'] > miny || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] ? miny : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymin'];\n      curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'] = curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'] < maxx || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] ? maxx : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'];\n      curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'] = curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'] > minx || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] ? minx : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'];\n    } // recalculate curve annotation after QC and matching\n\n\n    if (stats.d_mean !== undefined && stats.d_mean !== null) {\n      dataset[curveIndex]['annotation'] = _label + \"- mean = \" + stats.d_mean.toPrecision(4);\n    }\n\n    if (appParams.plotType === matsTypes.PlotTypes.timeSeries || appParams.plotType === matsTypes.PlotTypes.dailyModelCycle) {\n      data['x_epoch'] = data.x;\n      data.x = data.x.map(function (val) {\n        return moment.utc(val).format(\"YYYY-MM-DD HH:mm\");\n      });\n    }\n  } // add black 0 line curve\n  // need to define the minimum and maximum x value for making the zero curve\n\n\n  var zeroLine = matsDataCurveOpsUtils.getHorizontalValueLine(curveInfoParams.xmax, curveInfoParams.xmin, 0, matsTypes.ReservedWords.zero);\n  dataset.push(zeroLine); //add ideal value lines, if any\n\n  var idealValueLine;\n  var idealLabel;\n\n  for (var ivIdx = 0; ivIdx < curveInfoParams.idealValues.length; ivIdx++) {\n    idealLabel = \"ideal\" + ivIdx.toString();\n    idealValueLine = matsDataCurveOpsUtils.getHorizontalValueLine(curveInfoParams.xmax, curveInfoParams.xmin, curveInfoParams.idealValues[ivIdx], matsTypes.ReservedWords[idealLabel]);\n    dataset.push(idealValueLine);\n  } // generate plot options\n\n\n  var resultOptions;\n\n  switch (appParams.plotType) {\n    case matsTypes.PlotTypes.timeSeries:\n    case matsTypes.PlotTypes.dailyModelCycle:\n      resultOptions = matsDataPlotOpsUtils.generateSeriesPlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n      break;\n\n    case matsTypes.PlotTypes.dieoff:\n      resultOptions = matsDataPlotOpsUtils.generateDieoffPlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n      break;\n\n    case matsTypes.PlotTypes.validtime:\n      resultOptions = matsDataPlotOpsUtils.generateValidTimePlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n      break;\n\n    case matsTypes.PlotTypes.threshold:\n      resultOptions = matsDataPlotOpsUtils.generateThresholdPlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n      break;\n\n    default:\n      break;\n  }\n\n  var totalProcessingFinish = moment();\n  bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n    begin: bookkeepingParams.totalProcessingStart.format(),\n    finish: totalProcessingFinish.format(),\n    duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n  }; // pass result to client-side plotting functions\n\n  return {\n    error: error,\n    data: dataset,\n    options: resultOptions,\n    basis: {\n      plotParams: plotParams,\n      queries: bookkeepingParams.dataRequests\n    }\n  };\n};\n\nvar processDataProfile = function (dataset, appParams, curveInfoParams, plotParams, bookkeepingParams) {\n  // variable to store maximum error bar length\n  var errorMax = Number.MIN_VALUE;\n  var error = \"\";\n  var appName = matsCollections.appName.findOne({}).app; // if matching, pare down dataset to only matching data\n\n  if (curveInfoParams.curvesLength > 1 && appParams.matching) {\n    dataset = matsDataMatchUtils.getMatchedDataSetWithLevels(dataset, curveInfoParams.curvesLength, appParams.plotType);\n  } // we may need to recalculate the axis limits after unmatched data and outliers are removed\n\n\n  var axisLimitReprocessed = {}; // calculate data statistics (including error bars) for each curve\n\n  for (var curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n    axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] = axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] !== undefined;\n    var diffFrom = curveInfoParams.curves[curveIndex].diffFrom;\n    var statisticSelect = appName.indexOf(\"anomalycor\") !== -1 ? \"ACC\" : curveInfoParams.curves[curveIndex]['statistic'];\n    var data = dataset[curveIndex];\n    var _label2 = dataset[curveIndex].label;\n    var di = 0;\n    var values = [];\n    var levels = [];\n    var means = [];\n    var rawStat;\n    /*\n    dataset[curveIndex] is the dataset.\n    it looks like:\n     d = {\n        x: [],\n        y: [],\n        error_x: [],   // curveTime\n        error_y: [],   // values\n        subVals: [],   //subVals\n        subSecs: [],   //subSecs\n        subLevs: [],   //subLevs\n        stats: [],     //pointStats\n        text: [],\n        glob_stats: {},     //curveStats\n        xmin: Number.MAX_VALUE,\n        xmax: Number.MIN_VALUE,\n        ymin: Number.MAX_VALUE,\n        ymax: Number.MIN_VALUE,\n        sum: 0\n    };\n    */\n\n    while (di < data.y.length) {\n      // errorResult holds all the calculated curve stats like mean, sd, etc.\n      var errorResult = matsDataUtils.get_err(data.subVals[di], data.subSecs[di], data.subLevs[di]); // store raw statistic from query before recalculating that statistic to account for data removed due to matching, QC, etc.\n\n      rawStat = data.x[di];\n\n      if (diffFrom === null || diffFrom === undefined || !appParams.matching) {\n        // assign recalculated statistic to data[di][1], which is the value to be plotted\n        data.x[di] = errorResult.d_mean;\n      } else {\n        if (dataset[diffFrom[0]].x[di] !== null && dataset[diffFrom[1]].x[di] !== null) {\n          // make sure that the diff curve actually shows the difference when matching. Otherwise outlier filtering etc. can make it slightly off.\n          data.x[di] = dataset[diffFrom[0]].x[di] - dataset[diffFrom[1]].x[di];\n        } else {\n          // keep the null for no data at this point\n          data.x[di] = null;\n        }\n      }\n\n      values.push(data.x[di]);\n      levels.push(data.y[di]);\n      means.push(errorResult.d_mean); // store error bars if matching\n\n      var errorBar = errorResult.stde_betsy * 1.96;\n\n      if (appParams.matching) {\n        errorMax = errorMax > errorBar ? errorMax : errorBar;\n        data.error_x.array[di] = errorBar;\n      } else {\n        data.error_x.array[di] = null;\n      } // remove sub values and times to save space\n\n\n      data.subVals[di] = [];\n      data.subSecs[di] = [];\n      data.subLevs[di] = []; // store statistics\n\n      data.stats[di] = {\n        raw_stat: rawStat,\n        d_mean: errorResult.d_mean,\n        sd: errorResult.sd,\n        n_good: errorResult.n_good,\n        lag1: errorResult.lag1,\n        stde_betsy: errorResult.stde_betsy\n      }; // this is the tooltip, it is the last element of each dataseries element\n\n      data.text[di] = _label2 + \"<br>\" + data.y[di] + \"mb\" + \"<br>\" + statisticSelect + \": \" + (data.x[di] === null ? null : data.x[di].toPrecision(4)) + \"<br>sd: \" + (errorResult.sd === null ? null : errorResult.sd.toPrecision(4)) + \"<br>mean: \" + (errorResult.d_mean === null ? null : errorResult.d_mean.toPrecision(4)) + \"<br>n: \" + errorResult.n_good + // \"<br>lag1: \" + (errorResult.lag1 === null ? null : errorResult.lag1.toPrecision(4)) +\n      // \"<br>stde: \" + errorResult.stde_betsy +\n      \"<br>errorbars: \" + Number(data.x[di] - errorResult.stde_betsy * 1.96).toPrecision(4) + \" to \" + Number(data.x[di] + errorResult.stde_betsy * 1.96).toPrecision(4);\n      di++;\n    } // enable error bars if matching and they aren't null\n\n\n    if (appParams.matching && data.error_x.array.filter(function (x) {\n      return x;\n    }).length > 0) {\n      data.error_x.visible = true;\n    } // get the overall stats for the text output - this uses the means not the stats.\n\n\n    var stats = matsDataUtils.get_err(values.reverse(), levels.reverse(), []); // have to reverse because of data inversion\n\n    var filteredMeans = means.filter(function (x) {\n      return x;\n    });\n    var minx = Math.min.apply(Math, (0, _toConsumableArray2.default)(filteredMeans));\n    var maxx = Math.max.apply(Math, (0, _toConsumableArray2.default)(filteredMeans));\n\n    if (means.indexOf(0) !== -1 && 0 < minx) {\n      minx = 0;\n    }\n\n    if (means.indexOf(0) !== -1 && 0 > maxx) {\n      maxx = 0;\n    }\n\n    stats.minx = minx;\n    stats.maxx = maxx;\n    dataset[curveIndex]['glob_stats'] = stats; // recalculate axis options after QC and matching\n\n    curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'] = curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'] < maxx || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] ? maxx : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'];\n    curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'] = curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'] > minx || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] ? minx : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin']; // recalculate curve annotation after QC and matching\n\n    if (stats.d_mean !== undefined && stats.d_mean !== null) {\n      dataset[curveIndex]['annotation'] = _label2 + \"- mean = \" + stats.d_mean.toPrecision(4);\n    }\n  } // add black 0 line curve\n  // need to define the minimum and maximum x value for making the zero curve\n\n\n  var zeroLine = matsDataCurveOpsUtils.getVerticalValueLine(1100, 0, 0, matsTypes.ReservedWords.zero);\n  dataset.push(zeroLine); //add ideal value lines, if any\n\n  var idealValueLine;\n  var idealLabel;\n\n  for (var ivIdx = 0; ivIdx < curveInfoParams.idealValues.length; ivIdx++) {\n    idealLabel = \"ideal\" + ivIdx.toString();\n    idealValueLine = matsDataCurveOpsUtils.getVerticalValueLine(1100, 0, curveInfoParams.idealValues[ivIdx], matsTypes.ReservedWords[idealLabel]);\n    dataset.push(idealValueLine);\n  } // generate plot options\n\n\n  var resultOptions = matsDataPlotOpsUtils.generateProfilePlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n  var totalProcessingFinish = moment();\n  bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n    begin: bookkeepingParams.totalProcessingStart.format(),\n    finish: totalProcessingFinish.format(),\n    duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n  }; // pass result to client-side plotting functions\n\n  return {\n    error: error,\n    data: dataset,\n    options: resultOptions,\n    basis: {\n      plotParams: plotParams,\n      queries: bookkeepingParams.dataRequests\n    }\n  };\n};\n\nvar processDataReliability = function (dataset, appParams, curveInfoParams, plotParams, bookkeepingParams) {\n  var error = \"\"; // calculate data statistics (including error bars) for each curve\n\n  for (var curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n    var data = dataset[curveIndex];\n    var _label3 = dataset[curveIndex].label;\n    var sample_climo = data.subVals;\n    var di = 0;\n    /*\n    dataset[curveIndex] is the dataset.\n    it looks like:\n     d = {\n        x: [],\n        y: [],\n        error_x: [],   // curveTime\n        error_y: [],   // values\n        subVals: [],   //subVals\n        subSecs: [],   //subSecs\n        subLevs: [],   //subLevs\n        stats: [],     //pointStats\n        text: [],\n        glob_stats: {},     //curveStats\n        xmin: Number.MAX_VALUE,\n        xmax: Number.MIN_VALUE,\n        ymin: Number.MAX_VALUE,\n        ymax: Number.MIN_VALUE,\n        sum: 0\n    };\n    */\n\n    while (di < data.x.length) {\n      // store statistics for this di datapoint\n      data.stats[di] = {\n        prob_bin: data.x[di],\n        hit_rate: data.y[di],\n        obs_y: data.error_x[di],\n        obs_n: data.subLevs[di]\n      }; // this is the tooltip, it is the last element of each dataseries element.\n      // also change the x array from epoch to date for timeseries and DMC, as we are now done with it for calculations.\n\n      data.text[di] = _label3;\n      data.text[di] = data.text[di] + \"<br>probability bin: \" + data.x[di];\n      data.text[di] = data.text[di] + \"<br>hit rate: \" + data.y[di];\n      data.text[di] = data.text[di] + \"<br>oy: \" + data.error_x[di];\n      data.text[di] = data.text[di] + \"<br>on: \" + data.subLevs[di]; // remove sub values and times to save space\n\n      data.subVals[di] = [];\n      data.subSecs[di] = [];\n      data.subLevs[di] = [];\n      di++;\n    }\n\n    dataset[curveIndex]['glob_stats'] = {\n      sample_climo: sample_climo\n    };\n  } // add black perfect reliability line curve\n\n\n  var perfectLine = matsDataCurveOpsUtils.getLinearValueLine(curveInfoParams.xmax, curveInfoParams.xmin, data.ymax, data.ymin, matsTypes.ReservedWords.perfectReliability);\n  dataset.push(perfectLine);\n\n  if (sample_climo >= data.ymin) {\n    var skillmin = sample_climo - (sample_climo - data.xmin) / 2;\n  } else {\n    var skillmin = data.xmin - (data.xmin - sample_climo) / 2;\n  }\n\n  if (sample_climo >= data.ymax) {\n    var skillmax = sample_climo - (sample_climo - data.xmax) / 2;\n  } else {\n    var skillmax = data.xmax - (data.xmax - sample_climo) / 2;\n  } // add black no skill line curve\n\n\n  var noSkillLine = matsDataCurveOpsUtils.getLinearValueLine(curveInfoParams.xmax, curveInfoParams.xmin, skillmax, skillmin, matsTypes.ReservedWords.noSkill);\n  dataset.push(noSkillLine); // add sample climo lines\n  // need to define the minimum and maximum x value for making the curves\n\n  var xClimoLine = matsDataCurveOpsUtils.getHorizontalValueLine(curveInfoParams.xmax, curveInfoParams.xmin, sample_climo, matsTypes.ReservedWords.zero);\n  dataset.push(xClimoLine);\n  var yClimoLine = matsDataCurveOpsUtils.getVerticalValueLine(curveInfoParams.xmax, curveInfoParams.xmin, sample_climo, matsTypes.ReservedWords.zero);\n  dataset.push(yClimoLine); // generate plot options\n\n  var resultOptions = matsDataPlotOpsUtils.generateReliabilityPlotOptions();\n  var totalProcessingFinish = moment();\n  bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n    begin: bookkeepingParams.totalProcessingStart.format(),\n    finish: totalProcessingFinish.format(),\n    duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n  }; // pass result to client-side plotting functions\n\n  return {\n    error: error,\n    data: dataset,\n    options: resultOptions,\n    basis: {\n      plotParams: plotParams,\n      queries: bookkeepingParams.dataRequests\n    }\n  };\n};\n\nvar processDataHistogram = function (allReturnedSubStats, allReturnedSubSecs, allReturnedSubLevs, dataset, appParams, curveInfoParams, plotParams, binParams, bookkeepingParams) {\n  var error = \"\";\n  var curvesLengthSoFar = 0; // flatten all the returned data into one stats array and one secs array in order to calculate histogram bins over the whole range.\n\n  var curveSubStats = [].concat.apply([], allReturnedSubStats);\n  var curveSubSecs = [].concat.apply([], allReturnedSubSecs);\n  var binStats;\n\n  if (binParams.binBounds.length === 0) {\n    binStats = matsDataUtils.calculateHistogramBins(curveSubStats, curveSubSecs, binParams).binStats;\n  } else {\n    binStats = matsDataUtils.prescribeHistogramBins(curveSubStats, curveSubSecs, binParams).binStats;\n  } // store bin labels and x-axis positions of those labels for later when we set up the plot options\n\n\n  var plotBins = {};\n  plotBins['binMeans'] = [];\n  plotBins['binLabels'] = [];\n\n  for (var b_idx = 0; b_idx < binStats.binMeans.length; b_idx++) {\n    plotBins['binMeans'].push(binStats.binMeans[b_idx]);\n    plotBins['binLabels'].push(binStats.binLabels[b_idx]);\n  } // post process curves\n\n\n  var sortedData;\n  var curve;\n  var diffFrom;\n  var label;\n\n  for (var curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n    curve = curveInfoParams.curves[curveIndex];\n    diffFrom = curve.diffFrom;\n    label = curve.label;\n    var d = {\n      // d will contain the curve data\n      x: [],\n      //placeholder\n      y: [],\n      //placeholder\n      error_x: [],\n      // unused\n      error_y: [],\n      // unused\n      subVals: [],\n      subSecs: [],\n      subLevs: [],\n      glob_stats: {},\n      // placeholder\n      bin_stats: [],\n      // placeholder\n      text: [],\n      //placeholder\n      xmin: Number.MAX_VALUE,\n      xmax: Number.MIN_VALUE,\n      ymin: Number.MAX_VALUE,\n      ymax: Number.MIN_VALUE\n    };\n\n    if (diffFrom == null) {\n      var postQueryStartMoment = moment();\n\n      if (curveInfoParams.dataFoundForCurve[curveIndex]) {\n        // sort queried data into the full set of histogram bins\n        sortedData = matsDataUtils.sortHistogramBins(allReturnedSubStats[curveIndex], allReturnedSubSecs[curveIndex], allReturnedSubLevs[curveIndex], binParams.binNum, binStats, appParams.hasLevels, d);\n        d = sortedData.d;\n      }\n    } else {\n      // this is a difference curve, so we're done with regular curves.\n      // do any matching that needs to be done.\n      if (appParams.matching && !bookkeepingParams.alreadyMatched) {\n        if (appParams.hasLevels) {\n          dataset = matsDataMatchUtils.getMatchedDataSetHistogramWithLevels(dataset, curvesLengthSoFar, binStats);\n        } else {\n          dataset = matsDataMatchUtils.getMatchedDataSetHistogram(dataset, curvesLengthSoFar, binStats);\n        }\n\n        bookkeepingParams.alreadyMatched = true;\n      } // then take diffs\n\n\n      var diffResult = matsDataDiffUtils.getDataForDiffCurve(dataset, diffFrom, matsTypes.PlotTypes.histogram, appParams.hasLevels); // adjust axis stats based on new data from diff curve\n\n      d = diffResult.dataset;\n    } // set curve annotation to be the curve mean -- may be recalculated later\n    // also pass previously calculated axis stats to curve options\n\n\n    curve['annotation'] = \"\";\n    curve['axisKey'] = curveInfoParams.curves[curveIndex].axisKey;\n    var cOptions = matsDataCurveOpsUtils.generateBarChartCurveOptions(curve, curveIndex, curveInfoParams.axisMap, d); // generate plot with data, curve annotation, axis labels, etc.\n\n    dataset.push(cOptions);\n    curvesLengthSoFar++;\n    var postQueryFinishMoment = moment();\n    bookkeepingParams.dataRequests[\"post data retrieval (query) process time - \" + curve.label] = {\n      begin: postQueryStartMoment.format(),\n      finish: postQueryFinishMoment.format(),\n      duration: moment.duration(postQueryFinishMoment.diff(postQueryStartMoment)).asSeconds() + ' seconds'\n    };\n  } // end for curves\n  // if matching, pare down dataset to only matching data. Only do this if we didn't already do it while calculating diffs.\n\n\n  if (curveInfoParams.curvesLength > 1 && appParams.matching && !bookkeepingParams.alreadyMatched) {\n    if (appParams.hasLevels) {\n      dataset = matsDataMatchUtils.getMatchedDataSetHistogramWithLevels(dataset, curveInfoParams.curvesLength, binStats);\n    } else {\n      dataset = matsDataMatchUtils.getMatchedDataSetHistogram(dataset, curveInfoParams.curvesLength, binStats);\n    }\n  } // calculate data statistics (including error bars) for each curve\n\n\n  for (curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n    var statisticSelect = curveInfoParams.curves[curveIndex]['statistic'];\n    diffFrom = curveInfoParams.curves[curveIndex].diffFrom;\n    var data = dataset[curveIndex];\n    label = dataset[curveIndex].label;\n    var di = 0;\n\n    while (di < data.x.length) {\n      if (curveInfoParams.yAxisFormat === 'Relative frequency') {\n        // replace the bin number with the bin relative frequency for the plotted statistic\n        data.y[di] = data.bin_stats[di].bin_rf * 100;\n      } // remove sub values and times to save space\n\n\n      data.subVals[di] = [];\n      data.subSecs[di] = [];\n      data.subLevs[di] = []; // this is the tooltip, it is the last element of each dataseries element\n\n      data.text[di] = label + \"<br>\" + \"bin: \" + di + \" (\" + statisticSelect + \" values between \" + (data.bin_stats[di].binLowBound === null ? null : data.bin_stats[di].binLowBound.toPrecision(4)) + \" and \" + (data.bin_stats[di].binUpBound === null ? null : data.bin_stats[di].binUpBound.toPrecision(4)) + \")\" + \"<br>\" + \"number in bin for this curve: \" + (data.y[di] === null ? null : data.y[di]) + \"<br>bin mean for this curve: \" + statisticSelect + \" = \" + (data.bin_stats[di].bin_mean === null ? null : data.bin_stats[di].bin_mean.toPrecision(4)) + \"<br>bin sd  for this curve: \" + statisticSelect + \" = \" + (data.bin_stats[di].bin_sd === null ? null : data.bin_stats[di].bin_sd.toPrecision(4));\n      di++;\n    }\n  } // end curves\n  // generate plot options\n\n\n  var resultOptions = matsDataPlotOpsUtils.generateHistogramPlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, plotBins);\n  var totalProcessingFinish = moment();\n  bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n    begin: bookkeepingParams.totalProcessingStart.format(),\n    finish: totalProcessingFinish.format(),\n    duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n  }; // pass result to client-side plotting functions\n\n  return {\n    error: error,\n    data: dataset,\n    options: resultOptions,\n    basis: {\n      plotParams: plotParams,\n      queries: bookkeepingParams.dataRequests\n    }\n  };\n};\n\nvar processDataContour = function (dataset, curveInfoParams, plotParams, bookkeepingParams) {\n  var error = \"\";\n  var appName = matsCollections.appName.findOne({}).app;\n  var statisticSelect = appName.indexOf(\"anomalycor\") !== -1 ? \"ACC\" : curveInfoParams.curve[0]['statistic'];\n  var data = dataset[0];\n  var label = dataset[0].label;\n\n  if (data.xAxisKey.indexOf(\"Date\") !== -1) {\n    data.x = data.x.map(function (val) {\n      return moment.utc(val * 1000).format(\"YYYY-MM-DD HH:mm\");\n    });\n  } else if (data.yAxisKey.indexOf(\"Date\") !== -1) {\n    data.y = data.y.map(function (val) {\n      return moment.utc(val * 1000).format(\"YYYY-MM-DD HH:mm\");\n    });\n  }\n\n  var i;\n  var j;\n  var currX;\n  var currY;\n  var currText;\n  var currYTextArray;\n\n  for (j = 0; j < data.y.length; j++) {\n    currY = data.y[j];\n    currYTextArray = [];\n\n    for (i = 0; i < data.x.length; i++) {\n      currX = data.x[i];\n      currText = label + \"<br>\" + data['xAxisKey'] + \": \" + data.x[i] + \"<br>\" + data['yAxisKey'] + \": \" + data.y[j] + \"<br>\" + statisticSelect + \": \" + (data.z[j][i] === undefined || data.z[j][i] === null || data.z[j][i] === 'null' ? null : data.z[j][i].toPrecision(4)) + \"<br>n: \" + data['n'][j][i];\n      currYTextArray.push(currText);\n    }\n\n    data.text.push(currYTextArray);\n  } // generate plot options\n\n\n  var resultOptions = matsDataPlotOpsUtils.generateContourPlotOptions(dataset, curveInfoParams.axisMap);\n  var totalProcessingFinish = moment();\n  bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n    begin: bookkeepingParams.totalProcessingStart.format(),\n    finish: totalProcessingFinish.format(),\n    duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n  }; // pass result to client-side plotting functions\n\n  return {\n    error: error,\n    data: dataset,\n    options: resultOptions,\n    basis: {\n      plotParams: plotParams,\n      queries: bookkeepingParams.dataRequests\n    }\n  };\n};\n\nmodule.exportDefault(matsDataProcessUtils = {\n  processDataXYCurve: processDataXYCurve,\n  processDataProfile: processDataProfile,\n  processDataReliability: processDataReliability,\n  processDataHistogram: processDataHistogram,\n  processDataContour: processDataContour\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"plot_spec_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/server/plot_spec_util.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar matsCollections, matsDataCurveOpsUtils, matsDataDiffUtils, matsDataProcessUtils, matsDataQueryUtils, matsDataUtils, matsMethods, matsParamUtils, matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  },\n  matsDataCurveOpsUtils: function (v) {\n    matsDataCurveOpsUtils = v;\n  },\n  matsDataDiffUtils: function (v) {\n    matsDataDiffUtils = v;\n  },\n  matsDataProcessUtils: function (v) {\n    matsDataProcessUtils = v;\n  },\n  matsDataQueryUtils: function (v) {\n    matsDataQueryUtils = v;\n  },\n  matsDataUtils: function (v) {\n    matsDataUtils = v;\n  },\n  matsMethods: function (v) {\n    matsMethods = v;\n  },\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  },\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 1);\nvar mysql;\nmodule.link(\"meteor/pcel:mysql\", {\n  mysql: function (v) {\n    mysql = v;\n  }\n}, 2);\nvar moment;\nmodule.link(\"meteor/momentjs:moment\", {\n  moment: function (v) {\n    moment = v;\n  }\n}, 3);\nvar statMvTranslation = {\n  'ACC': \"ANOM_CORR\",\n  'RMS': 'RMSE',\n  'Bias (Model - Obs)': 'ME',\n  'Model average': \"FBAR\",\n  'Obs average': \"OBAR\"\n};\n\nvar xmlBuilder = require('xmlbuilder');\n\nvar _pad = function (num, size) {\n  var s = num + \"\";\n\n  while (s.length < size) {\n    s = \"0\" + s;\n  }\n\n  return s;\n};\n\nvar _title = function () {\n  try {\n    if (matsCollections.Settings === undefined || matsCollections.Settings.findOne({}, {\n      fields: {\n        Title: 1\n      }\n    }) === undefined) {\n      return \"\";\n    } else {\n      return matsCollections.Settings.findOne({}, {\n        fields: {\n          Title: 1\n        }\n      }).Title;\n    }\n  } catch (someError) {\n    return \"\";\n  }\n};\n\nvar _plotText = function (plotParams) {\n  var format = plotParams.plotFormat;\n\n  if (matsCollections.PlotParams.findOne({\n    name: 'plotFormat'\n  }) && matsCollections.PlotParams.findOne({\n    name: 'plotFormat'\n  }).optionsMap && matsCollections.PlotParams.findOne({\n    name: 'plotFormat'\n  }).optionsMap[plotParams.plotFormat] !== undefined) {\n    format = matsCollections.PlotParams.findOne({\n      name: 'plotFormat'\n    }).optionsMap[plotParams.plotFormat];\n  }\n\n  if (format === undefined) {\n    format = \"Unmatched\";\n  }\n\n  var plotType = _.invert(plotParams.plotTypes)[true];\n\n  switch (plotType) {\n    case matsTypes.PlotTypes.timeSeries:\n      return \"TimeSeries \" + plotParams.dates + \" : \" + format;\n      break;\n\n    case matsTypes.PlotTypes.profile:\n      return \"Profile: \" + format;\n      break;\n\n    case matsTypes.PlotTypes.dieoff:\n      return \"DieOff: \" + format;\n      break;\n\n    case matsTypes.PlotTypes.threshold:\n      return \"Threshold: \" + format;\n      break;\n\n    case matsTypes.PlotTypes.validtime:\n      return \"ValidTime: \" + format;\n      break;\n\n    case matsTypes.PlotTypes.dailyModelCycle:\n      return \"DailyModelCycle \" + plotParams.dates + \" : \" + format;\n      break;\n\n    case matsTypes.PlotTypes.reliability:\n      return \"Reliability: \" + format;\n      break;\n\n    case matsTypes.PlotTypes.map:\n      return \"Map \" + plotParams.dates + \" \";\n      break;\n\n    case matsTypes.PlotTypes.histogram:\n      return \"Histogram: \" + format;\n      break;\n\n    default:\n      return \"Scatter: \" + plotParams.dates + \" : \" + format;\n  }\n};\n\nvar _componentToHex = function (c) {\n  var hex = c.toString(16);\n  return hex.length == 1 ? \"0\" + hex : hex;\n};\n\nvar _rgbToHex = function (color) {\n  var cParts = color.replace('rgb(', '').replace(')', '').split(',');\n  var r = Number(cParts[0]);\n  var g = Number(cParts[1]);\n  var b = Number(cParts[2]);\n  return \"#\" + _componentToHex(r) + _componentToHex(g) + _componentToHex(b);\n};\n\nvar _getUniqDates = function (dates, database, model, dataSource, region, variable, forecastLength, fromSecs, toSecs, validTimes) {\n  var regionsClause = \"\";\n\n  if (region != null) {\n    region = Array.isArray(region) ? region : [region];\n\n    if (region.length > 0) {\n      var regions = region.map(function (r) {\n        return \"'\" + r + \"'\";\n      }).join(',');\n      regionsClause = \"and h.vx_mask IN(\" + regions + \")\";\n    }\n  } // the forecast lengths appear to have sometimes been inconsistent (by format) in the varias databases\n  // so they have been sanitized for display purposes in the forecastValueMap.\n  // now we have to go get the damn ole unsanitary ones for the database.\n\n\n  var forecastLengthsClause = \"\";\n\n  if (forecastLength != null) {\n    forecastLength = Array.isArray(forecastLength) ? forecastLength : [forecastLength];\n\n    if (forecastLength.length > 0) {\n      var forecastValueMap = matsCollections.CurveParams.findOne({\n        name: 'forecast-length'\n      }, {\n        valuesMap: 1\n      })['valuesMap'][database][dataSource];\n      var forecastLengths = forecastLength.map(function (fl) {\n        return forecastValueMap[fl];\n      }).join(',');\n      forecastLengthsClause = \"and ld.fcst_lead IN (\" + forecastLengths + \")\";\n    }\n  }\n\n  var statement = \"select ld.fcst_valid_beg as avtime \" + \"from \" + database + \".stat_header h, \" + database + \".line_data_sl1l2 ld \" + \"where 1=1 and h.model = '\" + model + \"' \" + regionsClause + \"and unix_timestamp(ld.fcst_valid_beg) >= '\" + fromSecs + \"' \" + \"and unix_timestamp(ld.fcst_valid_beg) <= '\" + toSecs + \"' \" + forecastLengthsClause + \"and h.fcst_var = '\" + variable + \"' \" + \"and ld.stat_header_id = h.stat_header_id \" + \"group by avtime order by avtime;\";\n  var rows = matsDataQueryUtils.simplePoolQueryWrapSynchronous(metadataPool, statement);\n\n  if (rows === undefined || rows === null || rows.length === 0) {\n    console.log(matsTypes.Messages.NO_DATA_FOUND);\n  } else {\n    for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n      var dstrMoment = moment(rows[rowIndex].avtime);\n      var dstr = dstrMoment.format('YYYY-MM-DD HH:mm:ss').trim(); // apply the valid-time filter here.....\n\n      var valid = true;\n\n      if (validTimes != null && validTimes.length > 0) {\n        valid = false;\n        var momentSdiHour = Number(dstrMoment.format(\"HH\"));\n\n        for (var vti = 0; vti < validTimes.length; vti++) {\n          var thisvt = Number(validTimes[vti]);\n\n          if (momentSdiHour === thisvt) {\n            // it is valid\n            valid = true;\n            break;\n          }\n        }\n      }\n\n      if (valid === true && dates.indexOf(dstr) === -1) {\n        dates.push(dstr);\n      }\n    }\n  }\n\n  return dates;\n}; // adds date elements to an element of the current xml between a start and an end date, incremented by specific seconds\n// series variables can be grouped or ungrouped.\n// e.g. grouped ...    <val>2018-11-01 00:00:00,2018-11-01 06:00:00,2018-11-01 12:00:00,2018-11-01</val>\n// e.g. ungrouped ...    <val>2018-11-01 00:00:00</val>\n//                       <val>2018-11-01 06:00:00</val>\n//                       <val>2018-11-01 12:00:00</val>\n//                       <val>2018-11-01</val>\n// for time series valid_beg is always ungrouped.\n\n\nvar _getSortedDatesForIndepRange = function (plotParams) {\n  var dateRange = matsDataUtils.getDateRange(plotParams.dates);\n  var fromSecs = dateRange.fromSeconds;\n  var toSecs = dateRange.toSeconds;\n  var curves = plotParams.curves; // have to get all the valid dates for each curve then union them\n  // to get a complete date list\n\n  var dates = [];\n\n  for (var ci = 0; ci < curves.length; ci++) {\n    if (curves[ci]['diffFrom']) {\n      // currrently we do not do mv differencing\n      continue;\n    }\n\n    var curve = curves[ci];\n    var validTimes = curve['valid-time'];\n    var region = curve['region'];\n    var forecastLength = curve['forecast-length'];\n    var variable = curve['variable']; //example 2018-11-06 00:00:00\n\n    var database = curve['database'];\n    var dataSource = curve['data-source'];\n    var model = matsCollections.CurveParams.findOne({\n      name: 'data-source'\n    }).optionsMap[database][dataSource][0];\n    dates = _getUniqDates(dates, database, model, dataSource, region, variable, forecastLength, fromSecs, toSecs, validTimes);\n  } // sort the dates\n\n\n  var sortedDates = dates.sort(function (a, b) {\n    return new moment(a) - new moment(b);\n  });\n  return sortedDates;\n};\n\nvar _getSortedHoursForIndepRange = function (plotParams) {\n  var sortedDates = _getSortedDatesForIndepRange(plotParams);\n\n  var hours = new Set();\n\n  for (var di = 0; di < sortedDates.length; di++) {\n    var hour = moment(sortedDates[di]).format(\"HH\");\n    hours.add(hour);\n  }\n\n  return Array.from(hours).sort();\n};\n\nvar _getSortedDatesForDepRange = function (curve) {\n  var dates = [];\n  var dateRange = matsDataUtils.getDateRange(curve['curve-dates']);\n  var fromSecs = dateRange.fromSeconds;\n  var toSecs = dateRange.toSeconds;\n  var validTimes = curve['valid-time'];\n  var region = curve['region'];\n  var forecastLength = curve['forecast-length'];\n  var variable = curve['variable']; //example 2018-11-06 00:00:00\n\n  var database = curve['database'];\n  var dataSource = curve['data-source'];\n  var model = matsCollections.CurveParams.findOne({\n    name: 'data-source'\n  }).optionsMap[database][dataSource][0];\n  dates = _getUniqDates(dates, database, model, dataSource, region, variable, forecastLength, fromSecs, toSecs, validTimes); // sort the dates\n\n  var sortedDates = dates.sort(function (a, b) {\n    return new moment(a) - new moment(b);\n  });\n  return sortedDates;\n}; // for profiles valid_beg is always grouped.\n\n\nvar addIndepUngroupedDateElementsBetween = function (element, plotParams) {\n  var sortedDates = _getSortedDatesForIndepRange(plotParams); //these must be ungrouped\n\n\n  for (var sdi = 0; sdi < sortedDates.length; sdi++) {\n    element.ele('val', {\n      'label': sortedDates[sdi],\n      'plot_val': \"\"\n    }, sortedDates[sdi]);\n  }\n}; // parse the databases from the curves and add a database string\n\n\nvar addDatabaseElement = function (element, curves) {\n  try {\n    databases = [];\n\n    for (var ci = 0; ci < curves.length; ci++) {\n      if (curves[ci]['diffFrom']) {\n        // currrently we do not do mv differencing\n        continue;\n      }\n\n      if (!databases.includes(curves[ci].database)) {\n        databases.push(curves[ci].database);\n      }\n    }\n\n    databasesStr = databases.join(\"'\");\n    element.ele('database', databasesStr);\n    return element;\n  } catch (someError) {\n    return \"\";\n  }\n}; // add the required metviewer folders\n\n\nvar addFolders = function (element) {\n  try {\n    element.ele('rscript', Meteor.settings.private.MV_RSCRIPT);\n    var folders = element.ele('folders');\n    folders.ele('r_tmpl', matsMethods.MV_DIRS.HOME + \"/R_tmpl\");\n    folders.ele('r_work', matsMethods.MV_DIRS.HOME + \"/R_work\");\n    folders.ele('plots', matsMethods.MV_DIRS.PLOTSDIR);\n    folders.ele('data', matsMethods.MV_DIRS.DATADIR);\n    folders.ele('scripts', matsMethods.MV_DIRS.SCRIPTSDIR);\n    return element;\n  } catch (e) {}\n}; // start the plotspec\n\n\nvar startPlotSpec = function (pool, plotParams) {\n  try {\n    var xml = xmlBuilder.create('plot_spec', {\n      version: \"1.0\",\n      encoding: \"UTF-8\",\n      standalone: false\n    });\n    var connection = xml.ele('connection');\n    connection.ele('host', sumPool.config.connectionConfig.host + \":\" + sumPool.config.connectionConfig.port);\n    addDatabaseElement(connection, plotParams.curves);\n    connection.ele('user', sumPool.config.connectionConfig.user);\n    connection.ele('password', sumPool.config.connectionConfig.password);\n    var management_system = Meteor.settings.private.MV_DB_MANAGEMENT_SYSTEM != null ? Meteor.settings.private.MV_DB_MANAGEMENT_SYSTEM : \"mysql\";\n    connection.ele('management_system', management_system);\n    addFolders(xml);\n    var plot = xml.ele('plot');\n    return {\n      xml: xml,\n      plot: plot\n    };\n  } catch (e) {}\n};\n\nvar addPlotCi = function (element, plotParams) {\n  try {\n    //example c(\"none\",\"none\")\n    var curves = plotParams.curves;\n    var cList = [];\n    var cListStr = 'c(';\n\n    for (var ci = 0; ci < curves.length; ci++) {\n      if (curves[ci]['diffFrom']) {\n        // currrently we do not do mv differencing\n        continue;\n      }\n\n      cList.push('\"none\"');\n    }\n\n    cListStr += cList.join(',') + ')';\n    element.ele('plot_ci', cListStr);\n  } catch (e) {}\n};\n\nvar addShowSignif = function (element, plotParams) {\n  try {\n    //example c(FALSE,FALSE)\n    var curves = plotParams.curves;\n    var cList = [];\n    var cListStr = 'c(';\n\n    for (var ci = 0; ci < curves.length; ci++) {\n      if (curves[ci]['diffFrom']) {\n        // currrently we do not do mv differencing\n        continue;\n      }\n\n      cList.push('FALSE');\n    }\n\n    cListStr += cList.join(',') + ')';\n    element.ele('show_signif', cListStr);\n  } catch (e) {}\n};\n\nvar addPlotDisp = function (element, plotParams) {\n  try {\n    //example c(TRUE,TRUE)\n    var curves = plotParams.curves;\n    var cList = [];\n    var cListStr = 'c(';\n\n    for (var ci = 0; ci < curves.length; ci++) {\n      cList.push('TRUE');\n    }\n\n    cListStr += cList.join(',') + ')';\n    element.ele('plot_disp', cListStr);\n  } catch (e) {}\n};\n\nvar addColors = function (element, plotParams) {\n  try {\n    //  example  'c(\"#ff0000FF\",\"#8000ffFF\")'\n    var curves = plotParams.curves;\n    var cList = [];\n    var cListStr = 'c(';\n\n    for (var ci = 0; ci < curves.length; ci++) {\n      if (curves[ci]['diffFrom']) {\n        // currrently we do not do mv differencing\n        continue;\n      }\n\n      var ch = _rgbToHex(curves[ci].color) + \"FF\";\n      cList.push('\"' + ch + '\"');\n    }\n\n    cListStr += cList.join(',') + ')';\n    element.ele('colors', cListStr);\n  } catch (e) {}\n};\n\nvar addPch = function (element, plotParams) {\n  try {\n    //example c(20,20)\n    var curves = plotParams.curves;\n    var cList = [];\n    var cListStr = 'c(';\n\n    for (var ci = 0; ci < curves.length; ci++) {\n      if (curves[ci]['diffFrom']) {\n        // currrently we do not do mv differencing\n        continue;\n      }\n\n      cList.push('20');\n    }\n\n    cListStr += cList.join(',') + ')';\n    element.ele('pch', cListStr);\n  } catch (e) {}\n};\n\nvar addType = function (element, plotParams) {\n  try {\n    //example c(\"b\",\"b\")\n    var curves = plotParams.curves;\n    var cList = [];\n    var cListStr = 'c(';\n\n    for (var ci = 0; ci < curves.length; ci++) {\n      if (curves[ci]['diffFrom']) {\n        // currrently we do not do mv differencing\n        continue;\n      }\n\n      cList.push('\"b\"');\n    }\n\n    cListStr += cList.join(',') + ')';\n    element.ele('type', cListStr);\n  } catch (e) {}\n};\n\nvar addLty = function (element, plotParams) {\n  try {\n    // example c(1,1)\n    var curves = plotParams.curves;\n    var cList = [];\n    var cListStr = 'c(';\n\n    for (var ci = 0; ci < curves.length; ci++) {\n      if (curves[ci]['diffFrom']) {\n        // currrently we do not do mv differencing\n        continue;\n      }\n\n      cList.push(1);\n    }\n\n    cListStr += cList.join(',') + ')';\n    element.ele('lty', cListStr);\n  } catch (e) {}\n};\n\nvar addLwd = function (element, plotParams) {\n  try {\n    // example c(1,1)\n    var curves = plotParams.curves;\n    var cList = [];\n    var cListStr = 'c(';\n\n    for (var ci = 0; ci < curves.length; ci++) {\n      if (curves[ci]['diffFrom']) {\n        // currrently we do not do mv differencing\n        continue;\n      }\n\n      cList.push(1);\n    }\n\n    cListStr += cList.join(',') + ')';\n    element.ele('lwd', cListStr);\n  } catch (e) {}\n};\n\nvar addConSeries = function (element, plotParams) {\n  try {\n    // example c(1,1)\n    var curves = plotParams.curves;\n    var cList = [];\n    var cListStr = 'c(';\n\n    for (var ci = 0; ci < curves.length; ci++) {\n      if (curves[ci]['diffFrom']) {\n        // currrently we do not do mv differencing\n        continue;\n      }\n\n      cList.push(1);\n    }\n\n    cListStr += cList.join(',') + ')';\n    element.ele('con_series', cListStr);\n  } catch (e) {}\n};\n\nvar addOrderSeries = function (element, plotParams) {\n  try {\n    // example c(1,2)\n    var curves = plotParams.curves;\n    var cList = [];\n    var cListStr = 'c(';\n\n    for (var ci = 0; ci < curves.length; ci++) {\n      if (curves[ci]['diffFrom']) {\n        // currrently we do not do mv differencing\n        continue;\n      }\n\n      cList.push(ci + 1);\n    }\n\n    cListStr += cList.join(',') + ')';\n    element.ele('order_series', cListStr);\n  } catch (e) {}\n};\n\nvar addLegend = function (element, plotParams) {\n  try {\n    // example c(\"\",\"\")\n    var curves = plotParams.curves;\n    var cList = [];\n    var cListStr = 'c(';\n\n    for (var ci = 0; ci < curves.length; ci++) {\n      if (curves[ci]['diffFrom']) {\n        // currrently we do not do mv differencing\n        continue;\n      }\n\n      cList.push('\"\"');\n    }\n\n    cListStr += cList.join(',') + ')';\n    element.ele('legend', cListStr);\n  } catch (e) {}\n};\n\nvar addSeries = function (plot, dependentAxes, plotParams) {\n  /***\n   data-source(models), region(vx_mask),forecast_length (fcst_lead), and pres-level(fcst_lev)\n   are series variables. Multiple selections for a given curve are MV grouped (join'd)\n   Multiple selections associated with different curves are seperate <val> tags.\n    All of the non grouped combinations are added which results in possibly too many curves. The redundant ones are later hidden.\n    They can also go on the axis that is associated with the curve that the region parameter is on.\n   In other words force a new series.\n   i.e. Y1 Series variables or Y2 Series variables\n    series variables can be grouped or ungrouped.\n   e.g. grouped ...    <val>2018-11-01 00:00:00,2018-11-01 06:00:00,2018-11-01 12:00:00,2018-11-01</val>\n   e.g. ungrouped ...    <val>2018-11-01 00:00:00</val>\n   <val>2018-11-01 06:00:00</val>\n   <val>2018-11-01 12:00:00</val>\n   <val>2018-11-01</val>\n   For MATS curves they are grouped for each curve and added ase series variables. This results in redundant curves in MV and so the\n   redundant curves will be hidden.\n   Curves that were assigned to different axis were figured out and assigned in getDependents and are assigned in the dependentAxes structure.\n   ***/\n  var hiddenCurves = [];\n  var sVars = {\n    'data-source': 'model',\n    'region': 'vx_mask',\n    'forecast-length': 'fcst_lead',\n    'pres-level': 'fcst_lev'\n  };\n\n  var type = _.invert(plotParams.plotTypes)[true];\n\n  var seriesAxisMap = {\n    'series1': 'y1',\n    'series2': 'y2'\n  };\n  Object.keys(seriesAxisMap).forEach(function (series) {\n    var models = [];\n    var vx_masks = [];\n    var fcst_leads = [];\n    var fcst_levls = [];\n    var seriesElem = plot.ele(series);\n    var axis = seriesAxisMap[series];\n    var initHours = new Set();\n\n    switch (type) {\n      case matsTypes.PlotTypes.timeSeries:\n        sVars = {\n          'data-source': 'model',\n          'region': 'vx_mask',\n          'forecast-length': 'fcst_lead',\n          'pres-level': 'fcst_lev'\n        };\n        break;\n\n      case matsTypes.PlotTypes.dailyModelCycle:\n        sVars = {\n          'data-source': 'model',\n          'region': 'vx_mask',\n          'forecast-length': 'fcst_lead',\n          'pres-level': 'fcst_lev'\n        };\n        break;\n\n      case matsTypes.PlotTypes.profile:\n        sVars = {\n          'data-source': 'model',\n          'region': 'vx_mask',\n          'forecast-length': 'fcst_lead',\n          'curve-dates': 'fcst_valid_beg'\n        };\n        break;\n\n      case matsTypes.PlotTypes.dieoff:\n        sVars = {\n          'data-source': 'model',\n          'region': 'vx_mask',\n          'pres-level': 'fcst_lev',\n          'curve-dates': 'fcst_valid_beg'\n        };\n\n        for (var ci = 0; ci < plotParams.curves.length; ci++) {\n          if (curves[ci]['diffFrom']) {\n            // currrently we do not do mv differencing\n            continue;\n          }\n\n          var c = plotParams.curves[ci];\n\n          if (c['dieoff-type'] === 'Dieoff for a specified UTC cycle init hour') {\n            initHours.add(c['utc-cycle-start']);\n          } else if (c.dieoff - type === matsTypes.ForecastTypes.singleCycle) {// placeholder for if issue 60313 gets resolved\n          }\n        }\n\n        if (initHours.size > 0) {\n          sVars['utc-cycle-start'] = 'init_hour';\n        }\n\n        break;\n\n      case matsTypes.PlotTypes.threshold:\n        sVars = {\n          'data-source': 'model',\n          'region': 'vx_mask',\n          'forecast-length': 'fcst_lead',\n          'pres-level': 'fcst_lev',\n          'curve-dates': 'fcst_valid_beg'\n        };\n        break;\n\n      case matsTypes.PlotTypes.validtime:\n        sVars = {\n          'data-source': 'model',\n          'region': 'vx_mask',\n          'forecast-length': 'fcst_lead',\n          'pres-level': 'fcst_lev',\n          'curve-dates': 'fcst_valid_beg'\n        };\n        break;\n\n      case matsTypes.PlotTypes.reliability:\n        sVars = {\n          'data-source': 'model',\n          'region': 'vx_mask',\n          'forecast-length': 'fcst_lead',\n          'pres-level': 'fcst_lev',\n          'curve-dates': 'fcst_valid_beg'\n        };\n        break;\n\n      case matsTypes.PlotTypes.histogram:\n        sVars = {\n          'data-source': 'model',\n          'region': 'vx_mask',\n          'forecast-length': 'fcst_lead',\n          'pres-level': 'fcst_lev',\n          'curve-dates': 'fcst_valid_beg'\n        };\n        break;\n\n      default:\n        sVars = {\n          'data-source': 'model',\n          'region': 'vx_mask',\n          'forecast-length': 'fcst_lead',\n          'pres-level': 'fcst_lev'\n        };\n    }\n\n    if (type === matsTypes.PlotTypes.profile) {\n      delete sVars['pres-level'];\n    } else {\n      // we only consider pressure levels when it isn't a profile\n      sVars['pres-level'] = 'fcst_lev';\n    }\n\n    var seriesElements = {};\n    var seriesElementValues = {};\n\n    var _loop = function () {\n      var curve = dependentAxes[axis][daci];\n      var database = curve['database'];\n      var dataSource = curve['data-source'];\n      Object.keys(sVars).forEach(function (sVar) {\n        try {\n          // models - not multiple - ungrouped\n          var sValues = [];\n\n          switch (sVar) {\n            case 'data-source':\n              // convert data-source to single element array\n              sValues = [matsParamUtils.getParameterForName(sVar).optionsMap[database][dataSource][0]];\n              break;\n\n            case 'curve-dates':\n              sValues = _getSortedDatesForDepRange(curve);\n              break;\n\n            case 'utc-cycle-start':\n              var _v = curve['utc-cycle-start'];\n\n              var paddedV = _pad(_v, 2);\n\n              sValues = [paddedV]; // turn single selection padded value into array\n\n              break;\n\n            case 'forecast-length':\n              sValues = curve[sVar];\n\n              if (sValues == null || sValues.length === 0) {\n                sValues = matsParamUtils.getParameterForName(sVar).optionsMap[database][dataSource]; // have to assign all the fcst leads\n              }\n\n              var forecastValueMap = matsParamUtils.getParameterForName(sVar).valuesMap[database][dataSource];\n              sValues = sValues.map(function (fl) {\n                return forecastValueMap[fl];\n              }).join(',');\n              break;\n\n            default:\n              sValues = curve[sVar];\n\n              if (sValues == null || sValues.length === 0) {\n                sValues = matsParamUtils.getParameterForName(sVar).optionsMap[database][dataSource]; // have to assign all the regions\n              }\n\n          } // check to see if this element was already added.\n          // if not added then add the element.\n          // if element was already added see if we need to add this value.\n          // multiples are always grouped.\n\n\n          if (sValues !== undefined) {\n            sValues = Array.isArray(sValues) ? sValues : [sValues];\n\n            if (sValues.length > 0) {\n              var sValuesStr = sValues.join(',');\n\n              if (sValuesStr !== undefined) {\n                var thisVar = sVars[sVar];\n\n                if (seriesElements[thisVar] == null) {\n                  seriesElements[thisVar] = seriesElem.ele('field', {\n                    'name': sVars[sVar]\n                  });\n                  seriesElementValues[thisVar] = new Set();\n                  seriesElementValues[thisVar].add(sValuesStr);\n                } else {\n                  // already exists\n                  if (seriesElementValues[thisVar].has(sValuesStr) === false) {\n                    seriesElementValues[thisVar].add(sValuesStr);\n                  }\n                }\n              }\n            }\n          }\n        } catch (error) {\n          console.log(error);\n          throw new Meteor.Error(error);\n        }\n      });\n    };\n\n    for (var daci = 0; daci < dependentAxes[axis].length; daci++) {\n      _loop();\n    }\n\n    var sElementKeys = Object.keys(seriesElements);\n\n    for (var sei = 0; sei < sElementKeys.length; sei++) {\n      var seVar = sElementKeys[sei];\n      var svars = Array.from(seriesElementValues[seVar]).sort();\n\n      for (var svi = 0; svi < svars.length; svi++) {\n        var v = svars[svi];\n\n        if (v !== \"undefined\") {\n          seriesElements[seVar].ele('val', v);\n        }\n      }\n\n      ;\n    }\n  });\n};\n\nvar getDependentAxis = function (plotParams) {\n  // there are two possible axis for metviewer. We want to collect all the variables\n  // into groups. We will take the two largest groups.\n  // variables and statistics go together. They are dependent variabales in MV.\n  // The variable/stat pairs always are associated with different curves, and will always be on different axis,\n  // if possible, but might be assigned an axis via an axes parameter.\n  var yaxesDefault = \"auto-by-variable\";\n  var curves = plotParams['curves'];\n  var dependentAxes = {\n    'y1': [],\n    'y2': []\n  };\n  dependentAxes['y1'].push(curves[0]);\n  var dependentAxesVariables = {\n    'y1': [curves[0]['variable']],\n    'y2': []\n  };\n\n  for (var ci = 1; ci < curves.length; ci++) {\n    if (curves[ci]['diffFrom']) {\n      // currrently we do not do mv differencing\n      continue;\n    }\n\n    if (curves[ci].yaxes != yaxesDefault) {\n      // it was assigned an axis by the axis param so sort it into its selectedYaxes\n      dependentAxes[curves[ci].yaxes].push(curves[ci]);\n    } else {\n      // sort it into an axis by its variable/stat combination\n      //     variables:\n      //     variables that share an axis are different dependent variables. Put them in dep1.\n      // unless it is a variable with multiple stats.\n      // different variable with different stats that have differing axis must go in different Y axis vars (and you can only have two of those)\n      var variable = curves[ci].variable;\n\n      if (dependentAxesVariables['y1'].includes(variable)) {\n        dependentAxes['y1'].push(curves[ci]);\n      } else {\n        dependentAxes['y2'].push(curves[ci]);\n      }\n    }\n  }\n\n  return dependentAxes;\n};\n\nfunction addDeps(plot, dependentAxes) {\n  var dep = plot.ele('dep');\n  var deps = {\n    \"dep1\": \"y1\",\n    \"dep2\": \"y2\"\n  };\n\n  for (var di = 0; di < Object.keys(deps).length; di++) {\n    // [dep1, dep2]\n    var depKey = Object.keys(deps)[di]; // dep1 or dep2\n\n    var depAxis = deps[depKey];\n    var subDep = dep.ele(depKey); //<dep><dep1/><dep2/>\n\n    var variableStatisticPairs = {};\n\n    for (var daci = 0; daci < dependentAxes[depAxis].length; daci++) {\n      //[y1,y2]\n      // record the variable-statistic pair\n      var variable = dependentAxes[depAxis][daci]['variable'];\n      var stat = statMvTranslation[dependentAxes[depAxis][daci]['statistic']];\n\n      if (variableStatisticPairs[variable] == null) {\n        variableStatisticPairs[variable] = [stat];\n      } else {\n        variableStatisticPairs[variable].push(stat);\n      }\n    }\n\n    var vars = Object.keys(variableStatisticPairs); //['T','HGT','WIND'...]\n\n    for (var v = 0; v < vars.length; v++) {\n      var stats = Array.from(new Set(variableStatisticPairs[vars[v]]));\n      var depElem = subDep.ele('fcst_var', {\n        'name': vars[v]\n      }); //<dep><dep1><fcst_var name='T'><stat>RMS</stat></fcst_var> </dep1><dep2/>\n\n      for (var si = 0; si < stats.length; si++) {\n        depElem.ele('stat', stats[si]);\n      }\n    }\n  }\n}\n\nfunction addAnomalycorrDeps(plot, dependentAxes) {\n  var dep = plot.ele('dep');\n  var deps = {\n    \"dep1\": \"y1\",\n    \"dep2\": \"y2\"\n  };\n\n  for (var di = 0; di < Object.keys(deps).length; di++) {\n    // [dep1, dep2]\n    var depKey = Object.keys(deps)[di]; // dep1 or dep2\n\n    var depAxis = deps[depKey];\n    var subDep = dep.ele(depKey); //<dep><dep1/><dep2/>\n\n    var variables = new Set();\n\n    for (var daci = 0; daci < dependentAxes[depAxis].length; daci++) {\n      //[y1,y2]\n      var variable = dependentAxes[depAxis][daci]['variable'];\n      variables.add(variable);\n    }\n\n    var vars = Array.from(variables);\n\n    for (var v = 0; v < vars.length; v++) {\n      subDep.ele('fcst_var', {\n        'name': vars[v]\n      }).ele('stat', 'ANOM_CORR');\n    }\n  }\n}\n\nvar _addSeriesLabels = function (element, dependentAxes, plotParams) {\n  var plotType = _.invert(plotParams.plotTypes)[true];\n\n  var label;\n\n  switch (plotType) {\n    case matsTypes.PlotTypes.timeSeries:\n      label = \"Time\";\n      break;\n\n    case matsTypes.PlotTypes.dieoff:\n      label = \"Forecast Hour\";\n      break;\n\n    case matsTypes.PlotTypes.dailyModelCycle:\n      label = \"Time\";\n      break;\n\n    case matsTypes.PlotTypes.histogram:\n      label = \"Bin\";\n      break;\n\n    case matsTypes.PlotTypes.validtime:\n      label = \"Hour of Day\";\n      break;\n\n    case matsTypes.PlotTypes.reliability:\n      label = \"Reliability\";\n      break;\n\n    case matsTypes.PlotTypes.threshold:\n      label = \"Threshold\";\n      break;\n\n    case matsTypes.PlotTypes.profile:\n      var vars = new Set();\n      plotParams.curves.forEach(function (c) {\n        vars.add(c.variable);\n      });\n      label = Array.from(vars).join(' - ');\n      break;\n\n    default:\n      label = \"Time\";\n  }\n\n  element.ele('x_label', label);\n  var y1vars = [];\n\n  for (var y1i = 0; y1i < dependentAxes['y1'].length; y1i++) {\n    if (!y1vars.includes(dependentAxes['y1'][y1i]['variable'])) {\n      y1vars.push(dependentAxes['y1'][y1i]['variable']);\n    }\n  }\n\n  element.ele('y1_label', y1vars.join(','));\n  var y2vars = [];\n\n  for (var y2i = 0; y2i < dependentAxes['y2'].length; y2i++) {\n    if (!y2vars.includes(dependentAxes['y2'][y2i]['variable'])) {\n      y2vars.push(dependentAxes['y2'][y2i]['variable']);\n    }\n  }\n\n  element.ele('y2_label', y2vars.join(','));\n};\n\nvar addTemplate = function (plot, templateStr) {\n  plot.ele('template', templateStr);\n};\n\nvar addIndepDates = function (plot, plotParams) {\n  var indep = plot.ele('indep', {\n    'equalize': 'false',\n    'name': 'fcst_valid_beg'\n  });\n  addIndepUngroupedDateElementsBetween(indep, plotParams);\n};\n\nvar addIndepLevels = function (plot, plotParams) {\n  // for profiles we use a union of all the levels available for all the data-sources\n  var indep = plot.ele('indep', {\n    'equalize': 'false',\n    'name': 'fcst_lev'\n  });\n  var curves = plotParams.curves;\n  var lvlSet = new Set(); // use a set to accumulate all the levels\n\n  for (var ci = 0; ci < curves.length; ci++) {\n    if (curves[ci]['diffFrom']) {\n      // currrently we do not do mv differencing\n      continue;\n    }\n\n    var curve = curves[ci];\n    var database = curve['database'];\n    var dataSource = curve['data-source'];\n    var levelVals = matsCollections.CurveParams.findOne({\n      name: 'data-source'\n    })['levelsMap'][database][dataSource];\n    lvlSet.add(levelVals);\n  } // only add the fcst_lev tag if there are pres-levels requested - leaving it out will get them all\n\n\n  var lvls = Array.from(lvlSet)[0];\n\n  for (var li = 0; li < lvls.length; li++) {\n    var val = indep.ele('val', lvls[li]);\n    val.att('label', lvls[li]);\n    val.att('plot_val', \"\");\n  }\n};\n\nvar addIndepValidHours = function (plot, plotParams) {\n  // for validTimes we use a union of all the vts available for all the data-sources\n  var indep = plot.ele('indep', {\n    'equalize': 'false',\n    'name': 'valid_hour'\n  });\n\n  var hours = _getSortedHoursForIndepRange(plotParams);\n\n  for (var hi = 0; hi < hours.length; hi++) {\n    var val = indep.ele('val', hours[hi]);\n    val.att('label', hours[hi]);\n    val.att('plot_val', \"\");\n  }\n};\n\nvar addIndepForecastHours = function (plot, plotParams) {\n  // for dieoffs we use a union of all the fhrs available for all the data-sources\n  var indep = plot.ele('indep', {\n    'equalize': 'false',\n    'name': 'fcst_lead'\n  });\n  var curves = plotParams.curves;\n  var leadSet = new Set(); // use a set to accumulate all the levels\n\n  for (var ci = 0; ci < curves.length; ci++) {\n    if (curves[ci]['diffFrom']) {\n      // currrently we do not do mv differencing\n      continue;\n    }\n\n    var curve = curves[ci];\n    var database = curve['database'];\n    var dataSource = curve['data-source'];\n    var forecastLengths = matsCollections.CurveParams.findOne({\n      name: 'forecast-length'\n    })['optionsMap'][database][dataSource];\n    leadSet.add(forecastLengths);\n  }\n\n  var leads = Array.from(leadSet)[0];\n\n  for (var li = 0; li < leads.length; li++) {\n    var val = indep.ele('val', leads[li]);\n    val.att('label', leads[li]);\n    val.att('plot_val', \"\");\n  }\n};\n\nvar addTmpl = function (plot, key, plotParams, dependentAxes) {\n  var tmpl = plot.ele('tmpl');\n  tmpl.ele('data_file', key + '.data');\n  tmpl.ele('plot_file', key + '.png');\n  tmpl.ele('r_file', key + '.R');\n  tmpl.ele('title', _title() + \" : \" + _plotText(plotParams) + \" \" + plotParams.plotAction);\n\n  _addSeriesLabels(tmpl, dependentAxes, plotParams);\n\n  tmpl.ele('caption');\n  tmpl.ele('job_title');\n  tmpl.ele('keep_revisions', 'false');\n  tmpl.ele('listdiffseries1', 'list()');\n  tmpl.ele('listdiffseries2', 'list()');\n};\n\nvar addPlotFix = function (plot) {\n  plot.ele('plot_fix');\n};\n\nvar addPlotCond = function (plot, plotParams) {\n  plot.ele('plot_cond');\n};\n\nvar addCalcStat = function (plot, statType) {\n  plot.ele('calc_stat').ele(statType, true);\n}; // unused for time series\n\n\nvar addPlotStat = function (plot, stat) {\n  //Statistics --- We always do Summary with Mean - so there\n  plot.ele('plot_stat', stat);\n};\n\nvar addPlotCmd = function (plot) {\n  plot.ele('plot_cmd');\n};\n\nvar addY1Lim = function (plot) {\n  plot.ele('y1_lim', 'c()');\n};\n\nvar addY1Bufr = function (plot) {\n  plot.ele('y1_bufr', '0.04');\n};\n\nvar addY2Lim = function (plot) {\n  plot.ele('y2_lim', 'c()');\n};\n\nvar addMiscellaneous = function (plot, plotParams) {\n  plot.ele('event_equal', 'false');\n\n  var plotType = _.invert(plotParams.plotTypes)[true];\n\n  switch (plotType) {\n    case matsTypes.PlotTypes.timeSeries:\n    case matsTypes.PlotTypes.dieoff:\n    case matsTypes.PlotTypes.dailyModelCycle:\n    case matsTypes.PlotTypes.histogram:\n    case matsTypes.PlotTypes.validtime:\n    case matsTypes.PlotTypes.reliability:\n    case matsTypes.PlotTypes.threshold:\n      plot.ele('vert_plot', 'false');\n      plot.ele('x_reverse', 'false');\n      break;\n\n    case matsTypes.PlotTypes.profile:\n      plot.ele('vert_plot', 'true');\n      plot.ele('x_reverse', 'true');\n      break;\n\n    default:\n      plot.ele('vert_plot', 'false');\n      plot.ele('x_reverse', 'false');\n  }\n\n  plot.ele('num_stats', 'false');\n  plot.ele('indy1_stag', 'false');\n  plot.ele('indy2_stag', 'false');\n  plot.ele('grid_on', 'true');\n  plot.ele('sync_axes', 'false');\n  plot.ele('dump_points1', 'true');\n  plot.ele('dump_points2', 'true');\n  plot.ele('log_y1', 'false');\n  plot.ele('log_y2', 'false');\n  plot.ele('varianceinflationfactor', 'false');\n  plot.ele('plot_type', 'png16m');\n  plot.ele('plot_height', '8.5');\n  plot.ele('plot_width', '11');\n  plot.ele('plot_res', '72');\n  plot.ele('plot_units', 'in');\n  plot.ele('mar', 'c(8,4,5,4)');\n  plot.ele('mgp', 'c(1,1,0)');\n  plot.ele('cex', '1');\n  plot.ele('title_weight', '2');\n  plot.ele('title_size', '1.4');\n  plot.ele('title_offset', '-2');\n  plot.ele('title_align', '0.5');\n  plot.ele('xtlab_orient', '1');\n  plot.ele('xtlab_perp', '-0.75');\n  plot.ele('xtlab_horiz', '0.5');\n  plot.ele('xtlab_freq', '0');\n  plot.ele('xtlab_size', '1');\n  plot.ele('xlab_weight', '1');\n  plot.ele('xlab_size', '1');\n  plot.ele('xlab_offset', '2');\n  plot.ele('xlab_align', '0.5');\n  plot.ele('ytlab_orient', '1');\n  plot.ele('ytlab_perp', '0.5');\n  plot.ele('ytlab_horiz', '0.5');\n  plot.ele('ytlab_size', '1');\n  plot.ele('ylab_weight', '1');\n  plot.ele('ylab_size', '1');\n  plot.ele('ylab_offset', '-2');\n  plot.ele('ylab_align', '0.5');\n  plot.ele('grid_lty', '3');\n  plot.ele('grid_col', '#cccccc');\n  plot.ele('grid_lwd', '1');\n  plot.ele('grid_x', 'listX');\n  plot.ele('x2tlab_orient', '1');\n  plot.ele('x2tlab_perp', '1');\n  plot.ele('x2tlab_horiz', '0.5');\n  plot.ele('x2tlab_size', '0.8');\n  plot.ele('x2lab_size', '0.8');\n  plot.ele('x2lab_offset', '-0.5');\n  plot.ele('x2lab_align', '0.5');\n  plot.ele('y2tlab_orient', '1');\n  plot.ele('y2tlab_perp', '0.5');\n  plot.ele('y2tlab_horiz', '0.5');\n  plot.ele('y2tlab_size', '1');\n  plot.ele('y2lab_size', '1');\n  plot.ele('y2lab_offset', '1');\n  plot.ele('y2lab_align', '0.5');\n  plot.ele('legend_box', 'o');\n  plot.ele('legend_inset', 'c(0, -.25)');\n  plot.ele('legend_ncol', '3');\n  plot.ele('legend_size', '0.8');\n  plot.ele('caption_weight', '1');\n  plot.ele('caption_col', '#333333');\n  plot.ele('caption_size', '0.8');\n  plot.ele('caption_offset', '3');\n  plot.ele('caption_align', '0');\n  plot.ele('ci_alpha', '0.05');\n};\n\nvar endPlotSpec = function (xml) {\n  xml.end({\n    pretty: true\n  });\n};\n\nmodule.exportDefault(matsPlotSpecUtils = {\n  startPlotSpec: startPlotSpec,\n  addDeps: addDeps,\n  addAnomalycorrDeps: addAnomalycorrDeps,\n  getDependentAxis: getDependentAxis,\n  addDatabaseElement: addDatabaseElement,\n  addFolders: addFolders,\n  addPlotCi: addPlotCi,\n  addShowSignif: addShowSignif,\n  addPlotDisp: addPlotDisp,\n  addColors: addColors,\n  addPch: addPch,\n  addType: addType,\n  addLty: addLty,\n  addLwd: addLwd,\n  addConSeries: addConSeries,\n  addOrderSeries: addOrderSeries,\n  addLegend: addLegend,\n  addSeries: addSeries,\n  addTemplate: addTemplate,\n  addIndepDates: addIndepDates,\n  addTmpl: addTmpl,\n  addPlotFix: addPlotFix,\n  addPlotCond: addPlotCond,\n  addCalcStat: addCalcStat,\n  addPlotStat: addPlotStat,\n  addPlotCmd: addPlotCmd,\n  addY1Lim: addY1Lim,\n  addY1Bufr: addY1Bufr,\n  addY2Lim: addY2Lim,\n  addMiscellaneous: addMiscellaneous,\n  endPlotSpec: endPlotSpec,\n  addIndepLevels: addIndepLevels,\n  addIndepForecastHours: addIndepForecastHours,\n  addIndepValidHours: addIndepValidHours\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/server/index.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./publications.js\");\nmodule.link(\"./data_util.js\");\nmodule.link(\"./data_query_util.js\");\nmodule.link(\"./data_diff_util.js\");\nmodule.link(\"./data_match_util.js\");\nmodule.link(\"./data_curve_ops_util.js\");\nmodule.link(\"./data_plot_ops_util.js\");\nmodule.link(\"./data_process_util.js\");\nmodule.link(\"./plot_spec_util.js\");\nmodule.link(\"./cache.js\");\nmodule.link(\"../both\");\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"publications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/server/publications.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\n\nif (Meteor.isServer) {\n  Meteor.publish(\"CurveParams\", function () {\n    var data = matsCollections.CurveParams.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"CurveTextPatterns\", function () {\n    var data = matsCollections.CurveTextPatterns.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"ScatterAxisTextPattern\", function () {\n    var data = matsCollections.ScatterAxisTextPattern.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"SavedCurveParams\", function () {\n    var data = matsCollections.SavedCurveParams.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"PlotParams\", function () {\n    var data = matsCollections.PlotParams.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"Scatter2dParams\", function () {\n    var data = matsCollections.Scatter2dParams.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"PlotGraphFunctions\", function () {\n    var data = matsCollections.PlotGraphFunctions.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"RegionsPerModel\", function () {\n    var data = matsCollections.RegionsPerModel.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"SitesPerModel\", function () {\n    var data = matsCollections.SitesPerModel.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"RegionDescriptions\", function () {\n    var data = matsCollections.RegionDescriptions.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"Models\", function () {\n    var data = matsCollections.Models.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"FcstLensPerModel\", function () {\n    var data = matsCollections.FcstLensPerModel.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"ColorScheme\", function () {\n    var data = matsCollections.ColorScheme.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"Settings\", function () {\n    var data = matsCollections.Settings.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"CurveSettings\", function () {\n    var data = matsCollections.CurveSettings.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"SentAddresses\", function () {\n    var data = matsCollections.SentAddresses.find({\n      userId: this.userId\n    });\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  }); // do not publish roles\n  // Meteor.publish(\"Roles\", function () {\n  //     var data = matsCollections.Roles.find({});\n  //     if (data) {\n  //         return data;\n  //     }\n  //     return this.ready();\n  // });\n  // do not publish Authorization\n  // Meteor.publish(\"Authorization\", function () {\n  //     var data = matsCollections.Authorization.find({});\n  //     if (data) {\n  //         return data;\n  //     }\n  //     return this.ready();\n  // });\n  // do not publish credentials\n  // Meteor.publish(\"Credentials\", function () {\n  //     var data = matsCollections.Credentials.find({});\n  //     if (data) {\n  //         return data;\n  //     }\n  //     return this.ready();\n  // });\n  //do not publish databases\n  // Meteor.publish(\"Databases\", function () {\n  //     var data = matsCollections.Databases.find({});\n  //     if (data) {\n  //         return data;\n  //     }\n  //     return this.ready();\n  // });\n\n  Meteor.publish(\"SiteMap\", function () {\n    var data = matsCollections.SiteMap.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"StationMap\", function () {\n    var data = matsCollections.StationMap.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n  Meteor.publish(\"appName\", function () {\n    var data = matsCollections.appName.find({});\n\n    if (data) {\n      return data;\n    }\n\n    return this.ready();\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cache.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/imports/startup/server/cache.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\n\nif (Meteor.isServer) {\n  var Results = require('node-file-cache').create({\n    file: 'fileCache',\n    life: 8 * 3600\n  });\n\n  var getResult = function (key) {\n    //console.log('asked to get result from cache for key:', key);\n    var result = Results.get(key);\n    return result === null ? undefined : result;\n  };\n\n  var storeResult = function (key, result) {\n    //console.log('asked to set result in cache for app: ',process.env.PWD, ' key:', key);\n    Results.set(key, result); //console.log('set result in cache for app: ', process.env.PWD, 'key:', key);\n  };\n\n  var clear = function () {\n    //console.log('asked to clear result cache');\n    Results.clear();\n  };\n\n  var expireKey = function (key) {\n    //console.log('asked to clear result cache for key ', key);\n    Results.expire(key);\n  };\n}\n\nmodule.exportDefault(matsCache = {\n  getResult: getResult,\n  storeResult: storeResult,\n  clear: clear,\n  expireKey: expireKey\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"template.footer.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/template.footer.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"footer\");\nTemplate[\"footer\"] = new Template(\"Template.footer\", (function() {\n  var view = this;\n  return HTML.NAV({\n    id: \"footnav\",\n    class: \"navbar navbar-default\",\n    style: \"display: block;\"\n  }, \"\\n    \", HTML.DIV({\n    class: \"container-fluid\",\n    style: \"background-color: #dddddd;height:100%;margin-bottom:0;margin-top:0;padding-bottom:1em;padding-top:0;\"\n  }, \"\\n        \", HTML.Raw('<div class=\"navbar-header\">\\n            <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar-collapse-3\" aria-expanded=\"false\">\\n                <span class=\"sr-only\">Toggle navigation</span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n                <span class=\"icon-bar\"></span>\\n            </button>\\n        </div>'), \"\\n        \", HTML.Raw(\"<!-- Collect the nav links, forms, and other content for toggling -->\"), \"\\n        \", HTML.DIV({\n    class: \"collapse navbar-collapse\",\n    id: \"navbar-collapse-3\",\n    style: \"background-color: #dddddd;height:100%;margin-bottom:0;margin-top:0;padding-bottom:1em;padding-top:0;\"\n  }, \"\\n            \", HTML.UL({\n    class: \"nav navbar-nav\",\n    style: \"background-color: #dddddd;height:100%;margin-bottom:0;margin-top:0;padding-bottom:0;padding-top:0;\"\n  }, \"\\n                \", HTML.LI(Spacebars.include(view.lookupTemplate(\"version\"))), \"\\n                \", HTML.Raw('<li style=\"height:1em\"><a href=\"http://www.noaa.gov/privacy.html\" class=\"navbar-link\">NOAA Privacy Statement</a></li>'), \"\\n                \", HTML.Raw('<li style=\"height:1em\"><a href=\"http://esrl.noaa.gov/gsd/accessibility.html\" class=\"navbar-link\">Web Accessibility Statement</a></li>'), \"\\n                \", HTML.Raw('<li style=\"height:1em\"><a href=\"http://www.noaa.gov/disclaimer.html\" class=\"navbar-link\">Disclaimer for External Links</a></li>'), \"\\n                \", HTML.Raw('<li style=\"height:1em\"><a href=\"http://www.noaa.gov/\" class=\"navbar-link\">NOAA</a></li>'), \"\\n                \", HTML.Raw('<li style=\"height:1em\"><a href=\"http://www.commerce.gov/\" class=\"navbar-link\">U.S. Department of Commerce</a></li>'), \"\\n                \", HTML.Raw('<li style=\"height:1em\"><a href=\"http://research.noaa.gov/\" class=\"navbar-link\">NOAA Research</a></li>'), \"\\n                \", HTML.Raw('<li style=\"height:1em\"><a href=\"http://esrl.noaa.gov/\" class=\"navbar-link\">Earth System Research Laboratory</a></li>'), \"\\n                \", HTML.Raw('<li style=\"height:1em\"><a href=\"http://esrl.noaa.gov/gsd/\" class=\"navbar-link\">Global Systems Division</a></li>'), \"\\n                \", HTML.Raw('<li style=\"height:1em\"><a href=\"mailto:webmaster.hiwpp@noaa.gov\" class=\"navbar-link\">Contact the Webmaster</a></li>'), \"\\n            \"), \"\\n        \"), HTML.Raw(\"<!-- /.navbar-collapse -->\"), \"\\n    \"), HTML.Raw(\"<!-- /.container-fluid -->\\n\"));\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"regression.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/lib/regression.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\nvar gaussianElimination = function (a, o) {\n  var i = 0,\n      j = 0,\n      k = 0,\n      maxrow = 0,\n      tmp = 0,\n      n = a.length - 1,\n      x = new Array(o);\n\n  for (i = 0; i < n; i++) {\n    maxrow = i;\n\n    for (j = i + 1; j < n; j++) {\n      if (Math.abs(a[i][j]) > Math.abs(a[i][maxrow])) maxrow = j;\n    }\n\n    for (k = i; k < n + 1; k++) {\n      tmp = a[k][i];\n      a[k][i] = a[k][maxrow];\n      a[k][maxrow] = tmp;\n    }\n\n    for (j = i + 1; j < n; j++) {\n      for (k = n; k >= i; k--) {\n        a[k][j] -= a[k][i] * a[i][j] / a[i][i];\n      }\n    }\n  }\n\n  for (j = n - 1; j >= 0; j--) {\n    tmp = 0;\n\n    for (k = j + 1; k < n; k++) {\n      tmp += a[k][j] * x[k];\n    }\n\n    x[j] = (a[n][j] - tmp) / a[j][j];\n  }\n\n  return x;\n};\n\nvar methods = {\n  linear: function (data) {\n    var sum = [0, 0, 0, 0, 0],\n        n = 0,\n        results = [];\n\n    for (; n < data.length; n++) {\n      if (data[n][1] != null) {\n        sum[0] += data[n][0];\n        sum[1] += data[n][1];\n        sum[2] += data[n][0] * data[n][0];\n        sum[3] += data[n][0] * data[n][1];\n        sum[4] += data[n][1] * data[n][1];\n      }\n    }\n\n    var gradient = (n * sum[3] - sum[0] * sum[1]) / (n * sum[2] - sum[0] * sum[0]);\n    var intercept = sum[1] / n - gradient * sum[0] / n; //  var correlation = (n * sum[3] - sum[0] * sum[1]) / Math.sqrt((n * sum[2] - sum[0] * sum[0]) * (n * sum[4] - sum[1] * sum[1]));\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var coordinate = [data[i][0], data[i][0] * gradient + intercept];\n      results.push(coordinate);\n    }\n\n    var string = 'y = ' + Math.round(gradient * 100) / 100 + 'x + ' + Math.round(intercept * 100) / 100;\n    return {\n      equation: [gradient, intercept],\n      points: results,\n      string: string\n    };\n  },\n  linearThroughOrigin: function (data) {\n    var sum = [0, 0],\n        n = 0,\n        results = [];\n\n    for (; n < data.length; n++) {\n      if (data[n][1] != null) {\n        sum[0] += data[n][0] * data[n][0]; //sumSqX\n\n        sum[1] += data[n][0] * data[n][1]; //sumXY\n      }\n    }\n\n    var gradient = sum[1] / sum[0];\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var coordinate = [data[i][0], data[i][0] * gradient];\n      results.push(coordinate);\n    }\n\n    var string = 'y = ' + Math.round(gradient * 100) / 100 + 'x';\n    return {\n      equation: [gradient],\n      points: results,\n      string: string\n    };\n  },\n  exponential: function (data) {\n    var sum = [0, 0, 0, 0, 0, 0],\n        n = 0,\n        results = [];\n\n    for (len = data.length; n < len; n++) {\n      if (data[n][1] != null) {\n        sum[0] += data[n][0];\n        sum[1] += data[n][1];\n        sum[2] += data[n][0] * data[n][0] * data[n][1];\n        sum[3] += data[n][1] * Math.log(data[n][1]);\n        sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n        sum[5] += data[n][0] * data[n][1];\n      }\n    }\n\n    var denominator = sum[1] * sum[2] - sum[5] * sum[5];\n    var A = Math.pow(Math.E, (sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n    var B = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var coordinate = [data[i][0], A * Math.pow(Math.E, B * data[i][0])];\n      results.push(coordinate);\n    }\n\n    var string = 'y = ' + Math.round(A * 100) / 100 + 'e^(' + Math.round(B * 100) / 100 + 'x)';\n    return {\n      equation: [A, B],\n      points: results,\n      string: string\n    };\n  },\n  logarithmic: function (data) {\n    var sum = [0, 0, 0, 0],\n        n = 0,\n        results = [];\n\n    for (len = data.length; n < len; n++) {\n      if (data[n][1] != null) {\n        sum[0] += Math.log(data[n][0]);\n        sum[1] += data[n][1] * Math.log(data[n][0]);\n        sum[2] += data[n][1];\n        sum[3] += Math.pow(Math.log(data[n][0]), 2);\n      }\n    }\n\n    var B = (n * sum[1] - sum[2] * sum[0]) / (n * sum[3] - sum[0] * sum[0]);\n    var A = (sum[2] - B * sum[0]) / n;\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var coordinate = [data[i][0], A + B * Math.log(data[i][0])];\n      results.push(coordinate);\n    }\n\n    var string = 'y = ' + Math.round(A * 100) / 100 + ' + ' + Math.round(B * 100) / 100 + ' ln(x)';\n    return {\n      equation: [A, B],\n      points: results,\n      string: string\n    };\n  },\n  power: function (data) {\n    var sum = [0, 0, 0, 0],\n        n = 0,\n        results = [];\n\n    for (len = data.length; n < len; n++) {\n      if (data[n][1] != null) {\n        sum[0] += Math.log(data[n][0]);\n        sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n        sum[2] += Math.log(data[n][1]);\n        sum[3] += Math.pow(Math.log(data[n][0]), 2);\n      }\n    }\n\n    var B = (n * sum[1] - sum[2] * sum[0]) / (n * sum[3] - sum[0] * sum[0]);\n    var A = Math.pow(Math.E, (sum[2] - B * sum[0]) / n);\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var coordinate = [data[i][0], A * Math.pow(data[i][0], B)];\n      results.push(coordinate);\n    }\n\n    var string = 'y = ' + Math.round(A * 100) / 100 + 'x^' + Math.round(B * 100) / 100;\n    return {\n      equation: [A, B],\n      points: results,\n      string: string\n    };\n  },\n  polynomial: function (data, order) {\n    if (typeof order == 'undefined') {\n      order = 2;\n    }\n\n    var lhs = [],\n        rhs = [],\n        results = [],\n        a = 0,\n        b = 0,\n        i = 0,\n        k = order + 1;\n\n    for (; i < k; i++) {\n      for (var l = 0, len = data.length; l < len; l++) {\n        if (data[l][1] != null) {\n          a += Math.pow(data[l][0], i) * data[l][1];\n        }\n      }\n\n      lhs.push(a), a = 0;\n      var c = [];\n\n      for (var j = 0; j < k; j++) {\n        for (var l = 0, len = data.length; l < len; l++) {\n          if (data[l][1] != null) {\n            b += Math.pow(data[l][0], i + j);\n          }\n        }\n\n        c.push(b), b = 0;\n      }\n\n      rhs.push(c);\n    }\n\n    rhs.push(lhs);\n    var equation = gaussianElimination(rhs, k);\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var answer = 0;\n\n      for (var w = 0; w < equation.length; w++) {\n        answer += equation[w] * Math.pow(data[i][0], w);\n      }\n\n      results.push([data[i][0], answer]);\n    }\n\n    var string = 'y = ';\n\n    for (var i = equation.length - 1; i >= 0; i--) {\n      if (i > 1) string += Math.round(equation[i] * Math.pow(10, i)) / Math.pow(10, i) + 'x^' + i + ' + ';else if (i == 1) string += Math.round(equation[i] * 100) / 100 + 'x' + ' + ';else string += Math.round(equation[i] * 100) / 100;\n    }\n\n    return {\n      equation: equation,\n      points: results,\n      string: string\n    };\n  },\n  lastvalue: function (data) {\n    var results = [];\n    var lastvalue = null;\n\n    for (var i = 0; i < data.length; i++) {\n      if (data[i][1]) {\n        lastvalue = data[i][1];\n        results.push([data[i][0], data[i][1]]);\n      } else {\n        results.push([data[i][0], lastvalue]);\n      }\n    }\n\n    return {\n      equation: [lastvalue],\n      points: results,\n      string: \"\" + lastvalue\n    };\n  }\n};\nmodule.exportDefault(regression = function (method, data, order) {\n  if (typeof method == 'string') {\n    return methods[method](data, order);\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"param_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/lib/param_util.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 2);\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 3);\nvar moment;\nmodule.link(\"meteor/momentjs:moment\", {\n  moment: function (v) {\n    moment = v;\n  }\n}, 4);\n\n// get the document id for the control button element that corresponds to the param name\nvar getControlButtonIdForParamName = function (paramName) {\n  // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n  var pname = paramName.replace(/^.axis-/, '');\n  var param = matsCollections.CurveParams.findOne({\n    name: pname\n  });\n\n  if (param !== undefined) {\n    var id = \"controlButton-\" + param.name;\n    return id;\n  }\n}; // get the control Button Element that corresponds to the param name\n\n\nvar getControlElementForParamName = function (paramName) {\n  // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n  var pname = paramName.replace(/^.axis-/, '');\n  return document.getElementById(getControlButtonIdForParamName(pname));\n}; // get the document element that corresponds to the param name\n\n\nvar getValueElementForParamName = function (paramName) {\n  // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n  var pname = paramName.replace(/^.axis-/, '');\n  var val = getValueIdForParamName(pname);\n  return document.getElementById(val);\n}; // get the current selected value in the document element that corresponds to the param name\n// Note that the value should be reflected in the adjoining control button value textContent.\n\n\nvar getValueForParamName = function (paramName) {\n  try {\n    var elem = getValueElementForParamName(paramName);\n    return getValueElementForParamName(paramName).textContent.trim();\n  } catch (error) {\n    return undefined;\n  }\n}; // get the VALUE BOX id for the element that corresponds to the param name\n\n\nvar getValueIdForParamName = function (paramName) {\n  // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n  var pname = paramName.replace(/^.axis-/, '');\n  return \"controlButton-\" + pname + \"-value\";\n}; // set the VALUE BOX text for the element that corresponds to the param name\n\n\nvar setValueTextForParamName = function (paramName, text) {\n  try {\n    var text = text;\n    var param = matsCollections.CurveParams.findOne({\n      name: paramName\n    });\n\n    if (param === undefined) {\n      param = matsCollections.PlotParams.findOne({\n        name: paramName\n      });\n    }\n\n    if (param === undefined) {\n      return;\n    }\n\n    if (text === undefined) {\n      if (param.multiple) {\n        // .... if multi selected  get the first .. last\n        var selection = getInputElementForParamName(paramName).selectedOptions;\n\n        if (selection.length == 0) {\n          text = \"\";\n        } else if (selection.length == 1) {\n          text = selection[0].textContent;\n        } else {\n          text = selection[0].textContent + \" .. \" + selection[selection.length - 1].textContent;\n        }\n      }\n    }\n\n    var elem = getValueElementForParamName(paramName);\n\n    if (elem.textContent !== text) {\n      elem.textContent = text;\n    }\n  } catch (error) {\n    console.log(\"Error: could not find param: \" + paramName);\n  }\n}; // get the document id for the element that corresponds to the param name\n\n\nvar getInputIdForParamName = function (paramName) {\n  // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n  var pname = paramName.replace(/^.axis-/, '');\n  var param = matsCollections.CurveParams.findOne({\n    name: pname\n  });\n\n  if (param === undefined) {\n    param = matsCollections.PlotParams.findOne({\n      name: pname\n    });\n  }\n\n  if (param === undefined) {\n    param = matsCollections.Scatter2dParams.findOne({\n      name: pname\n    });\n\n    if (param === undefined) {\n      return undefined;\n    }\n  }\n\n  if (param.type === matsTypes.InputTypes.dateRange) {\n    return (\"element-\" + param.name).replace(/ /g, '-');\n  } else {\n    return (param.name + \"-\" + param.type).replace(/ /g, '-');\n  }\n}; // get the parameter for the element that corresponds to the param name\n\n\nvar getParameterForName = function (paramName) {\n  // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n  var pname = paramName.replace(/^.axis-/, '');\n  var param = matsCollections.CurveParams.findOne({\n    name: pname\n  });\n\n  if (param === undefined) {\n    param = matsCollections.PlotParams.findOne({\n      name: pname\n    });\n  }\n\n  if (param === undefined) {\n    param = matsCollections.Scatter2dParams.findOne({\n      name: pname\n    });\n\n    if (param === undefined) {\n      return undefined;\n    }\n  }\n\n  return param;\n}; // get the document element that corresponds to the param name\n\n\nvar getInputElementForParamName = function (paramName) {\n  var name = paramName.replace(/^.axis-/, '');\n  var id = getInputIdForParamName(name);\n\n  if (id === undefined) {\n    return undefined;\n  }\n\n  return document.getElementById(id);\n}; // get a param disabledOptions list - if any.\n\n\nvar getDisabledOptionsForParamName = function (paramName) {\n  var name = paramName.replace(/^.axis-/, '');\n  var id = getInputIdForParamName(name);\n\n  if (id === undefined) {\n    return undefined;\n  }\n\n  var param = getParameterForName(name);\n\n  if (!param) {\n    return undefined;\n  }\n\n  return param.disabledOptions;\n}; // set the input for the element that corresponds to the param name\n// also sets a data-mats-currentValue attribute\n\n\nvar setInputForParamName = function (paramName, value) {\n  var param = getParameterForName(paramName);\n  var id = getInputIdForParamName(paramName);\n  var idSelectorStr = \"#\" + id;\n  var idSelector = $(idSelectorStr); // SHOULD DEAL WITH CHECKBOXES HERE\n\n  if (param.type === matsTypes.InputTypes.radioGroup) {\n    $(\"#\" + id + \"-\" + value).prop(\"checked\", true);\n  } else {\n    idSelector.val(value);\n    setValueTextForParamName(paramName, value);\n  }\n};\n\nvar getElementValues = function () {\n  var data = {\n    curveParams: {},\n    plotParams: {},\n    scatterParams: {}\n  };\n  var axis = ['xaxis-', 'yaxis-'];\n  var params = matsCollections.CurveParams.find({}).fetch();\n  params.forEach(function (param) {\n    var val = \"\";\n\n    if (param.type === matsTypes.InputTypes.radioGroup) {\n      var selector = \"input:radio[name='\" + param.name + \"']:checked\";\n      val = $(selector).val();\n    } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n      var selector = \"input[name='\" + param.name + \"']:checked\";\n      val = $(selector).map(function (_, el) {\n        return $(el).val();\n      }).get();\n    } else if (param.type === matsTypes.InputTypes.dateRange) {\n      val = getValueForParamName(param.name);\n    } else {\n      var idSelect = '#' + getInputIdForParamName(param.name);\n      val = $(idSelect).val();\n    }\n\n    data.curveParams[param.name] = val;\n\n    if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n      for (var a = 0; a < axis.length; a++) {\n        var axisStr = axis[a];\n        var name = axisStr + param.name;\n        var val = \"\";\n\n        if (param.type === matsTypes.InputTypes.radioGroup) {\n          var selector = \"input:radio[name='\" + name + \"']:checked\";\n          val = $(selector).val();\n        } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n          var selector = \"input[name='\" + name + \"']:checked\";\n          val = $(selector).map(function (_, el) {\n            return $(el).val();\n          }).get();\n        } else {\n          var idSelect = '#' + getInputIdForParamName(name);\n          val = $(idSelect).val();\n        }\n\n        data.curveParams[name] = val;\n      }\n    }\n  });\n  params = matsCollections.PlotParams.find({}).fetch();\n  params.forEach(function (param) {\n    var val = \"\";\n\n    if (param.type === matsTypes.InputTypes.radioGroup) {\n      var selector = \"input:radio[name='\" + param.name + \"']:checked\";\n      val = $(selector).val();\n    } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n      var selector = \"input[name='\" + param.name + \"']:checked\";\n      val = $(selector).map(function (_, el) {\n        return $(el).val();\n      }).get();\n    } else {\n      var idSelect = '#' + getInputIdForParamName(param.name);\n      val = $(idSelect).val();\n    }\n\n    data.plotParams[param.name] = val;\n  });\n  params = matsCollections.Scatter2dParams.find({}).fetch();\n  params.forEach(function (param) {\n    var val = \"\";\n\n    if (param.type === matsTypes.InputTypes.radioGroup) {\n      var selector = \"input:radio[name='\" + param.name + \"']:checked\";\n      val = $(selector).val();\n    } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n      var selector = \"input[name='\" + param.name + \"']:checked\";\n      val = $(selector).map(function (_, el) {\n        return $(el).val();\n      }).get();\n    } else {\n      var idSelect = '#' + getInputIdForParamName(param.name);\n      val = $(idSelect).val();\n    }\n\n    data.scatterParams[param.name] = val;\n\n    if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n      for (var a = 0; a < axis.length; a++) {\n        var axisStr = axis[a];\n        var name = axisStr + param.name;\n        var val = \"\";\n\n        if (param.type === matsTypes.InputTypes.radioGroup) {\n          var selector = \"input:radio[name='\" + name + \"']:checked\";\n          val = $(selector).val();\n        } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n          var selector = \"input[name='\" + name + \"']:checked\";\n          val = $(selector).map(function (_, el) {\n            return $(el).val();\n          }).get();\n        } else {\n          var idSelect = '#' + getInputIdForParamName(name);\n          val = $(idSelect).val();\n        }\n\n        data.scatterParams[name] = val;\n      }\n    }\n  });\n  return data;\n};\n\nvar expandParams = function () {\n  var params = matsCollections.CurveParams.find({}).fetch();\n  params.forEach(function (param) {\n    if (param.type !== matsTypes.InputTypes.selectMap) {\n      var selector = \"element\" + \"-\" + param.name;\n      var elem = document.getElementById(selector);\n\n      if (elem) {\n        elem.style.display = \"block\";\n        var dataElem = document.getElementById(param.name + \"-\" + param.type);\n\n        if (dataElem && dataElem.options && dataElem.selectedIndex >= 0) {\n          dataElem.options[dataElem.selectedIndex].scrollIntoView();\n        }\n      }\n    }\n  });\n};\n\nvar collapseParams = function () {\n  var params = matsCollections.CurveParams.find({}).fetch();\n  params.forEach(function (param) {\n    if (param.type !== matsTypes.InputTypes.selectMap) {\n      var selector = \"element\" + \"-\" + param.name;\n\n      if (document.getElementById(selector)) {\n        document.getElementById(selector).style.display = \"none\";\n      }\n    }\n  });\n};\n\nvar collapseParam = function (paramName) {\n  var param = matsCollections.CurveParams.findOne({\n    name: paramName\n  });\n\n  if (param === undefined || param === null) {\n    return;\n  }\n\n  if (param.type !== matsTypes.InputTypes.selectMap) {\n    var selector = \"element\" + \"-\" + param.name;\n\n    if (document.getElementById(selector)) {\n      document.getElementById(selector).style.display = \"none\";\n    }\n  }\n};\n\nvar typeSort = function (arr) {\n  if (arr === undefined) {\n    return undefined;\n  }\n\n  return arr.sort(function (a, b) {\n    if (isNaN(Number(a) && isNaN(Number(b)))) {\n      // string compare\n      var A = a.toLowerCase();\n      var B = b.toLowerCase();\n\n      if (A < B) {\n        return -1;\n      } else if (A > B) {\n        return 1;\n      } else {\n        return 0;\n      }\n    } else if (isNaN(Number(a) || isNaN(Number(b)))) {\n      // number always precedes\n      if (isNaN(Number(a))) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else {\n      return a - b; // numerical compare\n    }\n  });\n};\n\nvar setDefaultForParamName = function (param) {\n  var paramName = param.name;\n  var type = param.type;\n  var defaultValue = param.default;\n\n  if (paramName == 'label') {\n    setInputForParamName(paramName, Session.get('NextCurveLabel'));\n  } else {\n    if (defaultValue != \"undefined\") {\n      if (type === matsTypes.InputTypes.select && (defaultValue === -1 || defaultValue === undefined || defaultValue === matsTypes.InputTypes.unused)) {\n        setInputForParamName(paramName, matsTypes.InputTypes.unused);\n      } else {\n        setInputForParamName(paramName, defaultValue);\n      }\n    }\n  }\n};\n\nvar getDefaultDateRange = function (name) {\n  var dateParam = matsCollections.CurveParams.findOne({\n    name: name\n  });\n\n  if (dateParam === undefined) {\n    dateParam = matsCollections.PlotParams.findOne({\n      name: name\n    });\n  }\n\n  var startInit = dateParam.startDate;\n  var stopInit = dateParam.stopDate;\n  var dstr = dateParam.default;\n  return {\n    startDate: startInit,\n    stopDate: stopInit,\n    dstr: dstr\n  };\n};\n\nvar getMinMaxDates = function (minDate, maxDate) {\n  var minMoment = moment(minDate, \"MM/DD/YYYY HH:mm\");\n  var maxMoment = moment(maxDate, \"MM/DD/YYYY HH:mm\");\n\n  if (maxMoment.diff(minMoment, 'days') > 30) {\n    minDate = moment(maxMoment.subtract(30, 'days')).format(\"MM/DD/YYYY HH:mm\");\n  }\n\n  return {\n    minDate: minDate,\n    maxDate: maxDate\n  };\n};\n\nvar setAllParamsToDefault = function () {\n  // default the superiors and refresh them so that they cause the dependent options to refresh\n  var params = matsCollections.CurveParams.find({}).fetch();\n  var superiors = matsCollections.CurveParams.find({\n    \"dependentNames\": {\n      \"$exists\": true\n    }\n  }).fetch();\n  superiors.forEach(function (param) {\n    setDefaultForParamName(param); // actually call the refresh directly - don't use an event, because we want this all to be synchronous\n\n    matsSelectUtils.refresh(null, param.name); // remove from params list - actually rewrite params list NOT with this param\n\n    params = params.filter(function (obj) {\n      return obj.name !== param.name;\n    });\n  }); // refresh all the non superiors to their default values\n\n  var nonDependents = matsCollections.CurveParams.find({\n    \"superiorNames\": {\n      \"$exists\": true\n    }\n  }).fetch();\n  nonDependents.forEach(function (param) {\n    setDefaultForParamName(param);\n\n    if (param.type === matsTypes.InputTypes.dateRange) {\n      var dstr = getDefaultDateRange(param.name).dstr;\n      setValueTextForParamName(param.name, dstr);\n    } else {\n      matsSelectUtils.refresh(null, param.name); // remove from params list - actually rewrite params list NOT with this param\n\n      params = params.filter(function (obj) {\n        return obj.name !== param.name;\n      });\n    }\n  }); // reset everything else\n\n  params.forEach(function (param) {\n    if (param.type === matsTypes.InputTypes.dateRange) {\n      var dstr = getDefaultDateRange(param.name).dstr;\n      setValueTextForParamName(param.name, dstr);\n    } else if (param.type === matsTypes.InputTypes.selectMap) {\n      var targetId = param.name + '-' + param.type;\n      var targetElem = document.getElementById(targetId);\n      var resetMapEvent = new CustomEvent(\"reset\", {\n        detail: {\n          refElement: null\n        }\n      });\n      targetElem.dispatchEvent(resetMapEvent);\n    } else {\n      setDefaultForParamName(param);\n    }\n  });\n  matsCollections.PlotParams.find({}).fetch().forEach(function (param) {\n    if (param.type === matsTypes.InputTypes.dateRange) {\n      var dstr = getDefaultDateRange(param.name).dstr;\n      setValueTextForParamName(param.name, dstr);\n    } else {\n      setDefaultForParamName(param);\n    }\n  });\n}; // is the input element displaying? used by curve_param_item_group\n\n\nvar isInputElementVisible = function (paramName) {\n  var name = paramName.replace(/^.axis-/, ''); // need to acount for scatter plots params\n\n  var inputElement = getInputElementForParamName(name);\n  return $(inputElement).is(':visible');\n}; // is the input element displaying? used by curve_param_item_group\n\n\nvar isParamVisible = function (paramName) {\n  var name = paramName.replace(/^.axis-/, ''); // need to acount for scatter plots params\n\n  var paramRef = \"#\" + name + \"-item\";\n  return $(paramRef).is(':visible');\n}; // is the input element displaying? used by curve_param_item_group\n\n\nvar isControlButtonVisible = function (paramName) {\n  var name = paramName.replace(/^.axis-/, ''); // need to acount for scatter plots params\n\n  var paramRef = \"#controlButton-\" + name;\n  return $(paramRef).is(':visible');\n};\n\nvar setInputValueForParamAndtriggerChange = function (paramName, value) {\n  var elem = getInputElementForParamName(paramName);\n  elem.value = value;\n  setValueTextForParamName(paramName, elem.value);\n  $(elem).trigger('change');\n};\n\nvar getOptionsMapForParam = function (paramName) {\n  var param = matsCollections.CurveParams.findOne({\n    name: paramName\n  });\n  return param.optionsMap;\n};\n\nvar getOptionsForParam = function (paramName) {\n  var param = matsCollections.CurveParams.findOne({\n    name: paramName\n  });\n  return param.options;\n};\n\nvar getAppName = function () {\n  var app = matsCollections.appName.findOne({}).app;\n  return app;\n};\n\nvar getCurveItemValueForParamName = function (curveNumber, paramName) {//MODEL-curve-0-Item\n  //    const id = paramName.toString().toUpperCase() + \"-curve-\" + curveNumber + \"-Item\"; // the id of the text span for a curveItem\n  //    return text = ‌‌document.getElementById(id).innerText;\n  // const elem = $(\"#\" + id);\n  // var text = undefined;\n  // if (elem) {\n  //     text = elem.text();\n  // }\n};\n\nvar visibilityControllerForParam = function (paramName) {\n  /*\n  Need to iterate all the params looking for one that has this paramName as a key in its\n  hideOtherFor map.\n  If it exists, that param is returned. Otherwise return undefined.\n   */\n  var params = matsCollections.CurveParams.find({}).fetch();\n  var found = undefined;\n  params.some(function (param) {\n    if (param.hideOtherFor) {\n      var pKeys = Object.keys(param.hideOtherFor);\n\n      if (pKeys.indexOf(paramName) !== -1) {\n        found = param;\n        return;\n      }\n    }\n  });\n  return found;\n};\n\nmodule.exportDefault(matsParamUtils = {\n  getDisabledOptionsForParamName: getDisabledOptionsForParamName,\n  getControlButtonIdForParamName: getControlButtonIdForParamName,\n  getControlElementForParamName: getControlElementForParamName,\n  getValueElementForParamName: getValueElementForParamName,\n  getValueForParamName: getValueForParamName,\n  setValueTextForParamName: setValueTextForParamName,\n  getValueIdForParamName: getValueIdForParamName,\n  getInputIdForParamName: getInputIdForParamName,\n  getInputElementForParamName: getInputElementForParamName,\n  getElementValues: getElementValues,\n  setInputForParamName: setInputForParamName,\n  expandParams: expandParams,\n  collapseParams: collapseParams,\n  collapseParam: collapseParam,\n  getParameterForName: getParameterForName,\n  setDefaultForParamName: setDefaultForParamName,\n  setAllParamsToDefault: setAllParamsToDefault,\n  typeSort: typeSort,\n  isInputElementVisible: isInputElementVisible,\n  isParamVisible: isParamVisible,\n  isControlButtonVisible: isControlButtonVisible,\n  setInputValueForParamAndtriggerChange: setInputValueForParamAndtriggerChange,\n  getOptionsForParam: getOptionsForParam,\n  getOptionsMapForParam: getOptionsMapForParam,\n  getCurveItemValueForParamName: getCurveItemValueForParamName,\n  visibilityControllerForParam: visibilityControllerForParam,\n  getAppName: getAppName,\n  getDefaultDateRange: getDefaultDateRange,\n  getMinMaxDates: getMinMaxDates\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"plot_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/lib/plot_util.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 0);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 1);\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 2);\n\n// determine the axisText (used in scatter_axis.js for example)\n// according to the Scatter Axis Text Patterns Pattern defined in\n// ScatterAxisTextPatterns according to plotType - and derived from\n// currently selected inputs in the document.\nvar getAxisText = function (plotType) {\n  var scatterAxisTextPattern = matsCollections.ScatterAxisTextPattern.findOne({\n    plotType: getPlotType()\n  });\n  var textPattern = scatterAxisTextPattern ? matsCollections.ScatterAxisTextPattern.findOne({\n    plotType: getPlotType()\n  }).textPattern : undefined;\n\n  if (scatterAxisTextPattern === undefined) {\n    return \"\";\n  }\n\n  var text = \"\";\n\n  for (var i = 0; i < scatterAxisTextPattern.length; i++) {\n    var pName = scatterAxisTextPattern[i][0];\n    var delimiter = scatterAxisTextPattern[i][1];\n    var value = matsParamUtils.getValueForParamName(pName);\n    text += value += delimiter;\n  }\n\n  return text;\n}; // determine the curveText (used in curveItem for example) for a given curve (from Session.get('curves'))\n// that has already been added\n\n\nvar getCurveText = function (plotType, curve) {\n  var curveTextPattern = matsCollections.CurveTextPatterns.findOne({\n    plotType: plotType\n  }).textPattern;\n  var text = \"\";\n\n  for (var i = 0; i < curveTextPattern.length; i++) {\n    var a = curveTextPattern[i];\n\n    if (a === undefined || a === null || curve[a[1]] === undefined) {\n      continue;\n    }\n\n    text += a[0];\n\n    if (curve[a[1]] instanceof Array && curve[a[1]].length > 2) {\n      text += curve[a[1]][0] + \"..\" + curve[a[1]][curve[a[1]].length - 1];\n    } else {\n      text += curve[a[1]];\n    }\n\n    text += a[2];\n  }\n\n  return text;\n}; // determine which plotType radio button is checked\n\n\nvar getPlotType = function () {\n  var buttons = document.getElementsByName('plot-type');\n\n  for (var i = 0, len = buttons.length; i < len; i++) {\n    if (buttons[i].checked) {\n      return buttons[i].value;\n    }\n  }\n\n  return \"\"; // error condition actually - shouldn't ever happen\n}; // determine which plotFormat radio button is checked\n\n\nvar getPlotFormat = function () {\n  var buttons = document.getElementsByName('plotFormat');\n\n  if (buttons === undefined) {\n    return \"\"; // app may not have plotFormat?\n  }\n\n  var plotFormatParam = matsCollections.PlotParams.findOne({\n    name: 'plotFormat'\n  });\n\n  if (plotFormatParam === undefined) {\n    return \"\"; // app may not have plotFormat?\n  }\n\n  var optionsMap = plotFormatParam.optionsMap;\n\n  for (var i = 0, len = buttons.length; i < len; i++) {\n    if (buttons[i].checked) {\n      return buttons[i].value;\n    }\n  }\n\n  return \"\"; // error condition actually - shouldn't ever happen\n}; // Determine which BestFit radio button is checked\n\n\nvar getBestFit = function () {\n  var buttons = document.getElementsByName('Fit Type');\n  var optionsMap = matsCollections.PlotParams.findOne({\n    name: 'bestFit'\n  }).optionsMap;\n\n  for (var i = 0, len = buttons.length; i < len; i++) {\n    if (buttons[i].checked) {\n      return buttons[i].value;\n    }\n  }\n\n  return \"\"; // error condition actually - shouldn't ever happen\n};\n\nvar containsPoint = function (pointArray, point) {\n  var lat = point[0];\n  var lon = point[1];\n\n  for (var i = 0; i < pointArray.length; i++) {\n    var pLat = pointArray[i][0];\n    var pLon = pointArray[i][1];\n\n    if (lat === pLat && lon === pLon) {\n      return true;\n    }\n  }\n\n  return false;\n}; // disable the action buttons while the query and plot routines are processing, then re-enable them afterwards\n\n\nvar disableActionButtons = function () {\n  document.getElementById('plotMatched').disabled = true;\n  document.getElementById('plotUnmatched').disabled = true;\n  document.getElementById('add').disabled = true;\n  document.getElementById('remove-all').disabled = true;\n};\n\nvar enableActionButtons = function () {\n  document.getElementById('plotMatched').disabled = false;\n  document.getElementById('plotUnmatched').disabled = false;\n  document.getElementById('add').disabled = false;\n  document.getElementById('remove-all').disabled = false;\n};\n\nmodule.exportDefault(matsPlotUtils = {\n  getAxisText: getAxisText,\n  getCurveText: getCurveText,\n  getPlotType: getPlotType,\n  getPlotFormat: getPlotFormat,\n  getBestFit: getBestFit,\n  containsPoint: containsPoint,\n  disableActionButtons: disableActionButtons,\n  enableActionButtons: enableActionButtons\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"math_util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/lib/math_util.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/*\ngeneric Math Functions\n */\nvar isNum = function (args) {\n  if (args == null || args == undefined) {\n    return false;\n  }\n\n  args = args.toString();\n  if (args.length == 0) return false;\n\n  for (var i = 0; i < args.length; i++) {\n    if ((args.substring(i, i + 1) < \"0\" || args.substring(i, i + 1) > \"9\") && args.substring(i, i + 1) != \".\" && args.substring(i, i + 1) != \"-\") {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nvar mean = function (arr) {\n  var len = 0;\n  var sum = 0;\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] == \"\") {} else if (!isNum(arr[i])) {\n      //alert(arr[i] + \" is not number!\");\n      console.log(\"Error: value at position: \" + i + \" is not number! Mean Calculation failed!\");\n      return 0;\n    } else {\n      len = len + 1;\n      sum = sum + parseFloat(arr[i]);\n    }\n  }\n\n  return sum / len;\n};\n\nvar variance = function (arr) {\n  var len = 0;\n  var sum = 0;\n\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] == \"\") {} else if (!isNum(arr[i])) {\n      //alert(arr[i] + \" is not number, Variance Calculation failed!\");\n      console.log(\"value at position \" + i + \" is not number, Variance Calculation failed!\");\n      return 0;\n    } else {\n      len = len + 1;\n      sum = sum + parseFloat(arr[i]);\n    }\n  }\n\n  var v = 0;\n\n  if (len > 1) {\n    var mean = sum / len;\n\n    for (var i = 0; i < arr.length; i++) {\n      if (arr[i] == \"\") {} else {\n        v = v + (arr[i] - mean) * (arr[i] - mean);\n      }\n    }\n\n    return v / len;\n  } else {\n    return 0;\n  }\n};\n\nvar median = function (arr) {\n  arr.sort(function (a, b) {\n    return a - b;\n  });\n  var median = 0;\n\n  if (arr.length % 2 == 1) {\n    median = arr[(arr.length + 1) / 2 - 1];\n  } else {\n    median = (1 * arr[arr.length / 2 - 1] + 1 * arr[arr.length / 2]) / 2;\n  }\n\n  return median;\n};\n\nmodule.exportDefault(matsMathUtils = {\n  isNum: isNum,\n  mean: mean,\n  variance: variance,\n  median: median\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"templates\":{\"topnav\":{\"template.top_nav.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/topnav/template.top_nav.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"topNav\");\nTemplate[\"topNav\"] = new Template(\"Template.topNav\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"navbar\",\n    style: \"display:block;height:100%;margin-bottom:0;margin-top:0;padding-top:0;padding-bottom:0;\"\n  }, \"\\n        \", HTML.NAV({\n    id: \"topnav\",\n    class: \"navbar navbar-default\",\n    style: \"color:white; background: #006699;height:100%;margin-bottom:0;margin-top:0;padding-top:0;padding-bottom:0;\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"container-fluid\"\n  }, \"\\n                \", HTML.Raw('<div class=\"navbar-header\">\\n                    <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar-collapse-1\" aria-expanded=\"false\">\\n                        <span class=\"sr-only\">Toggle navigation</span>\\n                        <span class=\"icon-bar\"></span>\\n                        <span class=\"icon-bar\"></span>\\n                        <span class=\"icon-bar\"></span>\\n                    </button>\\n                    <a href=\"\"> <i style=\"color:cyan\" class=\"matshome fa fa-home fa-3x\" aria-hidden=\"true\"></i></a>\\n                </div>'), \"\\n                \", HTML.Raw(\"<!-- Collect the nav links, forms, and other content for toggling -->\"), \"\\n                \", HTML.DIV({\n    class: \"collapse navbar-collapse\",\n    id: \"navbar-collapse-1\"\n  }, \"\\n                    \", HTML.Raw('<ul class=\"nav navbar-nav\">\\n                        <li><a href=\"http://www.doc.gov/\"><span style=\"color:white\">U.S. Department of Commerce</span></a></li>\\n                        <li><a href=\"http://www.noaa.gov/\"><span style=\"color:white\">National Oceanic and Atmospheric Administration</span></a>\\n                        </li>\\n                        <li><a href=\"http://www.research.noaa.gov/\"><span style=\"color:white\">NOAA Research</span></a>\\n                        </li>\\n                    </ul>'), \"\\n                    \", HTML.SPAN({\n    class: \"navbar-right\",\n    style: \"font-size: small\"\n  }, Spacebars.include(view.lookupTemplate(\"loginButtons\"))), \"\\n\\n                \"), HTML.Raw(\"<!-- /.navbar-collapse -->\"), \"\\n            \"), HTML.Raw(\"<!-- /.container-fluid -->\"), \"\\n        \"), HTML.Raw('\\n        <nav id=\"topnav1\" class=\"navbar navbar-default\" style=\"color:white; background: #000066;height:100%;margin-bottom:0;margin-top:0;padding-top:0;padding-bottom:1.5%;\">\\n            <div class=\"container-fluid\">\\n                <!-- Brand and toggle get grouped for better mobile display -->\\n                <div class=\"navbar-header\">\\n                    <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#navbar-collapse-2\" aria-expanded=\"false\">\\n                        <span class=\"sr-only\">Toggle navigation</span>\\n                        <span class=\"icon-bar\"></span>\\n                        <span class=\"icon-bar\"></span>\\n                        <span class=\"icon-bar\"></span>\\n                    </button>\\n                    <a style=\"margin-bottom:0;margin-top:0;padding: 0;\" class=\"navbar-brand\" href=\"#\"><img style=\"height:100%;margin-bottom:0;margin-top:0;padding-left:1em;padding-right:1em;padding-bottom:0;padding-top:0;\" src=\"img/noaa_transparent.gif\" alt=\"NOAA\"></a>\\n                </div>\\n\\n                <!-- Collect the nav links, forms, and other content for toggling -->\\n                <div class=\"collapse navbar-collapse\" id=\"navbar-collapse-2\">\\n                    <ul class=\"nav navbar-nav\">\\n                        <li>\\n                            <div>\\n                                <a href=\"http://esrl.noaa.gov/gsd/mdb\"><span style=\"color:white;font-size: large;\">Earth System Research Laboratory</span></a><br>\\n                                <a href=\"\"><span class=\"matshome\" style=\"color:white;font-size: small;\">Model Analysis Tool Suite</span></a><br>\\n                            </div>\\n                        </li>\\n                    </ul>\\n                    <ul class=\"nav navbar-nav navbar-right\">\\n                        <li><a href=\"https://vlab.ncep.noaa.gov/redmine/projects/mats-users/issues\" target=\"_blank\"><span style=\"color:white\">bugs/issues</span></a></li>\\n                        <li><a href=\"\"> <span class=\"matshome\" style=\"color:white\">Home</span></a></li>\\n                        <li><a href=\"\" class=\"about\"><span style=\"color:white\">About</span></a></li>\\n                    </ul>\\n                </div><!-- /.navbar-collapse -->\\n            </div><!-- /.container-fluid -->\\n        </nav>\\n        <div style=\"background-color: #dddddd;height:100%;margin-bottom:0;margin-top:0;padding-left:1em;padding-right: 0\" class=\"container-fluid\">\\n            <a style=\"font-size:large;font-weight: bold\" href=\"http://esrl.noaa.gov/gsd/\">GSD Modeling</a>\\n        </div>\\n    '));\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"top_nav.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/topnav/top_nav.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\nTemplate.topNav.events({\n  'click .matshome': function (event) {\n    event.preventDefault();\n    var homeref = document.referrer;\n\n    if (homeref === \"\" || homeref === undefined) {\n      var r = document.location.href;\n      var rparts = r.split(\":\");\n\n      if (rparts.length >= 2) {\n        // has a port - remove the port part\n        rparts.pop;\n        homeref = rparts.join(\":\");\n      } else {\n        // doesn't have a port - strip the appreference\n        var appref = Session.get(\"app\").appref;\n        homeref = appref.substring(0, appref.lastIndexOf(\"/\")); //                homeref = r.split(\"://\")[0] + \"://\" + r.split(\"://\")[1].split(\".\").splice(1, 10).join(\".\")\n      }\n    }\n\n    window.location.replace(homeref);\n    return false;\n  },\n  'click .about': function () {\n    $(\"#modal-display-about\").modal();\n    return false;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"spinner\":{\"template.spinner.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/spinner/template.spinner.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"spinner\");\nTemplate[\"spinner\"] = new Template(\"Template.spinner\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"spinner\",\n    name: \"spinner\",\n    style: \"display:none\"\n  }, \"\\n        \", HTML.IMG({\n    src: function() {\n      return [ \"img/\", Spacebars.mustache(view.lookup(\"image\")) ];\n    },\n    alt: \"Loading...\",\n    height: \"5%\",\n    width: \"5%\"\n  }), HTML.Raw(' <span style=\"color:red\">Loading ...</span>\\n        <button type=\"button\" class=\"cancel btn btn-info\">&nbsp;&nbsp;Cancel</button>\\n    '));\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"spinner.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/spinner/spinner.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsCurveUtils, matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  },\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 0);\nTemplate.spinner.helpers({\n  image: function () {\n    var img = Session.get(\"spinner_img\");\n\n    if (img == undefined) {\n      img = \"spinner.gif\";\n      Session.set(\"spinner_img\", \"spinner.gif\");\n    }\n\n    return img;\n  }\n});\nTemplate.spinner.events({\n  'click .cancel': function () {\n    matsCurveUtils.hideSpinner();\n    matsPlotUtils.enableActionButtons();\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"template.Home.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/template.Home.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"Home\");\nTemplate[\"Home\"] = new Template(\"Template.Home\", (function() {\n  var view = this;\n  return [ HTML.Raw('<meta http-equiv=\"Cache-Control\" content=\"no-cache, no-store, must-revalidate\">\\n    <meta http-equiv=\"Pragma\" content=\"no-cache\">\\n    <meta http-equiv=\"Expires\" content=\"0\">\\n    '), HTML.DIV({\n    id: \"main\",\n    class: \" main row\"\n  }, \"\\n        \", Spacebars.include(view.lookupTemplate(\"topNav\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"administration\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"spinner\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"help\")), \"\\n        \", HTML.DIV({\n    class: \"container row pull-left col-lg-8\",\n    style: \"width:100%;\"\n  }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"error\")), \"\\n            \", HTML.DIV({\n    class: \" row pull-left col-lg-8\",\n    id: \"plotTypeContainer\"\n  }, \"\\n                \", Spacebars.include(view.lookupTemplate(\"plotType\")), \"\\n            \"), \"\\n            \", Spacebars.include(view.lookupTemplate(\"About\")), \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.templateInstance().subscriptionsReady());\n  }, function() {\n    return [ \"\\n                \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"isUnderConstruction\"));\n    }, function() {\n      return [ \"\\n                    \", HTML.DIV({\n        class: \"row pull-left col-lg-12\"\n      }, \"\\n                        \", Spacebars.include(view.lookupTemplate(\"underConstruction\")), \"\\n                    \"), \"\\n                \" ];\n    }, function() {\n      return [ \"\\n                    \", HTML.DIV({\n        class: \" row\"\n      }, \"\\n                        \", Spacebars.include(view.lookupTemplate(\"changePlotType\")), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n        class: \"row pull-left col-lg-12\"\n      }, \"\\n                        \", Spacebars.include(view.lookupTemplate(\"curveList\")), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n        class: \" row pull-left\"\n      }, \"\\n                        \", Spacebars.include(view.lookupTemplate(\"error\")), \"\\n                        \", Spacebars.include(view.lookupTemplate(\"info\")), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n        id: \"scatterView\",\n        class: \" row pull-left col-lg-10\"\n      }, \"\\n                        \", Spacebars.include(view.lookupTemplate(\"scatter2d\")), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n        id: \"paramView\",\n        class: \" row pull-left col-lg-12\"\n      }, \"\\n                        \", Spacebars.include(view.lookupTemplate(\"paramList\")), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n        id: \"plotView\",\n        class: \" row  pull-left col-lg-12\",\n        style: \"width:100%;\"\n      }, \"\\n                        \", Spacebars.include(view.lookupTemplate(\"plotList\")), \"\\n                    \"), \"\\n                    \", Blaze.View(\"lookup:resetDefaults\", function() {\n        return Spacebars.mustache(view.lookup(\"resetDefaults\"));\n      }), \"\\n                \" ];\n    }), \"\\n            \" ];\n  }, function() {\n    return \"\\n                Loading...\\n            \";\n  }), \"\\n        \"), \"\\n        \", HTML.DIV(\"\\n            \", Spacebars.include(view.lookupTemplate(\"graph\")), \"\\n        \"), \"\\n    \"), \"\\n\\n    \", Spacebars.include(view.lookupTemplate(\"footer\")) ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Home.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/Home.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 0);\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 1);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 2);\nvar matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 3);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 4);\nTemplate.Home.onCreated(function () {\n  this.subscribe(\"matsPlotUtils\").ready();\n  this.subscribe(\"matsTypes\").ready();\n  this.subscribe(\"matsCollections\").ready();\n  this.subscribe(\"matsCurveUtils\").ready();\n  this.subscribe(\"matsParamUtils\").ready();\n  this.subscribe(\"plotType\").ready();\n});\nTemplate.Home.helpers({\n  isUnderConstruction: function () {\n    return matsCollections.CurveParams.findOne({\n      name: 'underConstruction'\n    }) !== undefined;\n  },\n  resetDefaults: function () {\n    matsMethods.refreshMetaData.call({}, function (error, result) {\n      if (error !== undefined) {\n        setError(new Error(error.message));\n      }\n\n      matsParamUtils.setAllParamsToDefault();\n    });\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"underConstruction\":{\"template.underConstruction.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/underConstruction/template.underConstruction.js                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"underConstruction\");\nTemplate[\"underConstruction\"] = new Template(\"Template.underConstruction\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"underConstruction\",\n    name: \"underConstruction\"\n  }, \"\\n        \", HTML.DIV(\"\\n            \", HTML.Raw(\"<p>......</p>\"), \"\\n            \", HTML.DIV(\"\\n                \", HTML.IMG({\n    src: function() {\n      return [ \"img/\", Spacebars.mustache(view.lookup(\"image\")) ];\n    },\n    alt: \"Building...\",\n    height: \"50%\",\n    width: \"50%\"\n  }), \"\\n            \"), \"\\n        \"), HTML.Raw(\"\\n        <p>......</p>\\n    \"));\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"underConstruction.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/underConstruction/underConstruction.js                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\nTemplate.underConstruction.helpers({\n  image: function () {\n    var img = \"underConstruction.jpg\";\n    return img;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"template.about.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/template.about.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"About\");\nTemplate[\"About\"] = new Template(\"Template.About\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"modal fade\",\n    id: \"modal-display-about\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"displayAboutDialog\",\n    \"aria-hidden\": \"true\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog\",\n    style: \"background-color: cornflowerblue; overflow-y: initial\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-content\"\n  }, HTML.Raw('<i class=\"fa fa-2x fa-question\" style=\"color:cornflowerblue\"></i>'), \"\\n                \", HTML.DIV({\n    class: \"modal-header\"\n  }, \"\\n                    \", HTML.Raw('<div>\\n                        <h2 class=\"modal-title\" style=\"text-align: center; color: red;\">About</h2>\\n                    </div>'), \"\\n                    \", HTML.DIV(\"\\n                        \", HTML.Raw('<h3 style=\"text-align:center\">Model Analysis Tool Suite</h3>'), \"\\n                        \", Blaze.View(\"lookup:version\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"version\")));\n  }), \"\\n                    \"), \"\\n                \"), \"\\n                \", HTML.DIV({\n    class: \"modal-body\",\n    style: \"height:30%\"\n  }, \"\\n                    \", HTML.DIV({\n    id: \"releaseNotes\",\n    style: \"display:none; overflow-y: auto\"\n  }, \"\\n                        \", HTML.Raw(\"<h3>RELEASE NOTES</h3>\"), \"\\n                        \", Blaze.View(\"lookup:releaseNotes\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"releaseNotes\")));\n  }), \"\\n                    \"), \"\\n                \"), \"\\n                \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                    <button class=\"clear-info btn btn-success btn-xs show-release-notes\">\\n                        <i class=\"fa fa-file-alt\"></i>&nbsp;&nbsp;Show Release Notes\\n                    </button>\\n                    <button class=\"clear-info btn btn-success btn-xs hide-release-notes\">\\n                        <i class=\"fa fa-file-excel\"></i>&nbsp;&nbsp;Hide Release Notes\\n                    </button>\\n                    <button data-dismiss=\"modal\" class=\"clear-info btn btn-success btn-xs\"><i class=\"fa fa-eraser\">\\n                        </i>&nbsp;&nbsp;Close\\n                    </button>\\n                </div>'), \"\\n            \"), \"\\n        \"), \"\\n    \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"about.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/about.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 0);\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 1);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 2);\nvar matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 3);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 4);\nvar jqueryui;\nmodule.link(\"jquery-ui\", {\n  jqueryui: function (v) {\n    jqueryui = v;\n  }\n}, 5);\nvar matsMethods;\nmodule.link(\"../imports/startup/api/matsMethods\", {\n  \"default\": function (v) {\n    matsMethods = v;\n  }\n}, 6);\nvar notes;\nTemplate.About.helpers({\n  version: function () {\n    var settings = matsCollections.Settings.findOne({});\n    var version = \"unknown\";\n    var buildDate = \"unkown\";\n\n    if (settings) {\n      version = settings.appVersion;\n      buildDate = settings.buildDate;\n    }\n\n    versionStr = \"<div class='row' style='text-align:center'>Version: \" + version + \"</div>\";\n    return versionStr + \"<div class='row' style='text-align:center'> Last Build Date: \" + buildDate + \"</div>\";\n  },\n  releaseNotes: function () {\n    Session.get('notesUpdated');\n    return notes;\n  }\n});\nTemplate.About.events({\n  'click .show-release-notes': function () {\n    matsMethods.getReleaseNotes.call({}, function (error, result) {\n      if (error !== undefined) {\n        setError(error);\n        return \"<p>\" + error + \"</p>\";\n      }\n\n      notes = result;\n      Session.set('notesUpdated', Date.now());\n    });\n    document.getElementById('releaseNotes').style.display = \"block\";\n  },\n  'click .hide-release-notes': function () {\n    document.getElementById('releaseNotes').style.display = \"none\";\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"version\":{\"template.version.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/version/template.version.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"version\");\nTemplate[\"version\"] = new Template(\"Template.version\", (function() {\n  var view = this;\n  return HTML.P(\"version \", Blaze.View(\"lookup:version\", function() {\n    return Spacebars.mustache(view.lookup(\"version\"));\n  }));\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"version.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/version/version.js                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 0);\nTemplate.version.helpers({\n  version: function () {\n    if (matsCollections.Settings.findOne()) {\n      var settings = matsCollections.Settings.findOne({});\n      var version = settings.appVersion;\n      return version;\n    } else {\n      return \"unknown\";\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"plot\":{\"template.plot_list.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/plot/template.plot_list.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"plotList\");\nTemplate[\"plotList\"] = new Template(\"Template.plotList\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"plotList\",\n    class: \"clearfix well span12\"\n  }, \"\\n        \", HTML.FORM({\n    id: \"plotForm\",\n    name: \"plotForm\",\n    novalidate: \"\"\n  }, \"\\n            \", HTML.DIV({\n    style: \"display:inline-block;width:100%;\"\n  }, \"\\n                \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"PlotParamGroups\"));\n  }, function() {\n    return [ \"\\n                    \", Spacebars.include(view.lookupTemplate(\"plotParamGroup\")), \"\\n                \" ];\n  }), \"\\n            \"), \"\\n            \", HTML.DIV({\n    id: \"saveModal\",\n    class: \"modal\",\n    role: \"dialog\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n                    \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                        \", HTML.Raw('<div class=\"modal-header\">\\n                            <h4>Save Settings</h4>\\n                        </div>'), \"\\n                        \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                            \", HTML.DIV(\"\\n                                \", HTML.Raw(\"<label>Save Settings to new entry ...</label>\"), \"\\n                                \", HTML.Raw('<input id=\"save_as\" class=\"data-input textInput\" type=\"text\" name=\"save_as\">'), \"\\n                                \", HTML.INPUT(HTML.Attrs({\n    id: \"save-private\",\n    type: \"radio\",\n    name: \"save-public-private\",\n    value: \"private\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"privateDisabled\"));\n  })), \"Private\\n                                \", HTML.Raw('<input id=\"save-public\" type=\"radio\" name=\"save-public-private\" value=\"public\" checked=\"\">'), \"Public\\n                            \"), \"\\n                            \", HTML.DIV(\"\\n                                \", HTML.Raw(\"<label>Overwrite Settings to entry...</label>\"), \"\\n                                \", HTML.SELECT({\n    class: \"data-input save-to\",\n    size: \"5\",\n    name: \"save_selector\",\n    id: \"save_to\"\n  }, \"\\n                                    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"privateRestoreNames\"));\n  }, function() {\n    return [ \"\\n                                        \", HTML.OPTION(Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    })), \"\\n                                    \" ];\n  }), \"\\n                                \"), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                            <button type=\"button\" class=\"cancel-save btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel</button>\\n                            <button name=\"delete\" type=\"button\" class=\"delete-selected btn btn-primary\">&nbsp;&nbsp;Delete Selected</button>\\n                            <button name=\"save\" type=\"submit\" class=\"submit-params btn btn-primary\">&nbsp;&nbsp;Save Settings</button>\\n                        </div>'), \"\\n                    \"), \"\\n                    \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n                \"), \"\\n                \", HTML.Raw(\"<!-- /.modal-dialog -->\"), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- /.modal -->\"), \"\\n            \", HTML.DIV({\n    id: \"restoreModal\",\n    class: \"modal\",\n    role: \"dialog\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n                    \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                        \", HTML.Raw('<div class=\"modal-header\">\\n                            <h4>Restore Settings</h4>\\n                        </div>'), \"\\n                        \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                            \", HTML.Raw(\"<label>Restore Settings from private...</label>\"), \"\\n                            \", HTML.SELECT({\n    class: \"data-input restore-from-private\",\n    size: \"5\",\n    name: \"restore_from_private\",\n    id: \"restore_from_private\"\n  }, \"\\n                                \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"privateRestoreNames\"));\n  }, function() {\n    return [ \"\\n                                    \", HTML.OPTION(Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    })), \"\\n                                \" ];\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                            \", HTML.Raw(\"<label>Restore Settings from public...</label>\"), \"\\n                            \", HTML.SELECT({\n    class: \"data-input restore-from-public\",\n    size: \"5\",\n    name: \"restore_from_public\",\n    id: \"restore_from_public\"\n  }, \"\\n                                \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"publicRestoreNames\"));\n  }, function() {\n    return [ \"\\n                                    \", HTML.OPTION(Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    })), \"\\n                                \" ];\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                            <button type=\"button\" class=\"cancel-restore btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel</button>\\n                            <button name=\"restore\" type=\"submit\" class=\"submit-params btn btn-primary\">&nbsp;&nbsp;Restore Settings</button>\\n                        </div>'), \"\\n                    \"), \"\\n                    \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n                \"), \"\\n                \", HTML.Raw(\"<!-- /.modal-dialog -->\"), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- /.modal -->\"), \"\\n            \", HTML.Raw('<div id=\"plot-buttons\" class=\"btn-group\">\\n                <button type=\"submit\" name=\"plot\" id=\"plot-curves\" class=\"submit-params btn btn-success btn-xs fa fa-area-chart\" style=\"display:none\"></button>\\n                <button type=\"submit\" name=\"save\" id=\"save-settings\" class=\"submit-params btn btn-success  btn-xs fa fa-cloud-upload\" style=\"display:none\"></button>\\n                <button type=\"submit\" name=\"restore\" id=\"restore-settings\" class=\"submit-params btn btn-success  btn-xs fa fa-cloud-download\" style=\"display:none\"></button>\\n            </div>'), \"\\n            \", HTML.DIV(\"\\n                \", Spacebars.include(view.lookupTemplate(\"QCParamGroup\")), \"\\n            \"), \"\\n        \"), \"\\n    \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"plot_list.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/plot/plot_list.js                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 2);\nvar matsMethods;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsMethods: function (v) {\n    matsMethods = v;\n  }\n}, 3);\nvar matsGraphUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsGraphUtils: function (v) {\n    matsGraphUtils = v;\n  }\n}, 4);\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 5);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 6);\nvar matsSelectUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsSelectUtils: function (v) {\n    matsSelectUtils = v;\n  }\n}, 7);\nTemplate.plotList.helpers({\n  Title: function () {\n    return matsCollections.Settings.findOne({}, {\n      fields: {\n        Title: 1\n      }\n    }).Title;\n  },\n  PlotParamGroups: function () {\n    var groupNums = [];\n    var params = matsCollections.PlotParams.find({}, {\n      fields: {\n        displayGroup: 1\n      }\n    }).fetch();\n\n    for (var i = 0; i < params.length; i++) {\n      groupNums.push(params[i].displayGroup);\n    }\n\n    var res = _.uniq(groupNums).sort();\n\n    return res;\n  },\n  curves: function () {\n    return Session.get('Curves');\n  },\n  privateDisabled: function () {\n    if (!Meteor.user()) {\n      return \"disabled\";\n    } else {\n      return \"\";\n    }\n  },\n  privateRestoreNames: function () {\n    var names = [];\n    var l = matsCollections.CurveSettings.find({}, {\n      fields: {\n        name: 1,\n        owner: 1,\n        permission: 1\n      }\n    }).fetch();\n\n    for (var i = 0; i < l.length; i++) {\n      if (l[i].owner === Meteor.userId() && l[i].permission === \"private\") {\n        names.push(l[i].name);\n      }\n    }\n\n    return names;\n  },\n  publicRestoreNames: function () {\n    var names = [];\n    var savedSettings = matsCollections.CurveSettings.find({}, {\n      fields: {\n        name: 1,\n        owner: 1,\n        permission: 1\n      }\n    }).fetch();\n\n    for (var i = 0; i < savedSettings.length; i++) {\n      if (savedSettings[i].permission === \"public\") {\n        names.push(savedSettings[i].name);\n      }\n    }\n\n    return names;\n  },\n  isOwner: function () {\n    return this.owner === Meteor.userId();\n  }\n});\nTemplate.plotList.events({\n  'click .cancel-restore': function () {\n    document.getElementById('restore_from_public').value = \"\";\n    document.getElementById('restore_from_private').value = \"\";\n  },\n  'click .cancel-save': function () {\n    document.getElementById('save_as').value = \"\";\n    document.getElementById('save_to').value = \"\";\n  },\n  'click .delete-selected': function () {\n    var deleteThis = document.getElementById('save_to').value;\n\n    if (deleteThis !== undefined && deleteThis !== \"\") {\n      matsMethods.deleteSettings.call({\n        name: deleteThis\n      }, function (error) {\n        if (error) {\n          setError(new Error(error.message));\n        }\n      });\n    }\n  },\n  // catch a click on a diff plotFormat radio button.\n  'click .data-input': function () {\n    var formats = Object.keys(matsTypes.PlotFormats);\n\n    if ($.inArray(this.toString(), formats) !== -1) {\n      matsCurveUtils.checkDiffs();\n    }\n  },\n  'click .restore-from-private': function () {\n    document.getElementById('restore_from_public').value = \"\";\n  },\n  'click .restore-from-public': function () {\n    document.getElementById('restore_from_private').value = \"\";\n  },\n  'click .submit-params': function (event, template) {\n    var plotAction = Session.get('plotParameter');\n    Session.set(\"spinner_img\", \"spinner.gif\");\n    document.getElementById(\"spinner\").style.display = \"block\";\n    event.preventDefault();\n    var action = event.currentTarget.name;\n    var p = {}; // get the plot-type elements checked state\n\n    var plotTypeElems = $('input[name=plot-type]');\n    p.plotTypes = {};\n\n    for (ptei = 0; ptei < plotTypeElems.length; ptei++) {\n      var _ptElem = plotTypeElems[ptei];\n      p.plotTypes[_ptElem.value] = _ptElem.checked;\n    }\n\n    var curves = Session.get('Curves');\n\n    if (curves == 0 && action !== \"restore\") {\n      //alert (\"No Curves To plot\");\n      setError(new Error(\"There are no curves to plot!\"));\n      Session.set(\"spinner_img\", \"spinner.gif\");\n      document.getElementById(\"spinner\").style.display = \"none\";\n      return false;\n    }\n\n    p.curves = [];\n    p.plotAction = plotAction;\n    curves.forEach(function (curve) {\n      p.curves.push(curve);\n    });\n    matsCollections.PlotParams.find({}).fetch().forEach(function (plotParam) {\n      var name = plotParam.name;\n      var type = plotParam.type;\n      var options = plotParam.options;\n\n      if (type == matsTypes.InputTypes.radioGroup) {\n        for (var i = 0; i < options.length; i++) {\n          if (document.getElementById(name + \"-\" + type + \"-\" + options[i]).checked == true) {\n            p[name] = options[i];\n            break;\n          }\n        }\n      } else if (type == matsTypes.InputTypes.checkBoxGroup) {\n        p[name] = [];\n\n        for (var i = 0; i < options.length; i++) {\n          if (document.getElementById(name + \"-\" + type + \"-\" + options[i]).checked) {\n            p[name].push(options[i]);\n          }\n        }\n      } else if (type == matsTypes.InputTypes.dateRange) {\n        p[name] = matsParamUtils.getValueForParamName(name);\n      } else if (type == matsTypes.InputTypes.numberSpinner) {\n        p[name] = document.getElementById(name + '-' + type).value;\n      } else if (type == matsTypes.InputTypes.select) {\n        p[name] = document.getElementById(name + '-' + type).value;\n      } else if (type == matsTypes.InputTypes.textInput) {\n        p[name] = document.getElementById(name + '-' + type).value;\n      }\n    });\n    p['completeness'] = document.getElementById(\"completeness\").value;\n    p['outliers'] = document.getElementById(\"outliers\").value;\n    Session.set(\"PlotParams\", p);\n\n    switch (action) {\n      case \"save\":\n        if ((document.getElementById('save_as').value === \"\" || document.getElementById('save_as').value === undefined) && (document.getElementById('save_to').value === \"\" || document.getElementById('save_to').value === undefined)) {\n          $(\"#saveModal\").modal('show');\n          Session.set(\"spinner_img\", \"spinner.gif\");\n          document.getElementById(\"spinner\").style.display = \"none\";\n          return false;\n        }\n\n        var saveAs = \"\";\n\n        if (document.getElementById('save_as').value !== \"\" && document.getElementById('save_as').value !== undefined) {\n          saveAs = document.getElementById('save_as').value;\n        } else {\n          saveAs = document.getElementById('save_to').value;\n        }\n\n        var permission = document.getElementById(\"save-public\").checked == true ? \"public\" : \"private\"; //console.log(\"saving settings to \" + saveAs);\n\n        Session.set('plotName', saveAs); // get the settings to save out of the session\n\n        p = Session.get(\"PlotParams\");\n        var paramData = matsParamUtils.getElementValues();\n        p['paramData'] = paramData;\n        matsMethods.saveSettings.call({\n          saveAs: saveAs,\n          p: p,\n          permission: permission\n        }, function (error) {\n          if (error) {\n            setError(new Error(\"matsMethods.saveSettings from plot_list.js \" + error.message));\n          }\n        });\n        document.getElementById('save_as').value = \"\";\n        document.getElementById('save_to').value = \"\";\n        $(\"#saveModal\").modal('hide');\n        Session.set(\"spinner_img\", \"spinner.gif\");\n        document.getElementById(\"spinner\").style.display = \"none\";\n        return false;\n        break;\n\n      case \"restore\":\n        matsCurveUtils.clearAllUsed();\n\n        if ((document.getElementById('restore_from_private').value === \"\" || document.getElementById('restore_from_private').value === undefined) && (document.getElementById('restore_from_public').value === \"\" || document.getElementById('restore_from_public').value === undefined)) {\n          $(\"#restoreModal\").modal('show');\n          Session.set(\"spinner_img\", \"spinner.gif\");\n          document.getElementById(\"spinner\").style.display = \"none\";\n          return false;\n        }\n\n        var restoreFrom = document.getElementById('restore_from_private').value;\n\n        if (restoreFrom === \"\" || restoreFrom === undefined) {\n          restoreFrom = document.getElementById('restore_from_public').value;\n        } //console.log(\"restore settings from \" + restoreFrom);\n\n\n        Session.set('plotName', restoreFrom);\n        p = matsCollections.CurveSettings.findOne({\n          name: restoreFrom\n        }); // now set all the curves.... This will refresh the curves list\n\n        Session.set('Curves', p.data.curves); // reset the plotType - have to do this first because the event will remove all the possibly existing curves\n        // get the plot-type elements checked state\n\n        var plotTypeSaved = false;\n\n        var _plotTypeElems = $('input[name=plot-type]');\n\n        for (var ptei = 0; ptei < _plotTypeElems.length; ptei++) {\n          var ptElem = _plotTypeElems[ptei];\n\n          if (p.data.plotTypes && p.data.plotTypes[ptElem.value] === true) {\n            plotTypeSaved = true;\n            ptElem.checked = true; // We have to set up the display without using click events because that would cause\n            // the restored curves to be removed\n\n            switch (ptElem.value) {\n              case matsTypes.PlotTypes.timeSeries:\n                matsCurveUtils.showTimeseriesFace();\n                break;\n\n              case matsTypes.PlotTypes.profile:\n                matsCurveUtils.showProfileFace();\n                break;\n\n              case matsTypes.PlotTypes.dieoff:\n                matsCurveUtils.showDieOffFace();\n                break;\n\n              case matsTypes.PlotTypes.threshold:\n                matsCurveUtils.showThresholdFace();\n                break;\n\n              case matsTypes.PlotTypes.validtime:\n                matsCurveUtils.showValidTimeFace();\n                break;\n\n              case matsTypes.PlotTypes.dailyModelCycle:\n                matsCurveUtils.showDailyModelCycleFace();\n                break;\n\n              case matsTypes.PlotTypes.reliability:\n                matsCurveUtils.showReliabilityFace();\n                break;\n\n              case matsTypes.PlotTypes.map:\n                matsCurveUtils.showMapFace();\n                break;\n\n              case matsTypes.PlotTypes.histogram:\n                matsCurveUtils.showHistogramFace();\n                break;\n\n              case matsTypes.PlotTypes.contour:\n              case matsTypes.PlotTypes.contourDiff:\n                matsCurveUtils.showContourFace();\n                break;\n\n              case matsTypes.PlotTypes.scatter2d:\n                matsCurveUtils.showScatterFace();\n                break;\n            }\n          } else {\n            ptElem.checked = false;\n          }\n        }\n\n        if (plotTypeSaved !== true) {\n          // set the default - in the case none was set in an old saved settings\n          document.getElementById(\"plot-type-\" + matsCollections.PlotGraphFunctions.findOne({\n            checked: true\n          }).plotType).checked = true;\n        } // now set the PlotParams\n\n\n        var params = matsCollections.PlotParams.find({}).fetch();\n        params.forEach(function (plotParam) {\n          var val = p.data.paramData.plotParams[plotParam.name] === null || p.data.paramData.plotParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : p.data.paramData.plotParams[plotParam.name];\n          matsParamUtils.setInputForParamName(plotParam.name, val);\n        }); // reset the form parameters for the superiors first\n\n        params = matsCollections.CurveParams.find({\n          \"dependentNames\": {\n            \"$exists\": true\n          }\n        }).fetch();\n        params.forEach(function (plotParam) {\n          if (plotParam.type === matsTypes.InputTypes.dateRange) {\n            if (p.data.paramData.curveParams[plotParam.name] === undefined) {\n              return; // just like continue\n            }\n\n            var dateArr = p.data.paramData.curveParams[plotParam.name].split(' - ');\n            var from = dateArr[0];\n            var to = dateArr[1];\n            var idref = \"#\" + plotParam.name + \"-item\";\n            $(idref).data('daterangepicker').setStartDate(moment.utc(from, 'MM-DD-YYYY HH:mm'));\n            $(idref).data('daterangepicker').setEndDate(moment.utc(to, 'MM-DD-YYYY HH:mm'));\n            matsParamUtils.setValueTextForParamName(plotParam.name, p.data.paramData.curveParams[plotParam.name]);\n          } else {\n            var val = p.data.paramData.curveParams[plotParam.name] === null || p.data.paramData.curveParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : p.data.paramData.curveParams[plotParam.name];\n            matsParamUtils.setInputForParamName(plotParam.name, val);\n          }\n        }); // now reset the form parameters for the dependents\n\n        params = matsCollections.CurveParams.find({\n          \"dependentNames\": {\n            \"$exists\": false\n          }\n        }).fetch();\n        params.forEach(function (plotParam) {\n          if (plotParam.type === matsTypes.InputTypes.dateRange) {\n            if (p.data.paramData.curveParams[plotParam.name] === undefined) {\n              return; // just like continue\n            }\n\n            var dateArr = p.data.paramData.curveParams[plotParam.name].split(' - ');\n            var from = dateArr[0];\n            var to = dateArr[1];\n            var idref = \"#\" + plotParam.name + \"-item\";\n            $(idref).data('daterangepicker').setStartDate(moment.utc(from, 'MM-DD-YYYY HH:mm'));\n            $(idref).data('daterangepicker').setEndDate(moment.utc(to, 'MM-DD-YYYY HH:mm'));\n            matsParamUtils.setValueTextForParamName(plotParam.name, p.data.paramData.curveParams[plotParam.name]);\n          } else {\n            var val = p.data.paramData.curveParams[plotParam.name] === null || p.data.paramData.curveParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : p.data.paramData.curveParams[plotParam.name];\n            matsParamUtils.setInputForParamName(plotParam.name, val);\n          }\n        }); // reset the scatter parameters\n\n        params = matsCollections.Scatter2dParams.find({}).fetch();\n        params.forEach(function (plotParam) {\n          var val = p.data.paramData.scatterParams[plotParam.name] === null || p.data.paramData.scatterParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : p.data.paramData.scatterParams[plotParam.name];\n          matsParamUtils.setInputForParamName(plotParam.name, val);\n        }); // reset the dates\n\n        if (p.data.dates !== undefined) {\n          var dateArr = p.data.dates.split(' - ');\n          var from = dateArr[0];\n          var to = dateArr[1];\n          $('#dates-item').data('daterangepicker').setStartDate(moment.utc(from, 'MM-DD-YYYY HH:mm'));\n          $('#dates-item').data('daterangepicker').setEndDate(moment.utc(to, 'MM-DD-YYYY HH:mm'));\n          matsParamUtils.setValueTextForParamName('dates', p.data.dates);\n        } // reset the plotFormat\n        // reset the plotParams\n\n\n        Session.set(\"PlotParams\", p); //set the used defaults so that subsequent adds get a core default\n\n        matsCurveUtils.setUsedColorsAndLabels();\n        document.getElementById('restore_from_public').value = \"\";\n        document.getElementById('restore_from_private').value = \"\";\n        $(\"#restoreModal\").modal('hide');\n        Session.set(\"spinner_img\", \"spinner.gif\");\n        document.getElementById(\"spinner\").style.display = \"none\";\n        matsParamUtils.collapseParams();\n        return false;\n        break;\n\n      case \"plot\":\n        var pt = matsPlotUtils.getPlotType();\n        console.log(\"resizing graph type is \", pt);\n        matsGraphUtils.resizeGraph(pt);\n        var pgf = matsCollections.PlotGraphFunctions.findOne({\n          plotType: pt\n        });\n\n        if (pgf === undefined) {\n          setError(new Error(\"plot_list.js - plot -do not have a plotGraphFunction for this plotType: \" + pt));\n          Session.set(\"spinner_img\", \"spinner.gif\");\n          document.getElementById(\"spinner\").style.display = \"none\";\n          return false;\n        }\n\n        Session.set('graphViewMode', matsTypes.PlotView.graph);\n        Session.set('mvResultKey', null); // disable the mv links on the graph page\n\n        var graphFunction = pgf.graphFunction;\n        console.log(\"prior to getGraphData call time:\", new Date()); // the following line converts a null expireKey to false.\n\n        var expireKey = Session.get('expireKey') === true ? true : false;\n        matsMethods.getGraphData.call({\n          plotParams: p,\n          plotType: pt,\n          expireKey: expireKey\n        }, function (error, ret) {\n          if (error !== undefined) {\n            //setError(new Error(\"matsMethods.getGraphData from plot_list.js : error: \" + error ));\n            setError(error);\n            matsCurveUtils.resetGraphResult(); //Session.set ('PlotResultsUpDated', new Date());\n\n            Session.set(\"spinner_img\", \"spinner.gif\");\n            matsCurveUtils.hideSpinner();\n            Session.set('expireKey', false);\n            return false;\n          }\n\n          Session.set('expireKey', false);\n          matsCurveUtils.setGraphResult(ret.result);\n          var plotType = Session.get('plotType');\n\n          if (plotType === matsTypes.PlotTypes.contourDiff) {\n            var oldCurves = Session.get('Curves');\n            Session.set('oldCurves', oldCurves);\n            Session.set('Curves', ret.result.basis.plotParams.curves);\n          }\n\n          Session.set(\"plotResultKey\", ret.key);\n          delete ret;\n          Session.set('graphFunction', graphFunction);\n          Session.set('PlotResultsUpDated', new Date());\n          console.log(\"after successful getGraphData call time:\", new Date(), \":Session key: \", ret.key, \" graphFunction:\", graphFunction);\n          matsGraphUtils.setGraphView(pt);\n        });\n\n        if (matsCollections.Settings.findOne({}).appType === matsTypes.AppTypes.metexpress && p['metexpress-mode'] === \"matsmv\") {\n          p['mvPlot'] = true; // mark this as a metviewer plot so that the key is uniq wrt the mats plot\n\n          Session.set('mvs', null);\n          Session.set(\"mvResultKey\", null);\n          matsMethods.mvBatch.call({\n            plotParams: p,\n            plotType: pt\n          }, function (error, ret) {\n            if (error !== undefined) {\n              setError(\"matsMethods.mvBatch from plot_list.js : error: \" + error);\n              return false;\n            }\n\n            var mvs = [];\n            var key = ret.key;\n            var artifacts = ret.artifacts;\n\n            for (var i = 0; i < Object.keys(artifacts).length; i++) {\n              var name = Object.keys(artifacts)[i];\n              var url = location.href + artifacts[name];\n              mvs.push({\n                name: name,\n                url: url\n              });\n            }\n\n            Session.set('mvs', mvs);\n            Session.set(\"mvResultKey\", key);\n            Session.set('MvResultsUpDated', new Date());\n          });\n        }\n\n        break;\n\n      default:\n        break;\n    }\n\n    return false;\n  }\n});\nTemplate.plotList.onRendered(function () {\n  // last bit of stuff that needs to be done when the page finally renders\n  // hide selectors that don't belong to timeseries\n  var elem;\n\n  for (var sidx = 0; sidx < matsTypes.selectorsToHide.length; sidx++) {\n    elem = document.getElementById(matsTypes.selectorsToHide[sidx] + '-item');\n\n    if (elem && elem.style) {\n      elem.style.display = 'none';\n    }\n  } // need to display correct selectors on page load if default plot type is not timeseries\n\n\n  var plotType = matsPlotUtils.getPlotType();\n\n  switch (plotType) {\n    case matsTypes.PlotTypes.profile:\n      matsCurveUtils.showProfileFace();\n      break;\n\n    case matsTypes.PlotTypes.dieoff:\n      matsCurveUtils.showDieOffFace();\n      break;\n\n    case matsTypes.PlotTypes.threshold:\n      matsCurveUtils.showThresholdFace();\n      break;\n\n    case matsTypes.PlotTypes.validtime:\n      matsCurveUtils.showValidTimeFace();\n      break;\n\n    case matsTypes.PlotTypes.dailyModelCycle:\n      matsCurveUtils.showDailyModelCycleFace();\n      break;\n\n    case matsTypes.PlotTypes.reliability:\n      matsCurveUtils.showReliabilityFace();\n      break;\n\n    case matsTypes.PlotTypes.map:\n      matsCurveUtils.showMapFace();\n      break;\n\n    case matsTypes.PlotTypes.histogram:\n      matsCurveUtils.showHistogramFace();\n      break;\n\n    case matsTypes.PlotTypes.contour:\n    case matsTypes.PlotTypes.contourDiff:\n      matsCurveUtils.showContourFace();\n      break;\n\n    case matsTypes.PlotTypes.scatter2d:\n      matsCurveUtils.showScatterFace();\n      break;\n\n    case matsTypes.PlotTypes.timeSeries:\n    default:\n      break;\n  } // make sure everything is at default\n\n\n  matsParamUtils.setAllParamsToDefault();\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.plot_param_group.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/plot/template.plot_param_group.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"plotParamGroup\");\nTemplate[\"plotParamGroup\"] = new Template(\"Template.plotParamGroup\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"plotParamGroup\",\n    class: \"clearfix\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"displayGroup\")), \";\" ];\n    }\n  }, \"\\n        \", Blaze.Each(function() {\n    return Spacebars.dataMustache(view.lookup(\"PlotParams\"), view.lookup(\".\"));\n  }, function() {\n    return [ \"\\n            \", Spacebars.include(view.lookupTemplate(\"item\")), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"plot_param_group.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/plot/plot_param_group.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 0);\nvar plotParamHandler;\nmodule.link(\"meteor/randyp:mats-common\", {\n  plotParamHandler: function (v) {\n    plotParamHandler = v;\n  }\n}, 1);\nTemplate.plotParamGroup.helpers({\n  PlotParams: function (num) {\n    var params = matsCollections.PlotParams.find({\n      displayGroup: num\n    }, {\n      sort: [\"displayOrder\", \"asc\"]\n    }).fetch();\n    return params;\n  },\n  displayGroup: function () {\n    return \"block\";\n  },\n  log: function () {\n    console.log(this);\n  }\n});\nTemplate.plotParamGroup.events({\n  'click': function (event) {\n    if (plotParamHandler !== undefined) {\n      plotParamHandler(event); // call app specific handler with event.\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.QC_param_group.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/plot/template.QC_param_group.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"QCParamGroup\");\nTemplate[\"QCParamGroup\"] = new Template(\"Template.QCParamGroup\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"QCParamGroup\",\n    style: \"background-color:lightcyan;margin-top: 1.5em;float:left;\"\n  }, HTML.Raw('\\n        <label style=\"padding-left:1em;font-size:large;font-weight: normal;\">QC parameters: </label>\\n        '), HTML.SPAN({\n    style: \"font-size:large;font-weight: normal;\"\n  }, \"\\n            \", HTML.Raw('<label style=\"padding-left:1em;font-size:large;font-weight: normal;\">Data completeness percentage: </label>'), \"\\n            \", HTML.INPUT({\n    type: \"number\",\n    name: \"quantity\",\n    id: \"completeness\",\n    min: \"0\",\n    max: \"100\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"completenessNumber\"));\n    }\n  }), \"\\n        \"), \"\\n        \", HTML.SPAN({\n    style: \"font-size:large;font-weight: normal;\"\n  }, \"\\n            \", HTML.Raw('<label style=\"padding-left:1em;font-size:large;font-weight: normal;\">Stdev filter level: </label>'), \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"noQC\"));\n  }, function() {\n    return [ \"\\n                \", HTML.SELECT({\n      id: \"outliers\"\n    }, \"\\n                    \", HTML.OPTION({\n      value: \"all\",\n      selected: \"selected\"\n    }, \"All Data\"), \"\\n                    \", HTML.OPTION({\n      value: \"3\"\n    }, \"3 sd\"), \"\\n                    \", HTML.OPTION({\n      value: \"2\"\n    }, \"2 sd\"), \"\\n                    \", HTML.OPTION({\n      value: \"1\"\n    }, \"1 sd\"), \"\\n                \"), \"\\n            \" ];\n  }, function() {\n    return [ \"\\n                \", HTML.SELECT({\n      id: \"outliers\"\n    }, \"\\n                    \", HTML.OPTION({\n      value: \"all\"\n    }, \"All Data\"), \"\\n                    \", HTML.OPTION({\n      value: \"3\",\n      selected: \"selected\"\n    }, \"3 sd\"), \"\\n                    \", HTML.OPTION({\n      value: \"2\"\n    }, \"2 sd\"), \"\\n                    \", HTML.OPTION({\n      value: \"1\"\n    }, \"1 sd\"), \"\\n                \"), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n    \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"QC_param_group.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/plot/QC_param_group.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 0);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 1);\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 2);\nvar plotParamHandler;\nmodule.link(\"meteor/randyp:mats-common\", {\n  plotParamHandler: function (v) {\n    plotParamHandler = v;\n  }\n}, 3);\nTemplate.QCParamGroup.helpers({\n  completenessNumber: function () {\n    var appType = matsCollections.Settings.findOne({}).appType;\n\n    if (appType === 'anomalycor' || appType === matsTypes.AppTypes.metexpress) {\n      return '0';\n    } else {\n      return '75';\n    }\n  },\n  noQC: function () {\n    var appType = matsCollections.Settings.findOne({}).appType;\n    return appType === 'anomalycor' || appType === matsTypes.AppTypes.metexpress;\n  }\n});\nTemplate.QCParamGroup.events({});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"help\":{\"template.help.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/help/template.help.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"help\");\nTemplate[\"help\"] = new Template(\"Template.help\", (function() {\n  var view = this;\n  return HTML.Raw('<div id=\"helpModal\" class=\"modal\" role=\"dialog\">\\n    <div class=\"modal-dialog modal-lg\">\\n        <div class=\"modal-content\">\\n            <div class=\"modal-header\">\\n                <h4 class=\"modal-title\">Help</h4>\\n            </div>\\n            <div class=\"modal-body\">\\n                <div id=\"matshelp\">\\n                </div>\\n                <div class=\"modal-footer btn-group\">\\n                    <button type=\"button\" class=\"close-help btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Close</button>\\n                </div>\\n            </div>\\n        </div>\\n        <!-- /.modal-content -->\\n    </div>\\n    <!-- /.modal-dialog -->\\n</div>');\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"error\":{\"template.error.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/error/template.error.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"error\");\nTemplate[\"error\"] = new Template(\"Template.error\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"error\",\n    name: \"errorModal\",\n    class: \"modal\",\n    role: \"dialog\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog  modal-lg\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                \", HTML.Raw('<div class=\"modal-header\">\\n                    <h4 class=\"modal-title\"><i class=\"fa fa-frown-o\"></i> Error:</h4>\\n                </div>'), \"\\n                \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                    \", HTML.DIV(\"\\n                        \", HTML.P({\n    style: \"color:red\"\n  }, Blaze.View(\"lookup:errorMessage\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"errorMessage\")));\n  })), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n    id: \"stack\",\n    style: \"display:none\"\n  }, \"\\n                        \", HTML.P(Blaze.View(\"lookup:stackTrace\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"stackTrace\")));\n  })), \"\\n                        \", HTML.Raw('<button class=\"hide-stack btn btn-success btn-xs\"><i class=\"fa fa-eraser\"></i>&nbsp;&nbsp;Hide Stack</button>'), \"\\n                    \"), \"\\n                    \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                        <button class=\"show-stack btn btn-success btn-xs\"><i class=\"fa fa-stack-exchange\"></i>&nbsp;&nbsp;Stack?</button>\\n                        <button class=\"clear-error btn btn-success btn-xs\"><i class=\"fa fa-eraser\"></i>&nbsp;&nbsp;Clear</button>\\n                    </div>'), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n    \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"error.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/error/error.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 0);\nTemplate.error.helpers({\n  errorMessage: function () {\n    return getError();\n  },\n  stackTrace: function () {\n    return getStack();\n  }\n});\nTemplate.error.events({\n  'click .clear-error': function () {\n    clearError();\n    document.getElementById('stack').style.display = \"none\";\n    matsPlotUtils.enableActionButtons();\n    return false;\n  },\n  'click .show-stack': function () {\n    document.getElementById('stack').style.display = \"block\";\n  },\n  'click .hide-stack': function () {\n    document.getElementById('stack').style.display = \"none\";\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"info\":{\"template.info.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/info/template.info.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"info\");\nTemplate[\"info\"] = new Template(\"Template.info\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"info\",\n    name: \"infoModal\",\n    class: \"modal\",\n    role: \"dialog\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog  modal-lg\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                \", HTML.Raw('<div class=\"modal-header\">\\n                    <h4 class=\"modal-title\"><i class=\"fa fa-smile-o\"></i> Info:</h4>\\n                </div>'), \"\\n                \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                    \", HTML.DIV(\"\\n                        \", HTML.P({\n    style: \"color:cornflowerblue\"\n  }, Blaze.View(\"lookup:infoMessage\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"infoMessage\")));\n  })), \"\\n                    \"), \"\\n                    \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                        <button id=\"clear-info\" class=\"clear-info btn btn-success btn-xs\"><i class=\"fa fa-eraser\"></i>&nbsp;&nbsp;Clear</button>\\n                    </div>'), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n    \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"info.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/info/info.js                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 0);\nTemplate.info.helpers({\n  infoMessage: function () {\n    return getInfo();\n  }\n});\nTemplate.info.events({\n  'click .clear-info': function () {\n    clearInfo();\n    matsPlotUtils.enableActionButtons();\n    return false;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"changePlotType\":{\"template.changePlotType.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/changePlotType/template.changePlotType.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"changePlotType\");\nTemplate[\"changePlotType\"] = new Template(\"Template.changePlotType\", (function() {\n  var view = this;\n  return HTML.Raw('<div class=\"modal modal-dialog fade\" id=\"modal-change-plot-type\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"confirmChangePlotType\" aria-hidden=\"true\" style=\"background-color: cornflowerblue;\">\\n        <div class=\"modal-dialog\">\\n            <div class=\"modal-content\"><i class=\"fa fa-4x fa-question\" style=\"color:cornflowerblue\"></i>\\n                <h2 class=\"modal-title\" style=\"text-align: center; color: red;\">Change Plot Type?</h2>\\n                <div class=\"modal-body\">\\n                    <h4 style=\"color:cornflowerblue\">\\n                        <p>If you change plot types and have already added curves, it is possible that the parameters for the new plot type may be incomplete.\\n                        </p>\\n                        <p>For Example time series curves have a common date whereas profile plots each have their own date. The program will\\n                            attempt to pick reasonable defaults but you should review.</p>\\n                        Do you want to proceed and remove all existing curves, or proceed and retain existing curves with possibly incomplete parameters?\\n                    </h4>\\n                </div>\\n                <div class=\"modal-footer\">\\n                    <button id=\"confirm-remove-all\" class=\"btn btn-danger confirm-remove-all\" data-dismiss=\"modal\">Proceed and remove all the existing curves</button>\\n                    <button id=\"confirm-keep-all\" class=\"btn btn-warning confirm-keep-all\" data-dismiss=\"modal\">Proceed and keep all the existing curves</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>');\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"changePlotType.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/changePlotType/changePlotType.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsParamUtils, matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  },\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 0);\n// moved here from plotType.html and plotType.js\nTemplate.changePlotType.events({\n  'click .confirm-remove-all': function (event) {\n    event.preventDefault();\n    matsCurveUtils.clearAllUsed();\n    matsParamUtils.setAllParamsToDefault();\n    Session.set(\"editMode\", \"\");\n    Session.set(\"paramWellColor\", \"#f5f5f5\"); // default grey\n\n    Session.set(\"lastUpdate\", Date.now());\n    Session.set(\"confirmPlotChange\", Date.now());\n    var plotChangeType = Session.get('plotChangeType');\n    var ref = \"#plot-type-\" + plotChangeType; //NOTE: this assumes that the id of the associated plotType is following a convention defined by matsTypes.PlotTypes\n\n    $(ref).trigger('click'); //return false;\n  },\n  'click .confirm-keep-all': function (event) {\n    event.preventDefault();\n    Session.set(\"confirmPlotChange\", Date.now());\n    var plotChangeType = Session.get('plotChangeType');\n    var ref = \"#plot-type-\" + plotChangeType; //NOTE: this assumes that the id of the associated plotType is following a convention defined by matsTypes.PlotTypes\n\n    $(ref).trigger('click'); //return false;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"graph\":{\"template.graph.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/graph/template.graph.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"graph\");\nTemplate[\"graph\"] = new Template(\"Template.graph\", (function() {\n  var view = this;\n  return [ \"\\n    \", HTML.HEAD(\"\\n        \", HTML.SCRIPT({\n    src: \"https://cdn.plot.ly/plotly-latest.min.js\"\n  }), \"\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"graph-container\",\n    class: \"container-fluid pull-left\",\n    style: \"margin-top: 0.5em; padding-left: 5%; display:none;\"\n  }, \"\\n        \", HTML.DIV({\n    id: \"graph-control\",\n    class: \"row\"\n  }, \"\\n            \", HTML.SPAN({\n    id: \"all-plot-buttons-grp\",\n    class: \"btn-group btn-group-sm\"\n  }, \"\\n                \", HTML.Raw('<button id=\"backButton\" type=\"button\" class=\"back btn btn-primary fa fa-long-arrow-left\" style=\"border-radius: 5px;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"return to parameters\">&nbsp;&nbsp;<strong>Back</strong></button>'), \"\\n                \", HTML.Raw('<button id=\"gc-spacer\" type=\"button\" class=\"btn spacebutton\"></button>'), \"\\n                \", HTML.Raw('<button id=\"previewButton\" type=\"button\" class=\"preview btn btn-primary fa fa-print\" style=\"border-top-left-radius: 5px; border-bottom-left-radius: 5px;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"preview graph in separate window\">&nbsp;&nbsp;<strong>Preview</strong></button>'), \"\\n                \", HTML.Raw('<button id=\"basisButton\" type=\"button\" class=\"basis btn btn-primary fa fa-info\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"view data details\">&nbsp;&nbsp;<strong>Data Lineage</strong></button>'), \"\\n                \", HTML.Raw('<span id=\"text-page-button-group\" class=\"btn-group btn-group-sm\" style=\"display:none;\">\\n                    <button id=\"exportButton\" type=\"button\" class=\"export btn btn-primary fa fa-floppy-o\" style=\"border-top-right-radius: 5px; border-bottom-right-radius: 5px;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"export current text data to csv file\">&nbsp;&nbsp;<strong>Export</strong></button>\\n                    <button id=\"gc-spacer\" type=\"button\" class=\"btn spacebutton\"></button>\\n                    <button id=\"plotButton\" type=\"button\" class=\"plotButton btn btn-primary fa fa-line-chart\" style=\"border-radius: 5px; display:block;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"change to plot view\">&nbsp;&nbsp;<strong>Plot</strong></button>\\n                    <button id=\"gc-spacer\" type=\"button\" class=\"btn spacebutton\"></button>\\n                    <button id=\"firstPageButton\" type=\"button\" class=\"firstPageButton btn btn-info fa fa-fast-backward\" style=\"border-top-left-radius: 5px; border-bottom-left-radius: 5px; display:block;background-color: #003399;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"first page\">&nbsp;&nbsp;<strong>First page</strong></button>\\n                    <button id=\"previousTenPageButton\" type=\"button\" class=\"previousTenPageButton btn btn-info fa fa-step-backward\" style=\"display:block;background-color: #003399;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"previous 10 pages\">&nbsp;&nbsp;<strong>Back 10 pages</strong></button>\\n                    <button id=\"previousPageButton\" type=\"button\" class=\"previousPageButton btn btn-info fa fa-chevron-left\" style=\"display:block;background-color: #003399;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"previous page\">&nbsp;&nbsp;<strong>Prev page</strong></button>\\n                    <button id=\"nextPageButton\" type=\"button\" class=\"nextPageButton btn btn-info fa fa-chevron-right\" style=\"display:block;background-color: #003399;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"next page\">&nbsp;&nbsp;<strong>Next page</strong></button>\\n                    <button id=\"nextTenPageButton\" type=\"button\" class=\"nextTenPageButton btn btn-info fa fa-step-forward\" style=\"display:block;background-color: #003399;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"next 10 pages\">&nbsp;&nbsp;<strong>Forward 10 pages</strong></button>\\n                    <button id=\"lastPageButton\" type=\"button\" class=\"lastPageButton btn btn-info fa fa-fast-forward\" style=\"border-top-right-radius: 5px; border-bottom-right-radius: 5px; display:block;background-color: #003399;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"last page\">&nbsp;&nbsp;<strong>Last page</strong></button>\\n                </span>'), \"\\n                \", HTML.SPAN({\n    id: \"plot-page-button-group\",\n    class: \"btn-group btn-group-sm\",\n    style: \"display:block;\"\n  }, \"\\n                    \", HTML.SPAN({\n    id: \"plot-control-button-group\",\n    class: \"btn-group btn-group-sm\",\n    style: \"display:block;\"\n  }, \"\\n                        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isNotMap\"));\n  }, function() {\n    return [ \"\\n                            \", HTML.BUTTON({\n      id: \"axisLimitButton\",\n      type: \"button\",\n      class: \"axisLimitButton btn btn-primary fa fa-arrows\",\n      style: \"display:block;\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"modify axis\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.STRONG(\"Axes\")), \"\\n                        \" ];\n  }), \"\\n                        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isLinePlot\"));\n  }, function() {\n    return [ \"\\n                            \", HTML.BUTTON({\n      id: \"lineTypeButton\",\n      type: \"button\",\n      class: \"lineTypeButton btn btn-primary fa fa-bars\",\n      style: \"display:block;\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"modify axis\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.STRONG(\"Line Styles\")), \"\\n                        \" ];\n  }), \"\\n                        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isProfile\"));\n  }, function() {\n    return [ \"\\n                            \", HTML.BUTTON({\n      id: \"axisYScale\",\n      type: \"button\",\n      class: \"axisYScale btn btn-primary fa fa-arrows\",\n      style: \"display:block;\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"toggle linear/log Y axis\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.STRONG(\"Y Linear/Log\")), \"\\n                        \" ];\n  }), \"\\n                        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isContour\"));\n  }, function() {\n    return [ \"\\n                            \", HTML.BUTTON({\n      id: \"colorbarButton\",\n      type: \"button\",\n      class: \"colorbarButton btn btn-primary fa fa-paint-brush\",\n      style: \"display:block;\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"modify colorbar\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.STRONG(\"Colorbar\")), \"\\n                        \" ];\n  }), \"\\n                        \", HTML.BUTTON({\n    id: \"replotZoomButton\",\n    type: \"button\",\n    class: \"replotZoomButton btn btn-primary fa fa-line-chart\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"displayReplotZoom\")), \";\" ];\n    },\n    \"data-toggle\": \"tooltip\",\n    \"data-placement\": \"top\",\n    title: \"replot graph to current zoom setting\"\n  }, HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), HTML.Raw(\"<strong>Re-sample</strong>\")), \"\\n                        \", HTML.Raw('<button id=\"reCacheButton\" type=\"button\" class=\"reCacheButton btn btn-primary fa fa-line-chart\" style=\"display:block;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"replot graph and refresh cache with new data\">&nbsp;&nbsp;<strong>Re-cache</strong></button>'), \"\\n                    \"), \"\\n                    \", HTML.Raw('<button id=\"textButton\" type=\"button\" class=\"textButton btn btn-primary fa fa-file-text-o\" style=\"border-top-right-radius: 5px; border-bottom-right-radius: 5px; display:block;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"change to text view\">&nbsp;&nbsp;<strong>Text</strong></button>'), \"\\n                    \", HTML.Raw('<button id=\"gc-spacer\" type=\"button\" class=\"btn spacebutton\"></button>'), \"\\n                \"), \"\\n                \", HTML.Raw('<span id=\"graph-touch-controls\" class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"touchcontrol\">\\n                    <button id=\"refresh-plot\" type=\"button\" class=\"btn btn-info fa fa-refresh\" style=\"border-radius: 15px; background-color: #00badb;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"reset plot to original (or last re-sample)\"></button>\\n                </span>'), \"\\n                \", HTML.SPAN(\"\\n                    \", HTML.DIV({\n    id: \"mv-controls\",\n    class: \"btn-group btn-group-xs\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"metApp\")) ];\n    },\n    role: \"group\",\n    \"aria-label\": \"touchcontrol\"\n  }, \"\\n                        \", HTML.BUTTON({\n    type: \"button\",\n    id: \"mvloading\",\n    class: \"btn btn-xs btn-warning\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"mvLoading\")) ];\n    }\n  }, \"mvbatch\"), \"\\n                        \", HTML.SPAN({\n    class: \"btn btn-xs btn-warning fas fa-spinner fa-pulse\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"mvLoading\")) ];\n    }\n  }), \"\\n                        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"mvFiles\"));\n  }, function() {\n    return [ \"\\n                                \", HTML.BUTTON({\n      type: \"button\",\n      id: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"name\"));\n      },\n      class: \"btn btn-xs btn-info mvCtrlButton\",\n      style: function() {\n        return [ \"display:\", Spacebars.mustache(view.lookup(\"mvDisabled\")) ];\n      }\n    }, \"mv-\", Blaze.View(\"lookup:..name\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"name\"));\n    })), \"\\n                        \" ];\n  }), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    id: \"sendModal\",\n    class: \"modal row\",\n    role: \"dialog\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                    \", HTML.Raw('<div class=\"modal-header\">\\n                        <h4>Send To ?</h4>\\n                    </div>'), \"\\n                    \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                        \", HTML.DIV(\"\\n                            \", HTML.Raw(\"<label>Send Address ...</label>\"), \"\\n                            \", HTML.Raw('<input id=\"sendAddress\" class=\"send-address data-input textInput\" type=\"text\" name=\"send address\">'), \"\\n                            \", HTML.SELECT({\n    class: \"data-input sentAddresses\",\n    size: \"5\",\n    name: \"sentAddresses\",\n    id: \"sentAddresses\"\n  }, \"\\n                                \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"sentAddresses\"));\n  }, function() {\n    return [ \"\\n                                    \", HTML.OPTION(Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    })), \"\\n                                \" ];\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                        <button type=\"button\" class=\"cancel-send btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel</button>\\n                        <button name=\"send\" type=\"submit\" class=\"send btn btn-primary\">&nbsp;&nbsp;Send</button>\\n                    </div>'), \"\\n                \"), \"\\n                \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- /.modal-dialog -->\"), \"\\n        \"), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isNotMap\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      id: \"axisLimitModal\",\n      class: \"modal container\",\n      role: \"dialog\"\n    }, \"\\n                \", HTML.DIV({\n      class: \"modal-dialog\"\n    }, \"\\n                    \", HTML.DIV({\n      class: \"modal-content\"\n    }, \"\\n                        \", HTML.DIV({\n      class: \"modal-header\"\n    }, \"\\n                            \", HTML.H3(\"Select axis limits and labels: \"), \"\\n                            \", HTML.H4(\"* Leave a field blank to preserve its original value. \"), \"\\n                            \", HTML.H4(\"* Only data from your original time range has been queried and is available to plot. \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"modal-body\"\n    }, \"\\n                            \", Blaze.Each(function() {\n      return {\n        _sequence: Spacebars.call(view.lookup(\"xAxes\")),\n        _variable: \"xAxis\"\n      };\n    }, function() {\n      return [ \"\\n                                \", HTML.DIV(HTML.BR()), \"\\n                                \", HTML.DIV({\n        id: function() {\n          return [ \"x\", Spacebars.mustache(Spacebars.dot(view.lookup(\"xAxis\"), \"label\")), \"AxisCustomControls\" ];\n        },\n        style: \"display:block;\"\n      }, \"\\n                                    \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                        \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"X\", Blaze.View(\"lookup:xAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"xAxis\"));\n      }), \" label: \"), \"\\n                                        \", HTML.INPUT({\n        id: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisLabel\" ];\n        },\n        class: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"-axis-label data-input textInput col-sm-3\" ];\n        },\n        type: \"text\",\n        value: \"\",\n        name: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisLabel\" ];\n        }\n      }), \"\\n                                    \"), \"\\n                                    \", HTML.DIV({\n        id: \"xAxisControlsNumber\",\n        style: function() {\n          return [ \"display:\", Spacebars.mustache(view.lookup(\"xAxisControlsNumberVisibility\")), \";\" ];\n        }\n      }, \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"X\", Blaze.View(\"lookup:xAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"xAxis\"));\n      }), \"_min: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMin\" ];\n        },\n        class: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"-axis-min data-input numberInput col-sm-3\" ];\n        },\n        type: \"number\",\n        value: \"\",\n        name: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMin\" ];\n        }\n      }), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"X\", Blaze.View(\"lookup:xAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"xAxis\"));\n      }), \"_max: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMax\" ];\n        },\n        class: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"-axis-max data-input numberInput col-sm-3\" ];\n        },\n        type: \"number\",\n        value: \"\",\n        name: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMax\" ];\n        }\n      }), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                    \", HTML.DIV({\n        id: \"xAxisControlsText\",\n        style: function() {\n          return [ \"display:\", Spacebars.mustache(view.lookup(\"xAxisControlsTextVisibility\")), \";\" ];\n        }\n      }, \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"X\", Blaze.View(\"lookup:xAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"xAxis\"));\n      }), \"_min: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMinText\" ];\n        },\n        class: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"-axis-min data-input textInput col-sm-3\" ];\n        },\n        type: \"text\",\n        value: \"\",\n        name: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMinText\" ];\n        }\n      }), \"\\n                                            \", HTML.SPAN({\n        class: \"col-sm-5\"\n      }, \"YYYY-MM-DD HH:MM format\"), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"X\", Blaze.View(\"lookup:xAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"xAxis\"));\n      }), \"_max: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMaxText\" ];\n        },\n        class: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"-axis-max data-input textInput col-sm-3\" ];\n        },\n        type: \"text\",\n        value: \"\",\n        name: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMaxText\" ];\n        }\n      }), \"\\n                                            \", HTML.SPAN({\n        class: \"col-sm-5\"\n      }, \"YYYY-MM-DD HH:MM format\"), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \" ];\n    }), \"\\n                            \", Blaze.Each(function() {\n      return {\n        _sequence: Spacebars.call(view.lookup(\"yAxes\")),\n        _variable: \"yAxis\"\n      };\n    }, function() {\n      return [ \"\\n                                \", HTML.DIV(HTML.BR()), \"\\n                                \", HTML.DIV({\n        id: function() {\n          return [ \"y\", Spacebars.mustache(Spacebars.dot(view.lookup(\"yAxis\"), \"label\")), \"AxisCustomControls\" ];\n        },\n        style: \"display:block;\"\n      }, \"\\n                                    \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                        \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"Y\", Blaze.View(\"lookup:yAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"yAxis\"));\n      }), \" label: \"), \"\\n                                        \", HTML.INPUT({\n        id: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisLabel\" ];\n        },\n        class: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"-axis-label data-input textInput col-sm-3\" ];\n        },\n        type: \"text\",\n        value: \"\",\n        name: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisLabel\" ];\n        }\n      }), \"\\n                                    \"), \"\\n                                    \", HTML.DIV({\n        id: \"yAxisControlsNumber\",\n        style: function() {\n          return [ \"display:\", Spacebars.mustache(view.lookup(\"yAxisControlsNumberVisibility\")), \";\" ];\n        }\n      }, \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"Y\", Blaze.View(\"lookup:yAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"yAxis\"));\n      }), \"_min: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMin\" ];\n        },\n        class: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"-axis-min data-input numberInput col-sm-3\" ];\n        },\n        type: \"number\",\n        value: \"\",\n        name: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMin\" ];\n        }\n      }), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"Y\", Blaze.View(\"lookup:yAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"yAxis\"));\n      }), \"_max: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMax\" ];\n        },\n        class: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"-axis-max data-input numberInput col-sm-3\" ];\n        },\n        type: \"number\",\n        value: \"\",\n        name: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMax\" ];\n        }\n      }), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                    \", HTML.DIV({\n        id: \"yAxisControlsText\",\n        style: function() {\n          return [ \"display:\", Spacebars.mustache(view.lookup(\"yAxisControlsTextVisibility\")), \";\" ];\n        }\n      }, \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"Y\", Blaze.View(\"lookup:yAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"yAxis\"));\n      }), \"_min: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMinText\" ];\n        },\n        class: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"-axis-min data-input textInput col-sm-3\" ];\n        },\n        type: \"text\",\n        value: \"\",\n        name: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMinText\" ];\n        }\n      }), \"\\n                                            \", HTML.SPAN({\n        class: \"col-sm-5\"\n      }, \"YYYY-MM-DD HH:MM format\"), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"Y\", Blaze.View(\"lookup:yAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"yAxis\"));\n      }), \"_max: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMaxText\" ];\n        },\n        class: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"-axis-max data-input textInput col-sm-3\" ];\n        },\n        type: \"text\",\n        value: \"\",\n        name: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMaxText\" ];\n        }\n      }), \"\\n                                            \", HTML.SPAN({\n        class: \"col-sm-5\"\n      }, \"YYYY-MM-DD HH:MM format\"), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \" ];\n    }), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"modal-footer btn-group\"\n    }, \"\\n                            \", HTML.BUTTON({\n      type: \"button\",\n      class: \"cancel-send btn btn-info\",\n      \"data-dismiss\": \"modal\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Cancel\"), \"\\n                            \", HTML.BUTTON({\n      name: \"axisSubmit\",\n      id: \"axisSubmit\",\n      type: \"submit\",\n      class: \"send btn btn-primary\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Submit\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.Comment(\" /.modal-content \"), \"\\n                \"), \"\\n                \", HTML.Comment(\" /.modal-dialog \"), \"\\n            \"), \"\\n        \" ];\n  }), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isLinePlot\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      id: \"lineTypeModal\",\n      class: \"modal container\",\n      role: \"dialog\"\n    }, \"\\n                \", HTML.DIV({\n      class: \"modal-dialog\"\n    }, \"\\n                    \", HTML.DIV({\n      class: \"modal-content\"\n    }, \"\\n                        \", HTML.DIV({\n      class: \"modal-header\"\n    }, \"\\n                            \", HTML.H3(\"Select line styles and markers: \"), \"\\n                            \", HTML.H4(\"* Leave a field blank to preserve its original value. \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"modal-body\"\n    }, \"\\n                            \", HTML.DIV(HTML.BR()), \"\\n                            \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                \", HTML.LABEL({\n      class: \"col-sm-2\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    })), \"\\n                                \", HTML.LABEL({\n      class: \"col-sm-3\"\n    }, \"Line style \"), \"\\n                                \", HTML.LABEL({\n      class: \"col-sm-3\"\n    }, \"Line weight \"), \"\\n                                \", HTML.LABEL({\n      class: \"col-sm-3\"\n    }, \"Line marker \"), \"\\n                            \"), \"\\n                            \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"curves\"));\n    }, function() {\n      return [ \"\\n                                \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                    \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, Blaze.View(\"lookup:..label\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n      }), \": \"), \"\\n                                    \", HTML.SELECT({\n        id: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"LineStyle\" ];\n        },\n        class: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-line-style col-sm-3\" ];\n        }\n      }, \"\\n                                        \", HTML.OPTION({\n        value: \"solid\",\n        selected: \"selected\"\n      }, \"Solid\"), \"\\n                                        \", HTML.OPTION({\n        value: \"dash\"\n      }, \"Dash\"), \"\\n                                        \", HTML.OPTION({\n        value: \"dot\"\n      }, \"Dot\"), \"\\n                                        \", HTML.OPTION({\n        value: \"dashdot\"\n      }, \"Dash-dot\"), \"\\n                                    \"), \"\\n                                    \", HTML.INPUT({\n        id: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"LineWeight\" ];\n        },\n        class: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-line-weight data-input numberInput col-sm-3\" ];\n        },\n        type: \"number\",\n        value: \"2\",\n        name: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"Weight\" ];\n        }\n      }), \"\\n                                    \", HTML.SELECT({\n        id: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"LineMarker\" ];\n        },\n        class: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-line-marker col-sm-3\" ];\n        }\n      }, \"\\n                                        \", HTML.OPTION({\n        value: \"circle\",\n        selected: \"selected\"\n      }, \"Solid circle\"), \"\\n                                        \", HTML.OPTION({\n        value: \"circle-open\"\n      }, \"Open circle\"), \"\\n                                        \", HTML.OPTION({\n        value: \"square\"\n      }, \"Solid Square\"), \"\\n                                        \", HTML.OPTION({\n        value: \"square-open\"\n      }, \"Open Square\"), \"\\n                                        \", HTML.OPTION({\n        value: \"star-square\"\n      }, \"Concave Square\"), \"\\n                                        \", HTML.OPTION({\n        value: \"diamond-tall\"\n      }, \"Solid Diamond\"), \"\\n                                        \", HTML.OPTION({\n        value: \"diamond-tall-open\"\n      }, \"Open Diamond\"), \"\\n                                        \", HTML.OPTION({\n        value: \"star-diamond\"\n      }, \"Concave Diamond\"), \"\\n                                        \", HTML.OPTION({\n        value: \"star\"\n      }, \"Solid star\"), \"\\n                                        \", HTML.OPTION({\n        value: \"star-open\"\n      }, \"Open star\"), \"\\n                                        \", HTML.OPTION({\n        value: \"x\"\n      }, \"Solid X\"), \"\\n                                        \", HTML.OPTION({\n        value: \"x-open\"\n      }, \"Open X\"), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \" ];\n    }), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"modal-footer btn-group\"\n    }, \"\\n                            \", HTML.BUTTON({\n      type: \"button\",\n      class: \"cancel-send btn btn-info\",\n      \"data-dismiss\": \"modal\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Cancel\"), \"\\n                            \", HTML.BUTTON({\n      name: \"lineTypeSubmit\",\n      id: \"lineTypeSubmit\",\n      type: \"submit\",\n      class: \"send btn btn-primary\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Submit\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.Comment(\" /.modal-content \"), \"\\n                \"), \"\\n                \", HTML.Comment(\" /.modal-dialog \"), \"\\n            \"), \"\\n        \" ];\n  }), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isContour\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      id: \"colorbarModal\",\n      class: \"modal container\",\n      role: \"dialog\"\n    }, \"\\n                \", HTML.DIV({\n      class: \"modal-dialog\"\n    }, \"\\n                    \", HTML.DIV({\n      class: \"modal-content\"\n    }, \"\\n                        \", HTML.DIV({\n      class: \"modal-header\"\n    }, \"\\n                            \", HTML.H3(\"Select colorbar limits and label: \"), \"\\n                            \", HTML.H4(\"* Leave a field blank to preserve its original value. \"), \"\\n                            \", HTML.H4(\"* Choose either a contour step OR a number of contours. If both are given, the number of contours will be used.\"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"modal-body\"\n    }, \"\\n                            \", HTML.DIV(HTML.BR()), \"\\n                            \", HTML.DIV({\n      id: \"colorbarCustomControls\",\n      style: \"display:block;\"\n    }, \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Colorbar label: \"), \"\\n                                    \", HTML.INPUT({\n      id: \"colorbarLabel\",\n      class: \"colorbar-label data-input textInput col-sm-5\",\n      type: \"text\",\n      value: \"\",\n      name: \"colorbarLabel\"\n    }), \"\\n                                \"), \"\\n                                \", HTML.DIV(HTML.BR()), \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Minimum contour value: \"), \"\\n                                    \", HTML.INPUT({\n      id: \"colorbarMin\",\n      class: \"colorbar-min data-input numberInput col-sm-5\",\n      type: \"number\",\n      value: \"\",\n      name: \"colorbarMin\"\n    }), \"\\n                                \"), \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Maximum contour value: \"), \"\\n                                    \", HTML.INPUT({\n      id: \"colorbarMax\",\n      class: \"colorbar-max data-input numberInput col-sm-5\",\n      type: \"number\",\n      value: \"\",\n      name: \"colorbarMax\"\n    }), \"\\n                                \"), \"\\n                                \", HTML.DIV(HTML.BR()), \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Number of contours: \"), \"\\n                                    \", HTML.INPUT({\n      id: \"colorbarNumber\",\n      class: \"colorbar-number data-input numberInput col-sm-5\",\n      type: \"number\",\n      value: \"\",\n      name: \"colorbarNumber\"\n    }), \"\\n                                \"), \"\\n                                \", HTML.DIV(\"OR\"), \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Contour value step: \"), \"\\n                                    \", HTML.INPUT({\n      id: \"colorbarStep\",\n      class: \"colorbar-step data-input numberInput col-sm-5\",\n      type: \"number\",\n      value: \"\",\n      name: \"colorbarStep\"\n    }), \"\\n                                \"), \"\\n                                \", HTML.DIV(HTML.BR()), \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Reverse colormap: \"), \"\\n                                    \", HTML.INPUT({\n      id: \"colorbarReverse\",\n      class: \"colorbar-reverse data-input checkboxInput col-sm-5\",\n      type: \"checkbox\",\n      value: \"\",\n      name: \"colorbarReverse\"\n    }), \"\\n                                \"), \"\\n                                \", HTML.DIV(HTML.BR()), \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Select colormap: \"), \"\\n                                    \", HTML.SELECT({\n      id: \"colormapSelect\"\n    }, \"\\n                                        \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"isContourDiff\"));\n    }, function() {\n      return [ \"\\n                                            \", HTML.OPTION({\n        value: \"RdBu\"\n      }, \"RedBlue\"), \"\\n                                            \", HTML.OPTION({\n        value: '[[0,\"rgb(5,10,172)\"],[0.35,\"rgb(106,137,247)\"],[0.45,\"rgb(255,255,255)\"],[0.55,\"rgb(255,255,255)\"],[0.6,\"rgb(220,170,132)\"],[0.7,\"rgb(230,145,90)\"],[1,\"rgb(178,10,28)\"]]',\n        selected: \"selected\"\n      }, \"RedWhiteBlue\"), \"\\n                                        \" ];\n    }, function() {\n      return [ \"\\n                                            \", HTML.OPTION({\n        value: \"RdBu\",\n        selected: \"selected\"\n      }, \"RedBlue\"), \"\\n                                            \", HTML.OPTION({\n        value: '[[0,\"rgb(5,10,172)\"],[0.35,\"rgb(106,137,247)\"],[0.45,\"rgb(255,255,255)\"],[0.55,\"rgb(255,255,255)\"],[0.6,\"rgb(220,170,132)\"],[0.7,\"rgb(230,145,90)\"],[1,\"rgb(178,10,28)\"]]'\n      }, \"RedWhiteBlue\"), \"\\n                                        \" ];\n    }), \"\\n                                        \", HTML.OPTION({\n      value: \"Jet\"\n    }, \"Jet\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Portland\"\n    }, \"Portland\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Rainbow\"\n    }, \"Rainbow\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Blackbody\"\n    }, \"Blackbody\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Earth\"\n    }, \"Earth\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Electric\"\n    }, \"Electric\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Hot\"\n    }, \"Hot\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Picnic\"\n    }, \"Picnic\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Reds\"\n    }, \"Reds\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Greens\"\n    }, \"Greens\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Blues\"\n    }, \"Blues\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Greys\"\n    }, \"Greys\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Viridis\"\n    }, \"Viridis\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Cividis\"\n    }, \"Cividis\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Bluered\"\n    }, \"BlueRed\"), \"\\n                                        \", HTML.OPTION({\n      value: \"YlGnBu\"\n    }, \"YellowGreenBlue\"), \"\\n                                        \", HTML.OPTION({\n      value: \"YlOrRd\"\n    }, \"YellowOrangeRed\"), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"modal-footer btn-group\"\n    }, \"\\n                            \", HTML.BUTTON({\n      type: \"button\",\n      class: \"cancel-send btn btn-info\",\n      \"data-dismiss\": \"modal\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Cancel\"), \"\\n                            \", HTML.BUTTON({\n      name: \"colorbarSubmit\",\n      id: \"colorbarSubmit\",\n      type: \"submit\",\n      class: \"send btn btn-primary\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Submit\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.Comment(\" /.modal-content \"), \"\\n                \"), \"\\n                \", HTML.Comment(\" /.modal-dialog \"), \"\\n            \"), \"\\n        \" ];\n  }), \"\\n        \", HTML.DIV({\n    id: \"header\",\n    class: \"row\"\n  }, \"\\n            \", HTML.SPAN(\"\\n                \", HTML.H4({\n    class: \"col-8\"\n  }, \"\\n                    \", HTML.SPAN(Blaze.View(\"lookup:Title\", function() {\n    return Spacebars.mustache(view.lookup(\"Title\"));\n  }), \" : \"), HTML.SPAN(Blaze.View(\"lookup:plotText\", function() {\n    return Spacebars.mustache(view.lookup(\"plotText\"));\n  })), HTML.SPAN(\" \", Blaze.View(\"lookup:plotName\", function() {\n    return Spacebars.mustache(view.lookup(\"plotName\"));\n  })), \"\\n                    \", HTML.Raw('<button class=\"btn btn-xs col-2 btn-danger closeapp\">Close All Preview Windows</button>'), \"\\n                    \", HTML.Raw('<span class=\"col-2 pull-right\"> </span>'), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.SPAN({\n    style: \"display: none\"\n  }, Blaze.View(\"lookup:graphFunction\", function() {\n    return Spacebars.mustache(view.lookup(\"graphFunction\"));\n  })), \"\\n        \"), \"\\n        \", HTML.DIV({\n    id: \"curves\",\n    class: \"row\"\n  }, \"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"curves\"));\n  }, function() {\n    return [ \"\\n                \", HTML.SPAN({\n      style: function() {\n        return [ \"color:\", Spacebars.mustache(view.lookup(\"color\")), \"; font-weight: bolder;\" ];\n      }\n    }, \"--- \"), HTML.SPAN({\n      style: \"font-size:small;\"\n    }, Blaze.View(\"lookup:curveText\", function() {\n      return Spacebars.mustache(view.lookup(\"curveText\"));\n    })), \"\\n                \", HTML.DIV({\n      id: function() {\n        return [ \"curve-text-buttons-grp-\", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")) ];\n      },\n      class: \"btn-group btn-group-xs\"\n    }, \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"curveVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"hideButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"curveShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"pointsVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"pointsButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide-points\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"pointsShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"errorBarVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"errorBarButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide-errorbars\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"errorbarsShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"barVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"barChartButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide-bars\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"barsShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"annotateVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"annotateButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide-annotate\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"annotateShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"heatMapVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"heatMapButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide-heatmap\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"heatMapShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                \"), \"\\n                \", HTML.BR(), \"\\n            \" ];\n  }), \"\\n            \", HTML.Raw(\"<hr>\"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    id: \"textView\",\n    style: \"display:none;\"\n  }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"textOutput\")), \"\\n        \"), \"\\n        \", HTML.DIV({\n    id: \"graphView\",\n    style: \"height:100%;margin:0;padding:0;\",\n    class: \"row\"\n  }, \"\\n            \", HTML.Raw('<div id=\"legendContainer\" name=\"legendContainer\"></div>'), \"\\n            \", HTML.DIV({\n    id: \"placeholder\",\n    class: \"row\",\n    name: \"placeholder\",\n    style: function() {\n      return [ \"float:left;width:\", Spacebars.mustache(view.lookup(\"width\")), \"; height:\", Spacebars.mustache(view.lookup(\"height\")), \";\" ];\n    }\n  }, \"\\n                \\n            \"), \"\\n        \"), \"\\n        \", HTML.H5({\n    class: \"row text-center\",\n    id: \"confidenceNote\",\n    style: function() {\n      return [ \"font-size:large;display:\", Spacebars.mustache(view.lookup(\"confidenceDisplay\")), \";\" ];\n    }\n  }, \"Error\\n            Bars show 95% confidence\"), \"\\n    \") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"graph.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/graph/graph.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Hooks;\nmodule.link(\"meteor/differential:event-hooks\", {\n  Hooks: function (v) {\n    Hooks = v;\n  }\n}, 1);\nvar matsCollections, matsCurveUtils, matsGraphUtils, matsMethods, matsParamUtils, matsPlotUtils, matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  },\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  },\n  matsGraphUtils: function (v) {\n    matsGraphUtils = v;\n  },\n  matsMethods: function (v) {\n    matsMethods = v;\n  },\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  },\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  },\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 2);\nvar pageIndex = 0;\nvar annotation = \"\";\nvar openWindows = [];\nvar xAxes = [];\nvar yAxes = [];\nvar curveOpsUpdate = [];\nTemplate.graph.onCreated(function () {\n  // the window resize event needs to also resize the graph\n  $(window).resize(function () {\n    matsGraphUtils.resizeGraph(matsPlotUtils.getPlotType());\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var options = matsCurveUtils.getGraphResult().options;\n\n    if (dataset !== undefined && options !== undefined) {\n      Plotly.newPlot($(\"#placeholder\")[0], dataset, options, {\n        showLink: true\n      });\n    }\n  });\n});\nTemplate.graph.helpers({\n  /**\n   * @return {string}\n   * @return {string}\n   */\n  graphFunction: function () {\n    // causes graph display routine to be processed\n    Session.get('PlotResultsUpDated');\n    var graphFunction = Session.get('graphFunction');\n\n    if (graphFunction) {\n      module.runSetters(eval(graphFunction))(Session.get('plotResultKey'));\n      var plotType = Session.get('plotType');\n      var dataset = matsCurveUtils.getGraphResult().data;\n      var options = matsCurveUtils.getGraphResult().options;\n      Session.set('options', options); // need to save some curve options so that the reset button can undo Plotly.restyle\n\n      switch (plotType) {\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n          //saved curve options for contours\n          Session.set('colorbarResetOpts', {\n            'colorbar.title': dataset[0].colorbar.title,\n            'autocontour': dataset[0].autocontour,\n            'ncontours': dataset[0].ncontours,\n            'contours.start': dataset[0].contours.start,\n            'contours.end': dataset[0].contours.end,\n            'contours.size': dataset[0].contours.size,\n            'reversescale': false,\n            'colorscale': JSON.stringify(dataset[0].colorscale)\n          });\n          break;\n\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.profile:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.threshold:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.dailyModelCycle:\n        case matsTypes.PlotTypes.reliability:\n          // saved curve options for line graphs\n          var lineTypeResetOpts = [];\n\n          for (var lidx = 0; lidx < dataset.length; lidx++) {\n            if (Object.values(matsTypes.ReservedWords).indexOf(dataset[lidx].label) === -1) {\n              lineTypeResetOpts.push({\n                'visible': dataset[lidx].visible,\n                'mode': dataset[lidx].mode,\n                'error_y': dataset[lidx].error_y,\n                'error_x': dataset[lidx].error_x,\n                'line.dash': dataset[lidx].line.dash,\n                'line.width': dataset[lidx].line.width,\n                'marker.symbol': dataset[lidx].marker.symbol\n              });\n            } else {\n              break;\n            }\n          }\n\n          Session.set('lineTypeResetOpts', lineTypeResetOpts);\n          break;\n\n        case matsTypes.PlotTypes.histogram:\n          // saved curve options for maps\n          var barTypeResetOpts = [];\n\n          for (var bidx = 0; bidx < dataset.length; bidx++) {\n            if (Object.values(matsTypes.ReservedWords).indexOf(dataset[bidx].label) === -1) {\n              barTypeResetOpts.push({\n                'visible': dataset[bidx].visible\n              });\n            } else {\n              break;\n            }\n          }\n\n          Session.set('barTypeResetOpts', barTypeResetOpts);\n          break;\n\n        case matsTypes.PlotTypes.map:\n          // saved curve options for maps\n          var mapResetOpts = [];\n          mapResetOpts[0] = {\n            'marker.opacity': dataset[0].marker.opacity\n          };\n\n          for (var midx = 1; midx < dataset.length; midx++) {\n            mapResetOpts.push({\n              'visible': dataset[midx].visible\n            });\n          }\n\n          Session.set('mapResetOpts', mapResetOpts);\n          break;\n\n        case matsTypes.PlotTypes.scatter2d:\n        default:\n          break;\n      } // initial plot\n\n\n      $(\"#legendContainer\").empty();\n      $(\"#placeholder\").empty();\n\n      if (!dataset || !options) {\n        return false;\n      }\n\n      Plotly.newPlot($(\"#placeholder\")[0], dataset, options, {\n        showLink: true\n      }); // append annotations\n\n      if (plotType !== matsTypes.PlotTypes.map) {\n        annotation = \"\";\n\n        for (var i = 0; i < dataset.length; i++) {\n          if (plotType !== matsTypes.PlotTypes.histogram && dataset[i].curveId !== undefined) {\n            annotation = annotation + \"<div id='\" + dataset[i].curveId + \"-annotation' style='color:\" + dataset[i].annotateColor + \"'>\" + dataset[i].annotation + \" </div>\";\n          }\n        }\n\n        $(\"#legendContainer\").append(\"<div id='annotationContainer' style='font-size:smaller'>\" + annotation + \"</div>\"); // store the existing axes.\n\n        Object.keys($(\"#placeholder\")[0].layout).filter(function (k) {\n          if (k.startsWith('xaxis')) {\n            xAxes.push(k);\n          }\n\n          if (k.startsWith('yaxis')) {\n            yAxes.push(k);\n          }\n        });\n      }\n\n      matsCurveUtils.hideSpinner();\n    }\n\n    return graphFunction;\n  },\n  Title: function () {\n    if (matsCollections.Settings === undefined || matsCollections.Settings.findOne({}, {\n      fields: {\n        Title: 1\n      }\n    }) === undefined) {\n      return \"\";\n    } else {\n      return matsCollections.Settings.findOne({}, {\n        fields: {\n          Title: 1\n        }\n      }).Title;\n    }\n  },\n  width: function () {\n    return matsGraphUtils.width(matsPlotUtils.getPlotType());\n  },\n  height: function () {\n    return matsGraphUtils.height(matsPlotUtils.getPlotType());\n  },\n  curves: function () {\n    return Session.get('Curves');\n  },\n  plotName: function () {\n    return Session.get('PlotParams') === [] || Session.get('PlotParams').plotAction === undefined || Session.get('plotType') === matsTypes.PlotTypes.map ? \"\" : Session.get('PlotParams').plotAction.toUpperCase();\n  },\n  curveText: function () {\n    if (this.diffFrom === undefined) {\n      var plotType = Session.get('plotType');\n\n      if (plotType === undefined) {\n        pfuncs = matsCollections.PlotGraphFunctions.find({}).fetch();\n\n        for (var i = 0; i < pfuncs.length; i++) {\n          if (pfuncs[i].checked === true) {\n            Session.set('plotType', pfuncs[i].plotType);\n          }\n        }\n\n        plotType = Session.get('plotType');\n      }\n\n      return matsPlotUtils.getCurveText(plotType, this);\n    } else {\n      return this.label + \":  Difference\";\n    }\n  },\n  confidenceDisplay: function () {\n    if (Session.get('plotParameter') === \"matched\") {\n      var plotType = Session.get('plotType');\n\n      switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.profile:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.threshold:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.dailyModelCycle:\n          return \"block\";\n\n        case matsTypes.PlotTypes.reliability:\n        case matsTypes.PlotTypes.map:\n        case matsTypes.PlotTypes.histogram:\n        case matsTypes.PlotTypes.scatter2d:\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n        default:\n          return \"none\";\n      }\n    } else {\n      return \"none\";\n    }\n  },\n  mvSpanDisplay: function () {\n    var updated = Session.get(\"MvResultsUpDated\");\n\n    if (Session.get(\"mvResultKey\") != null || Session.get('plotParams')['metexpress-mode'] == \"matsmv\") {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  plotText: function () {\n    var p = Session.get('PlotParams');\n\n    if (p !== undefined) {\n      var format = p.plotFormat;\n\n      if (matsCollections.PlotParams.findOne({\n        name: 'plotFormat'\n      }) && matsCollections.PlotParams.findOne({\n        name: 'plotFormat'\n      }).optionsMap && matsCollections.PlotParams.findOne({\n        name: 'plotFormat'\n      }).optionsMap[p.plotFormat] !== undefined) {\n        format = matsCollections.PlotParams.findOne({\n          name: 'plotFormat'\n        }).optionsMap[p.plotFormat];\n      }\n\n      if (format === undefined) {\n        format = \"Unmatched\";\n      }\n\n      var plotType = Session.get('plotType');\n\n      switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n          return \"TimeSeries \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.profile:\n          return \"Profile: \" + format;\n\n        case matsTypes.PlotTypes.dieoff:\n          return \"DieOff: \" + format;\n\n        case matsTypes.PlotTypes.threshold:\n          return \"Threshold: \" + format;\n\n        case matsTypes.PlotTypes.validtime:\n          return \"ValidTime: \" + format;\n\n        case matsTypes.PlotTypes.dailyModelCycle:\n          return \"DailyModelCycle \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.reliability:\n          return \"Reliability: \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.map:\n          return \"Map \" + p.dates + \" \";\n\n        case matsTypes.PlotTypes.histogram:\n          return \"Histogram: \" + format;\n\n        case matsTypes.PlotTypes.contour:\n          return \"Contour \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.contourDiff:\n          return \"ContourDiff \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.scatter2d:\n          break;\n\n        default:\n          return \"Scatter: \" + p.dates + \" : \" + format;\n      }\n    } else {\n      return \"no plot params\";\n    }\n  },\n  color: function () {\n    return this.color;\n  },\n  xAxes: function () {\n    Session.get('PlotResultsUpDated');\n    var plotType = Session.get('plotType'); // create an array like [0,1,2...] for each unique xaxis\n    // by getting the xaxis keys - filtering them to be unique, then using an Array.apply on the resulting array\n    // to assign a number to each value\n\n    var xaxis = {};\n\n    if ($(\"#placeholder\")[0] === undefined || $(\"#placeholder\")[0].layout === undefined || plotType === matsTypes.PlotTypes.map) {\n      return;\n    }\n\n    Object.keys($(\"#placeholder\")[0].layout).filter(function (k) {\n      if (k.startsWith('xaxis')) {\n        xaxis[k] = $(\"#placeholder\")[0].layout[k];\n      }\n    });\n    return Array.apply(null, {\n      length: Object.keys(xaxis).length\n    }).map(Number.call, Number);\n  },\n  yAxes: function () {\n    Session.get('PlotResultsUpDated');\n    var plotType = Session.get('plotType'); // create an array like [0,1,2...] for each unique yaxis\n    // by getting the yaxis keys - filtering them to be unique, then using an Array.apply on the resulting array\n    // to assign a number to each value\n\n    var yaxis = {};\n\n    if ($(\"#placeholder\")[0] === undefined || $(\"#placeholder\")[0].layout === undefined || plotType === matsTypes.PlotTypes.map) {\n      return;\n    }\n\n    Object.keys($(\"#placeholder\")[0].layout).filter(function (k) {\n      if (k.startsWith('yaxis')) {\n        yaxis[k] = $(\"#placeholder\")[0].layout[k];\n      }\n    });\n    return Array.apply(null, {\n      length: Object.keys(yaxis).length\n    }).map(Number.call, Number);\n  },\n  isProfile: function () {\n    return Session.get('plotType') === matsTypes.PlotTypes.profile;\n  },\n  isLinePlot: function () {\n    var plotType = Session.get('plotType');\n\n    switch (plotType) {\n      case matsTypes.PlotTypes.timeSeries:\n      case matsTypes.PlotTypes.profile:\n      case matsTypes.PlotTypes.dieoff:\n      case matsTypes.PlotTypes.threshold:\n      case matsTypes.PlotTypes.validtime:\n      case matsTypes.PlotTypes.dailyModelCycle:\n      case matsTypes.PlotTypes.reliability:\n        return true;\n\n      case matsTypes.PlotTypes.map:\n      case matsTypes.PlotTypes.histogram:\n      case matsTypes.PlotTypes.scatter2d:\n      case matsTypes.PlotTypes.contour:\n      case matsTypes.PlotTypes.contourDiff:\n      default:\n        return false;\n    }\n  },\n  isContour: function () {\n    return Session.get('plotType') === matsTypes.PlotTypes.contour || Session.get('plotType') === matsTypes.PlotTypes.contourDiff;\n  },\n  isContourDiff: function () {\n    return Session.get('plotType') === matsTypes.PlotTypes.contourDiff;\n  },\n  isNotMap: function () {\n    return Session.get('plotType') !== matsTypes.PlotTypes.map;\n  },\n  sentAddresses: function () {\n    var addresses = [];\n    var a = matsCollections.SentAddresses.find({}, {\n      fields: {\n        address: 1\n      }\n    }).fetch();\n\n    for (var i = 0; i < a.length; i++) {\n      addresses.push(a[i].address);\n    }\n\n    return addresses;\n  },\n  hideButtonText: function () {\n    var sval = this.label + \"hideButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'hide curve');\n    }\n\n    return Session.get(sval);\n  },\n  pointsButtonText: function () {\n    var sval = this.label + \"pointsButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'hide points');\n    }\n\n    return Session.get(sval);\n  },\n  errorBarButtonText: function () {\n    var sval = this.label + \"errorBarButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'hide error bars');\n    }\n\n    return Session.get(sval);\n  },\n  barChartButtonText: function () {\n    var sval = this.label + \"barChartButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'hide bars');\n    }\n\n    return Session.get(sval);\n  },\n  annotateButtonText: function () {\n    var sval = this.label + \"annotateButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'hide annotation');\n    }\n\n    return Session.get(sval);\n  },\n  heatMapButtonText: function () {\n    var sval = this.label + \"heatMapButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'show heat map');\n    }\n\n    return Session.get(sval);\n  },\n  curveShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n\n    switch (plotType) {\n      case matsTypes.PlotTypes.timeSeries:\n      case matsTypes.PlotTypes.profile:\n      case matsTypes.PlotTypes.dieoff:\n      case matsTypes.PlotTypes.threshold:\n      case matsTypes.PlotTypes.validtime:\n      case matsTypes.PlotTypes.dailyModelCycle:\n      case matsTypes.PlotTypes.reliability:\n      case matsTypes.PlotTypes.scatter2d:\n        return \"block\";\n\n      case matsTypes.PlotTypes.map:\n      case matsTypes.PlotTypes.histogram:\n      case matsTypes.PlotTypes.contour:\n      case matsTypes.PlotTypes.contourDiff:\n      default:\n        return \"none\";\n    }\n  },\n  pointsShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n\n    switch (plotType) {\n      case matsTypes.PlotTypes.timeSeries:\n      case matsTypes.PlotTypes.profile:\n      case matsTypes.PlotTypes.dieoff:\n      case matsTypes.PlotTypes.threshold:\n      case matsTypes.PlotTypes.validtime:\n      case matsTypes.PlotTypes.dailyModelCycle:\n      case matsTypes.PlotTypes.reliability:\n      case matsTypes.PlotTypes.scatter2d:\n        return \"block\";\n\n      case matsTypes.PlotTypes.map:\n      case matsTypes.PlotTypes.histogram:\n      case matsTypes.PlotTypes.contour:\n      case matsTypes.PlotTypes.contourDiff:\n      default:\n        return \"none\";\n    }\n  },\n  errorbarsShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n    var isMatched = Session.get('plotParameter') === \"matched\";\n\n    if (isMatched) {\n      switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.profile:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.threshold:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.dailyModelCycle:\n          return \"block\";\n\n        case matsTypes.PlotTypes.reliability:\n        case matsTypes.PlotTypes.map:\n        case matsTypes.PlotTypes.histogram:\n        case matsTypes.PlotTypes.scatter2d:\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n        default:\n          return \"none\";\n      }\n    } else {\n      return \"none\";\n    }\n  },\n  barsShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.histogram) {\n      return 'block';\n    } else {\n      return 'none';\n    }\n  },\n  annotateShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.map || plotType === matsTypes.PlotTypes.histogram) {\n      return 'none';\n    } else {\n      return 'block';\n    }\n  },\n  heatMapShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n\n    if (plotType !== matsTypes.PlotTypes.map) {\n      return 'none';\n    } else {\n      return 'block';\n    }\n  },\n  xAxisControlsNumberVisibility: function () {\n    Session.get('PlotResultsUpDated');\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle || (plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && $(\"#placeholder\")[0].layout.xaxis.title.text.indexOf(\"Date\") > -1) {\n      return \"none\";\n    } else {\n      return \"block\";\n    }\n  },\n  xAxisControlsTextVisibility: function () {\n    Session.get('PlotResultsUpDated');\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle || (plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && $(\"#placeholder\")[0].layout.xaxis.title.text.indexOf(\"Date\") > -1) {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  yAxisControlsNumberVisibility: function () {\n    Session.get('PlotResultsUpDated');\n\n    if ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && $(\"#placeholder\")[0].layout.yaxis.title.text.indexOf(\"Date\") > -1) {\n      return \"none\";\n    } else {\n      return \"block\";\n    }\n  },\n  yAxisControlsTextVisibility: function () {\n    Session.get('PlotResultsUpDated');\n\n    if ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && $(\"#placeholder\")[0].layout.yaxis.title.text.indexOf(\"Date\") > -1) {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  displayReplotZoom: function () {\n    // the replot to zoom function is only really appropriate for downsampled graphs which are\n    // only possible in timeseries or dailymodelcycle plots\n    Session.get(\"PlotParams\");\n    Session.get('PlotResultsUpDated');\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle) {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  metApp: function () {\n    Session.get(\"PlotParams\");\n    Session.get('PlotResultsUpDated');\n\n    if (matsCollections.Settings.findOne({}).appType && matsCollections.Settings.findOne({}).appType === matsTypes.AppTypes.metexpress && Session.get('PlotParams')['metexpress-mode'] == \"matsmv\") {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  mvFiles: function () {\n    var updated = Session.get('MvResultsUpDated');\n    var key = Session.get('mvResultKey');\n    var mvs = Session.get('mvs');\n\n    if (mvs != null) {\n      return mvs;\n    } else {\n      return [];\n    }\n  },\n  mvDisabled: function () {\n    var updated = Session.get('MvResultsUpDated');\n\n    if (Session.get('mvs') == null || Session.get('PlotParams')['metexpress-mode'] == \"mats\") {\n      return \"none\";\n    } else {\n      return \"block\";\n    }\n  },\n  mvLoading: function () {\n    var updated = Session.get('MvResultsUpDated');\n\n    if (Session.get('mvs') == null && Session.get('PlotParams')['metexpress-mode'] == \"matsmv\") {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  }\n});\nTemplate.graph.events({\n  'click .mvCtrlButton': function () {\n    var mvWindow = window.open(this.url, \"mv\", \"height=200,width=200\");\n    setTimeout(function () {\n      mvWindow.reload();\n    }, 500);\n  },\n  'click .back': function () {\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.contourDiff) {\n      var oldCurves = Session.get('oldCurves');\n      Session.set('Curves', oldCurves);\n    }\n\n    matsPlotUtils.enableActionButtons();\n    matsGraphUtils.setDefaultView();\n    matsCurveUtils.resetPlotResultData();\n    return false;\n  },\n  'click .header': function (event) {\n    document.getElementById('graph-control').style.display = 'block'; // document.getElementById('showAdministration').style.display = 'block';\n\n    document.getElementById('navbar').style.display = 'block';\n    document.getElementById('footnav').style.display = 'block';\n    var ctbgElems = $('*[id^=\"curve-text-buttons-grp\"]');\n\n    for (var i = 0; i < ctbgElems.length; i++) {\n      ctbgElems[i].style.display = 'block';\n    }\n  },\n  'click .preview': function () {\n    // capture the layout\n    var layout = $(\"#placeholder\")[0].layout;\n    var key = Session.get('plotResultKey');\n    matsMethods.saveLayout.call({\n      resultKey: key,\n      layout: layout,\n      curveOpsUpdate: {\n        curveOpsUpdate: curveOpsUpdate\n      }\n    }, function (error) {\n      if (error !== undefined) {\n        setError(error);\n      }\n    }); // open a new window with a standAlone graph of the current graph\n\n    var h = Math.max(document.documentElement.clientHeight, window.innerWidth || 0) * .5;\n    var w = h * 1.3;\n    var wind = window.open(window.location + \"/preview/\" + Session.get(\"graphFunction\") + \"/\" + Session.get(\"plotResultKey\") + \"/\" + Session.get('plotParameter') + \"/\" + matsCollections.Settings.findOne({}, {\n      fields: {\n        Title: 1\n      }\n    }).Title, \"_blank\", \"status=no,titlebar=no,toolbar=no,scrollbars=no,menubar=no,resizable=yes\", \"height=\" + h + \",width=\" + w);\n    setTimeout(function () {\n      wind.resizeTo(w, h);\n    }, 500);\n    openWindows.push(wind);\n  },\n  'click .closeapp': function () {\n    for (var widx = 0; widx < openWindows.length; widx++) {\n      openWindows[widx].close();\n    }\n\n    openWindows = [];\n  },\n  'click .reload': function () {\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var options = matsCurveUtils.getGraphResult().options;\n    var graphFunction = Session.get('graphFunction');\n    window[graphFunction](dataset, options);\n  },\n  'click .plotButton': function () {\n    matsGraphUtils.setGraphView(Session.get('plotType'));\n    var graphView = document.getElementById('graphView');\n    Session.set('graphViewMode', matsTypes.PlotView.graph);\n    matsCurveUtils.hideSpinner();\n  },\n  'click .textButton': function () {\n    matsGraphUtils.setTextView(Session.get('plotType'));\n    Session.set('graphViewMode', matsTypes.PlotView.text);\n    Session.set(\"pageIndex\", 0);\n    Session.set(\"newPageIndex\", 1);\n    Session.set('textRefreshNeeded', true);\n  },\n  'click .export': function () {\n    document.getElementById('text_export').click();\n  },\n  'click .sentAddresses': function (event) {\n    var address = event.currentTarget.options[event.currentTarget.selectedIndex].value;\n    document.getElementById(\"sendAddress\").value = address;\n  },\n  'click .share': function () {\n    // show address modal\n    if (!Meteor.user()) {\n      setError(new Error(\"You must be logged in to use the 'share' feature\"));\n      return false;\n    }\n\n    $(\"#sendModal\").modal('show');\n  },\n  'click .basis': function () {\n    window.open(window.location + \"/JSON/\" + Session.get(\"graphFunction\") + \"/\" + Session.get(\"plotResultKey\") + \"/\" + Session.get('plotParameter') + \"/\" + matsCollections.Settings.findOne({}, {\n      fields: {\n        Title: 1\n      }\n    }).Title, \"_blank\", \"resizable=yes\");\n  },\n  'click .axisLimitButton': function () {\n    $(\"#axisLimitModal\").modal('show');\n  },\n  'click .lineTypeButton': function () {\n    $(\"#lineTypeModal\").modal('show');\n  },\n  'click .colorbarButton': function () {\n    $(\"#colorbarModal\").modal('show');\n  },\n  'click .axisYScale': function () {\n    // get all yaxes and change their scales\n    var newOpts = {};\n    var yAxis;\n\n    for (var k = 0; k < yAxes.length; k++) {\n      yAxis = yAxes[k];\n      newOpts[yAxis + '.type'] = $(\"#placeholder\")[0].layout[yAxis].type === 'linear' ? 'log' : 'linear';\n    }\n\n    Plotly.relayout($(\"#placeholder\")[0], newOpts);\n  },\n  'click .firstPageButton': function () {\n    var pageIndex = Session.get(\"pageIndex\"); // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n\n    if (!Number.isNaN(pageIndex)) {\n      Session.set(\"pageIndex\", 0);\n      Session.set(\"newPageIndex\", 1);\n      Session.set('textRefreshNeeded', true);\n    }\n  },\n  'click .previousTenPageButton': function () {\n    var pageIndex = Session.get(\"pageIndex\"); // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n\n    if (!Number.isNaN(pageIndex)) {\n      var pageTextDirection = Session.get(\"pageTextDirection\"); // if the navigation direction is changing, you have to increment the page index an additional time,\n      // or you just move to the other end of the current page, and nothing appears to change.\n\n      if (pageTextDirection !== undefined && pageTextDirection === -1) {\n        Session.set(\"newPageIndex\", pageIndex - 10);\n      } else {\n        Session.set(\"newPageIndex\", pageIndex - 11);\n      }\n\n      Session.set('textRefreshNeeded', true);\n    }\n  },\n  'click .previousPageButton': function () {\n    var pageIndex = Session.get(\"pageIndex\"); // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n\n    if (!Number.isNaN(pageIndex)) {\n      var pageTextDirection = Session.get(\"pageTextDirection\"); // if the navigation direction is changing, you have to increment the page index an additional time,\n      // or you just move to the other end of the current page, and nothing appears to change.\n\n      if (pageTextDirection !== undefined && pageTextDirection === -1) {\n        Session.set(\"newPageIndex\", pageIndex - 1);\n      } else {\n        Session.set(\"newPageIndex\", pageIndex - 2);\n      }\n\n      Session.set('textRefreshNeeded', true);\n    }\n  },\n  'click .nextPageButton': function () {\n    var pageIndex = Session.get(\"pageIndex\"); // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n\n    if (!Number.isNaN(pageIndex)) {\n      var pageTextDirection = Session.get(\"pageTextDirection\"); // if the navigation direction is changing, you have to increment the page index an additional time,\n      // or you just move to the other end of the current page, and nothing appears to change.\n\n      if (pageTextDirection !== undefined && pageTextDirection === 1) {\n        Session.set(\"newPageIndex\", pageIndex + 1);\n      } else {\n        Session.set(\"newPageIndex\", pageIndex + 2);\n      }\n\n      Session.set('textRefreshNeeded', true);\n    }\n  },\n  'click .nextTenPageButton': function () {\n    var pageIndex = Session.get(\"pageIndex\"); // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n\n    if (!Number.isNaN(pageIndex)) {\n      var pageTextDirection = Session.get(\"pageTextDirection\"); // if the navigation direction is changing, you have to increment the page index an additional time,\n      // or you just move to the other end of the current page, and nothing appears to change.\n\n      if (pageTextDirection !== undefined && pageTextDirection === 1) {\n        Session.set(\"newPageIndex\", pageIndex + 10);\n      } else {\n        Session.set(\"newPageIndex\", pageIndex + 11);\n      }\n\n      Session.set('textRefreshNeeded', true);\n    }\n  },\n  'click .lastPageButton': function () {\n    var pageIndex = Session.get(\"pageIndex\"); // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n\n    if (!Number.isNaN(pageIndex)) {\n      Session.set(\"newPageIndex\", -2000);\n      Session.set('textRefreshNeeded', true);\n    }\n  },\n  'click .replotZoomButton': function () {\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle) {\n      var newDateRange = moment.utc($(\"#placeholder\")[0].layout['xaxis'].range[0]).format('M/DD/YYYY HH:mm') + \" - \" + moment.utc($(\"#placeholder\")[0].layout['xaxis'].range[1]).format('M/DD/YYYY HH:mm');\n      console.log(newDateRange);\n      document.getElementById('controlButton-dates-value').innerHTML = newDateRange;\n      var params = Session.get('params');\n      var actionId = \"plotUnmatched\";\n\n      if (params.plotAction === \"matched\") {\n        actionId = plotMatched;\n      }\n\n      document.getElementById(\"plot-curves\").click();\n    }\n  },\n  'click .reCacheButton': function () {\n    var plotType = Session.get('plotType');\n    var params = Session.get('params');\n    var actionId = \"plotUnmatched\";\n\n    if (params.plotAction === \"matched\") {\n      actionId = plotMatched;\n    }\n\n    Session.set('expireCache', true);\n    document.getElementById(\"plot-curves\").click();\n  },\n  'click .curveVisibility': function (event) {\n    event.preventDefault();\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var id = event.target.id;\n    var label = id.replace('-curve-show-hide', '');\n    var myDataIdx = dataset.findIndex(function (d) {\n      return d.curveId === label;\n    });\n\n    if (dataset[myDataIdx].x.length > 0) {\n      var update;\n\n      if (dataset[myDataIdx].visible) {\n        if (dataset[myDataIdx].mode === \"lines\") {\n          // in line mode, lines are visible, so make nothing visible\n          update = {\n            visible: !dataset[myDataIdx].visible\n          };\n          $('#' + label + \"-curve-show-hide\")[0].value = \"show curve\";\n        } else if (dataset[myDataIdx].mode === \"lines+markers\") {\n          // in line and point mode, lines and points are visible, so make nothing visible\n          update = {\n            visible: !dataset[myDataIdx].visible\n          };\n          $('#' + label + \"-curve-show-hide\")[0].value = \"show curve\";\n          $('#' + label + \"-curve-show-hide-points\")[0].value = \"show points\";\n        } else if (dataset[myDataIdx].mode === \"markers\") {\n          // in point mode, points are visible, so make lines and points visible\n          update = {\n            mode: \"lines+markers\"\n          };\n          $('#' + label + \"-curve-show-hide\")[0].value = \"hide curve\";\n        }\n      } else {\n        if (dataset[myDataIdx].mode === \"lines\") {\n          // in line mode, nothing is visible, so make lines visible\n          update = {\n            visible: !dataset[myDataIdx].visible\n          };\n          $('#' + label + \"-curve-show-hide\")[0].value = \"hide curve\";\n        } else if (dataset[myDataIdx].mode === \"lines+markers\") {\n          // in line and point mode, nothing is visible, so make lines and points visible\n          update = {\n            visible: !dataset[myDataIdx].visible\n          };\n          $('#' + label + \"-curve-show-hide\")[0].value = \"hide curve\";\n          $('#' + label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n        }\n      }\n    }\n\n    Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx); // save the updates in case we want to pass them to a pop-out window.\n\n    curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n    var updatedKeys = Object.keys(update);\n\n    for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n      var updatedKey = updatedKeys[kidx]; // json doesn't like . to be in keys, so replace it with a placeholder\n\n      var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n      curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n    }\n  },\n  'click .pointsVisibility': function (event) {\n    event.preventDefault();\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var id = event.target.id;\n    var label = id.replace('-curve-show-hide-points', '');\n    var myDataIdx = dataset.findIndex(function (d) {\n      return d.curveId === label;\n    });\n\n    if (dataset[myDataIdx].x.length > 0) {\n      var update;\n\n      if (dataset[myDataIdx].visible) {\n        if (dataset[myDataIdx].mode === \"lines\") {\n          // lines are visible, so make lines and points visible\n          update = {\n            mode: \"lines+markers\"\n          };\n          $('#' + label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n        } else if (dataset[myDataIdx].mode === \"lines+markers\") {\n          // lines and points are visible, so make only lines visible\n          update = {\n            mode: \"lines\"\n          };\n          $('#' + label + \"-curve-show-hide-points\")[0].value = \"show points\";\n        } else if (dataset[myDataIdx].mode === \"markers\") {\n          // points are visible, so make nothing visible\n          update = {\n            visible: !dataset[myDataIdx].visible,\n            mode: \"lines\"\n          };\n          $('#' + label + \"-curve-show-hide-points\")[0].value = \"show points\";\n        }\n      } else {\n        // nothing is visible, so make points visible\n        update = {\n          visible: !dataset[myDataIdx].visible,\n          mode: \"markers\"\n        };\n        $('#' + label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n      }\n    }\n\n    Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx); // save the updates in case we want to pass them to a pop-out window.\n\n    curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n    var updatedKeys = Object.keys(update);\n\n    for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n      var updatedKey = updatedKeys[kidx]; // json doesn't like . to be in keys, so replace it with a placeholder\n\n      var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n      curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n    }\n  },\n  'click .errorBarVisibility': function (event) {\n    event.preventDefault();\n    var plotType = Session.get('plotType');\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var id = event.target.id;\n    var label = id.replace('-curve-show-hide-errorbars', '');\n    var myDataIdx = dataset.findIndex(function (d) {\n      return d.curveId === label;\n    });\n\n    if (dataset[myDataIdx].x.length > 0) {\n      var update;\n\n      if (plotType !== matsTypes.PlotTypes.profile) {\n        update = {\n          error_y: dataset[myDataIdx].error_y\n        };\n        update.error_y.visible = !update.error_y.visible;\n\n        if (update.error_y.visible) {\n          $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"hide error bars\";\n        } else {\n          $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"show error bars\";\n        }\n      } else {\n        update = {\n          error_x: dataset[myDataIdx].error_x\n        };\n        update.error_x.visible = !update.error_x.visible;\n\n        if (update.error_x.visible) {\n          $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"hide error bars\";\n        } else {\n          $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"show error bars\";\n        }\n      }\n    }\n\n    Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx); // save the updates in case we want to pass them to a pop-out window.\n\n    curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n    var updatedKeys = Object.keys(update);\n\n    for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n      var updatedKey = updatedKeys[kidx]; // json doesn't like . to be in keys, so replace it with a placeholder\n\n      var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n      curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n    }\n  },\n  'click .barVisibility': function (event) {\n    event.preventDefault();\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var id = event.target.id;\n    var label = id.replace('-curve-show-hide-bars', '');\n    var myDataIdx = dataset.findIndex(function (d) {\n      return d.curveId === label;\n    });\n\n    if (dataset[myDataIdx].x.length > 0) {\n      var update = {\n        visible: !dataset[myDataIdx].visible\n      };\n\n      if (update.visible) {\n        $('#' + label + \"-curve-show-hide-bars\")[0].value = \"hide bars\";\n      } else {\n        $('#' + label + \"-curve-show-hide-bars\")[0].value = \"show bars\";\n      }\n    }\n\n    Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx); // save the updates in case we want to pass them to a pop-out window.\n\n    curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n    var updatedKeys = Object.keys(update);\n\n    for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n      var updatedKey = updatedKeys[kidx]; // json doesn't like . to be in keys, so replace it with a placeholder\n\n      var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n      curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n    }\n  },\n  'click .annotateVisibility': function (event) {\n    event.preventDefault();\n    var id = event.target.id;\n    var label = id.replace('-curve-show-hide-annotate', '');\n\n    if ($('#' + label + \"-annotation\")[0].hidden) {\n      $('#' + label + \"-annotation\")[0].style.display = \"block\";\n      $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"hide annotation\";\n      $('#' + label + \"-annotation\")[0].hidden = false;\n    } else {\n      $('#' + label + \"-annotation\")[0].style.display = \"none\";\n      $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"show annotation\";\n      $('#' + label + \"-annotation\")[0].hidden = true;\n    }\n\n    annotation = $('#annotationContainer')[0].innerHTML;\n  },\n  'click .heatMapVisibility': function (event) {\n    event.preventDefault();\n    var dataset = matsCurveUtils.getGraphResult().data;\n\n    if (dataset[0].lat.length > 0) {\n      var update;\n      var didx;\n\n      if (dataset[0].marker.opacity === 0) {\n        update = {\n          'marker.opacity': 1\n        };\n        Plotly.restyle($(\"#placeholder\")[0], update, 0); // save the updates in case we want to pass them to a pop-out window.\n\n        curveOpsUpdate[0] = curveOpsUpdate[0] === undefined ? {} : curveOpsUpdate[0];\n        curveOpsUpdate[0]['marker____opacity'] = update['marker.opacity'];\n        update = {\n          'visible': false\n        };\n\n        for (didx = 1; didx < dataset.length; didx++) {\n          Plotly.restyle($(\"#placeholder\")[0], update, didx); // save the updates in case we want to pass them to a pop-out window.\n\n          curveOpsUpdate[didx] = curveOpsUpdate[didx] === undefined ? {} : curveOpsUpdate[didx];\n          curveOpsUpdate[didx]['visible'] = update['visible'];\n        }\n\n        $('#' + label + \"-curve-show-hide-heatmap\")[0].value = \"hide heat map\";\n      } else {\n        update = {\n          'marker.opacity': 0\n        };\n        Plotly.restyle($(\"#placeholder\")[0], update, 0); // save the updates in case we want to pass them to a pop-out window.\n\n        curveOpsUpdate[0] = curveOpsUpdate[0] === undefined ? {} : curveOpsUpdate[0];\n        curveOpsUpdate[0]['marker____opacity'] = update['marker.opacity'];\n        update = {\n          'visible': true\n        };\n\n        for (didx = 1; didx < dataset.length; didx++) {\n          Plotly.restyle($(\"#placeholder\")[0], update, didx); // save the updates in case we want to pass them to a pop-out window.\n\n          curveOpsUpdate[didx] = curveOpsUpdate[didx] === undefined ? {} : curveOpsUpdate[didx];\n          curveOpsUpdate[didx]['visible'] = update['visible'];\n        }\n\n        $('#' + label + \"-curve-show-hide-heatmap\")[0].value = \"show heat map\";\n      }\n    }\n  },\n  // add refresh button\n  'click #refresh-plot': function (event) {\n    event.preventDefault();\n    var plotType = Session.get('plotType');\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var options = Session.get('options');\n\n    if (curveOpsUpdate.length === 0) {\n      // we just need a relayout\n      Plotly.relayout($(\"#placeholder\")[0], options);\n    } else {\n      // we need both a relayout and a restyle\n      curveOpsUpdate = [];\n\n      switch (plotType) {\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n          // restyle for contour plots\n          Plotly.restyle($(\"#placeholder\")[0], Session.get('colorbarResetOpts'), 0);\n          break;\n\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.profile:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.threshold:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.dailyModelCycle:\n        case matsTypes.PlotTypes.reliability:\n          // restyle for line plots\n          var lineTypeResetOpts = Session.get('lineTypeResetOpts');\n\n          for (var lidx = 0; lidx < lineTypeResetOpts.length; lidx++) {\n            Plotly.restyle($(\"#placeholder\")[0], lineTypeResetOpts[lidx], lidx);\n            $('#' + dataset[lidx].label + \"-curve-show-hide\")[0].value = \"hide curve\";\n            $('#' + dataset[lidx].label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n            $('#' + dataset[lidx].label + \"-curve-show-hide-errorbars\")[0].value = \"hide error bars\";\n          }\n\n          break;\n\n        case matsTypes.PlotTypes.histogram:\n          // restyle for bar plots\n          var barTypeResetOpts = Session.get('barTypeResetOpts');\n\n          for (var bidx = 0; bidx < barTypeResetOpts.length; bidx++) {\n            Plotly.restyle($(\"#placeholder\")[0], barTypeResetOpts[bidx], bidx);\n            $('#' + dataset[bidx].label + \"-curve-show-hide-bars\")[0].value = \"hide bars\";\n          }\n\n          break;\n\n        case matsTypes.PlotTypes.map:\n          // restyle for maps\n          var mapResetOpts = Session.get('mapResetOpts');\n\n          for (var midx = 0; midx < mapResetOpts.length; midx++) {\n            Plotly.restyle($(\"#placeholder\")[0], mapResetOpts[midx], midx);\n          }\n\n          $('#' + dataset[0].label + \"-curve-show-hide-heatmap\")[0].value = \"show heat map\";\n          break;\n\n        case matsTypes.PlotTypes.scatter2d:\n        default:\n          break;\n      }\n\n      Plotly.relayout($(\"#placeholder\")[0], options);\n    }\n  },\n  // add axis customization modal submit button\n  'click #axisSubmit': function (event) {\n    event.preventDefault();\n    var plotType = Session.get('plotType');\n    var changeYScaleBack = false;\n    var newOpts = {}; // get input axis limits and labels\n\n    $(\"input[id^=x][id$=AxisLabel]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.title'] = elem.value;\n      }\n    });\n\n    if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle || (plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && $(\"#placeholder\")[0].layout.xaxis.title.text.indexOf(\"Date\") > -1) {\n      $(\"input[id^=x][id$=AxisMinText]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n        }\n      });\n      $(\"input[id^=x][id$=AxisMaxText]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n        }\n      });\n    } else {\n      $(\"input[id^=x][id$=AxisMin]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n        }\n      });\n      $(\"input[id^=x][id$=AxisMax]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n        }\n      });\n    }\n\n    $(\"input[id^=y][id$=AxisLabel]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.title'] = elem.value;\n      }\n    });\n\n    if ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && $(\"#placeholder\")[0].layout.xaxis.title.text.indexOf(\"Date\") > -1) {\n      $(\"input[id^=y][id$=AxisMinText]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n        }\n      });\n      $(\"input[id^=y][id$=AxisMaxText]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n        }\n      });\n    } else {\n      $(\"input[id^=y][id$=AxisMin]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          if (plotType === matsTypes.PlotTypes.profile) {\n            newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value; // plotly can't seem to set axis limits on a log axis, so this needs to be changed to linear\n\n            if ($(\"#placeholder\")[0].layout['yaxis' + (index === 0 ? \"\" : index + 1)].type === 'log') {\n              $(\"#axisYScale\").click();\n              changeYScaleBack = true;\n            }\n          } else {\n            newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n          }\n        }\n      });\n      $(\"input[id^=y][id$=AxisMax]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          if (plotType === matsTypes.PlotTypes.profile) {\n            newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value; // plotly can't seem to set axis limits on a log axis, so this needs to be changed to linear\n\n            if ($(\"#placeholder\")[0].layout['yaxis' + (index === 0 ? \"\" : index + 1)].type === 'log') {\n              $(\"#axisYScale\").click();\n              changeYScaleBack = true;\n            }\n          } else {\n            newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n          }\n        }\n      });\n    }\n\n    Plotly.relayout($(\"#placeholder\")[0], newOpts); // if needed, restore the log axis\n\n    if (changeYScaleBack) {\n      $(\"#axisYScale\").click();\n    }\n\n    $(\"#axisLimitModal\").modal('hide');\n  },\n  // add line style modal submit button\n  'click #lineTypeSubmit': function (event) {\n    event.preventDefault();\n    var plotType = Session.get('plotType');\n    var updates = []; // get input line style change\n\n    $(\"[id$=LineStyle]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        updates[index] = updates[index] === undefined ? {} : updates[index];\n        updates[index]['line.dash'] = elem.value;\n      }\n    });\n    $(\"input[id$=LineWeight]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        updates[index] = updates[index] === undefined ? {} : updates[index];\n        updates[index]['line.width'] = elem.value;\n      }\n    });\n    $(\"[id$=LineMarker]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        updates[index] = updates[index] === undefined ? {} : updates[index];\n        updates[index]['marker.symbol'] = elem.value;\n      }\n    });\n\n    for (var uidx = 0; uidx < updates.length; uidx++) {\n      // apply new settings\n      Plotly.restyle($(\"#placeholder\")[0], updates[uidx], uidx);\n    }\n\n    $(\"#lineTypeModal\").modal('hide'); // save the updates in case we want to pass them to a pop-out window.\n\n    for (uidx = 0; uidx < updates.length; uidx++) {\n      curveOpsUpdate[uidx] = curveOpsUpdate[uidx] === undefined ? {} : curveOpsUpdate[uidx];\n      var updatedKeys = Object.keys(updates[uidx]);\n\n      for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n        var updatedKey = updatedKeys[kidx]; // json doesn't like . to be in keys, so replace it with a placeholder\n\n        var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n        curveOpsUpdate[uidx][jsonHappyKey] = updates[uidx][updatedKey];\n      }\n    }\n  },\n  // add colorbar customization modal submit button\n  'click #colorbarSubmit': function (event) {\n    event.preventDefault();\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var update = {}; // get new formatting\n\n    $(\"input[id=colorbarLabel]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        update['colorbar.title'] = elem.value;\n        update['colorbar.titleside'] = 'right';\n        update['colorbar.titlefont'] = {\n          size: 16,\n          family: 'Arial, sans-serif'\n        };\n      }\n    });\n    $(\"input[id=colorbarMin]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        update['autocontour'] = false;\n        update['contours.start'] = elem.value;\n      }\n    });\n    $(\"input[id=colorbarMax]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        update['autocontour'] = false;\n        update['contours.end'] = elem.value;\n      }\n    });\n    $(\"input[id=colorbarNumber]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        update['autocontour'] = false;\n        update['ncontours'] = elem.value; // sadly plotly regards this as a \"less than or equal to\" value, so we have to manually set contour size\n\n        var isStartDefined = update['contours.start'] !== undefined;\n        var isEndDefined = update['contours.end'] !== undefined;\n        var startVal = isStartDefined ? update['contours.start'] : dataset[0].zmin + (dataset[0].zmax - dataset[0].zmin) / 16;\n        var endVal = isEndDefined ? update['contours.end'] : dataset[0].zmax - (dataset[0].zmax - dataset[0].zmin) / 16;\n        update['contours.size'] = (endVal - startVal) / (Number(update['ncontours']) - 1);\n      }\n    });\n    $(\"input[id=colorbarStep]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        if (update['ncontours'] === undefined) {\n          update['autocontour'] = false;\n          update['contours.size'] = elem.value;\n        }\n      }\n    });\n    $(\"input[id=colorbarReverse]\").get().forEach(function (elem, index) {\n      if (elem && elem.checked) {\n        update['reversescale'] = true;\n      } else {\n        update['reversescale'] = false;\n      }\n    });\n    var elem = document.getElementById(\"colormapSelect\");\n\n    if (elem !== undefined && elem.value !== undefined) {\n      update['colorscale'] = elem.value;\n    } // apply new settings\n\n\n    Plotly.restyle($(\"#placeholder\")[0], update, 0);\n    $(\"#colorbarModal\").modal('hide'); // save the updates in case we want to pass them to a pop-out window.\n\n    curveOpsUpdate[0] = curveOpsUpdate[0] === undefined ? {} : curveOpsUpdate[0];\n    var updatedKeys = Object.keys(update);\n\n    for (var uidx = 0; uidx < updatedKeys.length; uidx++) {\n      var updatedKey = updatedKeys[uidx]; // json doesn't like . to be in keys, so replace it with a placeholder\n\n      var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n      curveOpsUpdate[0][jsonHappyKey] = update[updatedKey];\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"displayFunctions\":{\"graph_plotly.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/graph/displayFunctions/graph_plotly.js                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar moment;\nmodule.link(\"meteor/momentjs:moment\", {\n  moment: function (v) {\n    moment = v;\n  }\n}, 0);\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 1);\nvar matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 2);\nvar matsGraphUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsGraphUtils: function (v) {\n    matsGraphUtils = v;\n  }\n}, 3);\n\ngraphPlotly = function (key) {\n  // get plot info\n  var route = Session.get('route'); // get dataset info and options\n\n  var resultSet = matsCurveUtils.getGraphResult();\n\n  if (resultSet === null || resultSet === undefined || resultSet.data === undefined) {\n    return false;\n  } //set options\n\n\n  var options = resultSet.options;\n\n  if (route !== undefined && route !== \"\") {\n    options.selection = [];\n  } // initialize show/hide button labels\n\n\n  var dataset = resultSet.data;\n\n  if (Session.get('plotType') !== matsTypes.PlotTypes.map) {\n    matsGraphUtils.setNoDataLabels(dataset);\n  } else {\n    matsGraphUtils.setNoDataLabelsMap(dataset);\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"template.text_output.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/graph/template.text_output.js                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"textOutput\");\nTemplate[\"textOutput\"] = new Template(\"Template.textOutput\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"textOutput\",\n    class: \"container\"\n  }, HTML.Raw('\\n        <button id=\"text_export\" type=\"button\" class=\"export\" style=\"display:none\">Export</button>\\n        <br>\\n        '), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"curves\"));\n  }, function() {\n    return [ \"\\n            \", HTML.H5(Blaze.View(\"lookup:curveText\", function() {\n      return Spacebars.mustache(view.lookup(\"curveText\"));\n    })), \"\\n        \" ];\n  }), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"notScatter\"));\n  }, function() {\n    return [ \"\\n            \", HTML.TABLE({\n      id: \"textStatsTable\",\n      class: \"table table-condensed table-striped table-bordered\"\n    }, \"\\n                \", HTML.THEAD(\"\\n                \", HTML.TR(\"\\n                    \", Blaze.View(\"lookup:statHeaders\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"statHeaders\")));\n    }), \"\\n                \"), \"\\n                \"), \"\\n                \", HTML.TBODY(\"\\n                \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"curves\"));\n    }, function() {\n      return [ \"\\n                    \", HTML.TR(\"\\n                        \", Blaze.View(\"lookup:stats\", function() {\n        return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"stats\"), view.lookup(\".\")));\n      }), \"\\n                    \"), \"\\n                \" ];\n    }), \"\\n                \"), \"\\n            \"), \"\\n        \" ];\n  }), \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"curves\"));\n  }, function() {\n    return [ \"\\n            \", HTML.TABLE({\n      id: \"textElementsTable\",\n      class: \"table table-condensed table-bordered table-striped table-hover table-sm\"\n    }, \"\\n                \", HTML.THEAD({\n      class: \"thead-inverse\"\n    }, \"\\n                \", HTML.TR(\"\\n                    \", Blaze.View(\"lookup:elementHeaders\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"elementHeaders\"), view.lookup(\".\")));\n    }), \"\\n                \"), \"\\n                \"), \"\\n                \", HTML.TBODY(\"\\n                \", Blaze.Each(function() {\n      return Spacebars.dataMustache(view.lookup(\"elements\"), view.lookup(\".\"));\n    }, function() {\n      return [ \"\\n                    \", HTML.TR(\"\\n                        \", Blaze.View(\"lookup:elementHtml\", function() {\n        return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"elementHtml\"), view.lookup(\".\")));\n      }), \"\\n                    \"), \"\\n                \" ];\n    }), \"\\n                \"), \"\\n            \"), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"text_output.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/graph/text_output.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsCollections, matsCurveUtils, matsPlotUtils, matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  },\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  },\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  },\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar moment;\nmodule.link(\"meteor/momentjs:moment\", {\n  moment: function (v) {\n    moment = v;\n  }\n}, 1);\n\n/*\nReferring to the Session variable plotResultKey here causes the html template to get re-rendered with the current graph data\n(which is in the Results collection).\n */\nvar fillStr = \"---\";\nvar times = []; // I don't think this is used anymore, but I'm not certain, so I'm leaving it here for now.\n\nvar getDataForTime = function (data, time) {\n  if (data === undefined) {\n    return undefined;\n  }\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i][0] == Number(time)) {\n      return data[i] === null ? undefined : data[i];\n    }\n  }\n\n  return undefined;\n}; // fetches the data back from where the query routine stored it.\n\n\nvar getDataForCurve = function (curve) {\n  if (Session.get(\"plotResultKey\") == undefined || matsCurveUtils.getPlotResultData() === undefined) {\n    return undefined;\n  }\n\n  if (matsCurveUtils.getPlotResultData() === null) {\n    return [];\n  }\n\n  if (Session.get(\"plotType\") === matsTypes.PlotTypes.scatter2d) {\n    return matsCurveUtils.getPlotResultData()[curve.label];\n  } else {\n    return matsCurveUtils.getPlotResultData().data[curve.label];\n  }\n};\n\nTemplate.textOutput.onRendered(function () {\n  var settings = matsCollections.Settings.findOne({}, {\n    fields: {\n      NullFillString: 1\n    }\n  });\n\n  if (settings === undefined) {\n    fillStr = \"---\";\n  } else {\n    fillStr = settings.NullFillString;\n  }\n});\nTemplate.textOutput.helpers({\n  notScatter: function () {\n    return Session.get(\"plotType\") !== matsTypes.PlotTypes.scatter2d;\n  },\n  // get the table header for the summary stats at the top of the text page\n  statHeaders: function () {\n    var header = \"\";\n\n    switch (Session.get('plotType')) {\n      case matsTypes.PlotTypes.timeSeries:\n      case matsTypes.PlotTypes.dailyModelCycle:\n      case matsTypes.PlotTypes.profile:\n        header += \"<th>label</th>\\\n                    <th>mean</th>\\\n                    <th>standard deviation</th>\\\n                    <th>n</th>\\\n                    <th>standard error</th>\\\n                    <th>lag1</th>\\\n                    <th>minimum</th>\\\n                    <th>maximum</th>\";\n        break;\n\n      case matsTypes.PlotTypes.dieoff:\n      case matsTypes.PlotTypes.threshold:\n      case matsTypes.PlotTypes.validtime:\n        header += \"<th>label</th>\\\n                    <th>mean</th>\\\n                    <th>standard deviation</th>\\\n                    <th>n</th>\\\n                    <th>minimum</th>\\\n                    <th>maximum</th>\";\n        break;\n\n      case matsTypes.PlotTypes.reliability:\n        header += \"<th>label</th>\\\n                    <th>sample climatology</th>\";\n        break;\n\n      case matsTypes.PlotTypes.map:\n        header += \"<th>label</th>\\\n                    <th>mean</th>\\\n                    <th>standard deviation</th>\\\n                    <th>n</th>\\\n                    <th>minimum time</th>\\\n                    <th>maximum time</th>\";\n        break;\n\n      case matsTypes.PlotTypes.histogram:\n        header += \"<th>label</th>\\\n                    <th>mean</th>\\\n                    <th>standard deviation</th>\\\n                    <th>n</th>\\\n                    <th>minimum</th>\\\n                    <th>maximum</th>\";\n        break;\n\n      case matsTypes.PlotTypes.contour:\n      case matsTypes.PlotTypes.contourDiff:\n        header += \"<th>label</th>\\\n                    <th>mean stat</th>\\\n                    <th>n</th>\\\n                    <th>minimum time</th>\\\n                    <th>maximum time</th>\";\n        break;\n\n      case matsTypes.PlotTypes.scatter2d:\n        // no stat for scatter\n        break;\n\n      default:\n        break;\n    }\n\n    return header;\n  },\n  // get the table header for each curve's data\n  elementHeaders: function (curve) {\n    var header = \"\";\n\n    switch (Session.get('plotType')) {\n      case matsTypes.PlotTypes.timeSeries:\n        header += \"<th>\" + curve.label + \" time</th>\\\n                        <th>raw stat from query</th>\\\n                        <th>plotted stat</th>\\\n                        <th>std dev</th>\\\n                        <th>std error</th>\\\n                        <th>lag1</th>\\\n                        <th>n</th>\";\n        break;\n\n      case matsTypes.PlotTypes.dailyModelCycle:\n        header += \"<th>\" + curve.label + \" time</th>\\\n                        <th>raw stat from query</th>\\\n                        <th>plotted stat</th>\\\n                        <th>std dev</th>\\\n                        <th>n</th>\";\n        break;\n\n      case matsTypes.PlotTypes.profile:\n        header += \"<th>\" + curve.label + \" level</th>\\\n                        <th>raw stat from query</th>\\\n                        <th>plotted stat</th>\\\n                        <th>std dev</th>\\\n                        <th>std error</th>\\\n                        <th>lag1</th>\\\n                        <th>n</th>\";\n        break;\n\n      case matsTypes.PlotTypes.dieoff:\n        header += \"<th>\" + curve.label + \" forecast lead time</th>\\\n                        <th>raw stat from query</th>\\\n                        <th>plotted stat</th>\\\n                        <th>std dev</th>\\\n                        <th>n</th>\";\n        break;\n\n      case matsTypes.PlotTypes.threshold:\n        header += \"<th>\" + curve.label + \" threshold (in)</th>\\\n                        <th>raw stat from query</th>\\\n                        <th>plotted stat</th>\\\n                        <th>std dev</th>\\\n                        <th>n</th>\";\n        break;\n\n      case matsTypes.PlotTypes.validtime:\n        header += \"<th>\" + curve.label + \" hour of day</th>\\\n                        <th>raw stat from query</th>\\\n                        <th>plotted stat</th>\\\n                        <th>std dev</th>\\\n                        <th>n</th>\";\n        break;\n\n      case matsTypes.PlotTypes.reliability:\n        header += \"<th>\" + curve.label + \" probability bin</th>\\\n                        <th>hit rate</th>\\\n                        <th>oy</th>\\\n                        <th>on</th>\";\n        break;\n\n      case matsTypes.PlotTypes.map:\n        header += \"<th>Site Name</th>\\\n                        <th>Number of Times</th>\\\n                        <th>Start Date</th>\\\n                        <th>End Date</th>\\\n                        <th>Average Difference</th>\";\n        break;\n\n      case matsTypes.PlotTypes.histogram:\n        header += \"<th>\" + curve.label + \"  bin range</th>\\\n                        <th>bin n</th>\\\n                        <th>bin rel freq</th>\\\n                        <th>bin lower bound</th>\\\n                        <th>bin upper bound</th>\\\n                        <th>bin mean</th>\\\n                        <th>bin std dev</th>\";\n        break;\n\n      case matsTypes.PlotTypes.contour:\n      case matsTypes.PlotTypes.contourDiff:\n        header += \"<th>X Value</th>\\\n                        <th>Y Value</th>\\\n                        <th>Stat</th>\\\n                        <th>Number</th>\\\n                        <th>Start Date</th>\\\n                        <th>End Date</th>\";\n        break;\n\n      case matsTypes.PlotTypes.scatter2d:\n        header += \"<th>\" + curve.label + \" x axis</th>\\\n                        <th>\" + curve.label + \" y axis</th>\\\n                        <th>best fit</th>\";\n        break;\n\n      default:\n        break;\n    }\n\n    return header;\n  },\n  elements: function (curve) {\n    Session.get('textLoaded'); // monitor for data changres like previous / next\n\n    return getDataForCurve(curve);\n  },\n  curves: function () {\n    Session.get('textLoaded');\n    Session.get(\"plotResultKey\"); // make sure we re-render when data changes\n\n    return Session.get('Curves');\n  },\n  curveLabel: function (curve) {\n    switch (Session.get('plotType')) {\n      case matsTypes.PlotTypes.timeSeries:\n        return curve.label + \" time\";\n        break;\n\n      case matsTypes.PlotTypes.profile:\n        return curve.label + \" level\";\n        break;\n\n      case matsTypes.PlotTypes.dieoff:\n        return curve.label + \" forecast lead time\";\n\n      default:\n        return curve.label;\n        break;\n    }\n  },\n  curveText: function () {\n    var text = matsPlotUtils.getCurveText(matsPlotUtils.getPlotType(), this);\n    return text;\n  },\n  // get the table row values for each curve's data\n  elementHtml: function (element) {\n    var labelKey = Template.parentData().label;\n    var elementLabel = \"\";\n    var line = \"\";\n\n    switch (Session.get('plotType')) {\n      case matsTypes.PlotTypes.timeSeries:\n        line += \"<td>\" + element[labelKey += \" time\"] + \"</td>\" + \"<td>\" + (element['raw stat from query'] != undefined && element['raw stat from query'] !== null ? element['raw stat from query'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['plotted stat'] != undefined && element['plotted stat'] !== null ? element['plotted stat'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['std dev'] != undefined && element['std dev'] !== null ? element['std dev'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['std error'] != undefined && element['std error'] !== null ? element['std error'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['lag1'] != undefined && element['lag1'] !== null ? element['lag1'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + ('n' in element && element['n'] ? element['n'] : fillStr) + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.profile:\n        line += \"<td>\" + element[labelKey += \" level\"] + \"</td>\" + \"<td>\" + (element['raw stat from query'] != undefined && element['raw stat from query'] !== null ? element['raw stat from query'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['plotted stat'] != undefined && element['plotted stat'] !== null ? element['plotted stat'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['std dev'] != undefined && element['std dev'] !== null ? element['std dev'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['std error'] != undefined && element['std error'] !== null ? element['std error'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['lag1'] != undefined && element['lag1'] !== null ? element['lag1'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + ('n' in element ? element['n'] : fillStr) + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.dieoff:\n        line += \"<td>\" + element[labelKey += \" forecast lead time\"] + \"</td>\" + \"<td>\" + (element['raw stat from query'] != undefined && element['raw stat from query'] !== null ? element['raw stat from query'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['plotted stat'] != undefined && element['plotted stat'] !== null ? element['plotted stat'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['std dev'] != undefined && element['std dev'] !== null ? element['std dev'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + ('n' in element ? element['n'] : fillStr) + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.threshold:\n        line += \"<td>\" + element[labelKey += \" threshold (in)\"] + \"</td>\" + \"<td>\" + (element['raw stat from query'] != undefined && element['raw stat from query'] !== null ? element['raw stat from query'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['plotted stat'] != undefined && element['plotted stat'] !== null ? element['plotted stat'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['std dev'] != undefined && element['std dev'] !== null ? element['std dev'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + ('n' in element ? element['n'] : fillStr) + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.validtime:\n        line += \"<td>\" + element[labelKey += \" hour of day\"] + \"</td>\" + \"<td>\" + (element['raw stat from query'] != undefined && element['raw stat from query'] !== null ? element['raw stat from query'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['plotted stat'] != undefined && element['plotted stat'] !== null ? element['plotted stat'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['std dev'] != undefined && element['std dev'] !== null ? element['std dev'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + ('n' in element ? element['n'] : fillStr) + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.dailyModelCycle:\n        line += \"<td>\" + element[labelKey += \" time\"] + \"</td>\" + \"<td>\" + (element['raw stat from query'] != undefined && element['raw stat from query'] !== null ? element['raw stat from query'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['plotted stat'] != undefined && element['plotted stat'] !== null ? element['plotted stat'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['std dev'] != undefined && element['std dev'] !== null ? element['std dev'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + ('n' in element ? element['n'] : fillStr) + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.reliability:\n        line += \"<td>\" + element[labelKey += \" probability bin\"] + \"</td>\" + \"<td>\" + (element['hit rate'] != undefined && element['hit rate'] !== null ? element['hit rate'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['oy'] != undefined && element['oy'] !== null ? element['oy'] : fillStr) + \"</td>\" + \"<td>\" + (element['on'] != undefined && element['on'] !== null ? element['on'] : fillStr) + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.map:\n        line += \"<td>\" + element[\"Site Name\"] + \"</td>\" + \"<td>\" + (element['Number of Times'] != undefined && element['Number of Times'] !== null ? element['Number of Times'] : fillStr) + \"</td>\" + \"<td>\" + (element['Start Date'] != undefined && element['Start Date'] !== null ? element['Start Date'] : fillStr) + \"</td>\" + \"<td>\" + (element['End Date'] != undefined && element['End Date'] !== null ? element['End Date'] : fillStr) + \"</td>\" + \"<td>\" + (element['Average Difference'] != undefined && element['Average Difference'] !== null ? element['Average Difference'] : fillStr) + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.histogram:\n        line += \"<td>\" + element[labelKey += \" bin range\"] + \"</td>\" + \"<td>\" + ('n' in element ? element['n'] : fillStr) + \"</td>\" + \"<td>\" + (element['bin rel freq'] != undefined && element['bin rel freq'] !== null ? element['bin rel freq'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['bin lower bound'] != undefined && element['bin lower bound'] !== null ? element['bin lower bound'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['bin upper bound'] != undefined && element['bin upper bound'] !== null ? element['bin upper bound'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['bin mean'] != undefined && element['bin mean'] !== null ? element['bin mean'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['bin std dev'] != undefined && element['bin std dev'] !== null ? element['bin std dev'].toPrecision(4) : fillStr) + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.contour:\n      case matsTypes.PlotTypes.contourDiff:\n        line += \"<td>\" + element[\"xVal\"] + \"</td>\" + \"<td>\" + element[\"yVal\"] + \"</td>\" + \"<td>\" + (element['stat'] != undefined && element['stat'] !== null ? element['stat'] : fillStr) + \"</td>\" + \"<td>\" + (element['N'] != undefined && element['N'] !== null ? element['N'] : fillStr) + \"</td>\" + \"<td>\" + (element['Start Date'] != undefined && element['Start Date'] !== null ? element['Start Date'] : fillStr) + \"</td>\" + \"<td>\" + (element['End Date'] != undefined && element['End Date'] !== null ? element['End Date'] : fillStr) + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.scatter2d:\n        line += \"<td>\" + (element['xAxis'] != undefined && element['xAxis'] !== null ? element['xAxis'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['yAxis'] != undefined && element['yAxis'] !== null ? element['yAxis'].toPrecision(4) : fillStr) + \"</td>\" + \"<td>\" + (element['best fit'] != undefined && element['best fit'] !== null ? element['best fit'] : fillStr) + \"</td>\";\n        break;\n\n      default:\n        break;\n    }\n\n    return line;\n  },\n  // get the table row values for the summary stats at the top of the text page\n  stats: function (curve) {\n    if (Session.get(\"plotResultKey\") === undefined) {\n      return [];\n    }\n\n    var curves = Session.get('Curves');\n\n    if (curves === undefined || curves.length == 0) {\n      return [];\n    }\n\n    var cindex;\n\n    for (cindex = 0; cindex < curves.length; cindex++) {\n      if (curves[cindex].label == curve.label) {\n        break;\n      }\n    }\n\n    if (matsCurveUtils.getPlotResultData() === null || matsCurveUtils.getPlotResultData() === undefined || matsCurveUtils.getPlotResultData().stats === undefined || matsCurveUtils.getPlotResultData().stats[curves[cindex].label] === undefined) {\n      return \"\";\n    }\n\n    var stats = matsCurveUtils.getPlotResultData().stats[curves[cindex].label];\n    var line = \"\";\n\n    switch (Session.get('plotType')) {\n      case matsTypes.PlotTypes.timeSeries:\n      case matsTypes.PlotTypes.profile:\n      case matsTypes.PlotTypes.dailyModelCycle:\n        line += \"<td>\" + curve['label'] + \"</td>\" + \"<td>\" + (stats['mean'] != undefined && stats['mean'] !== null ? stats['mean'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['standard deviation'] != undefined && stats['standard deviation'] !== null ? stats['standard deviation'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + stats['n'].toString() + \"</td>\" + \"<td>\" + (stats['standard error'] != undefined && stats['standard error'] != null ? stats['standard error'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['lag1'] != undefined && stats['lag1'] != null ? stats['lag1'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['minimum'] != undefined && stats['minimum'] != null ? stats['minimum'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['maximum'] != undefined && stats['maximum'] != null ? stats['maximum'].toPrecision(4) : \"undefined\").toString() + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.dieoff:\n      case matsTypes.PlotTypes.threshold:\n      case matsTypes.PlotTypes.validtime:\n        line += \"<td>\" + curve['label'] + \"</td>\" + \"<td>\" + (stats['mean'] != undefined && stats['mean'] !== null ? stats['mean'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['standard deviation'] != undefined && stats['standard deviation'] !== null ? stats['standard deviation'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + stats['n'].toString() + \"</td>\" + \"<td>\" + (stats['minimum'] != undefined && stats['minimum'] != null ? stats['minimum'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['maximum'] != undefined && stats['maximum'] != null ? stats['maximum'].toPrecision(4) : \"undefined\").toString() + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.reliability:\n        line += \"<td>\" + curve['label'] + \"</td>\" + \"<td>\" + (stats['sample climo'] != undefined && stats['sample climo'] !== null ? stats['sample climo'].toPrecision(4) : \"undefined\").toString() + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.map:\n        line += \"<td>\" + curve['label'] + \"</td>\" + \"<td>\" + (stats['mean difference'] != undefined && stats['mean difference'] !== null ? stats['mean difference'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['standard deviation'] != undefined && stats['standard deviation'] !== null ? stats['standard deviation'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['total number of obs'] != undefined && stats['total number of obs'] !== null ? stats['total number of obs'] : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['minimum time'] != undefined && stats['minimum time'] != null ? stats['minimum time'] : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['maximum time'] != undefined && stats['maximum time'] != null ? stats['maximum time'] : \"undefined\").toString() + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.histogram:\n        line += \"<td>\" + curve['label'] + \"</td>\" + \"<td>\" + (stats['mean'] != undefined && stats['mean'] !== null ? stats['mean'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['standard deviation'] != undefined && stats['standard deviation'] != null ? stats['standard deviation'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + stats['n'].toString() + \"</td>\" + \"<td>\" + (stats['minimum'] != undefined && stats['minimum'] != null ? stats['minimum'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['maximum'] != undefined && stats['maximum'] != null ? stats['maximum'].toPrecision(4) : \"undefined\").toString() + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.contour:\n      case matsTypes.PlotTypes.contourDiff:\n        line += \"<td>\" + curve['label'] + \"</td>\" + \"<td>\" + (stats['mean stat'] != undefined && stats['mean stat'] !== null ? stats['mean stat'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['total number of points'] != undefined && stats['total number of points'] !== null ? stats['total number of points'] : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['minimum time'] != undefined && stats['minimum time'] != null ? stats['minimum time'] : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['maximum time'] != undefined && stats['maximum time'] != null ? stats['maximum time'] : \"undefined\").toString() + \"</td>\";\n        break;\n\n      case matsTypes.PlotTypes.scatter2d:\n        line += \"<td>\" + curve['label'] + \"</td>\" + \"<td>\" + (stats['mean'] != undefined && stats['mean'] !== null ? stats['mean'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['standard deviation'] != undefined && stats['standard deviation'] !== null ? stats['standard deviation'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + stats['n'].toString() + \"</td>\" + \"<td>\" + (stats['standard error'] != undefined && stats['standard error'] != null ? stats['standard error'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['lag1'] != undefined && stats['lag1'] != null ? stats['lag1'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['minimum'] != undefined && stats['minimum'] != null ? stats['minimum'].toPrecision(4) : \"undefined\").toString() + \"</td>\" + \"<td>\" + (stats['maximum'] != undefined && stats['maximum'] != null ? stats['maximum'].toPrecision(4) : \"undefined\").toString() + \"</td>\";\n        break;\n\n      default:\n        break;\n    }\n\n    return line;\n  }\n});\nTemplate.textOutput.events({\n  'click .export': function () {\n    var plotType = Session.get('plotType');\n    var key = Session.get('plotResultKey'); // open a new window with\n\n    window.open(window.location + \"/CSV/\" + Session.get(\"graphFunction\") + \"/\" + Session.get(\"plotResultKey\") + \"/\" + Session.get('plotParameter') + \"/\" + matsCollections.Settings.findOne({}, {\n      fields: {\n        Title: 1\n      }\n    }).Title);\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"graphStandAlone\":{\"graphStandAlone.html\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/templates/graphStandAlone/graphStandAlone.html                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.link(\"./template.graphStandAlone.js\", { \"*\": \"*+\" });\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.graphStandAlone.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/graphStandAlone/template.graphStandAlone.js                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"GraphStandAlone\");\nTemplate[\"GraphStandAlone\"] = new Template(\"Template.GraphStandAlone\", (function() {\n  var view = this;\n  return [ HTML.HEAD(\"\\n        \", HTML.SCRIPT({\n    src: \"https://cdn.plot.ly/plotly-latest.min.js\"\n  }), \"\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"graph-container\",\n    class: \"container-fluid pull-left\",\n    style: function() {\n      return [ \"padding-left: 5%; display:\", Spacebars.mustache(view.lookup(\"graphFunctionDispay\")), \";\" ];\n    }\n  }, \"\\n        \", HTML.DIV({\n    id: \"header\",\n    class: \"row\"\n  }, \"\\n            \", HTML.H4(HTML.SPAN(Blaze.View(\"lookup:Title\", function() {\n    return Spacebars.mustache(view.lookup(\"Title\"));\n  }), \" : \"), HTML.SPAN(Blaze.View(\"lookup:plotText\", function() {\n    return Spacebars.mustache(view.lookup(\"plotText\"));\n  })), HTML.SPAN(\" \", Blaze.View(\"lookup:plotName\", function() {\n    return Spacebars.mustache(view.lookup(\"plotName\"));\n  }))), \"\\n        \"), \"\\n        \", HTML.Raw('<div id=\"gsaSpinner\" name=\"gsaSpinner\" style=\"display:block\">\\n            <img src=\"../../../../img/spinner.gif\" alt=\"Loading...\" height=\"5%\" width=\"5%\"> <span style=\"color:red\">Loading ...</span>\\n        </div>'), \"\\n        \", HTML.DIV({\n    class: \"row form-inline previewCurveButtons\"\n  }, \"\\n            \", HTML.SPAN(\"\\n                \", HTML.INPUT({\n    class: \"input-sm col-sm-5\",\n    id: \"exportFileName\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"matsplotFilemname\"));\n    }\n  }), \"\\n                \", HTML.Raw('<button class=\"btn btn-xs col-sm-3 pull-right btn-primary exportpdf\" id=\"exportpdf\">save pdf</button>'), \"\\n                \", HTML.Raw('<button class=\"btn btn-xs col-sm-3 pull-right btn-primary exportpng\" id=\"exportpng\">save png</button>'), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    id: \"curves\",\n    class: \"row\"\n  }, \"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"curves\"));\n  }, function() {\n    return [ \"\\n                \", HTML.SPAN({\n      style: function() {\n        return [ \"color:\", Spacebars.mustache(view.lookup(\"color\")), \"; font-weight: bolder;\" ];\n      }\n    }, \"--- \"), HTML.SPAN({\n      style: \"font-size:small;\"\n    }, Blaze.View(\"lookup:curveText\", function() {\n      return Spacebars.mustache(view.lookup(\"curveText\"));\n    })), \"\\n                \", HTML.DIV({\n      id: function() {\n        return [ \"curve-text-buttons-grp-\", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")) ];\n      },\n      class: \"btn-group btn-group-xs previewCurveButtons\"\n    }, \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"annotateVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"annotateButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide-annotate\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"annotateShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                \"), \"\\n                \", HTML.BR(), \"\\n            \" ];\n  }), \"\\n            \", HTML.Raw(\"<hr>\"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    id: \"graphView\",\n    style: \"height:100%;margin:0;padding:0;\",\n    class: \"row\"\n  }, \"\\n            \", HTML.Raw('<div id=\"legendContainer\" name=\"legendContainer\"></div>'), \"\\n            \", HTML.DIV({\n    id: \"placeholder\",\n    class: \"row\",\n    name: \"placeholder\",\n    style: function() {\n      return [ \"float:left;width:\", Spacebars.mustache(view.lookup(\"width\")), \"; height:\", Spacebars.mustache(view.lookup(\"height\")), \";\" ];\n    }\n  }, \"\\n                \\n            \"), \"\\n            \", HTML.SPAN({\n    style: \"display: none\"\n  }, Blaze.View(\"lookup:graphFunction\", function() {\n    return Spacebars.mustache(view.lookup(\"graphFunction\"));\n  })), \"\\n        \"), \"\\n    \") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"graphStandAlone.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/graphStandAlone/graphStandAlone.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar jsPDF;\nmodule.link(\"jspdf\", {\n  \"default\": function (v) {\n    jsPDF = v;\n  }\n}, 1);\nvar html2canvas;\nmodule.link(\"html2canvas\", {\n  \"default\": function (v) {\n    html2canvas = v;\n  }\n}, 2);\nvar matsCollections, matsCurveUtils, matsGraphUtils, matsMethods, matsParamUtils, matsPlotUtils, matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  },\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  },\n  matsGraphUtils: function (v) {\n    matsGraphUtils = v;\n  },\n  matsMethods: function (v) {\n    matsMethods = v;\n  },\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  },\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  },\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 3);\nvar Template;\nmodule.link(\"meteor/templating\", {\n  Template: function (v) {\n    Template = v;\n  }\n}, 4);\nvar FlowRouter;\nmodule.link(\"meteor/ostrio:flow-router-extra\", {\n  FlowRouter: function (v) {\n    FlowRouter = v;\n  }\n}, 5);\nmodule.link(\"./graphStandAlone.html\");\nvar annotation = \"\";\nvar resizeOptions;\nTemplate.GraphStandAlone.onCreated(function () {\n  // get the params for what this window will contain from the route\n  console.log(\"GraphStandAlone.onCreated\");\n  Session.set('route', FlowRouter.getRouteName());\n  Session.set(\"graphFunction\", FlowRouter.getParam('graphFunction'));\n  Session.set(\"plotResultKey\", FlowRouter.getParam('key'));\n  Session.set(\"plotParameter\", FlowRouter.getParam('matching'));\n  Session.set(\"appName\", FlowRouter.getParam('appName'));\n});\nTemplate.GraphStandAlone.onRendered(function () {\n  // the window resize event needs to also resize the graph\n  $(window).resize(function () {\n    document.getElementById('placeholder').style.width = matsGraphUtils.standAloneWidth();\n    document.getElementById('placeholder').style.height = matsGraphUtils.standAloneHeight();\n    var dataset = matsCurveUtils.getGraphResult().data;\n    Plotly.newPlot($(\"#placeholder\")[0], dataset, resizeOptions, {\n      showLink: true\n    });\n  });\n  document.getElementById('graph-container').style.backgroundColor = 'white';\n});\nTemplate.GraphStandAlone.helpers({\n  /**\n   * @return {string}\n   * @return {string}\n   */\n  graphFunction: function (params) {\n    // causes graph display routine to be processed\n    var graphFunction = FlowRouter.getParam('graphFunction');\n    var key = FlowRouter.getParam('key');\n    matsMethods.getGraphDataByKey.call({\n      resultKey: key\n    }, function (error, ret) {\n      if (error !== undefined) {\n        setError(error);\n        matsCurveUtils.resetGraphResult();\n        return false;\n      }\n\n      matsCurveUtils.setGraphResult(ret.result);\n      Session.set(\"plotResultKey\", ret.key);\n      Session.set('Curves', ret.result.basis.plotParams.curves);\n      Session.set('graphFunction', graphFunction);\n      Session.set('PlotResultsUpDated', new Date());\n      Session.set('PlotParams', ret.result.basis.plotParams);\n      var ptypes = Object.keys(ret.result.basis.plotParams.plotTypes);\n\n      for (var i = 0; i < ptypes.length; i++) {\n        if (ret.result.basis.plotParams.plotTypes[ptypes[i]] === true) {\n          Session.set('plotType', ptypes[i]);\n          break;\n        }\n      }\n\n      delete ret;\n\n      if (graphFunction) {\n        module.runSetters(eval(graphFunction))(key);\n        var plotType = Session.get('plotType');\n        var dataset = matsCurveUtils.getGraphResult().data;\n        var options = matsCurveUtils.getGraphResult().options;\n\n        if (dataset === undefined) {\n          return false;\n        } // make sure to capture the options (layout) from the old graph - which were stored in graph.js\n\n\n        matsMethods.getLayout.call({\n          resultKey: key\n        }, function (error, ret) {\n          if (error !== undefined) {\n            setError(error);\n            return false;\n          }\n\n          var mapLoadPause = 0;\n          options = ret.layout;\n\n          if (plotType === matsTypes.PlotTypes.map) {\n            options.mapbox.zoom = 2.75;\n            mapLoadPause = 1000;\n          }\n\n          resizeOptions = options; // initial plot\n\n          $(\"#legendContainer\").empty();\n          $(\"#placeholder\").empty(); // need a slight delay for plotly to load\n\n          setTimeout(function () {\n            Plotly.newPlot($(\"#placeholder\")[0], dataset, options, {\n              showLink: false\n            }); // update changes to the curve ops -- need to pause if we're doing a map so the map can finish loading before we try to edit it\n\n            setTimeout(function () {\n              var updates = ret.curveOpsUpdate.curveOpsUpdate;\n\n              for (var uidx = 0; uidx < updates.length; uidx++) {\n                var curveOpsUpdate = {};\n                var updatedKeys = Object.keys(updates[uidx]);\n\n                for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n                  var jsonHappyKey = updatedKeys[kidx]; // turn the json placeholder back into .\n\n                  var updatedKey = jsonHappyKey.split(\"____\").join(\".\");\n                  curveOpsUpdate[updatedKey] = updates[uidx][jsonHappyKey];\n                }\n\n                Plotly.restyle($(\"#placeholder\")[0], curveOpsUpdate, uidx);\n              }\n            }, mapLoadPause);\n          }, 100); // append annotations\n\n          if (plotType !== matsTypes.PlotTypes.map) {\n            annotation = \"\";\n\n            for (var i = 0; i < dataset.length; i++) {\n              if (plotType !== matsTypes.PlotTypes.histogram && dataset[i].curveId !== undefined) {\n                annotation = annotation + \"<div id='\" + dataset[i].curveId + \"-annotation' style='color:\" + dataset[i].annotateColor + \"'>\" + dataset[i].annotation + \" </div>\";\n              }\n            }\n\n            $(\"#legendContainer\").append(\"<div id='annotationContainer' style='font-size:smaller'>\" + annotation + \"</div>\");\n          }\n\n          document.getElementById(\"gsaSpinner\").style.display = \"none\";\n        });\n      }\n    });\n  },\n  graphFunctionDispay: function () {\n    return \"block\";\n  },\n  Title: function () {\n    return Session.get('appName');\n  },\n  width: function () {\n    return matsGraphUtils.standAloneWidth();\n  },\n  height: function () {\n    return matsGraphUtils.standAloneHeight();\n  },\n  curves: function () {\n    return Session.get('Curves');\n  },\n  plotName: function () {\n    return Session.get('PlotParams') === [] || Session.get('PlotParams').plotAction === undefined || Session.get('plotType') === matsTypes.PlotTypes.map ? \"\" : Session.get('PlotParams').plotAction.toUpperCase();\n  },\n  curveText: function () {\n    if (this.diffFrom === undefined) {\n      var plotType = Session.get('plotType');\n\n      if (plotType === undefined) {\n        pfuncs = matsCollections.PlotGraphFunctions.find({}).fetch();\n\n        for (var i = 0; i < pfuncs.length; i++) {\n          if (pfuncs[i].checked === true) {\n            Session.set('plotType', pfuncs[i].plotType);\n          }\n        }\n\n        plotType = Session.get('plotType');\n      }\n\n      return matsPlotUtils.getCurveText(plotType, this);\n    } else {\n      return this.label + \":  Difference\";\n    }\n  },\n  plotText: function () {\n    var p = Session.get('PlotParams');\n\n    if (p !== undefined) {\n      var format = p.plotFormat;\n\n      if (matsCollections.PlotParams.findOne({\n        name: 'plotFormat'\n      }) && matsCollections.PlotParams.findOne({\n        name: 'plotFormat'\n      }).optionsMap && matsCollections.PlotParams.findOne({\n        name: 'plotFormat'\n      }).optionsMap[p.plotFormat] !== undefined) {\n        format = matsCollections.PlotParams.findOne({\n          name: 'plotFormat'\n        }).optionsMap[p.plotFormat];\n      }\n\n      if (format === undefined) {\n        format = \"Unmatched\";\n      }\n\n      var plotType = Session.get('plotType');\n\n      switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n          return \"TimeSeries \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.profile:\n          return \"Profile: \" + format;\n\n        case matsTypes.PlotTypes.dieoff:\n          return \"DieOff: \" + format;\n\n        case matsTypes.PlotTypes.threshold:\n          return \"Threshold: \" + format;\n\n        case matsTypes.PlotTypes.validtime:\n          return \"ValidTime: \" + format;\n\n        case matsTypes.PlotTypes.dailyModelCycle:\n          return \"DailyModelCycle \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.reliability:\n          return \"Reliability: \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.map:\n          return \"Map \" + p.dates + \" \";\n\n        case matsTypes.PlotTypes.histogram:\n          return \"Histogram: \" + format;\n\n        case matsTypes.PlotTypes.contour:\n          return \"Contour \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.contourDiff:\n          return \"ContourDiff \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.scatter2d:\n          break;\n\n        default:\n          return \"Scatter: \" + p.dates + \" : \" + format;\n      }\n    } else {\n      return \"no plot params\";\n    }\n  },\n  color: function () {\n    return this.color;\n  },\n  annotateButtonText: function () {\n    var sval = this.label + \"annotateButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'hide annotation');\n    }\n\n    return Session.get(sval);\n  },\n  annotateShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.map || plotType === matsTypes.PlotTypes.histogram) {\n      return 'none';\n    } else {\n      return 'block';\n    }\n  },\n  matsplotFilemname: function () {\n    return \"matsplot-\" + moment(new Date()).format(\"DD-MM-YYYY-hh:mm:ss\");\n  },\n  image: function () {\n    var img = Session.get(\"spinner_img\");\n\n    if (img == undefined) {\n      img = \"spinner.gif\";\n      Session.set(\"spinner_img\", \"../../../../../image/spinner.gif\");\n    }\n\n    return img;\n  }\n});\nTemplate.GraphStandAlone.events({\n  'click .annotateVisibility': function (event) {\n    event.preventDefault();\n    var id = event.target.id;\n    var label = id.replace('-curve-show-hide-annotate', '');\n\n    if ($('#' + label + \"-annotation\")[0].hidden) {\n      $('#' + label + \"-annotation\")[0].style.display = \"block\";\n      $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"hide annotation\";\n      $('#' + label + \"-annotation\")[0].hidden = false;\n    } else {\n      $('#' + label + \"-annotation\")[0].style.display = \"none\";\n      $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"show annotation\";\n      $('#' + label + \"-annotation\")[0].hidden = true;\n    }\n\n    annotation = $('#annotationContainer')[0].innerHTML;\n  },\n  'click .exportpdf': function (e) {\n    $(\".previewCurveButtons\").each(function (i, obj) {\n      obj.style.display = \"none\";\n    }); //const filename  = 'MATSPlot' + moment(new Date()).format(\"DD-MM-YYYY-hh:mm:ss\") + '.pdf';\n\n    html2canvas(document.querySelector('#graph-container'), {\n      scale: 3.0\n    }).then(function (canvas) {\n      var h = 419.53;\n      var w = 595.28;\n      var filename = document.getElementById(\"exportFileName\").value;\n      var pdf = new jsPDF('letter', 'pt', 'a5');\n      pdf.addImage(canvas.toDataURL('image/jpeg'), 'JPEG', 0, 0, w, h);\n      pdf.save(filename);\n      $(\".previewCurveButtons\").each(function (i, obj) {\n        obj.style.display = \"block\";\n      });\n    });\n  },\n  'click .exportpng': function (e) {\n    $(\".previewCurveButtons\").each(function (i, obj) {\n      obj.style.display = \"none\";\n    });\n    html2canvas(document.querySelector('#graph-container'), {\n      scale: 3.0\n    }).then(function (canvas) {\n      var h = 419.53;\n      var w = 595.28;\n      var filename = document.getElementById(\"exportFileName\").value;\n      saveAs(canvas.toDataURL(), filename + '.png');\n      $(\".previewCurveButtons\").each(function (i, obj) {\n        obj.style.display = \"block\";\n      });\n    });\n\n    function saveAs(uri, filename) {\n      var link = document.createElement('a');\n\n      if (typeof link.download === 'string') {\n        link.href = uri;\n        link.download = filename; //Firefox requires the link to be in the body\n\n        document.body.appendChild(link); //simulate click\n\n        link.click(); //remove the link when done\n\n        document.body.removeChild(link);\n      } else {\n        window.open(uri);\n      }\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"common\":{\"template.text_input.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/template.text_input.js                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"textInput\");\nTemplate[\"textInput\"] = new Template(\"Template.textInput\", (function() {\n  var view = this;\n  return HTML.INPUT({\n    id: function() {\n      return [ Spacebars.mustache(view.lookup(\"name\")), \"-\", Spacebars.mustache(view.lookup(\"type\")) ];\n    },\n    class: \"data-input textInput\",\n    type: \"text\",\n    name: function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    },\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"defaultTextInput\"));\n    }\n  });\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"text_input.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/text_input.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 0);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 1);\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 2);\nTemplate.textInput.helpers({\n  defaultTextInput: function () {\n    if (this.name == 'label') {\n      // labels are handled specially\n      var label;\n      var input = document.getElementById('label-textInput');\n      var value = document.getElementById('controlButton-label-value');\n\n      if (input && value) {\n        if (label !== input.value || label != value.textContent) {\n          if (!Session.get('NextCurveLabel')) {\n            label = matsCurveUtils.getNextCurveLabel();\n          } else {\n            label = Session.get('NextCurveLabel');\n          }\n\n          input.value = label;\n          value.textContent = label;\n          return label;\n        }\n      } else {\n        // must be initialization\n        label = matsCurveUtils.getNextCurveLabel();\n        return label;\n      }\n    } else {\n      return this.default;\n    }\n  }\n});\nTemplate.textInput.events({\n  'click, blur': function (event) {\n    try {\n      // label is handled differently - special case because of NextCurveLabel stored in Session\n      var text = event.currentTarget.value;\n\n      if (event.target.name == \"label\" && Session.get('NextCurveLabel') == text) {} else {\n        matsParamUtils.setValueTextForParamName(event.target.name, text);\n      }\n    } catch (error) {\n      matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n    }\n  },\n  'change': function (event) {\n    try {\n      // label is handled differently - special case because of NextCurveLabel stored in Session\n      var text = event.currentTarget.value;\n\n      if (Object.values(matsTypes.ReservedWords).indexOf(text) === -1) {\n        matsParamUtils.setValueTextForParamName(event.target.name, text);\n        Session.set(\"NextCurveLabel\", text);\n      } else {\n        console.log(\"that curve label is not allowed\");\n        setTimeout(function () {\n          matsParamUtils.setValueTextForParamName(event.target.name, \"LabelNotAllowed\");\n        }, 10);\n      }\n    } catch (error) {\n      matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.select.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/template.select.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"select\");\nTemplate[\"select\"] = new Template(\"Template.select\", (function() {\n  var view = this;\n  return [ HTML.DIV(\"\\n        \", HTML.DIV({\n    class: \"btn-group btn-group-xs table-bordered\",\n    style: \"border: solid;border-width: thick;border-color: white;\"\n  }, \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isMultiple\"));\n  }, function() {\n    return [ \"\\n                \", HTML.BUTTON({\n      type: \"button\",\n      class: \"btn btn-info btn-xs selectAll\",\n      id: function() {\n        return [ Spacebars.mustache(view.lookup(\"name\")), \"-\", Spacebars.mustache(view.lookup(\"type\")), \"-all\" ];\n      }\n    }, \" select all \"), \"\\n                \", HTML.BUTTON({\n      type: \"button\",\n      class: \"btn btn-warning btn-xs clearSelections\",\n      id: function() {\n        return [ Spacebars.mustache(view.lookup(\"name\")), \"-\", Spacebars.mustache(view.lookup(\"type\")), \"-clear\" ];\n      }\n    }, \" clear selections\"), \"\\n                \", HTML.BUTTON({\n      type: \"button\",\n      class: \"btn btn-success btn-xs doneSelecting\",\n      id: function() {\n        return [ Spacebars.mustache(view.lookup(\"name\")), \"-\", Spacebars.mustache(view.lookup(\"type\")), \"-done\" ];\n      }\n    }, \" done selecting\"), \"\\n            \" ];\n  }), \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"selectionIsOptional\"));\n  }, function() {\n    return [ \"\\n                \", HTML.BUTTON({\n      type: \"button\",\n      class: \"btn btn-warning btn-xs doNotUse\",\n      id: function() {\n        return [ Spacebars.mustache(view.lookup(\"name\")), \"-\", Spacebars.mustache(view.lookup(\"type\")), \"-unused\" ];\n      }\n    }, \" do not use\"), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n    \"), \"\\n    \", HTML.DIV(\"\\n        \", HTML.SELECT(HTML.Attrs({\n    style: function() {\n      return [ \"width:\", Spacebars.mustache(view.lookup(\"optionMaxLength\")), \"em;\" ];\n    },\n    class: function() {\n      return [ \"data-input \", Spacebars.mustache(view.lookup(\"name\")) ];\n    },\n    size: \"10\",\n    name: function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    },\n    id: function() {\n      return [ Spacebars.mustache(view.lookup(\"name\")), \"-\", Spacebars.mustache(view.lookup(\"type\")) ];\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"multiple\"));\n  }), \"\\n            \", HTML.Raw('<option initial=\"\">initial</option>'), \"\\n        \"), \"\\n    \") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"select.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/select.js                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 2);\nvar matsSelectUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsSelectUtils: function (v) {\n    matsSelectUtils = v;\n  }\n}, 3);\n\n/*\n    Much of the work for select widgets happens in mats-common->imports->client->select_util.js. Especially the refresh\n    routine which sets all the options. Don't forget to look there for much of the handling.\n */\nTemplate.select.onRendered(function () {\n  var ref = this.data.name + '-' + this.data.type;\n  $(\"#\" + ref).select2({\n    minimumResultsForSearch: 20,\n    closeOnSelect: false\n  });\n  var elem = document.getElementById(ref);\n\n  try {\n    // register refresh event for axis change to use to enforce a refresh\n    elem && elem.addEventListener('axisRefresh', function (event) {\n      // Don't know why I have to do this, I expected the parameter data to be in the context....\n      var paramData = matsCollections.CurveParams.findOne({\n        name: this.name\n      }, {\n        dependentNames: 1,\n        peerName: 1\n      });\n      matsSelectUtils.refreshPeer(event, paramData);\n    }); // register refresh event for any superior to use to enforce a refresh of the options list\n\n    if (ref.search('axis') === 1) {\n      // this is a \"brother\" (hidden) scatterplot param. There is no need to refresh it or add event listeners etc.\n      return;\n    }\n\n    elem.options = [];\n    elem && elem.addEventListener('refresh', function (event) {\n      matsSelectUtils.refresh(event, this.name);\n    });\n  } catch (e) {\n    e.message = \"Error in select.js rendered: \" + e.message;\n    setError(e);\n  }\n\n  try {\n    matsSelectUtils.checkHideOther(this.data, true); // calls checkDisable\n\n    matsSelectUtils.refresh(null, this.data.name);\n  } catch (e) {\n    e.message = \"Error in select.js rendered function checking to hide or disable other elements: \" + e.message;\n    setError(e);\n  }\n});\nTemplate.select.helpers({\n  optionMaxLength: function () {\n    var sOptions = [];\n\n    if (!this.options) {\n      return 10;\n    }\n\n    var longest = this.options.reduce(function (a, b) {\n      if (a === null && b === null) {\n        return null;\n      }\n\n      if (a === null) {\n        return b;\n      }\n\n      if (b === null) {\n        return a;\n      }\n\n      return a.length > b.length ? a : b;\n    });\n\n    if (!longest) {\n      return 10;\n    }\n\n    var ret = longest.length <= 10 ? 10 : Math.round(longest.length * 0.8);\n    return ret;\n  },\n  isSelectedByDefault: function (p) {\n    if (p.default == this) {\n      return \"selected\"; // the selected option\n    } else {\n      return \"\"; // not the selected option\n    }\n  },\n  options: function () {\n    var sOptions = []; //process options as an option list\n\n    if (this.options === matsTypes.InputTypes.unused) {\n      return [];\n    } else if (this.optionsGroups) {\n      // options have optionGroups\n      this.optionsGroups.foreach(function (value) {\n        Soptions.concat(value);\n      });\n    } else {\n      sOptions = matsParamUtils.typeSort(this.options);\n    }\n\n    return sOptions;\n  },\n  multiple: function () {\n    if (this.multiple === true) {\n      return \"multiple\";\n    }\n  },\n  isMultiple: function () {\n    return this.multiple === true;\n  },\n  selectionIsOptional: function () {\n    return this.selectionOptional === true;\n  }\n});\n\nvar setValue = function (pName) {\n  var elem = matsParamUtils.getInputElementForParamName(pName);\n  var selectedOptions = elem.selectedOptions;\n  var options = elem.options;\n\n  if (selectedOptions === undefined || selectedOptions.length === 0 || elem.selectedIndex === -1) {\n    // set to the default - the 0th one\n    matsParamUtils.setValueTextForParamName(pName, matsTypes.InputTypes.unused);\n  } else {\n    if (selectedOptions.length === 1) {\n      matsParamUtils.setValueTextForParamName(pName, selectedOptions[0].text);\n    } else {\n      // selected options is greater than 1 - must be a multiple\n      var firstOption = selectedOptions[0];\n      var lastOption = selectedOptions[selectedOptions.length - 1];\n      var text = firstOption.text + \" .. \" + lastOption.text;\n      matsParamUtils.setValueTextForParamName(pName, text);\n    }\n  }\n};\n\nTemplate.select.events({\n  'change .data-input': function (event) {\n    Session.set(\"elementChanged\", Date.now());\n    var paramName = event.target.name;\n\n    if (paramName === undefined) {\n      return false;\n    } // These need to be done in the right order!\n    // always check to see if an \"other\" needs to be hidden or disabled before refreshing\n\n\n    matsSelectUtils.checkHideOther(this, false);\n    matsSelectUtils.refreshPeer(event, this);\n    document.getElementById(\"element-\" + this.name).style.display = \"none\"; // be sure to hide the element div\n\n    var curveItem = document.getElementById(\"curveItem-\" + Session.get(\"editMode\"));\n    curveItem && curveItem.scrollIntoView(false);\n    setValue(paramName);\n\n    if (this.multiple) {\n      return true; // prevents the select 2 from closing on multiple selectors\n    }\n\n    $('#' + this.name + \"-\" + this.type).select2('close');\n    matsSelectUtils.refreshDependents(event, this);\n    Session.set('lastUpdate', Date.now());\n    return false;\n  },\n  'click .doneSelecting': function (event) {\n    Session.set(\"elementChanged\", Date.now());\n    var controlElem = matsParamUtils.getControlElementForParamName(this.name);\n    $('#' + this.name + \"-\" + this.type).select2(\"close\").trigger('change'); // apply the selection choices to the select2\n\n    var editMode = Session.get(\"editMode\");\n    var curveItem = editMode === undefined && editMode === \"\" ? undefined : document.getElementById(\"curveItem-\" + editMode);\n\n    if (curveItem) {\n      $('#save').trigger('click');\n    }\n\n    if (editMode) {\n      $('#' + this.name + \"-\" + this.type).select2(\"close\"); // use the close on the selector when editing\n    } else {\n      $(controlElem).trigger('click'); // clicking the control element hides the selector when not editing\n\n      $('#' + this.name + \"-\" + this.type).select2(\"close\");\n    }\n\n    return false;\n  },\n  'click .selectAll': function (event) {\n    var elem = matsParamUtils.getInputElementForParamName(this.name);\n    var values = [];\n\n    for (var i = 0; i < elem.options.length; i++) {\n      values.push(elem.options[i].text);\n    }\n\n    $('#' + this.name + \"-\" + this.type).select2().val(values).trigger('change');\n    return false;\n  },\n  'click .clearSelections': function (event) {\n    var elem = matsParamUtils.getInputElementForParamName(this.name);\n    $('#' + this.name + \"-\" + this.type).select2().val(null).trigger('change');\n    return false;\n  },\n  'click .doNotUse': function (event) {\n    var elem = matsParamUtils.getInputElementForParamName(this.name);\n    $('#' + this.name + \"-\" + this.type).select2().val(null).trigger('change');\n    return false;\n  },\n  'change, blur .item': function (event) {\n    try {\n      var text = \"\";\n\n      if (this.type == matsTypes.InputTypes.selectOrderEnforced) {\n        /* check the validity of the order enforcement.\n           The requirement for order enforced selectors is that\n           some curve must have previously selected the earlier (lower ordered)\n           options in the options array, not counting the default option to make this a valid selection.\n           For example if my options are... ['auto by variable','y1','y2',y3'] and 'auto by variable'\n           is the selectors default then choosing 'y2' or 'y3' prior to choosing 'y1' is not valid and\n           choosing 'y3' prior to choosing 'y1' and 'y2' is not valid.\n         */\n        // what is the default?\n        var defaultOption = this.default;\n        var selection = $(event.target).val();\n        var curves = Session.get('Curves');\n        var options = this.options;\n        var priorSelected = [defaultOption];\n\n        for (var ci = 0; ci < curves.length; ci++) {\n          var curve = curves[ci];\n          var curveOption = curve[this.name];\n          priorSelected.push(curveOption);\n        }\n\n        var unusedOption = \"\";\n\n        if (!priorSelected.includes(selection)) {\n          // this option has not been selected prior\n          // check to see if all the prior options to this one are selected\n          for (var oi = 0; oi < options.length; oi++) {\n            var option = options[oi]; // We reached the selected option\n\n            if (option == selection) {\n              break;\n            }\n\n            if (!priorSelected.includes(option)) {\n              unusedOption = option;\n              break;\n            }\n          }\n\n          if (unusedOption === \"\") {\n            // is valid all prior options were selected\n            event.target.setCustomValidity(this.name, \"\");\n          } else {\n            // HACK ALERT! the customValidity stuff seems to have been overridden in the invalid event event handler of item.js\n            Session.set('errorMessage', \"The prior option: \" + unusedOption + \" was not selected for this selector, you must use that first.\");\n            event.target.setCustomValidity(this.name, \"The prior option: \" + unusedOption + \" was not selected for this selector, you must use that first.\");\n            event.target.checkValidity(); //                        matsParamUtils.setInputForParamName(this.name,this.default);\n          }\n        }\n      }\n\n      if (event.target.multiple) {\n        var _values = $(event.target).val();\n\n        if (_values === null) {\n          // happens if unused or empty\n          text = matsTypes.InputTypes.unused;\n        } else {\n          var firstOption = _values[0];\n          var lastOption = _values[_values.length - 1];\n          text = firstOption + \" .. \" + lastOption;\n        }\n      } else {\n        text = $(event.target).val();\n      }\n\n      if (this.type === matsTypes.InputTypes.select && (text === \"\" || text === undefined || text === null) && (this.default === -1 || this.default === undefined || this.default === null || event.currentTarget.selectedIndex == -1)) {\n        text = matsTypes.InputTypes.unused; //$('#' + this.name + \"-\" + this.type).select2().val(null).trigger('change');\n      }\n\n      matsParamUtils.setValueTextForParamName(event.target.name, text);\n    } catch (error) {\n      matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n    }\n\n    var editMode = Session.get(\"editMode\");\n    var curveItem = editMode === undefined && editMode === \"\" ? undefined : document.getElementById(\"curveItem-\" + editMode);\n\n    if (curveItem) {\n      $('#save').trigger('click');\n    }\n\n    if (event.target.multiple) {\n      Session.set('editMode', editMode); // restore the editing of the curve item for muli selects\n\n      var controlElem = matsParamUtils.getControlElementForParamName(this.name);\n      $(controlElem).trigger('click'); // reopen the select2 - the regular open is not located properly so do it by clicking the control element button\n    }\n\n    return false;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.map.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/template.map.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"map\");\nTemplate[\"map\"] = new Template(\"Template.map\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"mapModal\",\n    class: \"modal\",\n    role: \"dialog\",\n    \"data-backdrop\": \"false\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog modal-lg\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                \", HTML.Raw('<div class=\"modal-header\">\\n                    <h4 class=\"modal-title\">Map</h4>\\n                    <button class=\"btn btn-xs col-2 btn-success selectSites\">Select All Sites</button>\\n                    <button id=\"gc-spacer\" type=\"button\" class=\"btn spacebutton\"></button>\\n                    <button class=\"btn btn-xs col-2 btn-danger deselectSites\">Deselect All Sites</button>\\n                </div>'), \"\\n                \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                    \", HTML.DIV({\n    class: \"modal-body\",\n    id: function() {\n      return [ Spacebars.mustache(view.lookup(\"name\")), \"-\", Spacebars.mustache(view.lookup(\"type\")) ];\n    }\n  }), \"\\n                \"), \"\\n                \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                    <button type=\"button\" class=\"close-map btn btn-info\" data-dismiss=\"modal\" style=\"background-color: #9900ff;\">&nbsp;&nbsp;Close</button>\\n                </div>'), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n        \"), HTML.Raw(\"\\n        <!-- /.modal-dialog -->\\n    \"));\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"map.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/map.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 0);\nTemplate.map.onRendered(function () {\n  var defaultAttrs = this; // save for when we need to reset to defaults\n\n  $.getScript(\"https://cdn.plot.ly/plotly-latest.min.js\", function () {\n    var targetId = '';\n    var peerName = '';\n    var markers = [];\n    var thisMarkers = [];\n    var peerOptions = [];\n    var selectedValues = [];\n    var divElement = '';\n    var divId = '';\n    var layout = {};\n    var dataset = {}; // method to initialize the map selector\n\n    var initializeSelectorMap = function (item) {\n      var defaultPoint = item.data.defaultMapView.point;\n      var defaultZoomLevel = item.data.defaultMapView.zoomLevel;\n      peerName = item.data.peerName;\n      var targetElement = document.getElementsByName(peerName)[0];\n\n      if (!targetElement) {\n        return;\n      }\n\n      targetId = '#' + targetElement.id;\n      markers = item.data.optionsMap; // from app startup\n\n      thisMarkers = []; // markers valid for this data source\n      // find out what peer options are available for this data source\n\n      peerOptions = [];\n\n      if (targetElement.options) {\n        for (var i = 0; i < targetElement.options.length; i++) {\n          peerOptions.push(targetElement.options[i].text);\n        }\n      }\n\n      selectedValues = $(targetId).val() ? $(targetId).val() : [];\n      divElement = item.data.name + '-' + item.data.type;\n      divId = '#' + divElement;\n      layout = {\n        autosize: true,\n        // height: 500,\n        // width: 840,\n        hovermode: 'closest',\n        mapbox: {\n          bearing: 0,\n          center: {\n            lat: defaultPoint[0],\n            lon: defaultPoint[1]\n          },\n          pitch: 0,\n          zoom: defaultZoomLevel,\n          accesstoken: 'pk.eyJ1IjoibWF0cy1nc2QiLCJhIjoiY2pvN2l1N2MyMG9xdTN3bWR3ODV5a2E2ZiJ9.PtgcGhxaoD43N0OwJSNVMg',\n          style: 'light'\n        },\n        margin: {\n          l: 10,\n          r: 10,\n          b: 10,\n          t: 10,\n          pad: 4\n        },\n        showlegend: false\n      };\n      dataset = {\n        label: 'sitesMap',\n        siteName: [],\n        lat: [],\n        lon: [],\n        text: [],\n        type: 'scattermapbox',\n        mode: 'markers',\n        marker: {\n          color: [],\n          opacity: 1\n        }\n      }; // set the initial site marker locations and colors\n\n      var marker;\n\n      for (var sidx = 0; sidx < peerOptions.length; sidx++) {\n        marker = markers.find(function (obj) {\n          return obj.name === peerOptions[sidx];\n        });\n        thisMarkers[sidx] = marker;\n        dataset.siteName[sidx] = marker.name;\n        dataset.text[sidx] = marker.name;\n        dataset.lat[sidx] = marker.point[0];\n        dataset.lon[sidx] = marker.point[1];\n\n        if (selectedValues.indexOf(marker.name) === -1) {\n          dataset.marker.color[sidx] = marker.options.color;\n        } else {\n          dataset.marker.color[sidx] = marker.options.highLightColor;\n        }\n      }\n    }; // call the above initialization for the first time\n\n\n    initializeSelectorMap(defaultAttrs); // draw the map for the first time\n\n    Plotly.newPlot($(divId)[0], [dataset], layout);\n    /*\n     The following lines of code are event handlers for if a user clicks on a single station, or uses the area select\n    tools to highlight a group of stations. For now, the logic is such that individual stations can toggle between\n    chosen and unchosen by clicking them, but the area select tools will just choose everything that is outlined.\n    This is so that if a user has been manually choosing stations and then gives up and uses the area select, all of\n    their intended stations will be chosen (the ones they had already manually selected won't be unchosen). There will\n    be some sort of 'deselect all' button on this modal to unchoose everything.\n     NOTE: We are using plotly's event handlers here, but we are not using its native chosen/unchosen capabilities.\n    Instead, we are getting the chosen values back from the area select and adding them into out own arrays. We then\n    finish by telling plotly to deselect everything in its own internal accounting. There are two reasons for this:\n        1) plotly's ways of handling chosen/unchosen values are way more complicated than is needed here\n        2) under plotly's system, if we use the area select once, we then can't go back and add other areas or\n        individual stations without losing the original selection.\n     However, we may want to explore plotly's native chosen/unchosen capabilities in the future for our process-oriented\n    verification.\n     --MBS, 11/13/18\n      */\n    // event handler for clicking individual stations\n\n    $(divId)[0].on('plotly_click', function (eventdata) {\n      //get index of current station\n      var currPoint = eventdata.points[0].pointNumber;\n\n      if (dataset.marker.color[currPoint] === thisMarkers[currPoint].options.color) {\n        // switch to selected color and add this station to our selected values array\n        dataset.marker.color[currPoint] = thisMarkers[currPoint].options.highLightColor;\n        selectedValues.push(eventdata.points[0].text);\n      } else {\n        // switch to deselected color and remove this station from our selected values array\n        dataset.marker.color[currPoint] = thisMarkers[currPoint].options.color;\n        var tidx = selectedValues.indexOf(eventdata.points[0].text);\n\n        if (tidx > -1) {\n          selectedValues.splice(tidx, 1);\n        }\n      } // update the marker color on the plot and the values in the site selector\n\n\n      var update = {\n        'marker': {\n          color: dataset.marker.color,\n          opacity: 1\n        }\n      };\n      Plotly.restyle($(divId)[0], update, eventdata.points[0].curveNumber);\n      $(targetId).val(selectedValues).trigger(\"change\");\n      matsParamUtils.collapseParam(peerName);\n      $(targetId).select2(\"close\");\n    }); // event handler for outlining multiple stations\n\n    $(divId)[0].on('plotly_selected', function (eventdata) {\n      if (eventdata === undefined || eventdata.points.length < 1) {\n        // the user has clicked outside of the select area, so make sure plotly's area select is disabled.\n        // otherwise the user won't be able to choose individual stations after choosing an area select\n        $(divId + \" .select-outline\").remove();\n        Plotly.restyle($(divId)[0], {\n          selectedpoints: [null]\n        });\n      } else {\n        // the user has selected all the points in an area. Iterate through them and select any that are not already selected.\n        var currPoint;\n        eventdata.points.forEach(function (pt) {\n          currPoint = pt.pointNumber;\n\n          if (dataset.marker.color[currPoint] === thisMarkers[currPoint].options.color) {\n            // switch to selected color and add this station to our selected values array\n            dataset.marker.color[currPoint] = thisMarkers[currPoint].options.highLightColor;\n            selectedValues.push(pt.text);\n          }\n        }); // update the marker color on the plot and the values in the site selector\n\n        var update = {\n          'marker': {\n            color: dataset.marker.color,\n            opacity: 1\n          }\n        };\n        Plotly.restyle($(divId)[0], update, eventdata.points[0].curveNumber);\n        $(targetId).val(selectedValues).trigger(\"change\");\n        matsParamUtils.collapseParam(peerName);\n        $(targetId).select2(\"close\"); // As per the comment block above, we're done here, so make sure plotly's area select is disabled.\n        // otherwise the user won't be able to choose individual stations after choosing an area select.\n\n        $(divId + \" .select-outline\").remove();\n        Plotly.restyle($(divId)[0], {\n          selectedpoints: [null]\n        });\n      }\n    }); // event handler for selecting all stations\n\n    $('.selectSites').on('click', function () {\n      event.preventDefault(); // fill the selected values array with all available options and change the marker to its highlight color\n\n      $(targetId).val(peerOptions).trigger(\"change\");\n      matsParamUtils.collapseParam(peerName);\n      $(targetId).select2(\"close\");\n\n      for (var sidx = 0; sidx < thisMarkers.length; sidx++) {\n        dataset.marker.color[sidx] = thisMarkers[sidx].options.highLightColor;\n      }\n\n      var update = {\n        'marker': {\n          color: dataset.marker.color,\n          opacity: 1\n        }\n      };\n      Plotly.restyle($(divId)[0], update, [0]);\n    }); // event handler for deselecting all stations\n\n    $('.deselectSites').on('click', function () {\n      event.preventDefault(); // empty the selected values array and return the marker to its original color\n\n      $(targetId).val([]).trigger(\"change\");\n      matsParamUtils.collapseParam(peerName);\n      $(targetId).select2(\"close\");\n\n      for (var sidx = 0; sidx < thisMarkers.length; sidx++) {\n        dataset.marker.color[sidx] = thisMarkers[sidx].options.color;\n      }\n\n      var update = {\n        'marker': {\n          color: dataset.marker.color,\n          opacity: 1\n        }\n      };\n      Plotly.restyle($(divId)[0], update, [0]);\n    }); // method to see if the available sites have changed for this data source\n\n    var refreshOptionsForPeer = function (peerElement) {\n      // find out what peer options are available\n      peerOptions = [];\n\n      if (peerElement.options) {\n        for (var i = 0; i < peerElement.options.length; i++) {\n          peerOptions.push(peerElement.options[i].text);\n        }\n      }\n    }; // method to sync the map up with the sites selector\n\n\n    var refresh = function (peerElement) {\n      if (!peerElement) {\n        return;\n      }\n\n      var peerId = peerElement.id;\n      refreshOptionsForPeer(peerElement);\n      selectedValues = $('#' + peerId).val() ? $('#' + peerId).val() : []; // need to redo these in case the available sites have changed for this data source\n\n      thisMarkers = [];\n      dataset.siteName = [];\n      dataset.text = [];\n      dataset.lat = [];\n      dataset.lon = [];\n      dataset.marker.color = [];\n      var marker;\n\n      for (var sidx = 0; sidx < peerOptions.length; sidx++) {\n        marker = markers.find(function (obj) {\n          return obj.name === peerOptions[sidx];\n        });\n        thisMarkers[sidx] = marker;\n        dataset.siteName[sidx] = marker.name;\n        dataset.text[sidx] = marker.name;\n        dataset.lat[sidx] = marker.point[0];\n        dataset.lon[sidx] = marker.point[1];\n\n        if (selectedValues.indexOf(marker.name) === -1) {\n          dataset.marker.color[sidx] = marker.options.color;\n        } else {\n          dataset.marker.color[sidx] = marker.options.highLightColor;\n        }\n      }\n\n      $(divId)[0].data[0] = dataset;\n      Plotly.redraw($(divId)[0]);\n    }; // method to reset the map to defaults\n\n\n    var resetMap = function (item) {\n      initializeSelectorMap(item);\n      $(divId)[0].data[0] = dataset;\n      $(divId)[0].layout = layout;\n      Plotly.redraw($(divId)[0]);\n    }; // register an event listener so that the select.js can ask the map div to refresh after a selection\n\n\n    var elem = document.getElementById(divElement);\n    elem.addEventListener('refresh', function (e) {\n      refresh(e.detail.refElement);\n    }); // register an event listener so that the param_util.js can ask the map div to reset when someone clicks 'reset to defaults'\n\n    elem = document.getElementById(divElement);\n    elem.addEventListener('reset', function (e) {\n      resetMap(defaultAttrs);\n    });\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.date_range.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/template.date_range.js                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"dateRange\");\nTemplate[\"dateRange\"] = new Template(\"Template.dateRange\", (function() {\n  var view = this;\n  return \"\";\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"date_range.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/date_range.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsCollections, matsCurveUtils, matsParamUtils, matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  },\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  },\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  },\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nTemplate.dateRange.onRendered(function () {\n  //NOTE: Date fields are special in that they are qualified by plotType.\n  //TimeSeries and Scatter plots have a common date range\n  // but profile plots have a date range for each curve.\n  // The decision to hide or show a dataRange is made here in the dateRange template\n  // it seems that when the page is first rendered the checkbox might be yet defined (especially in safari).\n  // in that event we test for undefined and block the curve-dates-item anyway\n  if (document.getElementById('plot-type-' + matsTypes.PlotTypes.timeSeries) == undefined || document.getElementById('plot-type-' + matsTypes.PlotTypes.timeSeries).checked === true || document.getElementById('plot-type-' + matsTypes.PlotTypes.dailyModelCycle) == undefined || document.getElementById('plot-type-' + matsTypes.PlotTypes.dailyModelCycle).checked === true || document.getElementById('plot-type-' + matsTypes.PlotTypes.scatter2d) == undefined || document.getElementById('plot-type-' + matsTypes.PlotTypes.scatter2d).checked === true) {\n    if (document.getElementById('curve-dates-item')) {\n      document.getElementById('curve-dates-item').style.display = \"none\";\n    }\n\n    if (document.getElementById('dates-item')) {\n      document.getElementById('dates-item').style.display = \"block\";\n    }\n  } else {\n    if (document.getElementById('curve-dates-item')) {\n      document.getElementById('curve-dates-item').style.display = \"block\";\n    }\n\n    if (document.getElementById('dates-item')) {\n      document.getElementById('dates-item').style.display = \"none\";\n    }\n  }\n\n  var name = this.data.name;\n  var idref = name + \"-item\";\n  var elem = document.getElementById('element-' + name);\n  var superiorNames = this.data.superiorNames;\n  var defaultDateRange = matsParamUtils.getDefaultDateRange(name);\n  var startInit = defaultDateRange.startDate;\n  var stopInit = defaultDateRange.stopDate;\n  var dstr = defaultDateRange.dstr;\n  $(function () {\n    $('#' + idref).daterangepicker({\n      \"autoApply\": true,\n      \"parentEL\": $('#' + idref),\n      \"timePicker\": true,\n      \"timePicker24Hour\": true,\n      \"timePickerIncrement\": 1,\n      \"startDate\": startInit,\n      \"endDate\": stopInit,\n      \"showDropdowns\": true,\n      \"drops\": \"up\",\n      locale: {\n        format: 'MM/DD/YYYY HH:mm'\n      },\n      ranges: {\n        'Today': [moment().startOf('day'), moment().endOf('day')],\n        'Yesterday': [moment().subtract(1, 'days').startOf('day'), moment().subtract(1, 'days').endOf('day')],\n        'Last 7 Full Days': [moment().subtract(7, 'days').startOf('day'), moment().startOf('day')],\n        'Last 30 Full Days': [moment().subtract(30, 'days').startOf('day'), moment().startOf('day')],\n        'Last 60 Full Days': [moment().subtract(60, 'days').startOf('day'), moment().startOf('day')],\n        'Last 90 Full Days': [moment().subtract(90, 'days').startOf('day'), moment().startOf('day')],\n        'Last 180 Full Days': [moment().subtract(180, 'days').startOf('day'), moment().startOf('day')]\n      },\n      \"alwaysShowCalendars\": true\n    });\n    matsParamUtils.setValueTextForParamName(name, dstr);\n  });\n  $('#' + idref).on('apply.daterangepicker', function (ev, picker) {\n    if (picker.startDate.toString() == picker.endDate.toString()) {\n      setError(new Error(\"date_range error:  Your start and end dates coincide, you must select a range! This is \" + \"because METARs and other obs can come in at slightly different times, so selecting only one time might \" + \"leave you with very few (or no) valid obs. Instead, try using a small range. For example, if you're \" + \"targeting the top-of-the-hour METARs at 2:00 am, set your time range from 1:45 am to 2:00 am, because \" + \"METARs often come in early.\"));\n      return false;\n    }\n\n    var valStr = picker.startDate.format('MM/DD/YYYY H:mm') + ' - ' + picker.endDate.format('MM/DD/YYYY H:mm');\n    matsParamUtils.setValueTextForParamName(name, valStr);\n    elem.style.display = \"none\";\n    var curveItem = Session.get(\"editMode\") === undefined && Session.get(\"editMode\") === \"\" ? undefined : document.getElementById(\"curveItem-\" + Session.get(\"editMode\"));\n\n    if (curveItem) {\n      $('#save').trigger('click');\n    }\n  });\n  $('#' + idref).on('cancel.daterangepicker', function () {\n    elem.style.display = \"none\";\n  });\n\n  var refresh = function () {\n    try {\n      // get the current values from the element and check for invalid\n      var curVals = matsParamUtils.getValueForParamName(name).split(\" - \"); // it is a date object values are \"someFromDate - someToDate\"\n\n      var startDsr = moment(curVals[0], \"MM/DD/YYYY HH:mm\");\n      var endDsr = moment(curVals[1], \"MM/DD/YYYY HH:mm\");\n\n      if (!startDsr.isValid()) {\n        // error\n        setError(\"date_range refresh error: Your date range selector has an invalid start date-time: \" + curVals[0]);\n        return false;\n      }\n\n      if (!endDsr.isValid()) {\n        // error\n        setError(\"date_range refresh error: Your date range selector has an invalid end date-time:\" + curVals[1]);\n        return false;\n      }\n\n      if (startDsr.isAfter(endDsr)) {\n        // error\n        setError(\"date_range refresh error: Your date range selector has a start date/time that is later than the end date-time \" + startDsr.toString() + \" is not prior to \" + endDsr.toString());\n        return false;\n      } // get superior values and check for errors\n\n\n      var superiorVals = [];\n\n      if (superiorNames !== undefined) {\n        var superiorDimensionality = superiorNames !== null && superiorNames.length > 0 && Array.isArray(superiorNames[0]) ? superiorNames.length : 1;\n\n        for (var si = 0; si < superiorDimensionality; si++) {\n          var superiors = [];\n\n          if (superiorDimensionality === 1) {\n            superiors = superiorNames;\n          } else {\n            superiors = superiorNames[si];\n          }\n\n          var datesMap = undefined;\n\n          for (var si2 = 0; si2 < superiors.length; si2++) {\n            var thisSuperior = superiors[si2];\n            datesMap = datesMap === undefined ? matsCollections.CurveParams.findOne({\n              name: thisSuperior\n            }).dates : datesMap;\n            var sval = matsParamUtils.getInputElementForParamName(thisSuperior).options[matsParamUtils.getInputElementForParamName(thisSuperior).selectedIndex].text;\n\n            if (sval === matsTypes.InputTypes.unused || sval === null || datesMap === undefined || matsParamUtils.getInputElementForParamName(thisSuperior) === undefined || isNaN(matsParamUtils.getInputElementForParamName(thisSuperior).selectedIndex) || matsParamUtils.getInputElementForParamName(thisSuperior).selectedIndex === -1) {\n              // skip this superior - it isn't being used right now\n              continue;\n            }\n\n            datesMap = datesMap[sval];\n          }\n\n          var superiorMinimumDateStr = datesMap.minDate;\n          var superiorMinimumMoment = moment(superiorMinimumDateStr, \"MM/DD/YYYY HH:mm\");\n\n          if (superiorMinimumMoment.isValid()) {\n            superiorVals[si] = superiorVals[si] === undefined ? {} : superiorVals[si];\n            superiorVals[si].min = superiorMinimumMoment;\n          } else {\n            setError(\"date_range refresh error: The end date for the superiors: \" + superiors + \" is invalid: \" + superiorMinimumDateStr);\n            return false;\n          }\n\n          var superiorMaximumDateStr = datesMap.maxDate;\n          var superiorMaximumMoment = moment(superiorMaximumDateStr, \"MM/DD/YYYY HH:mm\");\n\n          if (superiorMaximumMoment.isValid()) {\n            superiorVals[si] = superiorVals[si] === undefined ? {} : superiorVals[si];\n            superiorVals[si].max = superiorMaximumMoment;\n          } else {\n            setError(\"date_range refresh error: The end date for the superiors: \" + superiors + \" is invalid: \" + superiorMaximumDateStr);\n            return false;\n          }\n\n          if (superiorVals[si].min.isAfter(superiorVals[si].max)) {\n            // error\n            setError(\"date_range refresh error: The date range for the superiors: \" + superiors + \" is invalid. It has a start date/time that is later than the end date/time - \" + superiorVals[si].min.toString() + \" is after \" + superiorVals[si].max.toString());\n            return false;\n          }\n        }\n      } // get data range from superiors\n\n\n      if (superiorVals.length === 0) {\n        // no superiors involved - just leave the DSR alone\n        return false;\n      } // these need to be the values for the superiors as they will be not as they are\n\n\n      var dataStart = superiorVals[0].min;\n      var dataEnd = superiorVals[0].max;\n\n      if (superiorVals.length > 1) {\n        for (si = 1; si < superiorVals.length; si++) {\n          var tStart = superiorVals[si].min;\n          var tEnd = superiorVals[si].max;\n\n          if (dataEnd.isBefore(tStart)) {\n            // NCD not coincindebtal data?\n            setInfo(\"You do not have any coincidental data with these two selections: The valid date ranges do not overlap - \" + dataStart.toString() + \" to \" + dataEnd.toString() + \" and \" + tStart.toString() + \" to \" + tEnd.toString());\n            return false;\n          } else if (tEnd.isBefore(dataStart)) {\n            // NCD not coincindebtal data?\n            setInfo(\"You do not have any coincidental data with these two selections: The valid date ranges do not overlap - \" + dataStart.toString() + \" to \" + dataEnd.toString() + \" and \" + tStart.toString() + \" to \" + tEnd.toString());\n            return false;\n          } else {\n            // overlapping data\n            if (tStart.isAfter(dataStart)) {\n              dataStart = tStart;\n            }\n\n            if (tEnd.isBefore(dataEnd)) {\n              dataEnd = tEnd;\n            }\n          }\n        }\n      } // now we have a normalized date range for the selected superiors.\n      // evaluate DRS\n\n\n      if (dataEnd.isBefore(startDsr) || dataStart.isAfter(endDsr)) {\n        // the current user setting and the valid range do not overlap so just set the DSR to the most recent 30 days of the valid range\n        endDsr = dataEnd; // set startDsr to the endDsr less 30 days or less the startDsr whichever is later\n\n        var endDsrLess30 = moment(endDsr).subtract(30, \"days\");\n\n        if (endDsrLess30.isAfter(dataStart)) {\n          startDsr = endDsrLess30;\n        } else {\n          startDsr = dataStart;\n        }\n      } else {\n        // the current user setting and the valid range overlap\n        if (startDsr.isBefore(dataStart)) {\n          startDsr = dataStart;\n        }\n\n        if (endDsr.isAfter(dataEnd)) {\n          endDsr = dataEnd;\n        }\n      } // now reset the DSR with the evaluated date range\n\n\n      var jqIdRef = \"#\" + idref;\n      $(jqIdRef).data('daterangepicker').setStartDate(startDsr);\n      $(jqIdRef).data('daterangepicker').setStartDate(endDsr);\n      var newDateStr = startDsr.format('MM/DD/YYYY HH:mm') + ' - ' + endDsr.format('MM/DD/YYYY HH:mm');\n      matsParamUtils.setValueTextForParamName(name, newDateStr);\n    } catch (error) {\n      console.log(\"Error in date_range.js.refresh : \" + error.message);\n    }\n  }; // register refresh event for superior to use to enforce a refresh of the options list\n\n\n  elem.addEventListener('refresh', function (e) {\n    refresh();\n  });\n  refresh(); // initial value based on what is in the superior\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.checkbox_group.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/template.checkbox_group.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"checkboxGroup\");\nTemplate[\"checkboxGroup\"] = new Template(\"Template.checkboxGroup\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"&nbsp;\"), HTML.LABEL({\n    class: \"checkbox-inline\",\n    for: function() {\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"...\"), \"name\")), \"-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"...\"), \"type\")), \"-\", Spacebars.mustache(view.lookup(\".\")) ];\n    }\n  }, Blaze.View(\"lookup:labelValue\", function() {\n    return Spacebars.mustache(view.lookup(\"labelValue\"), Spacebars.dot(view.lookup(\"...\"), \"optionsMap\"));\n  })), HTML.Raw(\"\\n    &nbsp;\"), HTML.INPUT(HTML.Attrs({\n    type: \"checkbox\",\n    class: \"data-input\",\n    name: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"...\"), \"name\"));\n    },\n    id: function() {\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"...\"), \"name\")), \"-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"...\"), \"type\")), \"-\", Spacebars.mustache(view.lookup(\".\")) ];\n    },\n    value: function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"checkedByDefault\"), Spacebars.dot(view.lookup(\"...\"), \"default\"));\n  })) ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"checkbox_group.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/checkbox_group.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nTemplate.checkboxGroup.helpers({\n  checkedByDefault: function (def) {\n    if (def == this) {\n      return \"checked\";\n    } else {\n      return \"\";\n    }\n  },\n  labelValue: function (optionsMap) {\n    return optionsMap[this];\n  }\n}); // Currently have no checkboxGroup params - this is undoubtedly broken - FIX ME\n\nTemplate.checkboxGroup.events({\n  'change, blur': function (event) {\n    try {\n      var text = event.currentTarget.value;\n      matsParamUtils.setValueTextForParamName(event.target.name, text);\n    } catch (error) {\n      matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.number_spinner.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/template.number_spinner.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"numberSpinner\");\nTemplate[\"numberSpinner\"] = new Template(\"Template.numberSpinner\", (function() {\n  var view = this;\n  return HTML.INPUT({\n    class: \"data-input input-sm\",\n    id: function() {\n      return [ Spacebars.mustache(view.lookup(\"name\")), \"-\", Spacebars.mustache(view.lookup(\"type\")) ];\n    },\n    type: \"number\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"defaultValue\"));\n    },\n    name: function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    },\n    min: function() {\n      return Spacebars.mustache(view.lookup(\"min\"));\n    },\n    max: function() {\n      return Spacebars.mustache(view.lookup(\"max\"));\n    },\n    step: function() {\n      return Spacebars.mustache(view.lookup(\"step\"));\n    }\n  });\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"number_spinner.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/number_spinner.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\n\nvar refresh = function (name) {\n  var paramData = matsCollections.CurveParams.findOne({\n    name: name\n  }, {\n    dependentNames: 1,\n    peerName: 1\n  });\n  var optionsMap = paramData.optionsMap;\n  var superiorNames = paramData.superiorNames;\n  var ref = paramData.name + '-' + paramData.type;\n  var refValueDisplay = \"controlButton-\" + paramData.name + \"-value\";\n  var dispElem = document.getElementById(refValueDisplay);\n  var elem = document.getElementById(ref);\n  var dispDefault = paramData.default;\n  var min = paramData.min;\n  var step = paramData.step === undefined ? \"any\" : paramData.step;\n  var max = paramData.max;\n\n  for (var si = 0; si < superiorNames.length; si++) {\n    var superiorElement = matsParamUtils.getInputElementForParamName(superiorNames[si]);\n    var selectedSuperiorValue = superiorElement.options[superiorElement.selectedIndex] && superiorElement.options[superiorElement.selectedIndex].text;\n    var options = optionsMap[selectedSuperiorValue];\n\n    if (options === undefined) {\n      continue;\n    }\n\n    min = Number(options.min) < Number(min) ? options.min : min;\n    max = Number(options.max) > Number(max) ? options.max : max;\n\n    if (step !== \"any\" && options.step !== \"any\") {\n      step = Number(options.step) < Number(step) ? options.step : step;\n    }\n\n    dispDefault = options.default !== undefined ? options.default : dispDefault;\n  }\n\n  elem.setAttribute(\"min\", min);\n  elem.setAttribute(\"max\", max);\n  elem.setAttribute(\"step\", step);\n  elem.value = dispDefault;\n};\n\nTemplate.numberSpinner.helpers({\n  defaultValue: function () {\n    return this.default;\n  },\n  min: function () {\n    //default\n    return this.min;\n  },\n  max: function () {\n    //default\n    return this.max;\n  },\n  step: function () {\n    //default\n    return this.step;\n  }\n});\nTemplate.numberSpinner.onRendered(function () {\n  // register an event listener so that the select.js can ask the map div to refresh after a selection\n  var ref = this.data.name + '-' + this.data.type;\n  var elem = document.getElementById(ref);\n\n  if (ref.search('axis') === 1) {\n    // this is a \"brother\" (hidden) scatterplot param. There is no need to refresh it or add event listeners etc.\n    return;\n  }\n\n  elem.addEventListener('refresh', function (e) {\n    refresh(this.name);\n  });\n});\nTemplate.numberSpinner.events({\n  'change, blur': function (event) {\n    try {\n      event.target.checkValidity();\n      var text = event.currentTarget.value;\n      matsParamUtils.setValueTextForParamName(event.target.name, text);\n    } catch (error) {\n      matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.radio_group_option.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/template.radio_group_option.js                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"radioGroup\");\nTemplate[\"radioGroup\"] = new Template(\"Template.radioGroup\", (function() {\n  var view = this;\n  return [ HTML.LABEL({\n    class: \"radio-inline\",\n    for: function() {\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"...\"), \"name\")), \"-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"...\"), \"type\")), \"-\", Spacebars.mustache(view.lookup(\".\")) ];\n    }\n  }, Blaze.View(\"lookup:labelValue\", function() {\n    return Spacebars.mustache(view.lookup(\"labelValue\"), Spacebars.dot(view.lookup(\"...\"), \"optionsMap\"));\n  })), \"\\n    \", HTML.INPUT(HTML.Attrs({\n    type: \"radio\",\n    class: \"data-input\",\n    name: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"...\"), \"name\"));\n    },\n    id: function() {\n      return [ Spacebars.mustache(Spacebars.dot(view.lookup(\"...\"), \"name\")), \"-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"...\"), \"type\")), \"-\", Spacebars.mustache(view.lookup(\".\")) ];\n    },\n    value: function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"checkedByDefault\"), Spacebars.dot(view.lookup(\"...\"), \"default\"));\n  })) ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"radio_group_option.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/radio_group_option.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nTemplate.radioGroup.helpers({\n  checkedByDefault: function (def) {\n    if (def == this) {\n      return \"checked\";\n    } else {\n      return \"\";\n    }\n  },\n  labelValue: function (optionsMap) {\n    return optionsMap[this];\n  }\n}); // Currently have no radioGroup params - this is undoubtedly broken - FIX ME\n\nTemplate.radioGroup.events({\n  'change, blur': function (event) {\n    try {\n      var text = event.currentTarget.value;\n      matsParamUtils.setValueTextForParamName(event.target.name, text);\n    } catch (error) {\n      matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.item.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/template.item.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"item\");\nTemplate[\"item\"] = new Template(\"Template.item\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: function() {\n      return [ Spacebars.mustache(view.lookup(\"name\")), \"-item\" ];\n    },\n    class: \"item btn-group\",\n    role: \"group\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"display\")) ];\n    }\n  }, \"\\n        \", HTML.BUTTON({\n    type: \"button\",\n    class: \"control-button btn btn-primary fa fa-hand-o-up\",\n    id: function() {\n      return Spacebars.mustache(view.lookup(\"controlButton\"));\n    },\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"controlButtonVisibility\")) ];\n    }\n  }, Blaze.View(\"lookup:cbname\", function() {\n    return Spacebars.mustache(view.lookup(\"cbname\"));\n  })), HTML.Raw('\\n        <span style=\"display:inline-block;\">&nbsp;</span>\\n        '), HTML.DIV({\n    id: function() {\n      return Spacebars.mustache(view.lookup(\"element\"));\n    },\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"elementHidden\")), \";position:absolute;z-index: 5;float:right;background-color: white;\" ];\n    }\n  }, \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isSelect\"));\n  }, function() {\n    return [ \"\\n                \", Blaze._TemplateWith(function() {\n      return Spacebars.call(view.lookup(\".\"));\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"select\"));\n    }), \"\\n            \" ];\n  }, function() {\n    return [ \" \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"isSpinner\"));\n    }, function() {\n      return [ \"\\n                \", Blaze._TemplateWith(function() {\n        return Spacebars.call(view.lookup(\".\"));\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"numberSpinner\"));\n      }), \"\\n            \" ];\n    }, function() {\n      return [ \" \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"isInput\"));\n      }, function() {\n        return [ \"\\n                \", Blaze._TemplateWith(function() {\n          return Spacebars.call(view.lookup(\".\"));\n        }, function() {\n          return Spacebars.include(view.lookupTemplate(\"textInput\"));\n        }), \"\\n            \" ];\n      }, function() {\n        return [ \" \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"isDateRange\"));\n        }, function() {\n          return [ \"\\n                \", Blaze._TemplateWith(function() {\n            return Spacebars.call(view.lookup(\".\"));\n          }, function() {\n            return Spacebars.include(view.lookupTemplate(\"dateRange\"));\n          }), \"\\n            \" ];\n        }, function() {\n          return [ \" \", Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"isCheckBoxGroup\"));\n          }, function() {\n            return [ \"\\n                \", HTML.DIV({\n              class: \"container\",\n              style: \"background-color:lightcyan;width:100%\"\n            }, \"\\n                    \", Blaze.View(\"lookup:name\", function() {\n              return Spacebars.mustache(view.lookup(\"name\"));\n            }), \":\\n                    \", Blaze.Each(function() {\n              return Spacebars.call(view.lookup(\"options\"));\n            }, function() {\n              return [ \"\\n                        \", Blaze._TemplateWith(function() {\n                return Spacebars.call(view.lookup(\".\"));\n              }, function() {\n                return Spacebars.include(view.lookupTemplate(\"checkboxGroup\"));\n              }), \"\\n                    \" ];\n            }), \"\\n                \"), \"\\n            \" ];\n          }, function() {\n            return [ \" \", Blaze.If(function() {\n              return Spacebars.call(view.lookup(\"isRadioGroup\"));\n            }, function() {\n              return [ \"\\n                \", HTML.DIV({\n                class: \"container btn-group\",\n                style: \"font-size:large;background-color:lightcyan;width:100%;display:inline-block;\"\n              }, \"\\n                    \", HTML.SPAN({\n                style: \"vertical-align: bottom;\"\n              }, Blaze.View(\"lookup:name\", function() {\n                return Spacebars.mustache(view.lookup(\"name\"));\n              }), \":\"), \"\\n                    \", Blaze.Each(function() {\n                return Spacebars.call(view.lookup(\"options\"));\n              }, function() {\n                return [ \"\\n                        \", Blaze._TemplateWith(function() {\n                  return Spacebars.call(view.lookup(\".\"));\n                }, function() {\n                  return Spacebars.include(view.lookupTemplate(\"radioGroup\"));\n                }), \"\\n                    \" ];\n              }), \"\\n                \"), \"\\n            \" ];\n            }, function() {\n              return [ \" \", Blaze.If(function() {\n                return Spacebars.call(view.lookup(\"isSelectMap\"));\n              }, function() {\n                return [ \"\\n                \", Blaze._TemplateWith(function() {\n                  return Spacebars.call(view.lookup(\".\"));\n                }, function() {\n                  return Spacebars.include(view.lookupTemplate(\"map\"));\n                }), \"\\n            \" ];\n              }), \" \" ];\n            }), \" \" ];\n          }), \" \" ];\n        }), \" \" ];\n      }), \" \" ];\n    }), \" \" ];\n  }), \"\\n        \"), \"\\n        \", HTML.BUTTON({\n    type: \"button\",\n    class: \"control-button btn btn-info fa fa-label\",\n    name: function() {\n      return [ Spacebars.mustache(view.lookup(\"controlButton\")), \"-value\" ];\n    },\n    id: function() {\n      return [ Spacebars.mustache(view.lookup(\"controlButton\")), \"-value\" ];\n    },\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"controlButtonVisibility\")) ];\n    }\n  }, \" \", Blaze.View(\"lookup:textValue\", function() {\n    return Spacebars.mustache(view.lookup(\"textValue\"));\n  })), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasHelp\"));\n  }, function() {\n    return [ \"\\n            \", HTML.BUTTON({\n      style: \"background-color:#bbffbb\",\n      type: \"button\",\n      class: \"btn btn-default  btn-xs  help fa fa-question\"\n    }), \"\\n        \" ];\n  }), HTML.Raw('\\n        <button type=\"button\" class=\"btn spacebutton\"></button>\\n    '));\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"item.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/common/item.js                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 1);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 2);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 3);\nTemplate.item.helpers({\n  cbname: function () {\n    if (this.controlButtonText !== undefined) {\n      return this.controlButtonText.toUpperCase();\n    }\n\n    return this.name.toUpperCase();\n  },\n  textValue: function () {\n    Session.get('lastUpdate');\n\n    if (this.name === \"label\") {\n      // label is handled specially\n      return;\n    }\n\n    if (matsParamUtils.getInputElementForParamName(this.name)) {\n      return this.default;\n    }\n\n    if (this.value) {\n      return this.value;\n    } else {\n      if (this.type === matsTypes.InputTypes.select && (this.default === -1 || this.default === undefined || this.default === matsTypes.InputTypes.unused)) {\n        return matsTypes.InputTypes.unused;\n      } else {\n        return this.default;\n      }\n    }\n  },\n  hasHelp: function () {\n    return this.help !== undefined;\n  },\n  isSelect: function () {\n    /* A selectOrderEnforced differs from a select\n        only in that the options - other than the default first option -\n        must be chosen in order. In other words if the user attempts to select\n        the second option prior to selecting the first option a validation error occurs.\n     */\n    return typeof this.type !== 'undefined' && (this.type == matsTypes.InputTypes.select || this.type == matsTypes.InputTypes.selectOrderEnforced);\n  },\n  isSelectMap: function () {\n    return typeof this.type !== 'undefined' && this.type == matsTypes.InputTypes.selectMap;\n  },\n  isInput: function () {\n    return typeof this.type !== 'undefined' && this.type == matsTypes.InputTypes.textInput;\n  },\n  isSpinner: function () {\n    return typeof this.type !== 'undefined' && this.type == matsTypes.InputTypes.numberSpinner;\n  },\n  isDateRange: function () {\n    return typeof this.type !== 'undefined' && this.type == matsTypes.InputTypes.dateRange;\n  },\n  isCheckBoxGroup: function () {\n    return typeof this.type !== 'undefined' && this.type == matsTypes.InputTypes.checkBoxGroup;\n  },\n  isRadioGroup: function () {\n    return typeof this.type !== 'undefined' && this.type == matsTypes.InputTypes.radioGroup;\n  },\n  controlButton: function () {\n    return matsTypes.InputTypes.controlButton + \"-\" + this.name;\n  },\n  resetButton: function () {\n    return matsTypes.InputTypes.resetButton + \"-\" + this.type;\n  },\n  element: function () {\n    return matsTypes.InputTypes.element + \"-\" + this.name;\n  },\n  display: function () {\n    if (this.hidden) {\n      return \"none;margin-top: 1.5em;\";\n    }\n\n    if (this.displayPriority !== undefined && this.displayPriority > Session.get('displayPriority')) {\n      return \"none;margin-top: 1.5em;\";\n    } else {\n      return \"block;margin-top: 1.5em;\";\n    }\n  },\n  controlButtonVisibility: function () {\n    if (this.controlButtonCovered) {\n      return \"block;\";\n    } else {\n      return \"none\";\n    }\n  },\n  elementHidden: function () {\n    if (this.controlButtonCovered) {\n      return \"none\";\n    } else {\n      return \"block\";\n    }\n  }\n});\nTemplate.item.events({\n  'click .control-button': function (event) {\n    Session.set(\"elementChanged\", Date.now());\n    var elem = document.getElementById(matsTypes.InputTypes.element + \"-\" + this.name);\n\n    if (elem === undefined) {\n      return false;\n    }\n\n    if (elem !== null && elem.style.display === \"block\") {\n      elem.style.display = \"none\";\n    } else {\n      matsParamUtils.collapseParams();\n\n      if (elem !== null) {\n        elem.style.display = \"block\";\n\n        if (this.type == matsTypes.InputTypes.select) {\n          var s = document.getElementById(this.name + '-' + this.type);\n          var ref = \"#\" + this.name + \"-\" + this.type;\n          $(ref).select2(\"open\"); // need to foricibly open the selector for the select2\n        }\n\n        if (this.type == matsTypes.InputTypes.selectMap) {\n          $(\"#mapModal\").modal('show');\n          window.dispatchEvent(new Event('resize'));\n        }\n      }\n    }\n  },\n  'click .data-input': function (event) {\n    Session.set(\"elementChanged\", Date.now());\n\n    if (this.displayPriority !== undefined) {\n      Session.set('displayPriority', this.displayPriority + 1);\n    }\n\n    var formats = Object.keys(matsTypes.PlotFormats);\n\n    if ($.inArray(this, formats) !== -1) {\n      Session.set('diffStatus', this);\n    }\n\n    if (this.multiple !== true && this.type !== matsTypes.InputTypes.numberSpinner && this.type !== matsTypes.InputTypes.textInput) {\n      // not too cool to collapse when trying to do a multi-select, a textInput, or a numberspinner\n      matsParamUtils.collapseParam(this.name);\n    }\n  },\n  'change .data-input': function (event) {\n    Session.set(\"elementChanged\", Date.now());\n    event.target.checkValidity();\n\n    if (this.type !== matsTypes.InputTypes.numberSpinner) {\n      event.target.checkValidity();\n      var elem = document.getElementById(matsTypes.InputTypes.element + \"-\" + this.name);\n\n      if (elem === undefined) {\n        return false;\n      }\n\n      if (elem !== null && elem.style.display === \"block\" && this.multiple !== true) {\n        elem.style.display = \"none\";\n      } else {\n        if (elem !== null) {\n          elem.style.display = \"block\";\n        }\n      }\n    }\n\n    var curveItem = Session.get(\"editMode\") === undefined && Session.get(\"editMode\") === \"\" ? undefined : document.getElementById(\"curveItem-\" + Session.get(\"editMode\"));\n\n    if (curveItem) {\n      $('#save').trigger('click');\n    }\n  },\n  'click .help': function () {\n    var helpref = Session.get(\"app\").helpref;\n    $(\"#matshelp\").load(helpref + \"/\" + this.help + \" #matshelp\");\n    $(\"#helpModal\").modal('show');\n  },\n  'invalid': function (event) {\n    if (this.type === matsTypes.InputTypes.numberSpinner) {\n      var param = matsCollections.CurveParams.findOne({\n        name: event.currentTarget.name\n      });\n\n      if (param === undefined) {\n        return;\n      }\n\n      setError(new Error('invalid value (' + event.currentTarget.value + ') for ' + event.currentTarget.name + \" it must be between \" + event.currentTarget.min + \" and \" + event.currentTarget.max + \" -- resetting to default value: \" + default_value));\n    } else {\n      var errMsg = Session.get('errorMessage');\n\n      if (errMsg === \"\") {\n        errMsg = 'invalid value (' + event.currentTarget.value + ') for ' + event.currentTarget.name;\n      }\n\n      setError(new Error(errMsg));\n    }\n\n    var default_value = matsCollections.CurveParams.findOne({\n      name: event.currentTarget.name\n    }).default;\n    event.currentTarget.value = default_value;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"curves\":{\"template.curve_item.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/curves/template.curve_item.js                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"curveItem\");\nTemplate[\"curveItem\"] = new Template(\"Template.curveItem\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    class: \"modal modal-dialog fade\",\n    id: \"modal-confirm-remove-curve\",\n    tabindex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"confirmRemoveCurve\",\n    \"aria-hidden\": \"true\",\n    style: \"background-color: cornflowerblue\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-content\"\n  }, HTML.Raw('<i class=\"fa fa-4x fa-question\" style=\"color:cornflowerblue\"></i>'), \"\\n                \", HTML.H2({\n    class: \"modal-title\",\n    style: \"text-align: center; color: red;\"\n  }, \"Remove \", Blaze.View(\"lookup:removeCurve\", function() {\n    return Spacebars.mustache(view.lookup(\"removeCurve\"));\n  }), \"?\"), \"\\n                \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                    \", HTML.H4({\n    style: \"color:cornflowerblue\"\n  }, \"Are you sure you want to remove curve \", Blaze.View(\"lookup:removeCurve\", function() {\n    return Spacebars.mustache(view.lookup(\"removeCurve\"));\n  }), \"?\"), \"\\n                \"), \"\\n                \", HTML.DIV({\n    class: \"modal-footer\"\n  }, \"\\n                    \", HTML.Raw('<button id=\"cancle-remove-curve\" class=\"cancle-remove-curve btn btn-success\" data-dismiss=\"modal\">Cancel the Remove</button>'), \"\\n                    \", HTML.BUTTON({\n    id: \"confirm-remove-curve\",\n    class: \"btn btn-danger confirm-remove-curve\",\n    \"data-dismiss\": \"modal\"\n  }, \"Remove curve \", Blaze.View(\"lookup:removeCurve\", function() {\n    return Spacebars.mustache(view.lookup(\"removeCurve\"));\n  })), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n    \"), \"\\n\\n    \", HTML.DIV({\n    id: function() {\n      return [ \"curveItem-\", Spacebars.mustache(view.lookup(\"label\")) ];\n    }\n  }, \"\\n        \", HTML.DIV({\n    class: \"pull-left clearfix col-lg-12\",\n    role: \"toolbar\"\n  }, \"\\n                \", HTML.DIV({\n    style: function() {\n      return [ \"padding:0.5%;margin-bottom:0.5%;display:inline-block;background-color: #f5f5f5;border:solid;border-width:thick;border-color: \", Spacebars.mustache(view.lookup(\"defaultColor\")), \";border-radius: 10px;\" ];\n    }\n  }, \"\\n                    \", HTML.SPAN(\"\\n                        \", HTML.SPAN({\n    class: \"rounded input-group displayItemLabelSpan label label-default \",\n    style: \"vertical-align: middle; align-content: center; font-size:large;margin:5px;\",\n    id: function() {\n      return [ \"LABEL-curve-\", Spacebars.mustache(view.lookup(\"curveNumber\")), \"-Item\" ];\n    }\n  }, Blaze.View(\"lookup:label\", function() {\n    return Spacebars.mustache(view.lookup(\"label\"));\n  })), \"\\n                        \", HTML.INPUT({\n    id: function() {\n      return [ Spacebars.mustache(view.lookup(\"label\")), \"-color-value\" ];\n    },\n    type: \"text\",\n    class: function() {\n      return [ \"input-sm form-control \", Spacebars.mustache(view.lookup(\"colorpick\")) ];\n    },\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"defaultColor\"));\n    },\n    style: \"display:inline-block;width:10em;\"\n  }), \"\\n                        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"DBcurve\"));\n  }, function() {\n    return [ \"\\n                            \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"editingThis\"));\n    }, function() {\n      return [ \"\\n                                \", HTML.DIV({\n        id: \"editMode\",\n        class: \"btn-toolbar-sm btn-group\",\n        role: \"group\"\n      }, \"\\n                                    \", HTML.BUTTON({\n        name: \"save\",\n        id: \"curve-list-save\",\n        class: \"save-changes btn-success btn fa fa-line-chart\"\n      }, HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), \"Save \", Blaze.View(\"lookup:editCurve\", function() {\n        return Spacebars.mustache(view.lookup(\"editCurve\"));\n      }), \" Changes\"), \"\\n                                    \", HTML.BUTTON({\n        name: \"cancel\",\n        id: \"curve-list-cancel\",\n        class: \"cancel btn-info btn fa icon-remove-sign\"\n      }, HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), \"Cancel\"), \"\\n                                \"), \"\\n                            \" ];\n    }, function() {\n      return [ \"\\n                                \", HTML.DIV({\n        id: \"nonEditMode\",\n        class: \"btn-toolbar-sm btn-group\",\n        role: \"group\"\n      }, \"\\n                                    \", HTML.BUTTON({\n        id: \"curve-list-remove\",\n        class: \"remove-curve btn-danger btn fa fa-times \"\n      }, \" \", HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), \"Remove  \", Blaze.View(\"lookup:label\", function() {\n        return Spacebars.mustache(view.lookup(\"label\"));\n      }), \" \"), \"\\n                                    \", HTML.BUTTON({\n        id: \"curve-list-edit\",\n        class: function() {\n          return [ \"edit-curve edit-curve-\", Spacebars.mustache(view.lookup(\"label\")), \" btn-info btn fa fa-pencil-square-o\" ];\n        },\n        style: function() {\n          return [ \"display:\", Spacebars.mustache(view.lookup(\"displayEdit\")) ];\n        }\n      }, HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), \"Edit  \", Blaze.View(\"lookup:label\", function() {\n        return Spacebars.mustache(view.lookup(\"label\"));\n      })), \"\\n                                    \", HTML.BUTTON({\n        id: \"curve-list-edit-xaxis\",\n        class: function() {\n          return [ \"edit-curve-xaxis edit-curve-xaxis-\", Spacebars.mustache(view.lookup(\"label\")), \" btn-info btn fa fa-pencil-square-o\" ];\n        },\n        style: function() {\n          return [ \"display:\", Spacebars.mustache(view.lookup(\"displayEditXaxis\")) ];\n        }\n      }, HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), \"Edit \", Blaze.View(\"lookup:label\", function() {\n        return Spacebars.mustache(view.lookup(\"label\"));\n      }), \"  X Axis\"), \"\\n                                    \", HTML.BUTTON({\n        id: \"curve-list-edit-yaxis\",\n        class: function() {\n          return [ \"edit-curve-yaxis edit-curve-yaxis-\", Spacebars.mustache(view.lookup(\"label\")), \"  btn btn-info fa fa-pencil-square-o\" ];\n        },\n        style: function() {\n          return [ \"display:\", Spacebars.mustache(view.lookup(\"displayEditYaxis\")) ];\n        }\n      }, HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), \"Edit \", Blaze.View(\"lookup:label\", function() {\n        return Spacebars.mustache(view.lookup(\"label\"));\n      }), \"  Y Axis\"), \"\\n                                \"), \"\\n                            \" ];\n    }), \"\\n                        \" ];\n  }), \"\\n                    \"), \"\\n                    \", Blaze._TemplateWith(function() {\n    return Spacebars.call(view.lookup(\".\"));\n  }, function() {\n    return Spacebars.include(view.lookupTemplate(\"curveParamItemGroup\"));\n  }), \"\\n                \"), \"\\n          \"), \"\\n    \") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"curve_item.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/curves/curve_item.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 2);\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 3);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 4);\nlabel;\nTemplate.curveItem.onRendered(function () {\n  // the value used for the colorpicker (l) MUST match the returned value in the colorpick helper\n  label = this.data.label;\n  $(function () {\n    var l = '.' + label + '-colorpick';\n    $(l).colorpicker({\n      format: \"rgb\",\n      align: \"left\"\n    });\n  });\n});\nTemplate.curveItem.helpers({\n  removeCurve: function () {\n    var confirmRemoveCurve = Session.get(\"confirmRemoveCurve\");\n    return confirmRemoveCurve ? confirmRemoveCurve.label : null;\n  },\n  displayEditXaxis: function () {\n    if (Session.get('plotType') === matsTypes.PlotTypes.scatter2d) {\n      return \"block\";\n    }\n\n    return \"none\";\n  },\n  displayEditYaxis: function () {\n    if (Session.get('plotType') === matsTypes.PlotTypes.scatter2d) {\n      return \"block\";\n    }\n\n    return \"none\";\n  },\n  displayEdit: function () {\n    if (Session.get('plotType') === matsTypes.PlotTypes.scatter2d) {\n      return \"none\";\n    }\n\n    return \"block\";\n  },\n  colorpick: function () {\n    var l = this.label + '-colorpick';\n    return l;\n  },\n  text: function () {\n    if (this.diffFrom === undefined) {\n      var plotType = Session.get('plotType');\n\n      if (plotType === undefined) {\n        var pfuncs = matsCollections.PlotGraphFunctions.find({}).fetch();\n\n        for (var i = 0; i < pfuncs.length; i++) {\n          if (pfuncs[i].checked === true) {\n            Session.set('plotType', pfuncs[i].plotType);\n          }\n        }\n\n        plotType = Session.get('plotType');\n      }\n\n      if (this.region) {\n        this.regionName = this.region.split(' ')[0];\n      }\n\n      return matsPlotUtils.getCurveText(plotType, this);\n    } else {\n      return this.label + \":  Difference\";\n    }\n  },\n  color: function () {\n    return this.color;\n  },\n  label: function () {\n    return this.label;\n  },\n  defaultColor: function () {\n    var curves = Session.get('Curves');\n    var label = this.label;\n\n    for (var i = 0; i < curves.length; i++) {\n      if (curves[i].label === label) {\n        return curves[i].color;\n      }\n    }\n  },\n  curveNumber: function () {\n    var label = this.label;\n    var curves = Session.get(\"Curves\");\n    var index = curves.findIndex(function (obj) {\n      return obj.label === label;\n    });\n    return index;\n  },\n  log: function () {\n    console.log(this);\n  },\n  DBcurve: function () {\n    return this.diffFrom === undefined;\n  },\n  editingThis: function () {\n    return Session.get('editMode') === this.label;\n  },\n  editCurve: function () {\n    return Session.get('editMode');\n  },\n  editTarget: function () {\n    return Session.get(\"eventTargetCurve\");\n  }\n});\n\nvar setParamsToAxis = function (newAxis, currentParams) {\n  // reset scatter plot apply stuff\n  matsCurveUtils.resetScatterApply(); // set param values to this curve\n  // reset the form parameters for the superiors first\n\n  var currentParamName;\n  var params = matsCollections.CurveParams.find({\n    \"dependentNames\": {\n      \"$exists\": true\n    }\n  }).fetch();\n\n  for (var p = 0; p < params.length; p++) {\n    var plotParam = params[p]; // do any date parameters - there are no axis date params in a scatter plot\n\n    if (plotParam.type === matsTypes.InputTypes.dateRange) {\n      if (currentParams[plotParam.name] === undefined) {\n        continue; // just like continue\n      }\n\n      var dateArr = currentParams[plotParam.name].split(' - ');\n      var from = dateArr[0];\n      var to = dateArr[1];\n      var idref = \"#\" + plotParam.name + \"-item\";\n      $(idref).data('daterangepicker').setStartDate(moment(from, 'MM-DD-YYYY HH:mm'));\n      $(idref).data('daterangepicker').setEndDate(moment(to, 'MM-DD-YYYY HH:mm'));\n      matsParamUtils.setValueTextForParamName(plotParam.name, currentParams[plotParam.name]);\n    } else {\n      currentParamName = currentParams[newAxis + \"-\" + plotParam.name] === undefined ? plotParam.name : newAxis + \"-\" + plotParam.name;\n      var val = currentParams[currentParamName] === null || currentParams[currentParamName] === undefined ? matsTypes.InputTypes.unused : currentParams[currentParamName];\n      matsParamUtils.setInputForParamName(plotParam.name, val);\n    }\n  } // now reset the form parameters for the dependents\n\n\n  params = matsCollections.CurveParams.find({\n    \"dependentNames\": {\n      \"$exists\": false\n    }\n  }).fetch();\n\n  for (var p = 0; p < params.length; p++) {\n    var plotParam = params[p]; // do any plot date parameters\n\n    currentParamName = currentParams[newAxis + \"-\" + plotParam.name] === undefined ? plotParam.name : newAxis + \"-\" + plotParam.name;\n\n    if (plotParam.type === matsTypes.InputTypes.dateRange) {\n      if (currentParams[currentParamName] === undefined) {\n        continue; // just like continue\n      }\n\n      var _dateArr = currentParams[currentParamName].split(' - ');\n\n      var _from = _dateArr[0];\n      var _to = _dateArr[1];\n\n      var _idref = \"#\" + plotParam.name + \"-item\";\n\n      $(_idref).data('daterangepicker').setStartDate(moment(_from, 'MM-DD-YYYY HH:mm'));\n      $(_idref).data('daterangepicker').setEndDate(moment(_to, 'MM-DD-YYYY HH:mm'));\n      matsParamUtils.setValueTextForParamName(plotParam.name, currentParams[currentParamName]);\n    } else {\n      var _val = currentParams[currentParamName] === null || currentParams[currentParamName] === undefined ? matsTypes.InputTypes.unused : currentParams[currentParamName];\n\n      matsParamUtils.setInputForParamName(plotParam.name, _val);\n    }\n  } // reset the scatter parameters\n\n\n  params = matsCollections.Scatter2dParams.find({}).fetch();\n\n  for (var p = 0; p < params.length; p++) {\n    var plotParam = params[p];\n    currentParamName = currentParams[newAxis + \"-\" + plotParam.name] === undefined ? plotParam.name : newAxis + \"-\" + plotParam.name;\n\n    var _val2 = currentParams[currentParamName] === null || currentParams[currentParamName] === undefined ? matsTypes.InputTypes.unused : currentParams[currentParamName];\n\n    matsParamUtils.setInputForParamName(plotParam.name, _val2);\n  }\n\n  matsParamUtils.collapseParams();\n  return false;\n};\n\nvar curveListEditNode; // used to pass the edit button to the modal continue\n\nTemplate.curveItem.events({\n  'click .save-changes': function () {\n    $(\".displayBtn\").css({\n      border: \"\"\n    }); // clear any borders from any display buttons\n\n    document.getElementById('save').click();\n    Session.set(\"paramWellColor\", \"#f5f5f5\");\n  },\n  'click .cancel': function () {\n    $(\".displayBtn\").css({\n      border: \"\"\n    }); // clear any borders from any display buttons\n\n    document.getElementById('cancel').click();\n    Session.set(\"paramWellColor\", \"#f5f5f5\");\n  },\n  'click .remove-curve': function (event) {\n    var removeCurve = Session.get(\"confirmRemoveCurve\");\n\n    if (removeCurve && removeCurve.confirm) {\n      var label = removeCurve.label;\n      var color = removeCurve.color;\n\n      var Curves = _.reject(Session.get('Curves'), function (item) {\n        return item.label === label;\n      });\n\n      Session.set('Curves', Curves);\n      matsCurveUtils.clearUsedLabel(label);\n      matsCurveUtils.clearUsedColor(color);\n      matsCurveUtils.checkDiffs();\n      Session.set(\"confirmRemoveCurve\", \"\");\n      Session.set(\"lastUpdate\", Date.now());\n\n      if (Curves.length === 0) {\n        location.reload(true);\n      }\n\n      return false;\n    } else {\n      Session.set(\"confirmRemoveCurve\", {\n        label: this.label,\n        color: this.color\n      });\n      $(\"#modal-confirm-remove-curve\").modal();\n    }\n  },\n  'click .confirm-remove-curve': function () {\n    var confirmCurve = Session.get(\"confirmRemoveCurve\");\n    Session.set(\"confirmRemoveCurve\", {\n      label: confirmCurve.label,\n      color: confirmCurve.color,\n      confirm: true\n    });\n    $(\"#curve-list-remove\").trigger('click');\n  },\n  'click .edit-curve-xaxis': function (event) {\n    Session.set('axis', 'xaxis');\n    Session.set('editMode', this.label);\n    var currentParams = jQuery.extend({}, this);\n    setParamsToAxis('xaxis', currentParams);\n  },\n  'click .edit-curve-yaxis': function (event) {\n    Session.set('axis', 'yaxis');\n    Session.set('editMode', this.label);\n    var currentParams = jQuery.extend({}, this);\n    setParamsToAxis('yaxis', currentParams);\n  },\n  'click .edit-curve': function (event) {\n    var srcEditButton = event.currentTarget;\n    var name = srcEditButton.name;\n    var editingCurve = Session.get('editMode');\n    curveListEditNode = $(event.currentTarget.parentNode.parentNode.parentNode.parentNode).find(\"#curve-list-edit\");\n    var eventTargetCurve = $(event.currentTarget.parentNode.parentNode.parentNode).find(\".displayItemLabelSpan\").text().trim();\n    Session.set(\"eventTargetCurve\", eventTargetCurve);\n    Session.set(\"intendedActiveDisplayButton\", name);\n    Session.set(\"activeDisplayButton\", name);\n\n    if (editingCurve !== undefined && editingCurve !== \"\" && editingCurve !== eventTargetCurve) {\n      // editing a different curve // have to do the modal for confirmation\n      $(\"#confirm-lost-edits\").modal();\n      return;\n    }\n\n    Session.set('editMode', this.label); // reset scatter plot apply stuff\n\n    matsCurveUtils.resetScatterApply(); // capture the current parameters from the curveItem\n\n    var currentParams = jQuery.extend({}, this); // set param values to this curve\n    // reset the form parameters for the superiors first\n\n    var params = matsCollections.CurveParams.find({\n      \"dependentNames\": {\n        \"$exists\": true\n      }\n    }).fetch();\n\n    for (var p = 0; p < params.length; p++) {\n      var plotParam = params[p]; // do any curve date parameters\n\n      if (plotParam.type === matsTypes.InputTypes.dateRange) {\n        if (currentParams[plotParam.name] === undefined) {\n          continue; // just like continue\n        }\n\n        var dateArr = currentParams[plotParam.name].split(' - ');\n        var from = dateArr[0];\n        var to = dateArr[1];\n        var idref = \"#\" + plotParam.name + \"-item\";\n        $(idref).data('daterangepicker').setStartDate(moment(from, 'MM-DD-YYYY HH:mm'));\n        $(idref).data('daterangepicker').setEndDate(moment(to, 'MM-DD-YYYY HH:mm'));\n        matsParamUtils.setValueTextForParamName(plotParam.name, currentParams[plotParam.name]);\n      } else {\n        var val = currentParams[plotParam.name] === null || currentParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : currentParams[plotParam.name];\n        matsParamUtils.setInputForParamName(plotParam.name, val); // refresh its dependents\n\n        matsSelectUtils.refreshDependents(null, plotParam);\n      }\n    } // now reset the form parameters for anything with hide/disable controls\n\n\n    params = matsCollections.CurveParams.find({\n      \"$and\": [{\n        \"dependentNames\": {\n          \"$exists\": false\n        }\n      }, {\n        \"$or\": [{\n          \"hideOtherFor\": {\n            \"$exists\": true\n          }\n        }, {\n          \"disableOtherFor\": {\n            \"$exists\": true\n          }\n        }]\n      }]\n    }).fetch();\n\n    for (var p = 0; p < params.length; p++) {\n      var plotParam = params[p]; // do any plot date parameters\n\n      if (plotParam.type === matsTypes.InputTypes.dateRange) {\n        if (currentParams[plotParam.name] === undefined) {\n          continue; // just like continue\n        }\n\n        var _dateArr2 = currentParams[plotParam.name].split(' - ');\n\n        var _from2 = _dateArr2[0];\n        var _to2 = _dateArr2[1];\n\n        var _idref2 = \"#\" + plotParam.name + \"-item\";\n\n        $(_idref2).data('daterangepicker').setStartDate(moment(_from2, 'MM-DD-YYYY HH:mm'));\n        $(_idref2).data('daterangepicker').setEndDate(moment(_to2, 'MM-DD-YYYY HH:mm'));\n        matsParamUtils.setValueTextForParamName(plotParam.name, currentParams[plotParam.name]);\n      } else {\n        var val = currentParams[plotParam.name] === null || currentParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : currentParams[plotParam.name];\n        matsParamUtils.setInputForParamName(plotParam.name, val);\n      }\n    } // now reset the form parameters for everything else\n\n\n    params = matsCollections.CurveParams.find({\n      \"$and\": [{\n        \"dependentNames\": {\n          \"$exists\": false\n        }\n      }, {\n        \"$and\": [{\n          \"hideOtherFor\": {\n            \"$exists\": false\n          }\n        }, {\n          \"disableOtherFor\": {\n            \"$exists\": false\n          }\n        }]\n      }]\n    }).fetch();\n\n    for (var p = 0; p < params.length; p++) {\n      var plotParam = params[p]; // do any plot date parameters\n\n      if (plotParam.type === matsTypes.InputTypes.dateRange) {\n        if (currentParams[plotParam.name] === undefined) {\n          continue; // just like continue\n        }\n\n        var _dateArr3 = currentParams[plotParam.name].split(' - ');\n\n        var _from3 = _dateArr3[0];\n        var _to3 = _dateArr3[1];\n\n        var _idref3 = \"#\" + plotParam.name + \"-item\";\n\n        $(_idref3).data('daterangepicker').setStartDate(moment(_from3, 'MM-DD-YYYY HH:mm'));\n        $(_idref3).data('daterangepicker').setEndDate(moment(_to3, 'MM-DD-YYYY HH:mm'));\n        matsParamUtils.setValueTextForParamName(plotParam.name, currentParams[plotParam.name]);\n      } else {\n        var val = currentParams[plotParam.name] === null || currentParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : currentParams[plotParam.name];\n        matsParamUtils.setInputForParamName(plotParam.name, val);\n      }\n    } // reset the scatter parameters\n\n\n    params = matsCollections.Scatter2dParams.find({}).fetch();\n\n    for (var p = 0; p < params.length; p++) {\n      var plotParam = params[p];\n\n      var _val3 = currentParams[plotParam.name] === null || currentParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : currentParams[plotParam.name];\n\n      matsParamUtils.setInputForParamName(plotParam.name, _val3);\n    }\n\n    matsParamUtils.collapseParams();\n    return false;\n  },\n  'hidePicker': function () {\n    var Curves = Session.get('Curves');\n    var label = this.label;\n\n    for (var i = 0; i < Curves.length; i++) {\n      if (label === Curves[i].label) {\n        Curves[i].color = document.getElementById(label + \"-color-value\").value;\n      }\n    }\n\n    Session.set('Curves', Curves);\n    return false;\n  },\n  'click .displayBtn': function (event) {\n    var srcDisplayButton = event.currentTarget;\n    var name = srcDisplayButton.name;\n    var inputElem = matsParamUtils.getInputElementForParamName(name);\n    var controlElem = matsParamUtils.getControlElementForParamName(name);\n    var editingCurve = Session.get('editMode');\n\n    if (name.startsWith('xaxis')) {\n      curveListEditNode = $(event.currentTarget.parentNode.parentNode.parentNode.parentNode).find(\"#curve-list-edit-xaxis\");\n    } else if (name.startsWith('yaxis')) {\n      curveListEditNode = $(event.currentTarget.parentNode.parentNode.parentNode.parentNode).find(\"#curve-list-edit-yaxis\");\n    } else {\n      if (matsPlotUtils.getPlotType() === matsTypes.PlotTypes.scatter2d) {\n        // for a scatter param that is not axis specific we still have to choos an axis - just choose x\n        curveListEditNode = $(event.currentTarget.parentNode.parentNode.parentNode.parentNode).find(\"#curve-list-edit-xaxis\");\n      } else {\n        curveListEditNode = $(event.currentTarget.parentNode.parentNode.parentNode.parentNode).find(\"#curve-list-edit\");\n      }\n    }\n\n    var eventTargetCurve = $(event.currentTarget.parentNode.parentNode.parentNode).find(\".displayItemLabelSpan\").text().trim();\n    Session.set(\"eventTargetCurve\", eventTargetCurve);\n    Session.set(\"intendedActiveDisplayButton\", name);\n    Session.set(\"activeDisplayButton\", name);\n\n    if (editingCurve !== undefined && editingCurve !== \"\" && editingCurve !== eventTargetCurve) {\n      // editing a different curve // have to do the modal for confirmation\n      $(\"#confirm-lost-edits\").modal();\n      return;\n    }\n\n    inputElem && inputElem.focus();\n    curveListEditNode.click();\n    controlElem && controlElem.click();\n    Session.set(\"elementChanged\", Date.now());\n  },\n  'click .continue-lose-edits': function () {\n    var intendedName = Session.get(\"intendedActiveDisplayButton\");\n    var activeDisplayButton = Session.set(\"activeDisplayButton\", intendedName);\n    document.getElementById('cancel').click();\n    Session.set(\"paramWellColor\", \"#f5f5f5\");\n    var controlElem = matsParamUtils.getControlElementForParamName(intendedName);\n    var inputElem = matsParamUtils.getInputElementForParamName(intendedName);\n    inputElem && inputElem.focus();\n    curveListEditNode.click();\n    controlElem && controlElem.click();\n    Session.set(\"elementChanged\", Date.now());\n  },\n  'click .cancle-lose-edits': function () {\n    // don't change the active button\n    var name = Session.get(\"activeDisplayButton\");\n    var controlElem = matsParamUtils.getControlElementForParamName(name);\n    var inputElem = matsParamUtils.getInputElementForParamName(name);\n    inputElem && inputElem.focus();\n    controlElem && controlElem.click();\n    Session.set(\"elementChanged\", Date.now());\n  },\n  'click .fa-paint-brush': function () {\n    $(\"#\" + this.label + \"-color-value\").trigger('click');\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.curve_param_item_group.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/curves/template.curve_param_item_group.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"curveParamItemGroup\");\nTemplate[\"curveParamItemGroup\"] = new Template(\"Template.curveParamItemGroup\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"curveParamItemGroup\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal modal-dialog fade\",\n    id: \"confirm-lost-edits\",\n    tabindex: \"-1\",\n    role: \"dialog\",\n    \"aria-labelledby\": \"confirmLostEdits\",\n    \"aria-hidden\": \"true\",\n    style: \"background-color: cornflowerblue\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"modal-content\"\n  }, HTML.Raw('<i class=\"fa fa-4x fa-question\" style=\"color:cornflowerblue\"></i>'), \"\\n                    \", HTML.Raw('<h2 class=\"modal-title\" style=\"text-align: center; color: red;\">Lose Edits?</h2>'), \"\\n                    \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                        \", HTML.H4({\n    style: \"color:cornflowerblue\"\n  }, \"\\n                            You were editing \", Blaze.View(\"lookup:editCurve\", function() {\n    return Spacebars.mustache(view.lookup(\"editCurve\"));\n  }), \" and clicked on controls for \", Blaze.View(\"lookup:editTarget\", function() {\n    return Spacebars.mustache(view.lookup(\"editTarget\"));\n  }), \"\\n                        \"), \"\\n                        \", HTML.H4({\n    style: \"color:red\"\n  }, \"\\n                            Any changes to \", Blaze.View(\"lookup:editCurve\", function() {\n    return Spacebars.mustache(view.lookup(\"editCurve\"));\n  }), \" will be lost if you continue.\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n    class: \"modal-footer\"\n  }, \"\\n                        \", HTML.BUTTON({\n    id: \"cancle-lose-edits\",\n    class: \"cancle-lose-edits btn btn-success\",\n    \"data-dismiss\": \"modal\"\n  }, \"Cancel and keep editing \", Blaze.View(\"lookup:editCurve\", function() {\n    return Spacebars.mustache(view.lookup(\"editCurve\"));\n  })), \"\\n                        \", HTML.BUTTON({\n    id: \"continue-lose-edits\",\n    class: \"btn btn-danger continue-lose-edits\",\n    \"data-dismiss\": \"modal\"\n  }, \"Edit \", Blaze.View(\"lookup:editTarget\", function() {\n    return Spacebars.mustache(view.lookup(\"editTarget\"));\n  }), \" and lose changes to \", Blaze.View(\"lookup:editCurve\", function() {\n    return Spacebars.mustache(view.lookup(\"editCurve\"));\n  })), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n\\n        \", Blaze.Each(function() {\n    return Spacebars.dataMustache(view.lookup(\"curveParamGroups\"), view.lookup(\".\"));\n  }, function() {\n    return [ \"\\n                \", HTML.DIV({\n      class: \"btn-toolbar btn-toolbar-xs\",\n      role: \"toolbar\"\n    }, \"\\n                    \", Blaze.Each(function() {\n      return Spacebars.dataMustache(view.lookup(\"curveParams\"), view.lookup(\".\"));\n    }, function() {\n      return [ \"\\n                        \", HTML.BUTTON({\n        type: \"button\",\n        class: \"displayBtn btn btn-sm btn-default\",\n        name: function() {\n          return Spacebars.mustache(view.lookup(\"name\"), view.lookup(\".\"));\n        },\n        id: function() {\n          return Spacebars.mustache(view.lookup(\"buttonId\"), view.lookup(\".\"));\n        },\n        style: function() {\n          return [ \"margin:3px 3px 3px 3px;border:\", Spacebars.mustache(view.lookup(\"border\"), view.lookup(\".\")), \";border-radius:10px;display:\", Spacebars.mustache(view.lookup(\"displayParam\"), view.lookup(\".\")) ];\n        }\n      }, \"\\n                            \", HTML.LABEL({\n        for: function() {\n          return Spacebars.mustache(view.lookup(\"buttonId\"), view.lookup(\".\"));\n        }\n      }, Blaze.View(\"lookup:label\", function() {\n        return Spacebars.mustache(view.lookup(\"label\"), view.lookup(\".\"));\n      }), \":\", HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      })), \"\\n                            \", HTML.SPAN({\n        class: \"displayItemSpan\",\n        id: function() {\n          return Spacebars.mustache(view.lookup(\"spanId\"), view.lookup(\".\"));\n        }\n      }, Blaze.View(\"lookup:value\", function() {\n        return Spacebars.mustache(view.lookup(\"value\"), view.lookup(\".\"));\n      })), \"\\n                        \"), \"\\n                    \" ];\n    }), \"\\n                \"), \"\\n            \" ];\n  }), \"\\n    \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"curve_param_item_group.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/curves/curve_param_item_group.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 2);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 3);\nvar allGroups = {};\nTemplate.curveParamItemGroup.helpers({\n  curveParamGroups: function (c) {\n    var label = c.label;\n    var curves = Session.get(\"Curves\");\n    var index = curves.findIndex(function (obj) {\n      return obj.label === label;\n    }); // create a set of groups each with an array of 6 params for display\n\n    var lastUpdate = Session.get('lastUpdate');\n    var plotType = matsPlotUtils.getPlotType();\n    var elmementValues = matsParamUtils.getElementValues().curveParams; // derive the sorted pValues, xpValues, and ypValues from the sorted params and the elementValues\n\n    var pValues = [];\n    var pattern;\n\n    switch (plotType) {\n      case matsTypes.PlotTypes.profile:\n        pattern = matsCollections.CurveTextPatterns.findOne({\n          plotType: matsTypes.PlotTypes.profile\n        });\n        break;\n\n      case matsTypes.PlotTypes.dieoff:\n        pattern = matsCollections.CurveTextPatterns.findOne({\n          plotType: matsTypes.PlotTypes.dieoff\n        });\n        break;\n\n      case matsTypes.PlotTypes.threshold:\n        pattern = matsCollections.CurveTextPatterns.findOne({\n          plotType: matsTypes.PlotTypes.threshold\n        });\n        break;\n\n      case matsTypes.PlotTypes.validtime:\n        pattern = matsCollections.CurveTextPatterns.findOne({\n          plotType: matsTypes.PlotTypes.validtime\n        });\n        break;\n\n      case matsTypes.PlotTypes.dailyModelCycle:\n        pattern = matsCollections.CurveTextPatterns.findOne({\n          plotType: matsTypes.PlotTypes.dailyModelCycle\n        });\n        break;\n\n      case matsTypes.PlotTypes.reliability:\n        pattern = matsCollections.CurveTextPatterns.findOne({\n          plotType: matsTypes.PlotTypes.reliability\n        });\n        break;\n\n      case matsTypes.PlotTypes.map:\n        pattern = matsCollections.CurveTextPatterns.findOne({\n          plotType: matsTypes.PlotTypes.map\n        });\n        break;\n\n      case matsTypes.PlotTypes.histogram:\n        pattern = matsCollections.CurveTextPatterns.findOne({\n          plotType: matsTypes.PlotTypes.histogram\n        });\n        break;\n\n      case matsTypes.PlotTypes.contour:\n        pattern = matsCollections.CurveTextPatterns.findOne({\n          plotType: matsTypes.PlotTypes.contour\n        });\n        break;\n\n      case matsTypes.PlotTypes.contourDiff:\n        pattern = matsCollections.CurveTextPatterns.findOne({\n          plotType: matsTypes.PlotTypes.contourDiff\n        });\n        break;\n\n      case matsTypes.PlotTypes.scatter2d:\n        pattern = matsCollections.CurveTextPatterns.findOne({\n          plotType: matsTypes.PlotTypes.scatter2d\n        });\n        break;\n\n      case matsTypes.PlotTypes.timeSeries:\n      default:\n        pattern = matsCollections.CurveTextPatterns.findOne({\n          plotType: matsTypes.PlotTypes.timeSeries\n        });\n        break;\n    }\n\n    var groupSize = pattern.groupSize;\n    var displayParams = pattern.displayParams;\n\n    for (var di = 0; di < displayParams.length; di++) {\n      pValues.push({\n        name: displayParams[di],\n        value: c[displayParams[di]],\n        color: c.color,\n        curve: c.label,\n        index: index\n      });\n    } // create array of parameter value display groups each of groupSize\n\n\n    var pGroups = [];\n    var groupParams = [];\n    var pvi = 0;\n\n    while (pvi < pValues.length) {\n      if (pValues[pvi] && (pValues[pvi].name == 'xaxis' || pValues[pvi].name == 'yaxis')) {\n        if (groupParams.length > 0) {\n          // finish the old group and make a new group for 'xaxis' or 'yaxis'\n          pGroups.push(groupParams);\n        }\n\n        groupParams = [];\n      }\n\n      pValues[pvi] && groupParams.push(pValues[pvi]);\n\n      if (groupParams.length >= groupSize) {\n        pGroups.push(groupParams);\n        groupParams = [];\n      }\n\n      pvi++;\n    } // check for a partial last group\n\n\n    if (groupParams.length > 0) {\n      pGroups.push(groupParams);\n    }\n\n    allGroups[c.label] = pGroups;\n    return pGroups;\n  },\n  curveNumber: function (elem) {\n    return elem.index;\n  },\n  curveParams: function (paramGroup) {\n    return paramGroup;\n  },\n  label: function (elem) {\n    if (matsPlotUtils.getPlotType() === matsTypes.PlotTypes.scatter2d) {\n      var pNameArr = elem.name.match(/([xy]axis-)(.*)/);\n\n      if (pNameArr === null) {\n        return elem.name.toUpperCase();\n      }\n\n      var prefix = pNameArr[1];\n      var pName = pNameArr[2];\n      var p = matsCollections.CurveParams.findOne({\n        name: pName\n      });\n\n      if (p.controlButtonText) {\n        return (prefix + p.controlButtonText).toUpperCase();\n      } else {\n        return elem.name.toUpperCase();\n      }\n    } else {\n      var _p = matsCollections.CurveParams.findOne({\n        name: elem.name\n      });\n\n      if (_p.controlButtonText) {\n        return _p.controlButtonText.toUpperCase();\n      } else {\n        return elem.name.toUpperCase();\n      }\n    } // should never get here\n\n\n    return elem.name.toUpperCase();\n  },\n  name: function (elem) {\n    return elem.name;\n  },\n  id: function (elem) {\n    return elem.name;\n  },\n  buttonId: function (elem) {\n    var name = new String(elem.name);\n    var upperName = name.toUpperCase();\n    var curveNumber = elem.index;\n    var spanId = upperName + \"-curve-\" + curveNumber + \"-Button\";\n    return spanId;\n  },\n  spanId: function (elem) {\n    var name = new String(elem.name);\n    var upperName = name.toUpperCase();\n    var curveNumber = elem.index;\n    var spanId = upperName + \"-curve-\" + curveNumber + \"-Item\";\n    return spanId;\n  },\n  value: function (elem) {\n    // have to get this from the session\n    var curve = Session.get(\"Curves\")[elem.index];\n\n    if (curve === undefined) {\n      return \"\";\n    }\n\n    var value = curve[elem.name];\n    var text = \"\";\n\n    if (Object.prototype.toString.call(value) === '[object Array]') {\n      if (value.length === 1) {\n        text = value[0];\n      } else if (value.length > 1) {\n        text = value[0] + \" .. \" + value[value.length - 1];\n      }\n    } else {\n      text = value;\n    }\n\n    return text;\n  },\n  defaultColor: function (elem) {\n    return elem.color;\n  },\n  border: function (elem) {\n    var elementChanged = Session.get(\"elementChanged\");\n    var name = elem.name; // for xaxis params\n\n    var curve = elem.curve;\n    var adb = name === Session.get(\"activeDisplayButton\");\n    var isEditMode = curve === Session.get(\"editMode\");\n    var inputElemIsVisible = matsParamUtils.isInputElementVisible(name);\n\n    if (adb && isEditMode && inputElemIsVisible) {\n      return \"solid\";\n    }\n\n    return \"\";\n  },\n  editCurve: function () {\n    return Session.get('editMode');\n  },\n  editTarget: function () {\n    return Session.get(\"eventTargetCurve\");\n  },\n  displayParam: function (elem) {\n    if (elem.name === \"label\") {\n      return \"none\";\n    } // it isn't good enough to just check the item control button. Need to evaluate the hideOtherFor functionality with\n    // respect to this particular curve item\n    // First - determine if my visibility is controlled by another\n\n\n    var visibilityControllingParam = matsParamUtils.visibilityControllerForParam(elem.name); // Second - Check the hide/show state based on the parameter hideOtherFor map in the parameter nad the state of this particular curve\n\n    if (visibilityControllingParam !== undefined) {\n      var curve = Session.get(\"Curves\")[elem.index];\n      var hideOtherFor = visibilityControllingParam.hideOtherFor[elem.name][0];\n\n      if (curve !== undefined && visibilityControllingParam !== undefined && curve[visibilityControllingParam.name] !== undefined && curve[visibilityControllingParam.name] === hideOtherFor) {\n        return \"none\";\n      }\n    }\n\n    return \"block\";\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.curve_list.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/curves/template.curve_list.js                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"curveList\");\nTemplate[\"curveList\"] = new Template(\"Template.curveList\", (function() {\n  var view = this;\n  return [ HTML.Raw('<div class=\"modal modal-dialog fade\" id=\"modal-confirm-remove-all\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"confirmRemoveAll\" aria-hidden=\"true\" style=\"background-color: cornflowerblue\">\\n        <div class=\"modal-dialog\">\\n            <div class=\"modal-content\"><i class=\"fa fa-4x fa-question\" style=\"color:cornflowerblue\"></i>\\n                <h2 class=\"modal-title\" style=\"text-align: center; color: red;\">Remove All Curves?</h2>\\n                <div class=\"modal-body\">\\n                    <h4 style=\"color:cornflowerblue\">\\n                        Are you sure you want to remove all the curves?\\n                    </h4>\\n                </div>\\n                <div class=\"modal-footer\">\\n                    <button id=\"cancle-remove-all\" class=\"cancle-remove-all btn btn-success\" data-dismiss=\"modal\">Cancel the Remove</button>\\n                    <button id=\"confirm-remove-all\" class=\"btn btn-danger confirm-remove-all\" data-dismiss=\"modal\">Remove all the curves</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    '), HTML.DIV({\n    id: \"curveList\",\n    class: \"well-sm clearfix col-lg-12\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"displayCurves\")), \";\" ];\n    }\n  }, \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"curves\"));\n  }, function() {\n    return [ \"\\n            \", Blaze._TemplateWith(function() {\n      return Spacebars.call(view.lookup(\".\"));\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"curveItem\"));\n    }), \"\\n        \" ];\n  }), \"\\n        \", HTML.DIV({\n    class: \"clearfix btn-toolbar  well well-sm pull-left\",\n    role: \"toolbar\"\n  }, \"\\n            \", HTML.Raw('<button id=\"remove-all\" class=\"remove-all btn btn-danger fa fa-times fa-sm\">&nbsp;&nbsp;Remove All </button>'), \"\\n            \", HTML.BUTTON({\n    type: \"button\",\n    name: \"save\",\n    id: \"save \",\n    class: \"save-settings btn btn-success fa fa-cloud-upload\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"displaySaveSettings\")), \";\" ];\n    }\n  }, HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), \"Save All Curve Settings\"), \"\\n            \", HTML.Raw('<button type=\"button\" class=\"btn spacebutton\" id=\"cl-spacer\"></button>'), \"\\n            \", HTML.BUTTON(HTML.Attrs({\n    type: \"button\",\n    name: \"plotUnMatched\",\n    id: \"plotUnmatched\",\n    class: \"plot-curves-unmatched btn btn-success  fa fa-area-chart\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"displayPlotUnMatched\")), \";\" ];\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"identicalContourDisabled\"));\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"mismatchContourDiffDisabled\"));\n  }), HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), \"Plot Unmatched\"), \"\\n            \", HTML.BUTTON(HTML.Attrs({\n    type: \"button\",\n    name: \"plotMatched\",\n    id: \"plotMatched\",\n    class: \"plot-curves-matched btn btn-success  fa fa-area-chart\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"displayPlotMatched\")), \";\" ];\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"averagesDisabled\"));\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"identicalContourDisabled\"));\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"mismatchContourDiffDisabled\"));\n  }), \"  Plot Matched\"), \"\\n            \", HTML.DIV({\n    id: \"disabledPlots\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"disabledPlotsHidden\")) ];\n    }\n  }, HTML.Raw('<span style=\"color: red;\">Matched plotting is disabled because curve averages are disparate</span>')), \"\\n            \", HTML.DIV({\n    id: \"identicalContour\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"identicalContourHidden\")) ];\n    }\n  }, HTML.Raw('<span style=\"color: red;\">Making contour plots with the same parameter on both axes is not recommended</span>')), \"\\n            \", HTML.DIV({\n    id: \"identicalContour\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"mismatchContourDiffHidden\")) ];\n    }\n  }, HTML.Raw('<span style=\"color: red;\">The x-axis-parameter and y-axis-parameter must be consistent across both curves</span>')), \"\\n        \"), \"\\n    \") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"curve_list.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/curves/curve_list.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsMethods;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsMethods: function (v) {\n    matsMethods = v;\n  }\n}, 2);\nvar matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 3);\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 4);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 5);\nTemplate.curveList.helpers({\n  displayPlotUnMatched: function () {\n    // scatter plots can't match\n    if (Session.get('plotType') === matsTypes.PlotTypes.scatter2d) {\n      return \"none\";\n    } // don't allow plotting when editing\n\n\n    var mode = Session.get(\"editMode\");\n\n    if (mode === undefined || mode === \"\") {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  displayPlotMatched: function () {\n    // don't allow plotting when editing\n    var mode = Session.get(\"editMode\");\n\n    if (mode === undefined || mode === \"\") {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  displaySaveSettings: function () {\n    // don't allow saving settings when editing\n    var mode = Session.get(\"editMode\");\n\n    if (mode === undefined || mode === \"\") {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  curves: function () {\n    return Session.get('Curves');\n  },\n  displayCurves: function () {\n    if (Session.get('Curves') === undefined || Session.get('Curves').length === 0) {\n      return \"none\";\n    } else {\n      return \"block\";\n    }\n  },\n  log: function () {\n    console.log(this);\n  },\n  averagesDisabled: function () {\n    var curves = Session.get('Curves');\n\n    if (curves === undefined || curves.length == 0 || Session.get('plotType') !== matsTypes.PlotTypes.timeSeries) {\n      return \"\";\n    }\n\n    var average = curves[0].average;\n\n    for (var i = 0; i < curves.length; i++) {\n      if (average != curves[i].average) {\n        return \"disabled\";\n      }\n    }\n  },\n  disabledPlotsHidden: function () {\n    var curves = Session.get('Curves');\n\n    if (curves === undefined || curves.length == 0 || Session.get('plotType') !== matsTypes.PlotTypes.timeSeries) {\n      return \"none\";\n    }\n\n    var average = curves[0].average;\n\n    for (var i = 0; i < curves.length; i++) {\n      if (average != curves[i].average) {\n        return \"block\";\n      }\n    }\n\n    return \"none\";\n  },\n  identicalContourDisabled: function () {\n    var curves = Session.get('Curves');\n\n    if (curves === undefined || curves.length == 0 || Session.get('plotType') !== matsTypes.PlotTypes.contour) {\n      return \"\";\n    }\n\n    var xAxis = curves[0]['x-axis-parameter'];\n    var yAxis = curves[0]['y-axis-parameter'];\n\n    if (xAxis === yAxis) {\n      return \"disabled\";\n    }\n\n    return \"\";\n  },\n  identicalContourHidden: function () {\n    var curves = Session.get('Curves');\n\n    if (curves === undefined || curves.length == 0 || Session.get('plotType') !== matsTypes.PlotTypes.contour) {\n      return \"none\";\n    }\n\n    var xAxis = curves[0]['x-axis-parameter'];\n    var yAxis = curves[0]['y-axis-parameter'];\n\n    if (xAxis === yAxis) {\n      return \"block\";\n    }\n\n    return \"none\";\n  },\n  mismatchContourDiffDisabled: function () {\n    var curves = Session.get('Curves');\n\n    if (curves === undefined || curves.length < 2 || Session.get('plotType') !== matsTypes.PlotTypes.contourDiff) {\n      return \"\";\n    }\n\n    var xAxis0 = curves[0]['x-axis-parameter'];\n    var yAxis0 = curves[0]['y-axis-parameter'];\n    var xAxis1 = curves[1]['x-axis-parameter'];\n    var yAxis1 = curves[1]['y-axis-parameter'];\n\n    if (xAxis0 !== xAxis1 || yAxis0 !== yAxis1) {\n      return \"disabled\";\n    }\n\n    return \"\";\n  },\n  mismatchContourDiffHidden: function () {\n    var curves = Session.get('Curves');\n\n    if (curves === undefined || curves.length < 2 || Session.get('plotType') !== matsTypes.PlotTypes.contourDiff) {\n      return \"none\";\n    }\n\n    var xAxis0 = curves[0]['x-axis-parameter'];\n    var yAxis0 = curves[0]['y-axis-parameter'];\n    var xAxis1 = curves[1]['x-axis-parameter'];\n    var yAxis1 = curves[1]['y-axis-parameter'];\n\n    if (xAxis0 !== xAxis1 || yAxis0 !== yAxis1) {\n      return \"block\";\n    }\n\n    return \"none\";\n  },\n  editMode: function () {\n    if (Session.get('editMode') === '') {\n      return '';\n    } else {\n      return \"Changing \" + Session.get('editMode');\n    }\n  },\n  matchedLabel: function () {\n    if (Session.get('matchName' === undefined)) {\n      if (setMatchName) {\n        setMatchName();\n      } else {\n        Session.set('matchName', 'plot matched');\n      }\n    } else {\n      Session.set('matchName', 'plot matched');\n    }\n\n    return Session.get('matchName');\n  }\n});\nTemplate.curveList.events({\n  'click .remove-all': function () {\n    if (Session.get(\"confirmRemoveAll\")) {\n      matsCurveUtils.clearAllUsed();\n      matsParamUtils.setAllParamsToDefault();\n      Session.set(\"editMode\", \"\");\n      Session.set(\"paramWellColor\", \"#f5f5f5\"); // default grey\n\n      Session.set(\"lastUpdate\", Date.now());\n      Session.set(\"confirmRemoveAll\", \"\");\n      return false;\n    } else {\n      if (Session.get(\"Curves\").length > 0) {\n        $(\"#modal-confirm-remove-all\").modal();\n      }\n    }\n  },\n  'click .confirm-remove-all': function () {\n    Session.set(\"confirmRemoveAll\", Date.now());\n    $(\"#remove-all\").trigger('click');\n  },\n  'click .plot-curves-unmatched': function (event) {\n    document.getElementById(\"spinner\").style.display = \"block\";\n    matsPlotUtils.disableActionButtons();\n    event.preventDefault(); // trigger the submit on the plot_list plot_list.js - click .submit-params\n\n    Session.set('plotParameter', matsTypes.PlotActions.unmatched);\n    document.getElementById(\"plot-curves\").click();\n    return false;\n  },\n  'click .plot-curves-matched': function (event) {\n    document.getElementById(\"spinner\").style.display = \"block\";\n    matsPlotUtils.disableActionButtons();\n    event.preventDefault(); // trigger the submit on the plot_list plot_list.js - click .submit-params\n\n    Session.set('plotParameter', matsTypes.PlotActions.matched);\n    document.getElementById(\"plot-curves\").click();\n    return false;\n  },\n  'click .save-settings': function (event) {\n    event.preventDefault();\n    document.getElementById(\"save-settings\").click();\n    return false;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"params\":{\"template.param_list.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/params/template.param_list.js                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"paramList\");\nTemplate[\"paramList\"] = new Template(\"Template.paramList\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"paramList\",\n    class: \"clearfix  pull-left\"\n  }, \"\\n        \", HTML.FORM({\n    id: \"paramForm\",\n    name: \"paramForm\",\n    novalidate: \"\"\n  }, \"\\n            \", HTML.DIV({\n    id: \"paramWell\",\n    class: \"clearfix well well-sm pull-left\",\n    style: function() {\n      return [ \"background-blend-mode: lighten; background-color: \", Spacebars.mustache(view.lookup(\"paramWellColor\")), \";\" ];\n    }\n  }, \"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"CurveParamGroups\"));\n  }, function() {\n    return [ \"\\n                \", Spacebars.include(view.lookupTemplate(\"curveParamGroup\")), \"\\n            \" ];\n  }), \"\\n            \"), \"\\n            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isEdit\"));\n  }, function() {\n    return [ \"\\n                \", HTML.DIV({\n      class: \"row clearfix well-sm col-lg-12 pull-left btn-toolbar btn-group btn-lg\",\n      role: \"toolbar\"\n    }, \"\\n                    \", HTML.BUTTON({\n      type: \"submit\",\n      name: \"save\",\n      id: \"save\",\n      class: \"btn btn-success fa fa-line-chart\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Save Changes\"), \"\\n                    \", HTML.BUTTON({\n      type: \"button\",\n      name: \"cancel\",\n      id: \"cancel\",\n      class: \"edit-cancel btn btn-info fa icon-remove-sign\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Cancel\"), \"\\n                \"), \"\\n            \" ];\n  }, function() {\n    return [ \"\\n                \", HTML.DIV({\n      class: \"row clearfix well-sm col-lg-12 pull-left btn-toolbar btn-group btn-lg\",\n      role: \"toolbar\"\n    }, \"\\n                    \", HTML.BUTTON({\n      type: \"submit\",\n      name: \"add\",\n      id: \"add\",\n      class: \"btn btn-success fa fa-line-chart\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Add Curve\"), \"\\n                    \", HTML.BUTTON({\n      type: \"button\",\n      name: \"restore\",\n      id: \"restore\",\n      class: \"restore-settings btn btn-success  fa fa-cloud-download\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Restore Settings\"), \"\\n                    \", HTML.BUTTON({\n      type: \"button\",\n      name: \"reset\",\n      id: \"reset\",\n      class: \"reset btn btn-success fa fa-refresh\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Reset to Defaults\"), \"\\n                \"), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n    \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"param_list.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/params/param_list.js                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 2);\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 3);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 4);\nvar matsMethods;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsMethods: function (v) {\n    matsMethods = v;\n  }\n}, 5);\n\nfunction shadeRGBColor(color, percent) {\n  var f = color.split(\",\"),\n      t = percent < 0 ? 0 : 255,\n      p = percent < 0 ? percent * -1 : percent,\n      R = parseInt(f[0].slice(4)),\n      G = parseInt(f[1]),\n      B = parseInt(f[2]);\n  return \"rgb(\" + (Math.round((t - R) * p) + R) + \",\" + (Math.round((t - G) * p) + G) + \",\" + (Math.round((t - B) * p) + B) + \")\";\n}\n\nTemplate.paramList.helpers({\n  CurveParamGroups: function () {\n    var lastUpdate = Session.get('lastUpdate');\n    var groupNums = [];\n    var params = matsCollections.CurveParams.find({}).fetch();\n\n    for (var i = 0; i < params.length; i++) {\n      groupNums.push(params[i].displayGroup);\n    }\n\n    var res = _.uniq(groupNums).sort();\n\n    return res;\n  },\n  isEdit: function () {\n    return Session.get('editMode') != '';\n  },\n  log: function () {\n    console.log(this);\n  },\n  paramWellColor: function () {\n    if (Session.get(\"paramWellColor\") === undefined) {\n      Session.set(\"paramWellColor\", \"rgb(245,245,245)\");\n    }\n\n    if (Session.get(\"editMode\") !== \"\") {\n      var curveBeingEdited = $.grep(Session.get(\"Curves\"), function (c) {\n        return c.label == Session.get(\"editMode\");\n      });\n\n      if (curveBeingEdited === undefined || curveBeingEdited[0] === undefined) {\n        Session.set(\"paramWellColor\", \"rgb(245,245,245)\");\n        return \"rgb(245,245,245)\";\n      }\n\n      var color = curveBeingEdited[0].color;\n      var lighterShadeOfColor = shadeRGBColor(color, 0.2);\n      Session.set(\"paramWellColor\", lighterShadeOfColor);\n    }\n\n    return Session.get(\"paramWellColor\");\n  }\n});\nTemplate.paramList.events({\n  'click .edit-cancel': function () {\n    Session.set('editMode', '');\n    Session.set(\"paramWellColor\", \"rgb(245,245,245)\");\n    var labelId = 'label-' + matsTypes.InputTypes.textInput;\n    var label = document.getElementById(labelId);\n    label.disabled = false; // reset parameters to match edited curve.....\n\n    matsParamUtils.setInputForParamName('label', matsCurveUtils.getNextCurveLabel());\n    matsParamUtils.collapseParams();\n  },\n  'click .reset': function (event, template) {\n    var plotType = $('input[name=plot-type]:checked').val();\n    event.preventDefault();\n    Session.set(\"paramWellColor\", \"rgb(245,245,245)\");\n    var paramView = document.getElementById('paramList');\n    var plotView = document.getElementById('plotList');\n    document.getElementById('plot-type-' + plotType).checked = true;\n    matsMethods.refreshMetaData.call({}, function (error, result) {\n      if (error !== undefined) {\n        setError(new Error(error.message));\n      }\n\n      matsParamUtils.setAllParamsToDefault();\n    });\n  },\n  'click .expand': function () {\n    matsParamUtils.expandParams();\n  },\n  'click .collapse': function () {\n    matsParamUtils.collapseParams();\n  },\n  // restore settings\n  'click .restore-settings': function (event) {\n    Session.set(\"paramWellColor\", \"rgb(245,245,245)\");\n    event.preventDefault();\n    document.getElementById(\"restore-settings\").click();\n    return false;\n  },\n  // add curve\n  // save changes\n\n  /*\n      Note: when adding a curve or saving changes after editing a curve there is a special\n      case for scatter plots. Each hidden axis parameter must get set with the value from the regular parameter.\n   */\n  'submit form': function (event, template) {\n    event.preventDefault();\n\n    if (!matsParamUtils.getValueForParamName('label')) {\n      setError('Label cannot be blank');\n      return;\n    }\n\n    var isScatter = matsPlotUtils.getPlotType() === matsTypes.PlotTypes.scatter2d;\n    var isMap = matsPlotUtils.getPlotType() === matsTypes.PlotTypes.map;\n    var isReliability = matsPlotUtils.getPlotType() === matsTypes.PlotTypes.reliability;\n    var isContour = matsPlotUtils.getPlotType() === matsTypes.PlotTypes.contour;\n    var isContourDiff = matsPlotUtils.getPlotType() === matsTypes.PlotTypes.contourDiff;\n    var curves = Session.get('Curves');\n    var p = {};\n    var elems = event.target.valueOf().elements;\n    var curveParams = matsCollections.CurveParams.find({}, {\n      fields: {\n        name: 1\n      }\n    }).fetch();\n\n    var curveNames = _.pluck(curveParams, \"name\"); // remove any hidden params or unused ones\n    // iterate backwards so that we can splice to remove\n\n\n    for (var cindex = curveNames.length - 1; cindex >= 0; cindex--) {\n      var cname = curveNames[cindex];\n      var ctlElem = document.getElementById(cname + \"-item\");\n      var isHidden = matsParamUtils.getInputElementForParamName(cname) && matsParamUtils.getInputElementForParamName(cname).style && matsParamUtils.getInputElementForParamName(cname).style.display === 'none' || ctlElem && ctlElem.style && ctlElem.style.display === 'none';\n      var isUnused = matsParamUtils.getInputElementForParamName(cname) !== undefined && matsParamUtils.getValueForParamName(cname) == matsTypes.InputTypes.unused;\n\n      if (isHidden || isUnused) {\n        //if (isHidden) {\n        curveNames.splice(cindex, 1);\n      }\n    }\n\n    var dateParams = matsCollections.CurveParams.find({\n      type: matsTypes.InputTypes.dateRange\n    }, {\n      fields: {\n        name: 1\n      }\n    }).fetch();\n\n    var dateParamNames = _.pluck(dateParams, \"name\"); // remove any hidden date params or unused ones\n    // iterate backwards so that we can splice to remove\n    // dates are a little different - there is no element named paramName-paramtype because of the way daterange widgets are attached\n    // Instead we have to look for a document element with an id element-paramName\n\n\n    for (var dindex = dateParamNames.length - 1; dindex >= 0; dindex--) {\n      var dElem = document.getElementById(dateParamNames[dindex] + \"-item\");\n\n      if (dElem && dElem.style && dElem.style.display === 'none') {\n        dateParamNames.splice(dindex, 1);\n      }\n    }\n\n    if (isScatter) {\n      var scatterCurveNames = [];\n\n      for (var i = 0; i < curveNames.length; i++) {\n        scatterCurveNames.push(curveNames[i]);\n        scatterCurveNames.push(\"xaxis-\" + curveNames[i]);\n        scatterCurveNames.push(\"yaxis-\" + curveNames[i]);\n      }\n\n      curveNames = scatterCurveNames;\n    }\n\n    var paramElems = _.filter(elems, function (elem) {\n      return _.contains(curveNames, elem.name);\n    }); // add in any date params (they aren't technically elements)\n\n\n    paramElems.push.apply(paramElems, dateParamNames); // add in the scatter2d parameters if it is a scatter plot.\n\n    if (isScatter) {\n      $(\":input[id^='Fit-Type']:input[name*='Fit-Type']\").each(function () {\n        paramElems.push(this);\n      });\n    }\n\n    var l = paramElems.length;\n\n    if (Session.get('editMode')) {\n      var changingCurveLabel = Session.get('editMode');\n      Session.set('editMode', '');\n      Session.set(\"paramWellColor\", \"rgb(245,245,245)\");\n      var labelId = 'label-' + matsTypes.InputTypes.textInput;\n      var label = document.getElementById(labelId);\n      label.disabled = false;\n\n      for (var i = 0; i < l; i++) {\n        if (paramElems[i].name == \"label\") {\n          p[paramElems[i].name] = changingCurveLabel; // don't change the label when editing a curve\n\n          continue;\n        }\n\n        if (paramElems[i] instanceof Element === false) {\n          // isn't really an element - must be a date field - these are only strings\n          p[paramElems[i]] = matsParamUtils.getValueForParamName(paramElems[i]);\n        } else if (paramElems[i].type === \"select-multiple\") {\n          // define a p value if it doesn't exist (necessary for adding truth values)\n          p[paramElems[i].name] = p[paramElems[i].name] === undefined ? \"\" : p[paramElems[i].name];\n          p[paramElems[i].name] = $(paramElems[i].selectedOptions).map(function () {\n            return this.value;\n          }).get();\n        } else {\n          if (paramElems[i].type === \"radio\") {\n            if (paramElems[i].checked) {\n              p[paramElems[i].name] = paramElems[i].value;\n            }\n          } else if (paramElems[i].type === \"checkbox\") {\n            if (paramElems[i].checked) {\n              p[paramElems[i].name].push(paramElems[i].value);\n            }\n          } else if (paramElems[i].type === \"button\") {\n            p[paramElems[i].id] = paramElems[i].value;\n          } else {\n            p[paramElems[i].name] = paramElems[i].value;\n          }\n        }\n      }\n\n      var index = -1;\n\n      for (var i = 0; i < curves.length; i++) {\n        if (curves[i].label === p.label) {\n          index = i;\n          p.color = curves[i].color;\n        }\n      }\n\n      if (index != -1) {\n        if (isScatter) {\n          // copy the params to the current axis paremeters\n          var axis = Session.get('axis');\n          var axisParams = Object.keys(p).filter(function (key) {\n            return key.startsWith(axis);\n          });\n\n          for (var api = 0; api < axisParams.length; api++) {\n            var ap = axisParams[api];\n            var pp = ap.replace(axis + '-', '');\n            p[ap] = p[pp];\n            curves[index][ap] = p[pp];\n          }\n\n          curves[index]['Fit-Type'] = p['Fit-Type'];\n        } else {\n          curves[index] = p;\n        }\n      }\n    } else {\n      if (isMap && curves.length >= 1) {\n        setError(new Error('ERROR: Map plot-type can only have one curve!'));\n        return false;\n      } else if (isContour && curves.length >= 1) {\n        setError(new Error('ERROR: Contour plot-type can only have one curve!'));\n        return false;\n      } else if (isContourDiff && curves.length >= 2) {\n        setError(new Error('ERROR: Contour Diff plot-type can only have two curves!'));\n        return false;\n      } else if (isReliability && curves.length >= 1) {\n        setError(new Error('ERROR: Reliability plot-type can only have one curve right now!'));\n        return false;\n      } else {\n        for (var i = 0; i < l; i++) {\n          if (paramElems[i] instanceof Element === false) {\n            // isn't really an element - must be a date field - these are only strings\n            p[paramElems[i]] = matsParamUtils.getValueForParamName(paramElems[i]);\n          } else if (paramElems[i].type === \"select-multiple\") {\n            p[paramElems[i].name] = $(paramElems[i].selectedOptions).map(function () {\n              return this.value;\n            }).get();\n          } else {\n            if (paramElems[i].type === \"radio\") {\n              if (paramElems[i].checked) {\n                p[paramElems[i].name] = paramElems[i].value;\n              }\n            } else if (paramElems[i].type === \"checkbox\") {\n              if (paramElems[i].checked) {\n                if (p[paramElems[i].name] === undefined) {\n                  p[paramElems[i].name] = [];\n                }\n\n                p[paramElems[i].name].push(paramElems[i].value);\n              }\n            } else if (paramElems[i].type === \"button\") {\n              p[paramElems[i].id] = paramElems[i].value;\n            } else {\n              if (isScatter) {\n                p[paramElems[i].name] = paramElems[i].value;\n              } else {\n                p[paramElems[i].name] = matsParamUtils.getValueForParamName(paramElems[i].name);\n              }\n            }\n          }\n\n          if (paramElems[i].name && paramElems[i].name === 'label') {\n            if (_.indexOf(matsCurveUtils.getUsedLabels(), paramElems[i].value) != -1) {\n              setError(new Error('labels need to be unique - change ' + paramElems[i].value + \" to something else\"));\n              return false;\n            }\n          }\n        }\n      }\n\n      p.color = matsCurveUtils.getNextCurveColor();\n      curves.push(p);\n      var elem = document.getElementById(\"curveList\");\n      elem.style.display = \"block\";\n    }\n\n    Session.set('Curves', curves);\n    matsCurveUtils.setUsedColorsAndLabels(); // we have used a color and label so we have to set the next one\n\n    matsCurveUtils.checkDiffs();\n    matsParamUtils.collapseParams();\n    matsParamUtils.setInputForParamName('label', matsCurveUtils.getNextCurveLabel());\n    return false;\n  }\n});\nTemplate.paramList.onRendered(function () {\n  Session.set('displayPriority', 1);\n  Session.set('editMode', ''); //hide sites and sitesMap selectors for anything that isn't a map plot or wfip2\n\n  var elem;\n  var ptype = matsPlotUtils.getPlotType();\n  elem = document.getElementById('sites-item');\n  var sitesParamHidden;\n\n  if (elem && elem.style) {\n    sitesParamHidden = matsCollections.CurveParams.findOne({\n      name: 'sites'\n    }).hiddenForPlotTypes;\n\n    if (sitesParamHidden) {\n      if (sitesParamHidden.indexOf(ptype) === -1) {\n        elem.style.display = \"block\";\n      } else {\n        elem.style.display = \"none\";\n      }\n    }\n  }\n\n  elem = document.getElementById('sitesMap-item');\n\n  if (elem && elem.style) {\n    sitesParamHidden = matsCollections.CurveParams.findOne({\n      name: 'sitesMap'\n    }).hiddenForPlotTypes;\n\n    if (sitesParamHidden) {\n      if (sitesParamHidden.indexOf(ptype) === -1) {\n        elem.style.display = \"block\";\n      } else {\n        elem.style.display = \"none\";\n      }\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.curve_param_group.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/params/template.curve_param_group.js                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"curveParamGroup\");\nTemplate[\"curveParamGroup\"] = new Template(\"Template.curveParamGroup\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"curveParamGroup\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"displayGroup\")) ];\n    }\n  }, \"\\n        \", HTML.DIV({\n    class: \"btn-toolbar btn-group-inline\",\n    role: \"toolbar\"\n  }, \"\\n            \", Blaze.Each(function() {\n    return Spacebars.dataMustache(view.lookup(\"CurveParams\"), view.lookup(\".\"));\n  }, function() {\n    return [ \"\\n                \", Spacebars.include(view.lookupTemplate(\"item\")), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n    \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"curve_param_group.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/params/curve_param_group.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 2);\n\nvar duplicate = function (param) {\n  var obj = {};\n  var keys = Object.keys(param);\n\n  for (var i = 0; i < keys.length; i++) {\n    if (keys[i] !== \"_id\") {\n      obj[keys[i]] = param[keys[i]];\n    }\n  }\n\n  return obj;\n};\n\nfilterParams = function (params) {\n  /*\n  If the plottype is a 2d scatter plot we need to basically create a new set of parameters (except for the label)\n  for each axis. The double set of parameters will get sent back to the backend.\n   */\n  if (matsPlotUtils.getPlotType() === matsTypes.PlotTypes.scatter2d) {\n    var xparams = [];\n    var yparams = [];\n    var newParams = [];\n\n    for (var i = 0; i < params.length; i++) {\n      var xp = duplicate(params[i]);\n      xp.name = \"xaxis-\" + params[i].name;\n      xp.hidden = true;\n      xparams.push(xp);\n      var yp = duplicate(params[i]);\n      yp.name = \"yaxis-\" + params[i].name;\n      yp.hidden = true;\n      yparams.push(yp);\n    }\n\n    newParams = newParams.concat(params);\n    newParams = newParams.concat(xparams);\n    newParams = newParams.concat(yparams);\n    return newParams;\n  } else {\n    return params;\n  }\n};\n\nTemplate.curveParamGroup.helpers({\n  CurveParams: function (num) {\n    var restoreSettingsTime = Session.get(\"restoreSettingsTime\"); // used to force re-render\n\n    var lastUpdate = Session.get('lastUpdate');\n    var params = matsCollections.CurveParams.find({\n      displayGroup: num\n    }, {\n      sort: [\"displayOrder\", \"asc\"]\n    }).fetch();\n    params = filterParams(params);\n    return params;\n  },\n  displayGroup: function () {\n    return \"block\";\n  },\n  log: function () {\n    console.log(this);\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.scatter_axis.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/params/template.scatter_axis.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"scatter2d\");\nTemplate[\"scatter2d\"] = new Template(\"Template.scatter2d\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: \"well well-sm pull-left\",\n    id: function() {\n      return Spacebars.mustache(view.lookup(\"plotType\"));\n    },\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"displayScatter2d\")), \";\" ];\n    }\n  }, \"\\n        \", HTML.DIV({\n    style: \"font-size:large; font-weight: bold;\"\n  }, Blaze.View(\"lookup:title\", function() {\n    return Spacebars.mustache(view.lookup(\"title\"));\n  })), \"\\n        \", HTML.DIV(\"\\n            \", HTML.SPAN({\n    class: \"btn-success\",\n    style: function() {\n      return [ \"font-size: large;display:\", Spacebars.mustache(view.lookup(\"creating\")), \";\" ];\n    }\n  }, Blaze.View(\"lookup:modeText\", function() {\n    return Spacebars.mustache(view.lookup(\"modeText\"));\n  })), \"\\n            \", HTML.SPAN({\n    class: \"btn-info\",\n    style: function() {\n      return [ \"font-size: large;display:\", Spacebars.mustache(view.lookup(\"editing\")), \";\" ];\n    }\n  }, Blaze.View(\"lookup:modeText\", function() {\n    return Spacebars.mustache(view.lookup(\"modeText\"));\n  })), \"\\n        \"), \"\\n        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"scatter2dParams\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      class: \"well well-sm pull-left\"\n    }, \"\\n                \", Blaze.If(function() {\n      return Spacebars.dataMustache(view.lookup(\"isNumberSpinner\"), view.lookup(\".\"));\n    }, function() {\n      return [ \"\\n                    \", HTML.INPUT({\n        class: \"data-input input-sm\",\n        id: function() {\n          return Spacebars.mustache(view.lookup(\"idParam\"));\n        },\n        type: \"number\",\n        value: function() {\n          return Spacebars.mustache(view.lookup(\"default\"));\n        },\n        name: function() {\n          return Spacebars.mustache(view.lookup(\"name\"), view.lookup(\".\"));\n        },\n        min: function() {\n          return Spacebars.mustache(view.lookup(\"min\"));\n        },\n        max: function() {\n          return Spacebars.mustache(view.lookup(\"max\"));\n        },\n        step: function() {\n          return Spacebars.mustache(view.lookup(\"step\"));\n        }\n      }), \"\\n                    \", HTML.LABEL({\n        for: function() {\n          return Spacebars.mustache(view.lookup(\"idParam\"));\n        }\n      }, Blaze.View(\"lookup:labelParam\", function() {\n        return Spacebars.mustache(view.lookup(\"labelParam\"));\n      })), \"\\n                \" ];\n    }, function() {\n      return [ \"\\n                    \", HTML.H4(Blaze.View(\"lookup:name\", function() {\n        return Spacebars.mustache(view.lookup(\"name\"), view.lookup(\".\"));\n      }), \"\\n                    \", HTML.SMALL(Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"hasHelp\"));\n      }, function() {\n        return [ \"\\n                        \", HTML.BUTTON({\n          style: \"background-color:#bbffbb\",\n          type: \"button\",\n          class: \"btn btn-default  btn-xs  help fa fa-question\"\n        }), \"\\n                    \" ];\n      }), \" \"), \"\\n                    \"), \"\\n                    \", Blaze.Each(function() {\n        return Spacebars.call(view.lookup(\"scatter2dOptions\"));\n      }, function() {\n        return [ \"\\n                        \", HTML.INPUT(HTML.Attrs({\n          class: function() {\n            return [ \"data-input \", Spacebars.mustache(view.lookup(\"className\"), view.lookup(\"..\")) ];\n          },\n          type: function() {\n            return Spacebars.mustache(view.lookup(\"type\"), view.lookup(\"..\"));\n          },\n          name: function() {\n            return Spacebars.mustache(view.lookup(\"name\"), view.lookup(\"..\"));\n          },\n          id: function() {\n            return Spacebars.mustache(view.lookup(\"idOption\"), view.lookup(\"..\"));\n          },\n          value: function() {\n            return Spacebars.mustache(view.lookup(\".\"));\n          }\n        }, function() {\n          return Spacebars.attrMustache(view.lookup(\"isDefault\"), view.lookup(\"..\"));\n        })), \"\\n                        \", HTML.LABEL({\n          for: function() {\n            return Spacebars.mustache(view.lookup(\"idParam\"), view.lookup(\"..\"));\n          }\n        }, Blaze.View(\"lookup:label\", function() {\n          return Spacebars.mustache(view.lookup(\"label\"), view.lookup(\".\"), view.lookup(\"..\"));\n        })), \"\\n                    \" ];\n      }), \"\\n                \" ];\n    }), \"\\n                \", HTML.DIV(\"\\n                    \", HTML.DIV({\n      class: \"btn-toolbar btn-group btn-xs\",\n      role: \"toolbar\"\n    }, \"\\n                        \", HTML.BUTTON({\n      type: \"submit\",\n      name: \"apply-params-to-X-axis\",\n      id: \"apply-params-to-xaxis\",\n      class: \"btn btn-success apply-params-to-xaxis fa fa-line-chart\"\n    }, HTML.SPAN({\n      style: \"font-size: large\"\n    }, \"Apply params to X axis\")), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n      class: \"btn-toolbar btn-group btn-xs\",\n      role: \"toolbar\"\n    }, \"\\n                        \", HTML.BUTTON(HTML.Attrs({\n      type: \"submit\",\n      name: \"apply-params-to-Y-axis\",\n      id: \"apply-params-to-yaxis\",\n      class: \"btn btn-success apply-params-to-yaxis fa fa-line-chart\"\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"yApplyEnabled\"));\n    }), HTML.SPAN({\n      style: \"font-size: large\"\n    }, \"Apply params to Y axis\")), \"\\n                    \"), \"\\n                    \", HTML.DIV(\"\\n                        \", HTML.SPAN({\n      id: \"xaxis-curve\",\n      style: function() {\n        return [ \"color:\", Spacebars.mustache(view.lookup(\"xaxisCurveColor\")) ];\n      },\n      class: function() {\n        return [ \"fa \", Spacebars.mustache(view.lookup(\"curveIcon\")) ];\n      }\n    }, Blaze.View(\"lookup:xaxisCurveText\", function() {\n      return Spacebars.mustache(view.lookup(\"xaxisCurveText\"));\n    })), \"\\n                        \", HTML.SPAN(HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    })), \"\\n                        \", HTML.SPAN({\n      id: \"yaxis-curve\",\n      style: function() {\n        return [ \"color:\", Spacebars.mustache(view.lookup(\"yaxisCurveColor\")) ];\n      },\n      class: function() {\n        return [ \"fa \", Spacebars.mustache(view.lookup(\"curveIcon\")) ];\n      }\n    }, Blaze.View(\"lookup:yaxisCurveText\", function() {\n      return Spacebars.mustache(view.lookup(\"yaxisCurveText\"));\n    })), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \" ];\n  }), \"\\n    \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"scatter_axis.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/params/scatter_axis.js                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 2);\n\nvar isEditing = function () {\n  var mode = Session.get('editMode');\n  return !(mode === \"\" || mode === undefined || mode === null);\n};\n\nvar setAxisText = function (axis) {\n  Session.set(axis + 'CurveText', axis + \" \" + matsPlotUtils.getAxisText(matsPlotUtils.getPlotType()));\n  Session.set(axis + 'CurveColor', 'green');\n  Session.set('axisCurveIcon', \"fa-check\");\n};\n\nTemplate.scatter2d.helpers({\n  modeText: function () {\n    return isEditing() ? \"Editing the curve \" + Session.get('editMode') + \" (\" + Session.get('axis') + \")\" : \"Creating a new curve\";\n  },\n  creating: function () {\n    if (isEditing()) {\n      return \"none\";\n    } else {\n      return \"block\";\n    }\n  },\n  editing: function () {\n    if (isEditing()) {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  xaxisCurveText: function () {\n    if (isEditing()) {\n      setAxisText(\"xaxis\");\n    }\n\n    var t = Session.get('xaxisCurveText');\n\n    if (t) {\n      return t;\n    } else {\n      Session.set('xaxisCurveText', 'XAXIS NOT YET APPLIED');\n      return 'XAXIS NOT YET APPLIED';\n    }\n  },\n  yaxisCurveText: function () {\n    if (isEditing()) {\n      setAxisText(\"yaxis\");\n    }\n\n    var t = Session.get('yaxisCurveText');\n\n    if (t || isEditing()) {\n      return t;\n    } else {\n      Session.set('yaxisCurveText', 'YAXIS NOT YET APPLIED');\n      return 'YAXIS NOT YET APPLIED';\n    }\n  },\n  yApplyEnabled: function () {\n    var c = Session.get('xaxisCurveColor');\n\n    if (c === 'red' && !isEditing()) {\n      return \"disabled\";\n    } else {\n      return \"\";\n    }\n  },\n  xaxisCurveColor: function () {\n    var t = Session.get('xaxisCurveColor');\n\n    if (t) {\n      return t;\n    } else {\n      Session.set('xaxisCurveColor', 'red');\n      return 'red';\n    }\n  },\n  yaxisCurveColor: function () {\n    var t = Session.get('yaxisCurveColor');\n\n    if (t) {\n      return t;\n    } else {\n      Session.set('yaxisCurveColor', 'red');\n      return 'red';\n    }\n  },\n  curveIcon: function () {\n    var t = Session.get('axisCurveIcon');\n\n    if (t) {\n      return t;\n    } else {\n      Session.set('axisCurveIcon', 'fa-asterisk');\n      return 'fa-asterisk';\n    }\n  },\n  title: function () {\n    return \"Scatter Plot parameters\";\n  },\n  scatter2dParams: function () {\n    var params = matsCollections.Scatter2dParams.find({}).fetch();\n    return params;\n  },\n  scatter2dOptions: function () {\n    var options = this.options;\n    return options;\n  },\n  name: function (param) {\n    //console.log(\"name: \" + param.name);\n    var name = param.name.replace(/ /g, '-');\n    return name;\n  },\n  className: function (param) {\n    //console.log(\"name: \" + param.name);\n    var cname = param.name.replace(/ /g, '-') + \"-\" + param.type;\n    return cname;\n  },\n  type: function (param) {\n    switch (param.type) {\n      case matsTypes.InputTypes.checkBoxGroup:\n        return \"checkbox\";\n        break;\n\n      case matsTypes.InputTypes.radioGroup:\n        return \"radio\";\n        break;\n\n      case matsTypes.InputTypes.select:\n        return \"select\";\n        break;\n\n      case matsTypes.InputTypes.numberSpinner:\n        return \"number\";\n        break;\n\n      default:\n        return \"text\";\n    }\n  },\n  \"default\": function () {\n    return this.default;\n  },\n  idOption: function (param) {\n    var id = param.name + \"-\" + param.type + \"-\" + this;\n    id = id.replace(/ /g, '-');\n    return id;\n  },\n  idParam: function () {\n    var id = this.name + \"-\" + this.type;\n    id = id.replace(/ /g, '-');\n    return id;\n  },\n  plotType: function () {\n    return matsTypes.PlotTypes.scatter2d;\n  },\n  isDefault: function (param) {\n    var def = param.default;\n\n    if (def == this) {\n      return \"checked\";\n    } else {\n      return \"\";\n    }\n  },\n  displayScatter2d: function () {\n    if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  label: function (param, parent) {\n    if (parent.name === \"Fit Type\") {\n      return parent.optionsMap[this];\n    } else {\n      return this;\n    }\n  },\n  labelParam: function () {\n    return this.name;\n  },\n  log: function () {\n    console.log(this);\n  },\n  axis: function (param) {\n    var axis = Session.get('axis');\n\n    if (axis === undefined) {\n      if (param) {\n        return param.default;\n      } else {\n        return 'xaxis';\n      }\n    }\n\n    return axis;\n  },\n  isNumberSpinner: function (param) {\n    return param.type === matsTypes.InputTypes.numberSpinner;\n  },\n  hasHelp: function () {\n    return this.help !== undefined;\n  }\n});\n\nvar apply = function (axis) {\n  var elems = document.getElementsByClassName(\"data-input\");\n  var curveParams = matsCollections.CurveParams.find({}, {\n    fields: {\n      name: 1\n    }\n  }).fetch();\n\n  var curveNames = _.pluck(curveParams, \"name\");\n\n  var param_elems = _.filter(elems, function (elem) {\n    return _.contains(curveNames, elem.name);\n  });\n\n  var l = param_elems.length;\n\n  for (var i = 0; i < l; i++) {\n    var pelem = param_elems[i]; //console.log(\"pelem.type is \" + pelem.type);\n\n    var elem_id = pelem.id;\n    var target_id = axis + \"-\" + elem_id;\n    var telem = document.getElementById(target_id); // Notice that these types are not matsTypes these are javascript types\n\n    if (pelem.type === \"select-multiple\") {\n      var $options = $(\"#\" + elem_id + \" > option\").clone();\n      $(\"#\" + target_id).empty().append($options);\n      var selectedOptions = $(pelem.selectedOptions).map(function () {\n        return this.value;\n      }).get();\n\n      for (var x = 0; x < telem.options.length; x++) {\n        if ($.inArray(telem.options[x].value, selectedOptions) !== -1) {\n          telem.options[x].selected = true;\n        } else {\n          telem.options[x].selected = false;\n        }\n      }\n    } else if (pelem.type === \"select-one\") {\n      var $options = $(\"#\" + elem_id + \" > option\").clone();\n      $(\"#\" + target_id).empty().append($options);\n      telem.selectedIndex = pelem.selectedIndex;\n    } else if (pelem.type === \"radio\") {\n      // NOT SURE THIS IS RIGHT\n      //console.log(pelem.name + \" is \" + $('input[name=\"' + pelem.name + '\"]:checked').val());\n      $('input[name=\"' + telem.name + '\"]:checked');\n    } else if (pelem.type === \"button\") {\n      telem.value = pelem.value;\n    } else {\n      telem.value = pelem.value;\n    }\n  }\n\n  setAxisText(axis);\n};\n\nTemplate.scatter2d.events({\n  'click .apply-params-to-xaxis': function (event) {\n    apply('xaxis');\n  },\n  'click .apply-params-to-yaxis': function (event) {\n    apply('yaxis');\n  },\n  'change .axis-selector-radioGroup': function (event) {\n    var newAxis = event.currentTarget.value;\n    Session.set('axis', newAxis);\n    var elems = document.getElementsByClassName(\"data-input\");\n\n    var axis_elems = _.filter(elems, function (elem) {\n      return elem.name.indexOf(newAxis) > -1;\n    });\n\n    var l = axis_elems.length;\n\n    for (var i = 0; i < l; i++) {\n      var aelem = axis_elems[i];\n      var aelem_id = aelem.id; // remove the axis part at the front\n\n      var target_id = aelem_id.substring(newAxis.length + 1, aelem_id.length);\n      var telem = document.getElementById(target_id);\n\n      if (aelem.type === \"select-multiple\") {\n        $(telem).val($(aelem.selectedOptions).map(function () {\n          return this.value;\n        }).get());\n      } else if (aelem.type === \"radio\") {\n        // NOT SURE THIS IS RIGHT\n        //console.log(pelem.name + \" is \" + $('input[name=\"' + pelem.name + '\"]:checked').val());\n        $('input[name=\"' + telem.name + '\"]:checked');\n      } else if (aelem.type === \"button\") {\n        telem.value = aelem.value;\n      } else {\n        telem.value = aelem.value;\n      }\n\n      telem.dispatchEvent(new CustomEvent(\"axisRefresh\"));\n    }\n  },\n  'click .axishelp': function () {\n    $(\"#matshelp\").load(\"/help/scatter-help.html #matshelp\");\n    $(\"#helpModal\").modal('show');\n  },\n  'click .help': function () {\n    $(\"#matshelp\").load(\"/help/\" + this.help + \" #matshelp\");\n    $(\"#helpModal\").modal('show');\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"plotType\":{\"template.plot_type.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/plotType/template.plot_type.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"plotType\");\nTemplate[\"plotType\"] = new Template(\"Template.plotType\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"plotType\",\n    class: \"container pull-left\",\n    style: \"display:block;\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"row text-center\"\n  }, \"\\n            \", HTML.SPAN({\n    style: \"align-content:center;font-size:xx-large; font-weight: bold;\"\n  }, Blaze.View(\"lookup:title\", function() {\n    return Spacebars.mustache(view.lookup(\"title\"));\n  })), \"\\n        \"), \"\\n        \", HTML.DIV({\n    class: \"row well well-sm pull-left\"\n  }, \"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"plotTypes\"));\n  }, function() {\n    return [ \"\\n                \", HTML.INPUT(HTML.Attrs({\n      class: function() {\n        return [ \"plot-type-\", Spacebars.mustache(view.lookup(\"plotType\")) ];\n      },\n      type: \"radio\",\n      name: \"plot-type\",\n      id: function() {\n        return [ \"plot-type-\", Spacebars.mustache(view.lookup(\"plotType\")) ];\n      },\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"plotType\"));\n      },\n      checked: function() {\n        return Spacebars.mustache(view.lookup(\"checked\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"display\"));\n    })), \" \", HTML.LABEL({\n      style: \"font-size: large;\"\n    }, Blaze.View(\"lookup:plotType\", function() {\n      return Spacebars.mustache(view.lookup(\"plotType\"));\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    })), \"\\n            \" ];\n  }), \"\\n        \"), \"\\n    \");\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"plot_type.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/plotType/plot_type.js                                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 2);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 3);\nTemplate.plotType.helpers({\n  plotTypes: function () {\n    return matsCollections.PlotGraphFunctions.find({}).fetch();\n  },\n  title: function () {\n    if (matsCollections.Settings === undefined || matsCollections.Settings.findOne({}, {\n      fields: {\n        Title: 1\n      }\n    }) === undefined) {\n      return \"\";\n    } else {\n      return matsCollections.Settings.findOne({}, {\n        fields: {\n          Title: 1\n        }\n      }).Title;\n    }\n  },\n  display: function () {\n    // don't display the choice if there is only one choice\n    if (matsCollections.PlotGraphFunctions.find({}).fetch().length === 1) {\n      return \"hidden\";\n    } else {\n      return \"\";\n    }\n  }\n});\nTemplate.plotType.events({\n  'click .plot-type-TimeSeries': function (event) {\n    if (Session.get(\"confirmPlotChange\")) {\n      // change has been confirmed\n      // see if the previous plot type also used the 'dates' parameter\n      var oldDatesExist = matsParamUtils.isParamVisible('dates');\n      matsCurveUtils.showTimeseriesFace();\n      var curves = Session.get('Curves'); // if a 'dates' parameter was already in use, we want to keep that value.\n      // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n      if (!oldDatesExist) {\n        var curveDate = $('#controlButton-curve-dates-value').text();\n        matsParamUtils.setValueTextForParamName('dates', curveDate);\n      }\n\n      if (curves.length > 0) {\n        // initialize parameters that may not have been used yet\n        for (var ci = 0; ci < curves.length; ci++) {\n          // the average may not have been carried over from other curve types so let it default\n          if (!curves[ci]['average'] && matsCollections.CurveParams.findOne({\n            name: 'average'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'average'\n          }).default) {\n            curves[ci]['average'] = matsCollections.CurveParams.findOne({\n              name: 'average'\n            }).default;\n          }\n\n          if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }).default) {\n            curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({\n              name: 'valid-time'\n            }).default;\n          }\n\n          if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }).default) {\n            curves[ci]['threshold'] = matsCollections.CurveParams.findOne({\n              name: 'threshold'\n            }).default;\n          }\n\n          if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }).default) {\n            curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({\n              name: 'forecast-length'\n            }).default;\n          }\n\n          if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }).default) {\n            curves[ci]['region'] = matsCollections.CurveParams.findOne({\n              name: 'region'\n            }).default;\n          }\n\n          if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }).default) {\n            curves[ci]['statistic'] = matsCollections.CurveParams.findOne({\n              name: 'statistic'\n            }).default;\n          }\n\n          if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }).default) {\n            curves[ci]['truth'] = matsCollections.CurveParams.findOne({\n              name: 'truth'\n            }).default;\n          }\n        }\n\n        Session.set('Curves', curves);\n      }\n\n      Session.set(\"confirmPlotChange\", \"\");\n      Session.set('plotChangeType', \"\");\n    } else {\n      // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n      if (Session.get(\"Curves\").length > 0) {\n        Session.set('plotChangeType', matsTypes.PlotTypes.timeSeries);\n        $(\"#modal-change-plot-type\").modal();\n      } else {\n        // no curves - just set the timeseries face\n        // see if the previous plot type also used the 'dates' parameter\n        var _oldDatesExist = matsParamUtils.isParamVisible('dates');\n\n        matsCurveUtils.showTimeseriesFace(); // if a 'dates' parameter was already in use, we want to keep that value.\n        // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n        if (!_oldDatesExist) {\n          var _curveDate = $('#controlButton-curve-dates-value').text();\n\n          matsParamUtils.setValueTextForParamName('dates', _curveDate);\n        }\n      }\n    }\n  },\n  'click .plot-type-Profile': function (event) {\n    if (Session.get(\"confirmPlotChange\")) {\n      // change has been confirmed\n      // see if the previous plot type also used the 'curve-dates' parameter\n      var oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n      matsCurveUtils.showProfileFace();\n      var curves = Session.get('Curves'); // if a 'curve-dates' parameter was already in use, we want to keep that value.\n      // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n\n      var tsDate = $('#controlButton-dates-value').text();\n\n      if (!oldCurveDatesExist) {\n        matsParamUtils.setValueTextForParamName('curve-dates', tsDate);\n      }\n\n      if (curves.length > 0) {\n        // initialize parameters that may not have been used yet\n        for (var ci = 0; ci < curves.length; ci++) {\n          if (tsDate !== undefined && tsDate !== \"\" && !oldCurveDatesExist) {\n            curves[ci]['curve-dates'] = tsDate;\n          }\n\n          if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }).default) {\n            curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({\n              name: 'valid-time'\n            }).default;\n          }\n\n          if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }).default) {\n            curves[ci]['threshold'] = matsCollections.CurveParams.findOne({\n              name: 'threshold'\n            }).default;\n          }\n\n          if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }).default) {\n            curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({\n              name: 'forecast-length'\n            }).default;\n          }\n\n          if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }).default) {\n            curves[ci]['region'] = matsCollections.CurveParams.findOne({\n              name: 'region'\n            }).default;\n          }\n\n          if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }).default) {\n            curves[ci]['statistic'] = matsCollections.CurveParams.findOne({\n              name: 'statistic'\n            }).default;\n          }\n\n          if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }).default) {\n            curves[ci]['truth'] = matsCollections.CurveParams.findOne({\n              name: 'truth'\n            }).default;\n          }\n        }\n\n        Session.set('Curves', curves);\n      }\n\n      Session.set(\"confirmPlotChange\", \"\");\n      Session.set('plotChangeType', \"\");\n    } else {\n      // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n      if (Session.get(\"Curves\").length > 0) {\n        Session.set('plotChangeType', matsTypes.PlotTypes.profile);\n        $(\"#modal-change-plot-type\").modal();\n      } else {\n        // no curves - just set the profile face\n        // see if the previous plot type also used the 'curve-dates' parameter\n        var _oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n\n        matsCurveUtils.showProfileFace(); // if a 'curve-dates' parameter was already in use, we want to keep that value.\n        // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n\n        if (!_oldCurveDatesExist) {\n          var _tsDate = $('#controlButton-dates-value').text();\n\n          matsParamUtils.setValueTextForParamName('curve-dates', _tsDate);\n        }\n      }\n    }\n  },\n  'click .plot-type-DieOff': function (event) {\n    if (Session.get(\"confirmPlotChange\")) {\n      // change has been confirmed\n      // see if the previous plot type also used the 'curve-dates' parameter\n      var oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n      matsCurveUtils.showDieOffFace();\n      var curves = Session.get('Curves'); // if a 'curve-dates' parameter was already in use, we want to keep that value.\n      // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n\n      var tsDate = $('#controlButton-dates-value').text();\n\n      if (!oldCurveDatesExist) {\n        matsParamUtils.setValueTextForParamName('curve-dates', tsDate);\n      }\n\n      if (curves.length > 0) {\n        // initialize parameters that may not have been used yet\n        for (var ci = 0; ci < curves.length; ci++) {\n          if (tsDate !== undefined && tsDate !== \"\" && !oldCurveDatesExist) {\n            curves[ci]['curve-dates'] = tsDate;\n          }\n\n          if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }).default) {\n            curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({\n              name: 'valid-time'\n            }).default;\n          }\n\n          if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }).default) {\n            curves[ci]['threshold'] = matsCollections.CurveParams.findOne({\n              name: 'threshold'\n            }).default;\n          }\n\n          if (!curves[ci]['dieoff-type'] && matsCollections.CurveParams.findOne({\n            name: 'dieoff-type'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'dieoff-type'\n          }).default) {\n            curves[ci]['dieoff-type'] = matsCollections.CurveParams.findOne({\n              name: 'dieoff-type'\n            }).default;\n          }\n\n          if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }).default) {\n            curves[ci]['region'] = matsCollections.CurveParams.findOne({\n              name: 'region'\n            }).default;\n          }\n\n          if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }).default) {\n            curves[ci]['statistic'] = matsCollections.CurveParams.findOne({\n              name: 'statistic'\n            }).default;\n          }\n\n          if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }).default) {\n            curves[ci]['truth'] = matsCollections.CurveParams.findOne({\n              name: 'truth'\n            }).default;\n          }\n        }\n\n        Session.set('Curves', curves);\n      }\n\n      Session.set(\"confirmPlotChange\", \"\");\n      Session.set('plotChangeType', \"\");\n    } else {\n      // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n      if (Session.get(\"Curves\").length > 0) {\n        Session.set('plotChangeType', matsTypes.PlotTypes.dieoff);\n        $(\"#modal-change-plot-type\").modal();\n      } else {\n        // no curves - just set the dieoff face\n        // see if the previous plot type also used the 'curve-dates' parameter\n        var _oldCurveDatesExist2 = matsParamUtils.isParamVisible('curve-dates');\n\n        matsCurveUtils.showDieOffFace(); // if a 'curve-dates' parameter was already in use, we want to keep that value.\n        // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n\n        if (!_oldCurveDatesExist2) {\n          var _tsDate2 = $('#controlButton-dates-value').text();\n\n          matsParamUtils.setValueTextForParamName('curve-dates', _tsDate2);\n        }\n      }\n    }\n  },\n  'click .plot-type-Threshold': function (event) {\n    if (Session.get(\"confirmPlotChange\")) {\n      // change has been confirmed\n      // see if the previous plot type also used the 'curve-dates' parameter\n      var oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n      matsCurveUtils.showThresholdFace();\n      var curves = Session.get('Curves'); // if a 'curve-dates' parameter was already in use, we want to keep that value.\n      // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n\n      var tsDate = $('#controlButton-dates-value').text();\n\n      if (!oldCurveDatesExist) {\n        matsParamUtils.setValueTextForParamName('curve-dates', tsDate);\n      }\n\n      if (curves.length > 0) {\n        // initialize parameters that may not have been used yet\n        for (var ci = 0; ci < curves.length; ci++) {\n          if (tsDate !== undefined && tsDate !== \"\" && !oldCurveDatesExist) {\n            curves[ci]['curve-dates'] = tsDate;\n          }\n\n          if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }).default) {\n            curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({\n              name: 'valid-time'\n            }).default;\n          }\n\n          if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }).default) {\n            curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({\n              name: 'forecast-length'\n            }).default;\n          }\n\n          if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }).default) {\n            curves[ci]['region'] = matsCollections.CurveParams.findOne({\n              name: 'region'\n            }).default;\n          }\n\n          if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }).default) {\n            curves[ci]['statistic'] = matsCollections.CurveParams.findOne({\n              name: 'statistic'\n            }).default;\n          }\n\n          if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }).default) {\n            curves[ci]['truth'] = matsCollections.CurveParams.findOne({\n              name: 'truth'\n            }).default;\n          }\n        }\n\n        Session.set('Curves', curves);\n      }\n\n      Session.set(\"confirmPlotChange\", \"\");\n      Session.set('plotChangeType', \"\");\n    } else {\n      // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n      if (Session.get(\"Curves\").length > 0) {\n        Session.set('plotChangeType', matsTypes.PlotTypes.threshold);\n        $(\"#modal-change-plot-type\").modal();\n      } else {\n        // no curves - just set the threshold face\n        // see if the previous plot type also used the 'curve-dates' parameter\n        var _oldCurveDatesExist3 = matsParamUtils.isParamVisible('curve-dates');\n\n        matsCurveUtils.showThresholdFace(); // if a 'curve-dates' parameter was already in use, we want to keep that value.\n        // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n\n        if (!_oldCurveDatesExist3) {\n          var _tsDate3 = $('#controlButton-dates-value').text();\n\n          matsParamUtils.setValueTextForParamName('curve-dates', _tsDate3);\n        }\n      }\n    }\n  },\n  'click .plot-type-ValidTime': function (event) {\n    if (Session.get(\"confirmPlotChange\")) {\n      // change has been confirmed\n      // see if the previous plot type also used the 'curve-dates' parameter\n      var oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n      matsCurveUtils.showValidTimeFace();\n      var curves = Session.get('Curves'); // if a 'curve-dates' parameter was already in use, we want to keep that value.\n      // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n\n      var tsDate = $('#controlButton-dates-value').text();\n\n      if (!oldCurveDatesExist) {\n        matsParamUtils.setValueTextForParamName('curve-dates', tsDate);\n      }\n\n      if (curves.length > 0) {\n        // initialize parameters that may not have been used yet\n        for (var ci = 0; ci < curves.length; ci++) {\n          if (tsDate !== undefined && tsDate !== \"\" && !oldCurveDatesExist) {\n            curves[ci]['curve-dates'] = tsDate;\n          }\n\n          if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }).default) {\n            curves[ci]['threshold'] = matsCollections.CurveParams.findOne({\n              name: 'threshold'\n            }).default;\n          }\n\n          if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }).default) {\n            curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({\n              name: 'forecast-length'\n            }).default;\n          }\n\n          if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }).default) {\n            curves[ci]['region'] = matsCollections.CurveParams.findOne({\n              name: 'region'\n            }).default;\n          }\n\n          if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }).default) {\n            curves[ci]['statistic'] = matsCollections.CurveParams.findOne({\n              name: 'statistic'\n            }).default;\n          }\n\n          if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }).default) {\n            curves[ci]['truth'] = matsCollections.CurveParams.findOne({\n              name: 'truth'\n            }).default;\n          }\n        }\n\n        Session.set('Curves', curves);\n      }\n\n      Session.set(\"confirmPlotChange\", \"\");\n      Session.set('plotChangeType', \"\");\n    } else {\n      // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n      if (Session.get(\"Curves\").length > 0) {\n        Session.set('plotChangeType', matsTypes.PlotTypes.validtime);\n        $(\"#modal-change-plot-type\").modal();\n      } else {\n        // no curves - just set the valid time face\n        // see if the previous plot type also used the 'curve-dates' parameter\n        var _oldCurveDatesExist4 = matsParamUtils.isParamVisible('curve-dates');\n\n        matsCurveUtils.showValidTimeFace(); // if a 'curve-dates' parameter was already in use, we want to keep that value.\n        // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n\n        if (!_oldCurveDatesExist4) {\n          var _tsDate4 = $('#controlButton-dates-value').text();\n\n          matsParamUtils.setValueTextForParamName('curve-dates', _tsDate4);\n        }\n      }\n    }\n  },\n  'click .plot-type-DailyModelCycle': function (event) {\n    if (Session.get(\"confirmPlotChange\")) {\n      // change has been confirmed\n      // see if the previous plot type also used the 'dates' parameter\n      var oldDatesExist = matsParamUtils.isParamVisible('dates');\n      matsCurveUtils.showDailyModelCycleFace();\n      var curves = Session.get('Curves'); // if a 'dates' parameter was already in use, we want to keep that value.\n      // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n      if (!oldDatesExist) {\n        var curveDate = $('#controlButton-curve-dates-value').text();\n        matsParamUtils.setValueTextForParamName('dates', curveDate);\n      }\n\n      if (curves.length > 0) {\n        // initialize parameters that may not have been used yet\n        for (var ci = 0; ci < curves.length; ci++) {\n          if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }).default) {\n            curves[ci]['threshold'] = matsCollections.CurveParams.findOne({\n              name: 'threshold'\n            }).default;\n          }\n\n          if (!curves[ci]['utc-cycle-start'] && matsCollections.CurveParams.findOne({\n            name: 'utc-cycle-start'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'utc-cycle-start'\n          }).default) {\n            curves[ci]['utc-cycle-start'] = matsCollections.CurveParams.findOne({\n              name: 'utc-cycle-start'\n            }).default;\n          }\n\n          if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }).default) {\n            curves[ci]['region'] = matsCollections.CurveParams.findOne({\n              name: 'region'\n            }).default;\n          }\n\n          if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }).default) {\n            curves[ci]['statistic'] = matsCollections.CurveParams.findOne({\n              name: 'statistic'\n            }).default;\n          }\n\n          if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }).default) {\n            curves[ci]['truth'] = matsCollections.CurveParams.findOne({\n              name: 'truth'\n            }).default;\n          }\n        }\n\n        Session.set('Curves', curves);\n      }\n\n      Session.set(\"confirmPlotChange\", \"\");\n      Session.set('plotChangeType', \"\");\n    } else {\n      // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n      if (Session.get(\"Curves\").length > 0) {\n        Session.set('plotChangeType', matsTypes.PlotTypes.dailyModelCycle);\n        $(\"#modal-change-plot-type\").modal();\n      } else {\n        // no curves - just set the daily model cycle face\n        // see if the previous plot type also used the 'dates' parameter\n        var _oldDatesExist2 = matsParamUtils.isParamVisible('dates');\n\n        matsCurveUtils.showDailyModelCycleFace(); // if a 'dates' parameter was already in use, we want to keep that value.\n        // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n        if (!_oldDatesExist2) {\n          var _curveDate2 = $('#controlButton-curve-dates-value').text();\n\n          matsParamUtils.setValueTextForParamName('dates', _curveDate2);\n        }\n      }\n    }\n  },\n  'click .plot-type-Reliability': function (event) {\n    if (Session.get(\"confirmPlotChange\")) {\n      // change has been confirmed\n      // see if the previous plot type also used the 'dates' parameter\n      var oldDatesExist = matsParamUtils.isParamVisible('dates');\n      matsCurveUtils.showReliabilityFace();\n      var curves = Session.get('Curves'); // if a 'dates' parameter was already in use, we want to keep that value.\n      // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n      if (!oldDatesExist) {\n        var curveDate = $('#controlButton-curve-dates-value').text();\n        matsParamUtils.setValueTextForParamName('dates', curveDate);\n      }\n\n      if (curves.length > 0) {\n        // initialize parameters that may not have been used yet\n        for (var ci = 0; ci < curves.length; ci++) {\n          // the average may not have been carried over from other curve types so let it default\n          if (!curves[ci]['average'] && matsCollections.CurveParams.findOne({\n            name: 'average'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'average'\n          }).default) {\n            curves[ci]['average'] = matsCollections.CurveParams.findOne({\n              name: 'average'\n            }).default;\n          }\n\n          if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }).default) {\n            curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({\n              name: 'valid-time'\n            }).default;\n          }\n\n          if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }).default) {\n            curves[ci]['threshold'] = matsCollections.CurveParams.findOne({\n              name: 'threshold'\n            }).default;\n          }\n\n          if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }).default) {\n            curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({\n              name: 'forecast-length'\n            }).default;\n          }\n\n          if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }).default) {\n            curves[ci]['region'] = matsCollections.CurveParams.findOne({\n              name: 'region'\n            }).default;\n          }\n\n          if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }).default) {\n            curves[ci]['statistic'] = matsCollections.CurveParams.findOne({\n              name: 'statistic'\n            }).default;\n          }\n\n          if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }).default) {\n            curves[ci]['truth'] = matsCollections.CurveParams.findOne({\n              name: 'truth'\n            }).default;\n          }\n        }\n\n        Session.set('Curves', curves);\n      }\n\n      Session.set(\"confirmPlotChange\", \"\");\n      Session.set('plotChangeType', \"\");\n    } else {\n      // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n      if (Session.get(\"Curves\").length > 0) {\n        Session.set('plotChangeType', matsTypes.PlotTypes.reliability);\n        $(\"#modal-change-plot-type\").modal();\n      } else {\n        // no curves - just set the reliability face\n        // see if the previous plot type also used the 'dates' parameter\n        var _oldDatesExist3 = matsParamUtils.isParamVisible('dates');\n\n        matsCurveUtils.showReliabilityFace(); // if a 'dates' parameter was already in use, we want to keep that value.\n        // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n        if (!_oldDatesExist3) {\n          var _curveDate3 = $('#controlButton-curve-dates-value').text();\n\n          matsParamUtils.setValueTextForParamName('dates', _curveDate3);\n        }\n      }\n    }\n  },\n  'click .plot-type-Map': function (event) {\n    if (Session.get(\"confirmPlotChange\")) {\n      // change has been confirmed\n      // see if the previous plot type also used the 'dates' parameter\n      var oldDatesExist = matsParamUtils.isParamVisible('dates');\n      matsCurveUtils.showMapFace();\n      var curves = Session.get('Curves'); // if a 'dates' parameter was already in use, we want to keep that value.\n      // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n      if (!oldDatesExist) {\n        var curveDate = $('#controlButton-curve-dates-value').text();\n        matsParamUtils.setValueTextForParamName('dates', curveDate);\n      }\n\n      if (curves.length > 0) {\n        // initialize parameters that may not have been used yet\n        for (var ci = 0; ci < curves.length; ci++) {\n          if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }).default) {\n            curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({\n              name: 'valid-time'\n            }).default;\n          }\n\n          if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }).default) {\n            curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({\n              name: 'forecast-length'\n            }).default;\n          }\n        }\n\n        Session.set('Curves', curves);\n      }\n\n      Session.set(\"confirmPlotChange\", \"\");\n      Session.set('plotChangeType', \"\");\n    } else {\n      // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n      if (Session.get(\"Curves\").length > 0) {\n        Session.set('plotChangeType', matsTypes.PlotTypes.map);\n        $(\"#modal-change-plot-type\").modal();\n      } else {\n        // no curves - just set the map face\n        // see if the previous plot type also used the 'dates' parameter\n        var _oldDatesExist4 = matsParamUtils.isParamVisible('dates');\n\n        matsCurveUtils.showMapFace(); // if a 'dates' parameter was already in use, we want to keep that value.\n        // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n        if (!_oldDatesExist4) {\n          var _curveDate4 = $('#controlButton-curve-dates-value').text();\n\n          matsParamUtils.setValueTextForParamName('dates', _curveDate4);\n        }\n      }\n    }\n  },\n  'click .plot-type-Histogram': function (event) {\n    if (Session.get(\"confirmPlotChange\")) {\n      // change has been confirmed\n      // see if the previous plot type also used the 'curve-dates' parameter\n      var oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n      matsCurveUtils.showHistogramFace();\n      var curves = Session.get('Curves'); // if a 'curve-dates' parameter was already in use, we want to keep that value.\n      // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n\n      var tsDate = $('#controlButton-dates-value').text();\n\n      if (!oldCurveDatesExist) {\n        matsParamUtils.setValueTextForParamName('curve-dates', tsDate);\n      }\n\n      if (curves.length > 0) {\n        // initialize parameters that may not have been used yet\n        for (var ci = 0; ci < curves.length; ci++) {\n          if (tsDate !== undefined && tsDate !== \"\" && !oldCurveDatesExist) {\n            curves[ci]['curve-dates'] = tsDate;\n          }\n\n          if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }).default) {\n            curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({\n              name: 'valid-time'\n            }).default;\n          }\n\n          if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }).default) {\n            curves[ci]['threshold'] = matsCollections.CurveParams.findOne({\n              name: 'threshold'\n            }).default;\n          }\n\n          if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }).default) {\n            curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({\n              name: 'forecast-length'\n            }).default;\n          }\n\n          if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }).default) {\n            curves[ci]['region'] = matsCollections.CurveParams.findOne({\n              name: 'region'\n            }).default;\n          }\n\n          if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }).default) {\n            curves[ci]['statistic'] = matsCollections.CurveParams.findOne({\n              name: 'statistic'\n            }).default;\n          }\n\n          if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }).default) {\n            curves[ci]['truth'] = matsCollections.CurveParams.findOne({\n              name: 'truth'\n            }).default;\n          }\n\n          if (!curves[ci]['histogram-bin-controls'] && matsCollections.CurveParams.findOne({\n            name: 'histogram-bin-controls'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'histogram-bin-controls'\n          }).default) {\n            curves[ci]['histogram-bin-controls'] = matsCollections.CurveParams.findOne({\n              name: 'histogram-bin-controls'\n            }).default;\n          }\n\n          if (!curves[ci]['histogram-yaxis-controls'] && matsCollections.CurveParams.findOne({\n            name: 'histogram-yaxis-controls'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'histogram-yaxis-controls'\n          }).default) {\n            curves[ci]['histogram-yaxis-controls'] = matsCollections.CurveParams.findOne({\n              name: 'histogram-yaxis-controls'\n            }).default;\n          }\n        }\n\n        Session.set('Curves', curves);\n      }\n\n      Session.set(\"confirmPlotChange\", \"\");\n      Session.set('plotChangeType', \"\");\n    } else {\n      // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n      if (Session.get(\"Curves\").length > 0) {\n        Session.set('plotChangeType', matsTypes.PlotTypes.histogram);\n        $(\"#modal-change-plot-type\").modal();\n      } else {\n        // no curves - just set the histogram face\n        // see if the previous plot type also used the 'curve-dates' parameter\n        var _oldCurveDatesExist5 = matsParamUtils.isParamVisible('curve-dates');\n\n        matsCurveUtils.showHistogramFace(); // if a 'curve-dates' parameter was already in use, we want to keep that value.\n        // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n\n        if (!_oldCurveDatesExist5) {\n          var _tsDate5 = $('#controlButton-dates-value').text();\n\n          matsParamUtils.setValueTextForParamName('curve-dates', _tsDate5);\n        }\n      }\n    }\n  },\n  'click .plot-type-Contour': function (event) {\n    if (Session.get(\"confirmPlotChange\")) {\n      // change has been confirmed\n      // see if the previous plot type also used the 'dates' parameter\n      var oldDatesExist = matsParamUtils.isParamVisible('dates');\n      matsCurveUtils.showContourFace();\n      var curves = Session.get('Curves'); // if a 'dates' parameter was already in use, we want to keep that value.\n      // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n      if (!oldDatesExist) {\n        var curveDate = $('#controlButton-curve-dates-value').text();\n        matsParamUtils.setValueTextForParamName('dates', curveDate);\n      }\n\n      if (curves.length > 0) {\n        // initialize parameters that may not have been used yet\n        for (var ci = 0; ci < curves.length; ci++) {\n          // the average may not have been carried over from other curve types so let it default\n          if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }).default) {\n            curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({\n              name: 'valid-time'\n            }).default;\n          }\n\n          if (!curves[ci]['utc-cycle-start'] && matsCollections.CurveParams.findOne({\n            name: 'utc-cycle-start'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'utc-cycle-start'\n          }).default) {\n            curves[ci]['utc-cycle-start'] = matsCollections.CurveParams.findOne({\n              name: 'utc-cycle-start'\n            }).default;\n          }\n\n          if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }).default) {\n            curves[ci]['threshold'] = matsCollections.CurveParams.findOne({\n              name: 'threshold'\n            }).default;\n          }\n\n          if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }).default) {\n            curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({\n              name: 'forecast-length'\n            }).default;\n          }\n\n          if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }).default) {\n            curves[ci]['region'] = matsCollections.CurveParams.findOne({\n              name: 'region'\n            }).default;\n          }\n\n          if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }).default) {\n            curves[ci]['statistic'] = matsCollections.CurveParams.findOne({\n              name: 'statistic'\n            }).default;\n          }\n\n          if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }).default) {\n            curves[ci]['truth'] = matsCollections.CurveParams.findOne({\n              name: 'truth'\n            }).default;\n          }\n\n          if (!curves[ci]['x-axis-parameter'] && matsCollections.CurveParams.findOne({\n            name: 'x-axis-parameter'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'x-axis-parameter'\n          }).default) {\n            curves[ci]['x-axis-parameter'] = matsCollections.CurveParams.findOne({\n              name: 'x-axis-parameter'\n            }).default;\n          }\n\n          if (!curves[ci]['y-axis-parameter'] && matsCollections.CurveParams.findOne({\n            name: 'y-axis-parameter'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'y-axis-parameter'\n          }).default) {\n            curves[ci]['y-axis-parameter'] = matsCollections.CurveParams.findOne({\n              name: 'y-axis-parameter'\n            }).default;\n          }\n        }\n\n        Session.set('Curves', curves);\n      }\n\n      Session.set(\"confirmPlotChange\", \"\");\n      Session.set('plotChangeType', \"\");\n    } else {\n      // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n      if (Session.get(\"Curves\").length > 0) {\n        Session.set('plotChangeType', matsTypes.PlotTypes.contour);\n        $(\"#modal-change-plot-type\").modal();\n      } else {\n        // no curves - just set the contour face\n        // see if the previous plot type also used the 'dates' parameter\n        var _oldDatesExist5 = matsParamUtils.isParamVisible('dates');\n\n        matsCurveUtils.showContourFace(); // if a 'dates' parameter was already in use, we want to keep that value.\n        // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n        if (!_oldDatesExist5) {\n          var _curveDate5 = $('#controlButton-curve-dates-value').text();\n\n          matsParamUtils.setValueTextForParamName('dates', _curveDate5);\n        }\n      }\n    }\n  },\n  'click .plot-type-ContourDiff': function (event) {\n    if (Session.get(\"confirmPlotChange\")) {\n      // change has been confirmed\n      // see if the previous plot type also used the 'dates' parameter\n      var oldDatesExist = matsParamUtils.isParamVisible('dates');\n      matsCurveUtils.showContourFace();\n      var curves = Session.get('Curves'); // if a 'dates' parameter was already in use, we want to keep that value.\n      // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n      if (!oldDatesExist) {\n        var curveDate = $('#controlButton-curve-dates-value').text();\n        matsParamUtils.setValueTextForParamName('dates', curveDate);\n      }\n\n      if (curves.length > 0) {\n        // initialize parameters that may not have been used yet\n        for (var ci = 0; ci < curves.length; ci++) {\n          // the average may not have been carried over from other curve types so let it default\n          if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'valid-time'\n          }).default) {\n            curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({\n              name: 'valid-time'\n            }).default;\n          }\n\n          if (!curves[ci]['utc-cycle-start'] && matsCollections.CurveParams.findOne({\n            name: 'utc-cycle-start'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'utc-cycle-start'\n          }).default) {\n            curves[ci]['utc-cycle-start'] = matsCollections.CurveParams.findOne({\n              name: 'utc-cycle-start'\n            }).default;\n          }\n\n          if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'threshold'\n          }).default) {\n            curves[ci]['threshold'] = matsCollections.CurveParams.findOne({\n              name: 'threshold'\n            }).default;\n          }\n\n          if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'forecast-length'\n          }).default) {\n            curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({\n              name: 'forecast-length'\n            }).default;\n          }\n\n          if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'region'\n          }).default) {\n            curves[ci]['region'] = matsCollections.CurveParams.findOne({\n              name: 'region'\n            }).default;\n          }\n\n          if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'statistic'\n          }).default) {\n            curves[ci]['statistic'] = matsCollections.CurveParams.findOne({\n              name: 'statistic'\n            }).default;\n          }\n\n          if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'truth'\n          }).default) {\n            curves[ci]['truth'] = matsCollections.CurveParams.findOne({\n              name: 'truth'\n            }).default;\n          }\n\n          if (!curves[ci]['x-axis-parameter'] && matsCollections.CurveParams.findOne({\n            name: 'x-axis-parameter'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'x-axis-parameter'\n          }).default) {\n            curves[ci]['x-axis-parameter'] = matsCollections.CurveParams.findOne({\n              name: 'x-axis-parameter'\n            }).default;\n          }\n\n          if (!curves[ci]['y-axis-parameter'] && matsCollections.CurveParams.findOne({\n            name: 'y-axis-parameter'\n          }) && matsCollections.CurveParams.findOne({\n            name: 'y-axis-parameter'\n          }).default) {\n            curves[ci]['y-axis-parameter'] = matsCollections.CurveParams.findOne({\n              name: 'y-axis-parameter'\n            }).default;\n          }\n        }\n\n        Session.set('Curves', curves);\n      }\n\n      Session.set(\"confirmPlotChange\", \"\");\n      Session.set('plotChangeType', \"\");\n    } else {\n      // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n      if (Session.get(\"Curves\").length > 0) {\n        Session.set('plotChangeType', matsTypes.PlotTypes.contourDiff);\n        $(\"#modal-change-plot-type\").modal();\n      } else {\n        // no curves - just set the contour face\n        // see if the previous plot type also used the 'dates' parameter\n        var _oldDatesExist6 = matsParamUtils.isParamVisible('dates');\n\n        matsCurveUtils.showContourFace(); // if a 'dates' parameter was already in use, we want to keep that value.\n        // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n        if (!_oldDatesExist6) {\n          var _curveDate6 = $('#controlButton-curve-dates-value').text();\n\n          matsParamUtils.setValueTextForParamName('dates', _curveDate6);\n        }\n      }\n    }\n  },\n  'click .plot-type-Scatter2d': function (event) {\n    if (Session.get(\"confirmPlotChange\")) {\n      // change has been confirmed\n      // see if the previous plot type also used the 'dates' parameter\n      var oldDatesExist = matsParamUtils.isParamVisible('dates');\n      matsCurveUtils.showScatterFace(); // if a 'dates' parameter was already in use, we want to keep that value.\n      // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n      if (!oldDatesExist) {\n        var curveDate = $('#controlButton-curve-dates-value').text();\n        matsParamUtils.setValueTextForParamName('dates', curveDate);\n      }\n\n      Session.set(\"confirmPlotChange\", \"\");\n      Session.set('plotChangeType', \"\");\n    } else {\n      // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n      if (Session.get(\"Curves\").length > 0) {\n        Session.set('plotChangeType', matsTypes.PlotTypes.scatter2d);\n        $(\"#modal-change-plot-type\").modal();\n      } else {\n        // no curves - just set the scatter face\n        // see if the previous plot type also used the 'dates' parameter\n        var _oldDatesExist7 = matsParamUtils.isParamVisible('dates');\n\n        matsCurveUtils.showScatterFace(); // if a 'dates' parameter was already in use, we want to keep that value.\n        // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n\n        if (!_oldDatesExist7) {\n          var _curveDate7 = $('#controlButton-curve-dates-value').text();\n\n          matsParamUtils.setValueTextForParamName('dates', _curveDate7);\n        }\n      }\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"administration\":{\"template.reset.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/template.reset.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"reset\");\nTemplate[\"reset\"] = new Template(\"Template.reset\", (function() {\n  var view = this;\n  return HTML.Raw('<div id=\"resetModal\" class=\"modal\" role=\"dialog\">\\n        <div class=\"modal-dialog\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <h4 class=\"modal-title\">Reset</h4>\\n                </div>\\n                <form class=\"form-horizontal\" name=\"resetForm\" novalidate=\"\">\\n                    <div class=\"modal-body\">\\n                        <p style=\"color: red\">\\n                            This action will reset all of the administrative data to hard coded defaults.\\n                            You will lose any changes that were made with the administrative\\n                            interface or by changing the data externally.\\n                        </p>\\n                        <div class=\"modal-footer btn-group\">\\n                            <button name=\"cancelReset\" type=\"button\" class=\"cancel-reset btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel</button>\\n                            <button name=\"applyReset\" type=\"button\" class=\"apply_reset btn btn-primary\">&nbsp;&nbsp;Reset</button>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n            <!-- /.modal-content -->\\n        </div>\\n        <!-- /.modal-dialog -->\\n    </div>');\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reset.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/reset.js                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsMethods;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsMethods: function (v) {\n    matsMethods = v;\n  }\n}, 0);\nTemplate.reset.events({\n  'click .apply_reset': function () {\n    var settings = matsCollections.Settings.findOne({});\n\n    if (settings === undefined) {\n      setError(new Error(\"reset failed - cannot readsettings\"));\n      return;\n    }\n\n    var appName = settings.Title;\n    var appVersion = settings.version;\n    matsMethods.reset.call({\n      appName: appName,\n      appVersion: appVersion\n    }, function (error) {\n      if (error) {\n        setError(new Error(\"matsMethods.reset from reset.js \" + error.message));\n      }\n    });\n    $(\"#resetModal\").modal('hide');\n    return false;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.export.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/template.export.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"export\");\nTemplate[\"export\"] = new Template(\"Template.export\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"exportModal\",\n    class: \"modal\",\n    role: \"dialog\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                \", HTML.Raw('<div class=\"modal-header\">\\n                    <h4 class=\"modal-title\">Export</h4>\\n                </div>'), \"\\n                \", HTML.FORM({\n    class: \"form-horizontal\",\n    name: \"epForm\",\n    novalidate: \"\"\n  }, \"\\n                    \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                        \", HTML.Raw('<p style=\"color: red\">\\n                            Choose what data you want to export. A separate file dialog for each selection will be generated.\\n                        </p>'), \"\\n                        \", HTML.FIELDSET(\"\\n                            DataFiles\\n                            \", HTML.UL(\"\\n                            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"dataFiles\"));\n  }, function() {\n    return [ \"\\n                                \", HTML.LI(HTML.INPUT({\n      type: \"checkbox\",\n      name: \"dataFiles\",\n      id: function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      },\n      value: function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      }\n    }), Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.FIELDSET(\"\\n                            GraphFiles\\n                            \", HTML.UL(\"\\n                            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"graphFiles\"));\n  }, function() {\n    return [ \"\\n                                \", HTML.LI(HTML.INPUT({\n      type: \"checkbox\",\n      name: \"graphFiles\",\n      id: function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      },\n      value: function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      }\n    }), Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.Raw('<fieldset>\\n                            Parameters\\n                            <ul>\\n                                <li><input type=\"checkbox\" name=\"parameterFile\" id=\"parameterFile\" value=\"parameters\">parameters</li>\\n                            </ul>\\n                        </fieldset>'), \"\\n                        \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                            <button name=\"cancelExport\" type=\"button\" class=\"cancel-export btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel</button>\\n                            <button name=\"applyExport\" type=\"button\" class=\"apply_export btn btn-primary\">&nbsp;&nbsp;Export</button>\\n                        </div>'), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n        \"), HTML.Raw(\"\\n        <!-- /.modal-dialog -->\\n    \"));\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"export.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/export.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 0);\nvar matsMethods;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsMethods: function (v) {\n    matsMethods = v;\n  }\n}, 1);\nTemplate.export.onRendered(function () {\n  matsMethods.getDataFunctionFileList.call(function (error, result) {\n    //    //console.log ('result is : ' + JSON.stringify(result, null, '\\t'));\n    if (error !== undefined) {\n      setError(new Error(\"matsMethods.getDataFunctionFileList from template export error: \" + error.toLocaleString()));\n      return false;\n    }\n\n    Session.set('dataFunctionFileList', result);\n  });\n  matsMethods.getGraphFunctionFileList.call(function (error, result) {\n    //    //console.log ('result is : ' + JSON.stringify(result, null, '\\t'));\n    if (error !== undefined) {\n      setError(new Error())(\"matsMethods.graphFunctionFileList from export.js error: \" + error.toLocaleString());\n      return false;\n    }\n\n    Session.set('graphFunctionFileList', result);\n  });\n});\nTemplate.export.helpers({\n  dataFiles: function () {\n    return Session.get('dataFunctionFileList');\n  },\n  graphFiles: function () {\n    return Session.get('graphFunctionFileList');\n  }\n});\nTemplate.export.events({\n  'click .apply_export': function (event) {\n    event.preventDefault();\n    var parameterOut = document.getElementById('parameterFile').checked;\n    var dataFiles = [];\n    var graphFiles = [];\n    $(\"input:checkbox[name=dataFiles]:checked\").each(function () {\n      dataFiles.push($(this).val());\n    });\n    $(\"input:checkbox[name=graphFiles]:checked\").each(function () {\n      graphFiles.push($(this).val());\n    });\n\n    if (parameterOut) {\n      var data = {};\n      data.CurveParams = matsCollections.CurveParams.find({}).fetch();\n      data.PlotParams = matsCollections.PlotParams.find({}).fetch();\n      data.PlotGraphFunctions = matsCollections.PlotGraphFunctions.find({}).fetch();\n      data.Settings = matsCollections.Settings.find({}).fetch();\n      data.ColorScheme = matsCollections.ColorScheme.find({}).fetch();\n      data.Authorization = matsCollections.Authorization.find({}).fetch();\n      data.Roles = matsCollections.Roles.find({}).fetch();\n      data.Databases = matsCollections.Databases.find({}).fetch();\n      data.Credentials = matsCollections.Credentials.find({}).fetch();\n      var json = JSON.stringify(data, null, 2);\n      var blob = new Blob([json], {\n        type: \"application/json\"\n      });\n      var url = URL.createObjectURL(blob);\n      var a = document.createElement('a');\n      a.download = \"export.json\";\n      a.href = url;\n      a.target = '_blank';\n      a.textContent = \"export.json\";\n      document.body.appendChild(a);\n      a.click();\n    }\n\n    if (dataFiles.length > 0) {\n      dataFiles.forEach(function (file) {\n        matsMethods.readFunctionFile('data', file, function (error, result) {\n          if (error !== undefined) {\n            setError(new Error(error.toLocaleString()));\n            return false;\n          }\n\n          data = result;\n          var blob = new Blob([result], {\n            type: \"application/javascript\"\n          });\n          var url = URL.createObjectURL(blob);\n          var a = document.createElement('a');\n          a.download = file;\n          a.href = url;\n          a.target = '_blank';\n          a.textContent = file;\n          document.body.appendChild(a);\n          a.click();\n        });\n      });\n    }\n\n    if (graphFiles.length > 0) {\n      graphFiles.forEach(function (file) {\n        matsMethods.readFunctionFile('graph', file, function (error, result) {\n          if (error !== undefined) {\n            setError(new Error(error.toLocaleString()));\n            return false;\n          }\n\n          data = result;\n          var blob = new Blob([result], {\n            type: \"application/javascript\"\n          });\n          var url = URL.createObjectURL(blob);\n          var a = document.createElement('a');\n          a.download = file;\n          a.href = url;\n          a.target = '_blank';\n          a.textContent = file;\n          document.body.appendChild(a);\n          a.click();\n        });\n      });\n    }\n\n    $(\"#exportModal\").modal('hide');\n    return false;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.import.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/template.import.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"import\");\nTemplate[\"import\"] = new Template(\"Template.import\", (function() {\n  var view = this;\n  return HTML.Raw('<div id=\"importModal\" class=\"modal\" role=\"dialog\">\\n        <div class=\"modal-dialog\">\\n            <div class=\"modal-content\">\\n                <div class=\"modal-header\">\\n                    <h4 class=\"modal-title\">Import</h4>\\n                </div>\\n                <form class=\"form-horizontal\" name=\"inpForm\" novalidate=\"\">\\n                    <div class=\"modal-body\">\\n                        <p style=\"color: red\">\\n                            Choose what data you want to import. A separate file dialog for each selection will be generated.\\n                        </p>\\n                        <fieldset>\\n                            DataFiles\\n                            <ul>\\n                                <li>\\n                                    <span class=\"btn btn-primary btn-file\">\\n                                        <input id=\"dataFileImport\" type=\"file\" multiple=\"\" class=\"btn btn-primary data_file_import\">\\n                                    </span>\\n                                </li>\\n                            </ul>\\n                        </fieldset>\\n                        <fieldset>\\n                            GraphFiles\\n                            <ul>\\n                               <li>\\n                                    <span class=\"btn btn-primary btn-file\">\\n                                        <input id=\"graphFileImport\" type=\"file\" multiple=\"\" class=\"btn btn-primary graph_file_import\">\\n                                    </span>\\n                               </li>\\n                            </ul>\\n                        </fieldset>\\n                        <fieldset>\\n                            Parameters\\n                            <ul>\\n                                <li>\\n                                    <span class=\"btn btn-primary btn-file\">\\n                                        <input id=\"parameterFileImport\" type=\"file\" class=\"btn btn-primary parameter_file_import\">\\n                                    </span>\\n                                </li>\\n                            </ul>\\n                        </fieldset>\\n\\n                        <div class=\"modal-footer btn-group\">\\n                            <span class=\"btn btn-primary btn-file\">\\n                                <button name=\"cancelImport\" type=\"\" class=\"cancel-import btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel</button>\\n                            </span>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n            <!-- /.modal-content -->\\n        </div>\\n        <!-- /.modal-dialog -->\\n    </div>');\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"import.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/import.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsMethods;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsMethods: function (v) {\n    matsMethods = v;\n  }\n}, 0);\nTemplate.import.events({\n  'change .data_file_import': function (event, template) {\n    event.preventDefault();\n\n    if (window.File && window.FileReader && window.FileList && window.Blob) {// Great success! All the File APIs are supported.\n    } else {\n      alert('The File APIs are not fully supported in this browser.');\n    }\n\n    var files = event.target.files;\n\n    for (var i = 0, f; f = files[i]; i++) {\n      var reader = new FileReader();\n      reader.fileName = f.name;\n\n      reader.onload = function (f) {\n        return function (e) {\n          var name = e.target.fileName;\n\n          try {\n            matsMethods.restoreFromFile({\n              type: \"graph\",\n              name: name,\n              data: e.target.result\n            }, function (error) {\n              if (error) {\n                setError(new Error(error.message));\n              }\n            });\n          } catch (exc) {\n            setError(new Error(\"Error reading file: \" + name + \" - \" + exc.toLocaleString()));\n          }\n        };\n      }(f);\n\n      reader.readAsText(f);\n    }\n\n    document.getElementById(\"dataFileImport\").value = \"\";\n    $(\"#importModal\").modal('hide');\n    return false;\n  },\n  'change .graph_file_import': function (event, template) {\n    event.preventDefault();\n\n    if (window.File && window.FileReader && window.FileList && window.Blob) {// Great success! All the File APIs are supported.\n    } else {\n      alert('The File APIs are not fully supported in this browser.');\n    }\n\n    var files = event.target.files;\n\n    for (var i = 0, f; f = files[i]; i++) {\n      var reader = new FileReader();\n      reader.fileName = f.name;\n\n      reader.onload = function (f) {\n        return function (e) {\n          var name = e.target.fileName;\n\n          try {\n            matsMethods.restoreFromFile({\n              type: \"graph\",\n              name: name,\n              data: e.target.result\n            }, function (error) {\n              if (error) {\n                setError(new Error(error.message));\n              }\n            });\n          } catch (exc) {\n            setError(new Error(\"Error reading file: \" + name + \" - \" + exc.toLocaleString()));\n          }\n        };\n      }(f);\n\n      reader.readAsText(f);\n    }\n\n    document.getElementById(\"graphFileImport\").value = \"\";\n    $(\"#importModal\").modal('hide');\n    return false;\n  },\n  'change .parameter_file_import': function (event, template) {\n    event.preventDefault();\n\n    if (window.File && window.FileReader && window.FileList && window.Blob) {// Great success! All the File APIs are supported.\n    } else {\n      alert('The File APIs are not fully supported in this browser.');\n    }\n\n    var files = event.target.files;\n\n    for (var i = 0, f; f = files[i]; i++) {\n      var reader = new FileReader();\n      reader.fileName = f.name;\n\n      reader.onload = function (f) {\n        return function (e) {\n          var name = e.target.fileName;\n\n          try {\n            var data = JSON.parse(e.target.result);\n            matsMethods.restoreFromParameterFile({\n              name: name,\n              data: data\n            }, function (error) {\n              if (error) {\n                setError(new Error(error.message));\n              }\n            });\n          } catch (exc) {\n            setError(new Error(\"Error reading file: \" + name + \" - \" + exc.toLocaleString()));\n          }\n        };\n      }(f);\n\n      reader.readAsText(f);\n    }\n\n    document.getElementById(\"parameterFileImport\").value = \"\";\n    $(\"#importModal\").modal('hide');\n    return false;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.settings.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/template.settings.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"settings\");\nTemplate[\"settings\"] = new Template(\"Template.settings\", (function() {\n  var view = this;\n  return [ HTML.STYLE({\n    id: \"jsbin-css\"\n  }, \"\\n        #apstMoleculeModal .form-group {\\n            padding-right:20px;\\n            position:relative;\\n        }\\n\\n        #apstMoleculeModal .help {\\n            position:absolute;\\n            right:-8px;\\n            top:12px;\\n        }\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"settingsModal\",\n    class: \"modal\",\n    role: \"dialog\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                \", HTML.Raw('<div class=\"modal-header\">\\n                    <h4 class=\"modal-title\">Settings</h4>\\n                </div>'), \"\\n                \", HTML.FORM({\n    class: \"form-horizontal\",\n    name: \"settingsForm\",\n    novalidate: \"\"\n  }, \"\\n                    \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>LabelPrefix</label>\\n                            </div>'), \"\\n                            \", HTML.DIV({\n    class: \"controls col-xs-12\"\n  }, \"\\n                                \", HTML.INPUT({\n    id: \"LabelPrefix\",\n    class: \"form-control data-input textInput LabelPrefix\",\n    type: \"text\",\n    required: \"\",\n    placeholder: function() {\n      return Spacebars.mustache(view.lookup(\"LabelPrefix\"));\n    },\n    name: \"LabelPrefix\"\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>Title</label>\\n                            </div>'), \"\\n                            \", HTML.DIV({\n    class: \"controls col-xs-12\"\n  }, \"\\n                                \", HTML.INPUT({\n    id: \"Title\",\n    class: \"form-control data-input textInput Title\",\n    type: \"text\",\n    required: \"\",\n    placeholder: function() {\n      return Spacebars.mustache(view.lookup(\"Title\"));\n    },\n    name: \"Title\"\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>LineWidth</label>\\n                            </div>'), \"\\n                            \", HTML.DIV({\n    class: \"controls col-xs-12\"\n  }, \"\\n                                \", HTML.INPUT({\n    id: \"LineWidth\",\n    class: \"form-control data-input textInput LineWidth\",\n    type: \"number\",\n    min: \"1\",\n    max: \"100\",\n    step: \".5\",\n    required: \"\",\n    placeholder: function() {\n      return Spacebars.mustache(view.lookup(\"LineWidth\"));\n    },\n    name: \"LineWidth\"\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>NullFillString</label>\\n                            </div>'), \"\\n                            \", HTML.DIV({\n    class: \"controls col-xs-12\"\n  }, \"\\n                                \", HTML.INPUT({\n    id: \"NullFillString\",\n    class: \"form-control data-input textInput NullFillString\",\n    type: \"text\",\n    required: \"\",\n    placeholder: function() {\n      return Spacebars.mustache(view.lookup(\"NullFillString\"));\n    },\n    name: \"NullFillString\"\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.DIV({\n    class: \"controls col-xs-2\"\n  }, \"\\n                                \", HTML.LABEL(\"ResetFromCode\", HTML.INPUT(HTML.Attrs({\n    type: \"checkbox\",\n    id: \"ResetFromCode\",\n    class: \"data-input ResetFromCode\",\n    name: \"ResetFromCode\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"ResetFromCodeChecked\"));\n  }))), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                            <button name=\"cancelSettings\" type=\"button\" class=\"cancel-settings btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel</button>\\n                            <button name=\"applySettings\" id=\"applySettings\" type=\"button\" class=\"apply_settings btn btn-primary\">&nbsp;&nbsp;Apply</button>\\n                        </div>'), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n        \"), \"\\n        \", HTML.Raw(\"<!-- /.modal-dialog -->\"), \"\\n    \") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"settings.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/settings.js                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsMethods;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsMethods: function (v) {\n    matsMethods = v;\n  }\n}, 2);\nTemplate.settings.helpers({\n  LabelPrefix: function () {\n    var settings = matsCollections.Settings.findOne({});\n    return settings === undefined ? \"\" : settings.LabelPrefix;\n  },\n  Title: function () {\n    var settings = matsCollections.Settings.findOne({});\n    return settings === undefined ? \"\" : settings.Title;\n  },\n  LineWidth: function () {\n    var settings = matsCollections.Settings.findOne({});\n    return settings === undefined ? \"\" : settings.LineWidth;\n  },\n  NullFillString: function () {\n    var settings = matsCollections.Settings.findOne({});\n    return settings === undefined ? \"\" : settings.NullFillString;\n  },\n  ResetFromCodeChecked: function () {\n    var settings = matsCollections.Settings.findOne({});\n\n    if (settings && settings.resetFromCode == true) {\n      return \"checked\";\n    } else {\n      return \"\";\n    }\n  }\n});\nTemplate.settings.events({\n  'click .apply_settings': function () {\n    // var labelPrefix = document.getElementById(\"LabelPrefix\").value;\n    // var title = document.getElementById(\"Title\").value;\n    // var lineWidth = document.getElementById(\"LineWidth\").value;\n    // var nullFillString = document.getElementById(\"NullFillString\").value;\n    // var resetFromCode = document.getElementById(\"ResetFromCode\").checked;\n    // var settings = {};\n    // settings.labelPrefix = labelPrefix;\n    // settings.title = title;\n    // settings.lineWidth = lineWidth;\n    // settings.nullFillString = nullFillString;\n    // settings.resetFromCode = resetFromCode;\n    // matsMethods.setSettings.call({'settings':settings}, function (error) {\n    //     if (error) {\n    //         setError(new Error(error.message));\n    //     }\n    // });\n    //// reset modal\n    //document.getElementById(\"LabelPrefix\").value = \"\";\n    //document.getElementById(\"Title\").value = \"\";\n    //document.getElementById(\"LineWidth\").value = \"\";\n    //document.getElementById(\"NullFillString\").value = \"\";\n    //document.getElementById(\"ResetFromCode\").checked = false;\n    $(\"#settingsModal\").modal('hide');\n    Session.set(\"adminChanged\", new Date());\n    return false;\n  },\n  'click .cancel-settings': function () {\n    // reset the form\n    document.getElementById(\"LabelPrefix\").value = \"\";\n    document.getElementById(\"Title\").value = \"\";\n    document.getElementById(\"LineWidth\").value = \"\";\n    document.getElementById(\"NullFillString\").value = \"\";\n    document.getElementById(\"ResetFromCode\").checked = false;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.databases.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/template.databases.js                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"databases\");\nTemplate[\"databases\"] = new Template(\"Template.databases\", (function() {\n  var view = this;\n  return [ HTML.STYLE({\n    id: \"jsbin-css\"\n  }, \"\\n        #apstMoleculeModal .form-group {\\n            padding-right: 20px;\\n            position: relative;\\n        }\\n\\n        #apstMoleculeModal .help {\\n            position: absolute;\\n            right: -8px;\\n            top: 12px;\\n        }\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"databasesModal\",\n    class: \"modal\",\n    role: \"dialog\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                \", HTML.Raw('<div class=\"modal-header\">\\n                    <h4 class=\"modal-title\">Databases</h4>\\n                </div>'), \"\\n                \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                    \", HTML.FORM({\n    class: \"form-horizontal\",\n    name: \"dbForm\",\n    novalidate: \"\"\n  }, \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                                \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                    <label>Database (or new)</label>\\n                                </div>'), \"\\n                                \", HTML.DIV({\n    class: \"controls col-xs-2\"\n  }, \"\\n                                    \", HTML.SELECT({\n    class: \"database\",\n    size: \"5\",\n    name: \"database\",\n    id: \"database-selection\"\n  }, \"\\n                                        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"databases\"));\n  }, function() {\n    return [ \"\\n                                            \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      }\n    }, Blaze.View(\"lookup:name\", function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    })), \"\\n                                        \" ];\n  }), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \"), \"\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"name\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>Name</label>\\n                            </div>'), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-12\">\\n                                    <input id=\"database-name\" class=\"form-control data-input textInput name\" type=\"text\" required=\"\" placeholder=\"name\" name=\"name\">\\n                            </div>'), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"role\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>Role</label>\\n                            </div>'), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-12\">\\n                                <input type=\"radio\" id=\"database-role-model\" name=\"database-role\" value=\"model\" checked=\"\">Model\\n                                <input type=\"radio\" id=\"database-role-ua\" name=\"database-role\" value=\"ua\">Ua\\n                            </div>'), \"\\n\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>Status</label>\\n                            </div>'), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-12\">\\n                                <input type=\"radio\" id=\"database-status-standby\" name=\"database-status\" value=\"standby\" checked=\"\">Standby\\n                                <input type=\"radio\" id=\"database-status-active\" name=\"database-status\" value=\"active\">Active\\n                            </div>'), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"host\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>Host</label>\\n                            </div>'), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-12\">\\n                                <input id=\"database-host\" class=\"form-control data-input textInput databaseHost\" type=\"text\" required=\"\" placeholder=\"host\" name=\"database-host\">\\n                            </div>'), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"database\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>Database</label>\\n                            </div>'), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-12\">\\n                                <input id=\"database-database\" class=\"form-control data-input textInput database\" type=\"text\" required=\"\" placeholder=\"database\" name=\"database\">\\n                            </div>'), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"user\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>User</label>\\n                            </div>'), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-12\">\\n                                <input id=\"database-user\" class=\"form-control data-input textInput database-user\" type=\"text\" required=\"\" placeholder=\"user\" name=\"database-user\">\\n                            </div>'), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"password\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>Password</label>\\n                            </div>'), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-12\">\\n                                <input id=\"database-password\" class=\"form-control data-input textInput database-password\" type=\"password\" required=\"\" placeholder=\"password\" name=\"database-password\">\\n                            </div>'), \"\\n\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>Verify Password</label>\\n                            </div>'), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-12\">\\n                                <input id=\"database-verify\" class=\"form-control data-input textInput database-verify\" type=\"password\" required=\"\" placeholder=\"verify password\" name=\"database-verify\">\\n                            </div>'), \"\\n                        \"), \"\\n\\n                        \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                            <button name=\"cancelDatabase\" type=\"button\" class=\"cancel-database btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel\\n                            </button>\\n                            <button name=\"applyDatabase\" type=\"button\" class=\"apply-database btn btn-primary\">\\n                                &nbsp;&nbsp;Apply\\n                            </button>\\n                            <button name=\"removeDatabase\" type=\"button\" class=\"remove-database btn btn-primary\">\\n                                &nbsp;&nbsp;Remove\\n                            </button>\\n                        </div>'), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n        \"), \"\\n        \", HTML.Raw(\"<!-- /.modal-dialog -->\"), \"\\n    \") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"databases.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/databases.js                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 0);\nvar matsMethods;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsMethods: function (v) {\n    matsMethods = v;\n  }\n}, 1);\nTemplate.databases.onRendered(function () {\n  reset();\n});\nTemplate.databases.helpers({\n  databases: function () {\n    dbs = matsCollections.Databases.find({}).fetch();\n    dbs.unshift({\n      name: \"New Database\"\n    });\n    return dbs;\n  },\n  errorMessage: function () {\n    return Session.get(\"databaseErrorMessage\");\n  },\n  errorTypeIs: function (type) {\n    return Session.get(\"databaseErrorType\") === type;\n  }\n});\n\nvar reset = function () {\n  document.getElementById(\"database-selection\").value = \"\";\n  document.getElementById(\"database-name\").value = \"\";\n  document.getElementById(\"database-role-model\").checked = false;\n  document.getElementById(\"database-role-ua\").checked = false;\n  document.getElementById(\"database-status-standby\").checked = false;\n  document.getElementById(\"database-status-active\").checked = false;\n  document.getElementById(\"database-host\").value = \"\";\n  document.getElementById(\"database-database\").value = \"\";\n  document.getElementById(\"database-user\").value = \"\";\n  document.getElementById(\"database-password\").value = \"\";\n  document.getElementById(\"database-verify\").value = \"\";\n  resetError();\n};\n\nvar resetError = function () {\n  errorMessage = \"\";\n  Session.set(\"databaseErrorMessage\", \"\");\n  Session.set(\"databaseErrorType\", \"\");\n\n  if (document.getElementById(\"errorMessage\")) {\n    document.getElementById(\"errorMessage\").style.display = \"none\";\n  }\n};\n\nvar setError = function (type, message) {\n  Session.set(\"databaseErrorMessage\", message);\n  Session.set(\"databaseErrorType\", type);\n  document.getElementById(\"errorMessage\").style.display = \"block\";\n};\n\nTemplate.databases.events({\n  'click .database': function () {\n    resetError();\n    var dbName = document.getElementById(\"database-selection\").value;\n\n    if (dbName == \"New Database\") {\n      reset();\n      return false;\n    }\n\n    var db = matsCollections.Databases.findOne({\n      name: dbName\n    });\n    document.getElementById(\"database-selection\").value = \"\";\n    document.getElementById(\"database-name\").value = db.name;\n    document.getElementById(\"database-role-model\").checked = db.role == \"model\";\n    document.getElementById(\"database-role-ua\").checked = db.role == \"ua\";\n    document.getElementById(\"database-status-standby\").checked = db.status == \"standby\";\n    document.getElementById(\"database-status-active\").checked = db.status == \"active\";\n    document.getElementById(\"database-host\").value = db.host;\n    document.getElementById(\"database-database\").value = db.database;\n    document.getElementById(\"database-user\").value = db.user;\n    document.getElementById(\"database-password\").value = db.password;\n    document.getElementById(\"database-verify\").value = db.password;\n  },\n  'click .apply-database': function () {\n    var settings = {};\n    resetError();\n    settings.name = document.getElementById(\"database-name\").value;\n\n    if (document.getElementById(\"database-role-model\").checked === true) {\n      settings.role = \"model\";\n    } else if (document.getElementById(\"database-role-ua\").checked === true) {\n      settings.role = \"ua\";\n    }\n\n    if (document.getElementById(\"database-status-standby\").checked === true) {\n      settings.status = \"standby\";\n    } else if (document.getElementById(\"database-status-active\").checked === true) {\n      // set any other database with this role to standby\n      matsCollections.Databases.upsert({});\n      settings.status = \"active\";\n    }\n\n    settings.host = document.getElementById(\"database-host\").value;\n    settings.database = document.getElementById(\"database-database\").value;\n    settings.user = document.getElementById(\"database-user\").value;\n    settings.password = document.getElementById(\"database-password\").value;\n    var verify = document.getElementById(\"database-verify\").value;\n\n    if (settings.password != verify) {\n      setError('password', \"Password and Verify do not match!\");\n      return false;\n    }\n\n    if (settings.name === \"\") {\n      setError(\"name\", \"you have to set a name\");\n      return false;\n    } // ONLY ONE CAN BE ACTIVE FOR A GIVEN ROLE\n    //if (settings.role === \"\") {\n    //    setError(role,\"you have to set a role\");\n    //    return false;\n    //}\n\n\n    if (settings.host === \"\") {\n      setError('host', \"you have to set a host\");\n      return false;\n    }\n\n    if (settings.database === \"\") {\n      setError('database', \"you have to set a database\");\n      return false;\n    }\n\n    if (settings.user === \"\") {\n      setError('user', \"you have to set a user\");\n      return false;\n    }\n\n    matsMethods.applyDatabaseSettings.call(settings, function (error) {\n      if (error) {\n        setError(new error('matsMethods.applyDatabaseSettings from Template.databases.events: 121 error:' + error.message));\n        return false;\n      }\n    });\n    reset();\n    $(\"#databasesModal\").modal('hide');\n    return false;\n  },\n  'click .remove-database': function () {\n    var dbName = document.getElementById(\"database-name\").value;\n    matsMethods.removeDatabase.call(dbName, function (error) {\n      if (error) {\n        setError(new Error('matsMethods.removeDatabase from Template.databases.events: 121 error:' + error.message));\n      }\n    });\n    reset();\n    $(\"#databasesModal\").modal('hide');\n    return false;\n  },\n  'click .cancel-database': function () {\n    reset();\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"plotParams.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/plotParams.js                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/13/15.\n */\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.colorsScheme.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/template.colorsScheme.js                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"colorScheme\");\nTemplate[\"colorScheme\"] = new Template(\"Template.colorScheme\", (function() {\n  var view = this;\n  return [ HTML.STYLE({\n    id: \"jsbin-css\"\n  }, \"\\n        #apstMoleculeModal .form-group {\\n            padding-right: 20px;\\n            position: relative;\\n        }\\n\\n        #apstMoleculeModal .help {\\n            position: absolute;\\n            right: -8px;\\n            top: 12px;\\n        }\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"colorSchemeModal\",\n    class: \"modal\",\n    role: \"dialog\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                \", HTML.Raw('<div class=\"modal-header\">\\n                    <h4 class=\"modal-title\">Color Scheme</h4>\\n                </div>'), \"\\n                \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                    \", HTML.FORM({\n    class: \"form-horizontal\",\n    name: \"csForm\",\n    novalidate: \"\"\n  }, \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>new</label>\\n                            </div>'), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <div class=\"input-group colorSchemePicker\" col-xs-2=\"\">\\n                                <span class=\"input-group-addon\"><input id=\"colorSchemePicker\" type=\"text\" class=\"colorpicker-component colorSchemePicker\" value=\"rgb(255,255,255)\" style=\"background:transparent;background-color:rgb(255,255,255);\">\\n                                <i id=\"colorSchemePickerIndicator\" style=\"background-color: rgb(255,255,255);\"></i></span>\\n                                </div>\\n                            </div>'), \"\\n                            \", HTML.DIV({\n    class: \"controls col-xs-2\"\n  }, \"\\n                                \", HTML.SCRIPT(\"\\n                                    $(function () {\\n                                        $('.colorSchemePicker').colorpicker();\\n                                    });\\n                                \"), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>insert after</label>\\n                            </div>'), \"\\n                            \", HTML.DIV({\n    class: \"controls col-xs-2\"\n  }, \"\\n                                \", HTML.SELECT({\n    class: \"data-input insert-after-color\",\n    size: \"5\",\n    name: \"insert_after_color\",\n    id: \"insertAfterColor\"\n  }, \"\\n                                    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"colorOptions\"));\n  }, function() {\n    return [ \"\\n                                        \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"color\"));\n      },\n      style: function() {\n        return [ \"color:\", Spacebars.mustache(view.lookup(\"color\")), \";\" ];\n      }\n    }, Blaze.View(\"lookup:color\", function() {\n      return Spacebars.mustache(view.lookup(\"color\"));\n    }), \">\"), \"\\n                                    \" ];\n  }), \"\\n                                \"), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>Remove</label>\\n                            </div>'), \"\\n                            \", HTML.DIV({\n    class: \"controls col-xs-2\"\n  }, \"\\n                                \", HTML.SELECT({\n    class: \"data-input remove-color\",\n    size: \"5\",\n    name: \"remove_color\",\n    id: \"removeColor\"\n  }, \"\\n                                    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"colorOptions\"));\n  }, function() {\n    return [ \"\\n                                        \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"color\"));\n      },\n      style: function() {\n        return [ \"color:\", Spacebars.mustache(view.lookup(\"color\")), \";\" ];\n      }\n    }, Blaze.View(\"lookup:color\", function() {\n      return Spacebars.mustache(view.lookup(\"color\"));\n    })), \"\\n                                    \" ];\n  }), \"\\n                                \"), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                            <button name=\"cancelColorScheme\" type=\"button\" class=\"cancel-color-scheme btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel\\n                            </button>\\n                            <button name=\"applyColorScheme\" type=\"button\" class=\"apply-color-scheme btn btn-primary\">\\n                                &nbsp;&nbsp;Apply\\n                            </button>\\n                        </div>'), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n        \"), \"\\n        \", HTML.Raw(\"<!-- /.modal-dialog -->\"), \"\\n    \") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"colorScheme.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/colorScheme.js                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsMethods;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsMethods: function (v) {\n    matsMethods = v;\n  }\n}, 2);\nTemplate.colorScheme.helpers({\n  colorOptions: function () {\n    var colorScheme = matsCollections.ColorScheme.findOne({});\n\n    if (colorScheme === undefined) {\n      return false;\n    }\n\n    var colors = colorScheme.colors;\n    var colorOptions = [];\n\n    for (var i = 0; i < colors.length; i++) {\n      colorOptions.push({\n        color: colors[i]\n      });\n    }\n\n    return colorOptions;\n  }\n});\nTemplate.colorScheme.events({\n  'click .apply-color-scheme': function () {\n    var removeColor = document.getElementById(\"removeColor\").value;\n    var insertAfterColor = document.getElementById(\"insertAfterColor\").value;\n    var newColor = document.getElementById(\"colorSchemePicker\").value;\n    var colors = matsCollections.ColorScheme.findOne({}).colors;\n\n    if (newColor) {\n      var insertAfterIndex = 0;\n\n      if (insertAfterColor) {\n        insertAfterIndex = colors.indexOf(insertAfterColor);\n      }\n\n      matsMethods.insertColor({\n        newColor: newColor,\n        insertAfterIndex: insertAfterIndex\n      }, function (error) {\n        if (error) {\n          setError(new Error(error.message));\n        }\n      });\n    }\n\n    if (removeColor) {\n      Meteor.call('removeColor', removeColor, function (error) {\n        if (error) {\n          setError(new Error(error.message));\n        }\n      });\n    } // reset modal\n\n\n    document.getElementById(\"removeColor\").value = \"\";\n    document.getElementById(\"insertAfterColor\").value = \"\";\n    document.getElementById(\"colorSchemePicker\").color = \"rgb(255,255,255)\";\n    document.getElementById(\"colorSchemePicker\").value = \"rgb(255,255,255)\";\n    document.getElementById(\"colorSchemePickerIndicator\").style.backgroundColor = \"rgb(255,255,255)\";\n    $(\"#colorSchemeModal\").modal('hide');\n    return false;\n  },\n  'click .cancel-color-scheme': function () {\n    // reset the form\n    document.getElementById(\"removeColor\").value = null;\n    document.getElementById(\"removeColor\").value = \"\";\n    document.getElementById(\"insertAfterColor\").value = \"\";\n    document.getElementById(\"colorSchemePicker\").color = \"rgb(255,255,255)\";\n    document.getElementById(\"colorSchemePicker\").value = \"rgb(255,255,255)\";\n    document.getElementById(\"colorSchemePickerIndicator\").style.backgroundColor = \"rgb(255,255,255)\";\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.curveParams.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/template.curveParams.js                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"curveParams\");\nTemplate[\"curveParams\"] = new Template(\"Template.curveParams\", (function() {\n  var view = this;\n  return [ HTML.STYLE({\n    id: \"jsbin-css\"\n  }, \"\\n        #apstMoleculeModal .form-group {\\n            padding-right: 20px;\\n            position: relative;\\n        }\\n\\n        #apstMoleculeModal .help {\\n            position: absolute;\\n            right: -8px;\\n            top: 12px;\\n        }\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"curveParamsModal\",\n    class: \"modal wide-modal\",\n    role: \"dialog\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog\",\n    style: \"width:80%;\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-content container\"\n  }, \"\\n                \", HTML.Raw('<div class=\"modal-header\">\\n                    <h4 class=\"modal-title\">Curve Parameters</h4>\\n                </div>'), \"\\n                \", HTML.DIV({\n    class: \"modal-body container\"\n  }, \"\\n                    \", HTML.FORM({\n    class: \"form-horizontal\",\n    name: \"cpForm\",\n    novalidate: \"\"\n  }, \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.DIV({\n    class: \"form-group row\"\n  }, \"\\n                                \", HTML.Raw('<div class=\"controls col-xs-1\" style=\"min-width:6em\">\\n                                    <label>Parameter</label>\\n                                </div>'), \"\\n                                \", HTML.Raw('<div class=\"controls col-xs-1\">\\n                                    <button type=\"button\" id=\"curveParams-selection-add\" class=\"curveParams-selection-add btn btn-xs btn-success fa fa-plus\"></button>\\n                                    <button type=\"button\" id=\"curveParams-selection-remove\" class=\"curveParams-selection-remove btn btn-xs btn-danger fa fa-minus\"></button>\\n                                </div>'), \"\\n                                \", HTML.DIV({\n    class: \"controls col-xs-8\"\n  }, \"\\n                                    \", HTML.SELECT({\n    class: \"curveParams-selection\",\n    size: \"5\",\n    name: \"curveParams-selection\",\n    id: \"curveParams-selection\"\n  }, \"\\n                                      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"curveParams\"));\n  }, function() {\n    return [ \"\\n                                          \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      }\n    }, Blaze.View(\"lookup:name\", function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    })), \"\\n                                      \" ];\n  }), \"\\n                                    \"), \"\\n                                \"), \"\\n\\n\\n                            \"), \"\\n\\n                          \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"\");\n  }, function() {\n    return [ \"\\n                              \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                          \" ];\n  }), \"\\n\\n                          \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"name\");\n  }, function() {\n    return [ \"\\n                              \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                          \" ];\n  }), \"\\n                            \", HTML.Raw('<div class=\"form-group row\">\\n                                <div class=\"controls col-xs-2\">\\n                                    <label>Name</label>\\n                                </div>\\n                                <div class=\"controls col-xs-2\" style=\"min-width:12em;\">\\n                                    <input id=\"curveParams-name\" data-field=\"name\" class=\"form-control data-input textInput name\" type=\"text\" placeholder=\"name\" name=\"name\">\\n                                </div>\\n                            </div>'), \"\\n                          \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"type\");\n  }, function() {\n    return [ \"\\n                              \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                          \" ];\n  }), \"\\n                            \", HTML.DIV({\n    class: \"form-group row\"\n  }, \"\\n                                \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                    <label>Type</label>\\n                                </div>'), \"\\n                                \", HTML.DIV({\n    class: \"controls col-xs-4\"\n  }, \"\\n                                    \", HTML.SELECT({\n    class: \"data-value curveParamsType\",\n    size: \"5\",\n    \"data-field\": \"type\",\n    id: \"curveParams-type\"\n  }, \"\\n                                      \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"types\"));\n  }, function() {\n    return [ \"\\n                                          \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\".\"));\n      }\n    }, Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    })), \"\\n                                      \" ];\n  }), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \"), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"options\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.DIV({\n    class: \"form-group row\"\n  }, \"\\n                                \", HTML.Raw('<div class=\"controls col-xs-1\" style=\"min-width:8em;\">\\n                                    <label>Options Map</label>\\n                                </div>'), \"\\n                                \", HTML.Raw('<div class=\"controls col-xs-1\">\\n                                    <button type=\"button\" id=\"curveParams-option-add\" class=\"curveParams-option-add btn btn-xs btn-success fa fa-plus\"></button>\\n                                    <button type=\"button\" id=\"curveParams-option-remove\" class=\"curveParams-option-remove btn btn-xs btn-danger fa fa-minus\"></button>\\n                                </div>'), \"\\n                                \", HTML.DIV({\n    class: \"controls col-xs-10\"\n  }, \"\\n                                    \", HTML.TABLE({\n    class: \"table table-condensed table-responsive table-bordered\",\n    id: \"optionsTable\"\n  }, \"\\n                                        \", HTML.TBODY(\"\\n                                        \", Blaze.View(\"lookup:optionRows\", function() {\n    return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"optionRows\")));\n  }), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \"), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"controlButtonCovered\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.Raw('<div class=\"form-group row\">\\n                                <div class=\"controls col-xs-2\" style=\"min-width:12em;\">\\n                                    <label>Control Button Covered</label>\\n                                </div>\\n                                <div class=\"controls col-xs-2\">\\n                                        <input class=\"data-radio\" type=\"radio\" id=\"curveParams-controlButtonCovered-true\" data-field=\"controlButtonCovered\" name=\"controlButtonCovered\" value=\"true\" checked=\"\">True\\n                                        <input class=\"data-radio\" type=\"radio\" id=\"curveParams-controlButtonCovered-false\" data-field=\"controlButtonCovered\" name=\"controlButtonCovered\" value=\"false\">False\\n                                </div>\\n                            </div>'), \"\\n\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"unique\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.Raw('<div class=\"form-group row\">\\n                                <div class=\"controls col-xs-2\" style=\"min-width:12em;\">\\n                                    <label>Ensure Uniqueness</label>\\n                                </div>\\n                                <div class=\"controls col-xs-2\">\\n                                    <input class=\"data-radio\" type=\"radio\" id=\"curveParams-unique-true\" data-field=\"unique\" name=\"unique\" value=\"true\" checked=\"\">True\\n                                    <input class=\"data-radio\" type=\"radio\" id=\"curveParams-unique-false\" data-field=\"unique\" name=\"unique\" value=\"false\">False\\n                                </div>\\n                            </div>'), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"default\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.DIV({\n    class: \"form-group row\"\n  }, \"\\n                                \", HTML.Raw('<div class=\"controls col-xs-2\" style=\"min-width:12em;\">\\n                                    <label>Default Value</label>\\n                                </div>'), \"\\n                                \", HTML.DIV({\n    class: \"controls col-xs-4\"\n  }, \"\\n                                    \", HTML.INPUT({\n    id: \"curveParams-default\",\n    \"data-field\": \"default\",\n    class: \"form-control data-input textInput default\",\n    type: \"text\",\n    placeholder: function() {\n      return Spacebars.mustache(view.lookup(\"default\"));\n    }\n  }), \"\\n                                \"), \"\\n                            \"), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"controlButtonVisibility\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.Raw('<div class=\"form-group row\">\\n                                <div class=\"controls col-xs-2\" style=\"min-width:12em;\">\\n                                    <label>Control Button Visibility</label>\\n                                </div>\\n                                <div class=\"controls col-xs-2\">\\n                                    <input class=\"data-radio\" type=\"radio\" id=\"curveParams-controlButtonVisibility-block\" data-field=\"curveParams-controlButtonVisibility\" name=\"curveParams-controlButtonVisibility\" value=\"block\" checked=\"\">Visible\\n                                    <input class=\"data-radio\" type=\"radio\" id=\"curveParams-controlButtonVisibility-none\" data-field=\"curveParams-controlButtonVisibility\" name=\"curveParams-controlButtonVisibility\" value=\"none\">Hidden\\n                                </div>\\n                            </div>'), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"displayOrder\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.DIV({\n    class: \"form-group row\"\n  }, \"\\n                                \", HTML.Raw('<div class=\"controls col-xs-2\" style=\"min-width:12em;\">\\n                                    <label>DisplayOrder</label>\\n                                </div>'), \"\\n                                \", HTML.DIV({\n    class: \"controls col-xs-4\"\n  }, \"\\n                                    \", HTML.INPUT({\n    id: \"curveParams-displayOrder\",\n    \"data-field\": \"displayOrder\",\n    class: \"form-control data-input textInput displayOrder\",\n    type: \"number\",\n    placeholder: function() {\n      return Spacebars.mustache(view.lookup(\"displayOrder\"));\n    },\n    min: \"1\",\n    max: \"25\",\n    step: \"1\"\n  }), \"\\n                                \"), \"\\n                            \"), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"displayPriority\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.DIV({\n    class: \"form-group row\"\n  }, \"\\n                                \", HTML.Raw('<div class=\"controls col-xs-2\" style=\"min-width:12em;\">\\n                                    <label>displayPriority</label>\\n                                </div>'), \"\\n                                \", HTML.DIV({\n    class: \"controls col-xs-4\"\n  }, \"\\n                                    \", HTML.INPUT({\n    id: \"curveParams-displayPriority\",\n    \"data-field\": \"displayPriority\",\n    class: \"form-control data-input textInput displayPriority\",\n    type: \"number\",\n    placeholder: function() {\n      return Spacebars.mustache(view.lookup(\"displayPriority\"));\n    },\n    min: \"1\",\n    max: \"10\",\n    step: \"1\"\n  }), \"\\n                                \"), \"\\n                            \"), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"displayGroup\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.DIV({\n    class: \"form-group row\"\n  }, \"\\n                                \", HTML.Raw('<div class=\"controls col-xs-2\" style=\"min-width:12em;\">\\n                                    <label>displayGroup</label>\\n                                </div>'), \"\\n                                \", HTML.DIV({\n    class: \"controls col-xs-4\"\n  }, \"\\n                                    \", HTML.INPUT({\n    id: \"curveParams-displayGroup\",\n    \"data-field\": \"displayGroup\",\n    class: \"form-control data-input textInput displayGroup\",\n    type: \"number\",\n    placeholder: function() {\n      return Spacebars.mustache(view.lookup(\"displayGroup\"));\n    },\n    min: \"1\",\n    max: \"10\",\n    step: \"1\"\n  }), \"\\n                                \"), \"\\n                                \", HTML.Raw('<div class=\"col-xs-9\"></div>'), \"\\n                            \"), \"\\n\\n                        \"), \"\\n                        \", HTML.DIV({\n    id: \"applyCurveParamsModal\",\n    class: \"modal\",\n    role: \"dialog\"\n  }, \"\\n                            \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n                                \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                                    \", HTML.Raw('<div class=\"modal-header\">\\n                                        <h4>Apply Curve Params</h4>\\n                                    </div>'), \"\\n                                    \", HTML.Raw('<div class=\"modal-body\">\\n                                        <label>Apply Comment...</label>\\n                                    </div>'), \"\\n                                    \", HTML.DIV({\n    class: \"controls col-xs-4\"\n  }, \"\\n                                        \", HTML.TEXTAREA({\n    id: \"applyCurveParamsComment\",\n    class: \"applyCurveParamsComment textInput\",\n    value: \"Enter Comment\",\n    placeholder: \"Enter Comment\"\n  }), \"\\n                                    \"), \"\\n                                    \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                                        <button type=\"button\" class=\"cancel-restore btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel</button>\\n                                        <button name=\"applyCurveParamsWithComment\" class=\"applyCurveParamsWithComment btn btn-primary\">&nbsp;&nbsp;Apply</button>\\n                                    </div>'), \"\\n                                \"), \"\\n                                \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n                            \"), \"\\n                            \", HTML.Raw(\"<!-- /.modal-dialog -->\"), \"\\n                        \"), \"\\n\\n                        \", HTML.DIV({\n    id: \"restoreCurveParamsModal\",\n    class: \"modal\",\n    role: \"dialog\"\n  }, \"\\n                            \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n                                \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                                    \", HTML.Raw('<div class=\"modal-header\">\\n                                        <h4>Restore Curve Params</h4>\\n                                    </div>'), \"\\n                                    \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                                        \", HTML.Raw(\"<label>Restore from date...</label>\"), \"\\n                                        \", HTML.Raw('<input style=\"font-size: x-small\" type=\"text\" class=\"restoreFromSeconds form-control\" id=\"restoreFromSeconds\" placeholder=\"choose from Restore From\">'), \"\\n                                        \", HTML.DIV({\n    class: \"dropdown\"\n  }, \"\\n                                            \", HTML.Raw('<button id=\"restore-choose-date-toggle\" class=\"btn btn-default btn-xs dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\\n                                                Choose Date (toggle user for comments)<span class=\"caret\"></span>\\n                                            </button>'), \"\\n                                            \", HTML.UL({\n    class: \"dropdown-menu\"\n  }, \"\\n                                                \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"restoreDates\"));\n  }, function() {\n    return [ \"\\n                                                    \", HTML.LI(\"\\n                                                        \", HTML.DIV({\n      class: \"btn-toolbar btn-group-xs\",\n      role: \"toolbar\"\n    }, \"\\n                                                        \", HTML.BUTTON({\n      class: \"restoreCurveParamsDate btn  btn-primary\",\n      \"data-date\": function() {\n        return Spacebars.mustache(view.lookup(\"date\"));\n      },\n      \"data-second\": function() {\n        return Spacebars.mustache(view.lookup(\"second\"));\n      },\n      \"data-user\": function() {\n        return Spacebars.mustache(view.lookup(\"userName\"));\n      },\n      \"data-comment\": function() {\n        return Spacebars.mustache(view.lookup(\"commentStr\"));\n      },\n      id: function() {\n        return [ \"restoreCurveParamsDate-\", Spacebars.mustache(view.lookup(\"second\")) ];\n      }\n    }, Blaze.View(\"lookup:date\", function() {\n      return Spacebars.mustache(view.lookup(\"date\"));\n    })), \"\\n                                                        \", Blaze.View(\"lookup:user\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"user\")));\n    }), \"\\n                                                        \", Blaze.View(\"lookup:comment\", function() {\n      return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"comment\")));\n    }), \"\\n                                                        \"), \"\\n                                                    \"), \"\\n                                                \" ];\n  }), \"\\n                                            \"), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                    \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                                        <button type=\"button\" class=\"cancel-restoreCurveParamsFromDate btn btn-info\">&nbsp;&nbsp;Cancel</button>\\n                                        <button name=\"restoreCurveParamsFromDate\" class=\"restoreCurveParamsFromDate btn btn-primary\">&nbsp;&nbsp;Restore From</button>\\n                                    </div>'), \"\\n                                \"), \"\\n                                \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n                            \"), \"\\n                            \", HTML.Raw(\"<!-- /.modal-dialog -->\"), \"\\n                        \"), \"\\n                        \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                            <button name=\"cancelCurveParams\" type=\"button\" class=\"cancel-curveParams btn btn-info\" data-dismiss=\"modal\">Cancel</button>\\n                            <button name=\"applyCurveParams\" type=\"button\" class=\"applyCurveParams btn btn-primary\">Apply</button>\\n                            <button name=\"restoreCurveParams\" type=\"button\" class=\"restoreCurveParams btn btn-primary\">Restore Previous</button>\\n                        </div>'), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n        \"), \"\\n        \", HTML.Raw(\"<!-- /.modal-dialog -->\"), \"\\n    \") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"curveParams.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/curveParams.js                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 2);\n\n/**\n * Created by pierce on 8/13/15.\n */\nTemplate.curveParams.onRendered(function () {\n  reset();\n});\nTemplate.curveParams.helpers({\n  curveParams: function () {\n    if (Session.get('params') === undefined) {\n      var params = matsCollections.CurveParams.find({}, {\n        sort: {\n          displayOrder: 1\n        }\n      }).fetch();\n      Session.set('params', params);\n    }\n\n    return Session.get('params');\n  },\n  optionRows: function () {\n    var rows = \"\"; // find the object in the session that is associated with the currently selected name\n\n    var params = Session.get('params');\n\n    if (params == undefined) {\n      return \"\";\n    }\n\n    if (!document.getElementById('curveParams-selection') || document.getElementById('curveParams-selection') == \"\") {\n      return \"\";\n    }\n\n    var paramSelectedName = document.getElementById('curveParams-selection').value;\n    var param = params.filter(function (obj) {\n      return obj.name === paramSelectedName;\n    })[0];\n\n    if (param == undefined) {\n      return;\n    }\n\n    var optionsMap = param.optionsMap;\n\n    if (optionsMap == undefined) {\n      return \"\";\n    } // create the options table rows\n\n\n    var optionKeys = Object.keys(optionsMap);\n    param.options = optionKeys;\n\n    for (var i = 0; i < optionKeys.length; i++) {\n      var optionList = optionsMap[optionKeys[i]];\n      rows += '<tr><td contentEditable width=\"10%\" style=\"min-width:3em;\"><input data-field=\"optionsMap.' + optionKeys[i] + \"_\" + i + '\" id=\"curveParams-option-' + i + '\" class=\"form-control data-input textInput\" type=\"text\" value=\"' + optionKeys[i] + '\"/></td>';\n\n      for (var oli = 0; oli < optionList.length; oli++) {\n        rows += '<td contentEditable><textarea data-field=\"optionsMap.' + optionKeys[i] + '_' + i + '[' + oli + ']' + '\" id=\"curveParams-optionList-' + i + '-' + oli + '\" class=\"form-control data-input optionsTable\"' + '<span style=\"font-size:x-small\">' + optionList[oli] + '</textarea></td>';\n      }\n\n      rows += '<td><span><button id=\"curveParams-option-field-add-' + optionKeys[i] + '\" class=\"option-field-add btn btn-xs btn-success fa fa-plus\"/>';\n      rows += '<button id=\"curveParams-option-field-del-' + optionKeys[i] + '\" class=\"option-field-del btn btn-xs btn-danger fa fa-minus\"/></span></td>';\n      rows += \"</tr>\";\n    }\n\n    Session.set('params', params);\n    return rows;\n  },\n  \"default\": function () {\n    try {\n      var cname = document.getElementById(\"curveParams-selection\").value;\n      var c = Session.get('params').filter(function (obj) {\n        return obj.name == cname;\n      });\n\n      if (c) {\n        return c.default;\n      } else {\n        return \"\";\n      }\n    } catch (Exception) {\n      return \"\";\n    }\n  },\n  displayOrder: function () {\n    try {\n      var cname = document.getElementById(\"curveParams-selection\").value;\n      var c = Session.get('params').filter(function (obj) {\n        return obj.name == cname;\n      });\n\n      if (c) {\n        return c.displayOrder;\n      } else {\n        return 1;\n      }\n    } catch (Exception) {\n      return 1;\n    }\n  },\n  displayPriority: function () {\n    try {\n      var cname = document.getElementById(\"curveParams-selection\").value;\n      var c = Session.get('params').filter(function (obj) {\n        return obj.name == cname;\n      });\n\n      if (c) {\n        return c.displayPriority;\n      } else {\n        return 1;\n      }\n    } catch (Exception) {\n      return 1;\n    }\n  },\n  displayGroup: function () {\n    try {\n      var cname = document.getElementById(\"curveParams-selection\").value;\n      var c = Session.get('params').filter(function (obj) {\n        return obj.name == cname;\n      });\n\n      if (c) {\n        return c.displayGroup;\n      } else {\n        return 1;\n      }\n    } catch (Exception) {\n      return 1;\n    }\n  },\n  types: function () {\n    return Object.keys(matsTypes.InputTypes);\n  },\n  errorMessage: function () {\n    return Session.get(\"curveParamsErrorMessage\");\n  },\n  errorTypeIs: function (errType) {\n    return Session.get(\"curveParamsErrorType\") === errType;\n  },\n  restoreDates: function () {\n    try {\n      var scp = matsCollections.SavedCurveParams.findOne({\n        'clName': 'changeList'\n      });\n      var cl = scp.changeList;\n      var dates = [];\n\n      for (var i = 0; i < cl.length; i++) {\n        var utcSeconds = cl[i].savedAt;\n        var comment = \"<textarea id='ta-\" + utcSeconds + \"' style='display:none'>\" + cl[i].comment + \"</textarea>\";\n        var userName = cl[i].user.split('@')[0].replace('.', ' ');\n        var user = \"<button id='btnUser-\" + utcSeconds + \"' class='btnUser btn  btn-info'>\" + userName + \"</button>\";\n        var d = new Date(0);\n        d.setUTCSeconds(utcSeconds);\n        var mo = d.getMonth();\n        var day = d.getDate();\n        var yr = d.getFullYear();\n        var hr = d.getHours();\n        var mn = d.getMinutes();\n        var sec = d.getSeconds();\n        var dStr = mo + \"-\" + day + \"-\" + yr + \"-\" + hr + \":\" + mn + \":\" + sec;\n        dates.push({\n          second: utcSeconds,\n          date: dStr,\n          user: user,\n          userName: userName,\n          commentStr: cl[i].comment,\n          comment: comment\n        });\n      }\n\n      return dates;\n    } catch (e) {\n      return [];\n    }\n  },\n  restoreDate: function () {\n    try {\n      var scp = matsCollections.SavedCurveParams.findOne({\n        'clName': 'changeList'\n      });\n      var cl = scp.changeList;\n      var utcSeconds = cl[cl.length - 1].savedAt;\n      var user = cl[cl.length - 1].user.split('@')[0].replace('.', ' ');\n      var comment = cl[cl.length - 1].comment;\n      var d = new Date(0);\n      d.setUTCSeconds(utcSeconds);\n      var mo = d.getMonth();\n      var day = d.getDate();\n      var yr = d.getFullYear();\n      var hr = d.getHours();\n      var mn = d.getMinutes();\n      var sec = d.getSeconds();\n      return mo + \"-\" + day + \"-\" + yr + \"-\" + hr + \":\" + mn + \":\" + sec + \" \" + user + \" ... \" + comment;\n    } catch (e) {\n      return \"\";\n    }\n  }\n});\n\nvar reset = function () {\n  document.getElementById(\"curveParams-name\").value = \"\";\n  document.getElementById(\"curveParams-type\").value = \"\";\n  document.getElementById(\"curveParams-controlButtonCovered-true\").checked = true;\n  document.getElementById(\"curveParams-controlButtonCovered-false\").checked = false;\n  document.getElementById(\"curveParams-controlButtonVisibility-block\").checked = true;\n  document.getElementById(\"curveParams-controlButtonVisibility-none\").checked = false;\n  document.getElementById(\"curveParams-unique-true\").checked = false;\n  document.getElementById(\"curveParams-unique-false\").checked = true;\n  document.getElementById(\"curveParams-default\").value = \"\";\n  document.getElementById(\"curveParams-displayOrder\").value = 1;\n  document.getElementById(\"curveParams-displayPriority\").value = 1;\n  document.getElementById(\"curveParams-displayGroup\").value = 1;\n  resetError();\n};\n\nvar resetError = function () {\n  errorMessage = \"\";\n  Session.set(\"curveParamsErrorMessage\", \"\");\n  Session.set(\"curveParamsErrorType\", \"\");\n\n  if (document.getElementById(\"errorMessage\")) {\n    document.getElementById(\"errorMessage\").style.display = \"none\";\n  }\n};\n\nvar setError = function (type, message) {\n  Session.set(\"curveParamsErrorMessage\", message);\n  Session.set(\"curveParamsErrorType\", type);\n  document.getElementById(\"errorMessage\").style.display = \"block\";\n};\n\nTemplate.curveParams.events({\n  'click .curveParams-selection': function () {\n    event.preventDefault();\n\n    try {\n      resetError();\n      var cname = document.getElementById(\"curveParams-selection\").value;\n      reset();\n      var params = Session.get('params');\n      var c = params.filter(function (obj) {\n        return obj.name == cname;\n      })[0]; // want the first one - like collection.findOne({name:cname})\n\n      if (!c) {\n        return false;\n      }\n\n      document.getElementById(\"curveParams-name\").value = c.name;\n      document.getElementById(\"curveParams-type\").value = c.type;\n\n      if (c.controlButtonCovered) {\n        document.getElementById(\"curveParams-controlButtonCovered-true\").checked = true;\n        document.getElementById(\"curveParams-controlButtonCovered-false\").checked = false;\n      } else {\n        document.getElementById(\"curveParams-controlButtonCovered-true\").checked = false;\n        document.getElementById(\"curveParams-controlButtonCovered-false\").checked = true;\n      }\n\n      if (c.controlButtonVisibility == \"block\") {\n        document.getElementById(\"curveParams-controlButtonVisibility-block\").checked = true;\n        document.getElementById(\"curveParams-controlButtonVisibility-none\").checked = false;\n      } else {\n        document.getElementById(\"curveParams-controlButtonVisibility-block\").checked = false;\n        document.getElementById(\"curveParams-controlButtonVisibility-none\").checked = true;\n      }\n\n      document.getElementById(\"curveParams-default\").value = c.default;\n      document.getElementById(\"curveParams-displayOrder\").value = c.displayOrder;\n      document.getElementById(\"curveParams-displayPriority\").value = c.displayPriority;\n      document.getElementById(\"curveParams-displayGroup\").value = c.displayGroup;\n      Session.set('lastUpdate', Date.now()); // force re-render to get the optionMap\n    } catch (Exception) {\n      console.log(Exception);\n    }\n\n    return false;\n  },\n  'click .curveParams-selection-add': function () {\n    event.preventDefault();\n    var dispOrder = 1;\n    var dispPri = 1;\n    var dispGroup = 1;\n    var seconds = new Date() / 1000 | 0;\n    var params = Session.get('params');\n    var optionsMap = {};\n    params.push({\n      name: 'New-' + seconds,\n      type: matsTypes.InputTypes.textInput,\n      optionsMap: optionsMap,\n      options: Object.keys(optionsMap),\n      // convenience\n      controlButtonCovered: true,\n      \"default\": '',\n      unique: false,\n      controlButtonVisibility: 'block',\n      displayOrder: dispOrder,\n      displayPriority: dispPri,\n      displayGroup: dispGroup\n    });\n    Session.set('params', params);\n    return false;\n  },\n  'click .curveParams-selection-remove': function () {\n    event.preventDefault();\n    var removeName = document.getElementById(\"curveParams-selection\").value;\n    var params = Session.get('params');\n    var newParams = params.filter(function (value) {\n      return value.name != removeName;\n    });\n    Session.set('params', newParams);\n    reset();\n    return false;\n  },\n  'click .curveParams-option-add': function (event) {\n    event.preventDefault();\n\n    try {\n      var params = Session.get('params'); // find the object in the session that is associated with the currently selected name\n\n      var paramSelectedName = document.getElementById('curveParams-selection').value;\n      var param = params.filter(function (obj) {\n        return obj.name === paramSelectedName;\n      })[0];\n      var optionsMap = param.optionsMap;\n      var seconds = new Date() / 1000 | 0;\n      optionsMap['new-' + seconds] = [];\n      param.optionsMap = optionsMap;\n      param.options = Object.keys(optionsMap);\n      params[paramSelectedName] = param;\n      Session.set('params', params);\n    } catch (Exception) {\n      console.log(Exception);\n    }\n\n    return false;\n  },\n  'click .curveParams-option-remove': function (event) {\n    event.preventDefault();\n\n    try {\n      var params = Session.get('params'); // find the object in the session that is associated with the currently selected name\n\n      var paramSelectedName = document.getElementById('curveParams-selection').value;\n      var param = params.filter(function (obj) {\n        return obj.name === paramSelectedName;\n      })[0];\n      var optionsMap = param.optionsMap;\n      var optionSelected = Session.get('optionSelected');\n      var selectedKey = \"\";\n\n      if (optionSelected) {\n        selectedKey = optionSelected.key;\n      } else {\n        var keys = Object.keys(optionsMap);\n        selectedKey = keys[keys.length - 1];\n      }\n\n      param.optionsMap = _.omit(optionsMap, selectedKey);\n      param.options = Object.keys(optionsMap);\n      params[paramSelectedName] = param;\n      Session.set('params', params);\n      Session.set('optionSelected', \"\");\n    } catch (Exception) {\n      console.log(Exception);\n    }\n\n    return false;\n  },\n  'click .option-field-add': function (event) {\n    event.preventDefault();\n\n    try {\n      var params = Session.get('params'); // find the object in the session that is associated with the currently selected name\n\n      var paramSelectedName = document.getElementById('curveParams-selection').value;\n      var param = params.filter(function (obj) {\n        return obj.name === paramSelectedName;\n      })[0];\n      var options = param.optionsMap;\n      var optionSelected = Session.get('optionSelected');\n      var selectedKey = undefined;\n\n      if (optionSelected) {\n        selectedKey = Session.get('optionSelected').key;\n      }\n\n      if (selectedKey === undefined || selectedKey === \"\") {\n        selectedKey = event.target.id.replace('curveParams-option-field-add-', '');\n      }\n\n      options[selectedKey].push('');\n      param.optionsMap = options;\n      params[paramSelectedName] = param;\n      Session.set('params', params);\n    } catch (Exception) {\n      console.log(Exception);\n    }\n\n    return false;\n  },\n  'click .option-field-del': function () {\n    event.preventDefault();\n    var params = Session.get('params'); // find the object in the session that is associated with the currently selected name\n\n    var paramSelectedName = document.getElementById('curveParams-selection').value;\n    var param = params.filter(function (obj) {\n      return obj.name === paramSelectedName;\n    })[0];\n    var options = param.optionsMap;\n    var optionSelected = Session.get('optionSelected');\n    var selectedKey = \"\";\n    var listIndex = -1;\n\n    if (optionSelected) {\n      selectedKey = optionSelected.key;\n      listIndex = optionSelected.listIndex;\n    } else {\n      var targetId = event.target.id;\n      selectedKey = targetId.replace('curveParams-option-field-del-', '');\n    }\n\n    if (options[selectedKey] && options[selectedKey].length > 0) {\n      if (listIndex == -1) {\n        options[selectedKey] = [];\n      } else {\n        options[selectedKey].splice(listIndex, 1);\n      }\n    }\n\n    param.optionsMap = options;\n    params[paramSelectedName] = param;\n    Session.set('params', params);\n    Session.set('optionSelected', \"\");\n    return false;\n  },\n  'click .optionsTable': function (event) {\n    event.preventDefault();\n    var targetId = event.target.id;\n\n    if (targetId.indexOf('curveParams-option-') === 0) {\n      var key = document.getElementById(event.target.id).value;\n      var rowIndex = targetId.replace('curveParams-option-', '');\n      Session.set('optionSelected', {\n        key: key,\n        rowIndex: rowIndex,\n        listIndex: -1\n      });\n    } else if (targetId.indexOf('curveParams-optionList-') === 0) {\n      var indexStr = targetId.replace('curveParams-optionList-', '');\n      var indexes = indexStr.split('-');\n      var rowIndex = indexes[0];\n      var listIndex = indexes[1];\n      var key = document.getElementById('curveParams-option-' + rowIndex).value;\n      Session.set('optionSelected', {\n        key: key,\n        rowIndex: rowIndex,\n        listIndex: listIndex\n      });\n    }\n\n    return false;\n  },\n  'click .applyCurveParamsWithComment': function () {\n    // actually do the apply\n    event.preventDefault(); // first backup the existing parameters\n\n    Meteor.call('getUserAddress', function (error, result) {\n      if (error !== undefined) {\n        setError(new Error(error.message));\n        return false;\n      }\n\n      var emailAddress = result; // save the current settings and mark comment as prior to\n\n      var saveSecond = new Date() / 1000 | 0;\n      var comment = document.getElementById('applyCurveParamsComment').value;\n      var paramsCursor = matsCollections.CurveParams.find({});\n      var cl = matsCollections.SavedCurveParams.findOne({\n        'clName': 'changeList'\n      }, {\n        _id: 1\n      });\n\n      if (cl === undefined) {\n        matsCollections.SavedCurveParams.insert({\n          clName: 'changeList',\n          changeList: []\n        });\n        cl = matsCollections.SavedCurveParams.findOne({\n          'clName': 'changeList'\n        }, {\n          _id: 1\n        });\n      }\n\n      var id = cl._id;\n      matsCollections.SavedCurveParams.update({\n        _id: id\n      }, {\n        $push: {\n          changeList: {\n            user: emailAddress,\n            comment: \"prior to ...\" + comment,\n            savedAt: saveSecond\n          }\n        }\n      });\n      paramsCursor.forEach(function (doc) {\n        delete doc._id;\n        doc.savedSecond = saveSecond;\n        matsCollections.SavedCurveParams.insert(doc);\n      }); // now reconcile the session values and the CurveParams collection\n\n      resetError();\n      var params = Session.get('params');\n      var curveParams = matsCollections.CurveParams.find({}).fetch();\n\n      var paramNames = _.pluck(params, 'name');\n\n      var curveParamNames = _.pluck(curveParams, 'name'); // find any superfluous params in CurveParams (this is a remove) and remove them from collection\n\n\n      var namesToRemoveFromCollection = paramNames.filter(function (el) {\n        return curveParamNames.indexOf(el) < 0;\n      });\n\n      for (var i = 0; i < namesToRemoveFromCollection.length; i++) {\n        var rName = namesToRemoveFromCollection[i];\n        var cParam = matsCollections.CurveParams.findOne({\n          name: rName\n        });\n        var cid = cParam._id;\n        matsCollections.CurveParams.remove({\n          _id: cid\n        });\n      } // iterate all the params in the session and overwrite/insert them\n\n\n      for (var pi = 0; pi < paramNames.length; pi++) {\n        var paramName = paramNames[pi];\n        var param = params.filter(function (obj) {\n          return obj.name === paramName;\n        })[0];\n        var curveParam = matsCollections.CurveParams.findOne({\n          name: paramName\n        });\n\n        if (curveParam) {\n          // update\n          var cid = curveParam._id;\n          delete param._id;\n          matsCollections.CurveParams.update({\n            _id: cid\n          }, {\n            $set: param\n          });\n        } else {\n          //insert\n          matsCollections.CurveParams.insert(param);\n        }\n      } // now save the settings after modification\n\n\n      saveSecond = saveSecond + 1;\n      paramsCursor = matsCollections.CurveParams.find({});\n      cl = matsCollections.SavedCurveParams.findOne({\n        'clName': 'changeList'\n      }, {\n        _id: 1\n      });\n      id = cl._id;\n      matsCollections.SavedCurveParams.update({\n        _id: id\n      }, {\n        $push: {\n          changeList: {\n            user: emailAddress,\n            comment: \"post ...\" + comment,\n            savedAt: saveSecond\n          }\n        }\n      });\n      paramsCursor.forEach(function (doc) {\n        delete doc._id;\n        doc.savedSecond = saveSecond;\n        matsCollections.SavedCurveParams.insert(doc);\n      });\n      reset(); // read the params back out from the DB and set them into the Session (resets the form)\n\n      params = matsCollections.CurveParams.find({}, {\n        sort: {\n          displayOrder: 1\n        }\n      }).fetch();\n      Session.set('params', params);\n      Session.set('lastUpdate', Date.now()); // force re-render to get the optionMap\n\n      $(\"#applyCurveParamsModal\").modal('hide');\n    });\n    return false;\n  },\n  'click .cancel-curveParams': function () {\n    event.preventDefault();\n    reset();\n    var params = matsCollections.CurveParams.find({}, {\n      sort: {\n        displayOrder: 1\n      }\n    }).fetch();\n    Session.set('params', params);\n    document.getElementById(\"curveParams-selection\").value = \"\";\n    Session.set('lastUpdate', Date.now()); // force re-render to get the optionMap\n\n    return false;\n  },\n  'click .applyCurveParams': function () {\n    // show the apply modal dialogue\n    event.preventDefault();\n    $(\"#applyCurveParamsModal\").modal('show');\n    return false;\n  },\n  'click .restoreCurveParams': function () {\n    event.preventDefault();\n    $(\"#restoreCurveParamsModal\").modal('show');\n    return false;\n  },\n  'click .btnUser': function (event) {\n    event.preventDefault();\n    var targetId = event.target.id;\n    var taId = targetId.replace('btnUser-', 'ta-');\n\n    if (document.getElementById(taId).style.display == 'block') {\n      document.getElementById(taId).style.display = 'none';\n    } else {\n      document.getElementById(taId).style.display = 'block';\n    }\n\n    return false;\n  },\n  'click .restoreCurveParamsDate': function (event) {\n    //populate input restoreFromSeconds input box with selected value and data attributes\n    event.preventDefault();\n    var targetId = event.target.id;\n    var elem = document.getElementById(targetId);\n    var second = elem.getAttribute('data-second');\n    var date = elem.getAttribute('data-date');\n    var user = elem.getAttribute('data-user');\n    var comment = elem.getAttribute('data-comment');\n    var rfd = document.getElementById('restoreFromSeconds');\n    rfd.setAttribute('data-second', second);\n    rfd.setAttribute('data-date', date);\n    rfd.setAttribute('data-user', user);\n    rfd.setAttribute('data-comment', comment);\n    rfd.value = date + \" \" + user + \" ... \" + comment;\n    document.getElementById(\"restore-choose-date-toggle\").click();\n    return false;\n  },\n  'click .restoreCurveParamsFromDate': function (event) {\n    // copy all dated elements with the selected savedSecond back to curveParams\n    event.preventDefault();\n    var restoreFromSeconds = document.getElementById(\"restoreFromSeconds\");\n    var savedSecond = restoreFromSeconds.getAttribute('data-second');\n    var savedParams = matsCollections.SavedCurveParams.find({\n      'savedSecond': Number(savedSecond)\n    });\n    savedParams.forEach(function (doc) {\n      delete doc._id;\n      delete doc.savedSecond;\n      var name = doc.name;\n      var curveParam = matsCollections.CurveParams.findOne({\n        name: name\n      });\n      var id = curveParam._id;\n      matsCollections.CurveParams.update({\n        _id: id\n      }, {\n        $set: doc\n      });\n    });\n    Session.set('lastUpdate', Date.now()); // force re-render\n\n    $(\"#restoreCurveParamsModal\").modal('hide');\n    return false;\n  },\n  'click .cancel-restoreCurveParamsFromDate': function (event) {\n    // copy all dated elements with the selected savedSecond back to curveParams\n    event.preventDefault();\n    $(\"#restoreCurveParamsModal\").modal('hide');\n    return false;\n  },\n  'change': function (event) {\n    // should catch all the widgets whenever a change happens.\n    // This is where we capture changes and move them to the session.\n    // When the apply is hit a different event listener will migrate the modified\n    // session settings to the collection.\n    event.preventDefault();\n    var params = Session.get('params');\n    var targetId = event.target.id;\n\n    if (targetId == \"curveParams-selection\") {\n      // ignore changes to the main selector\n      return false;\n    }\n\n    var elem = document.getElementById(targetId);\n    var value = elem.value; // find the object in the session that is associated with the currently selected name\n\n    var paramSelectedName = document.getElementById('curveParams-selection').value;\n    var param = params.filter(function (obj) {\n      return obj.name === paramSelectedName;\n    })[0]; // each curveParameter is made up of several fields...\n    // the name, type, optionsMap, options (is derived from optionsMap), controlButtonCovered, unique, default, controlButtonVisibility, displayOrder, displayPriority, and displayGroup\n    // Which of these is captured by an element is set in the data-field attribute.\n\n    var dataField = elem.getAttribute('data-field');\n\n    if (!dataField) {\n      return false;\n    }\n\n    if (dataField.indexOf('optionsMap') == 0) {\n      // For an optionsMap the dataField is a cell in the optionsMap table.\n      // If it is the first column it is something like optionsMap.RH_n   i.e. RH is the value of the leftmost cell\n      // and RH is also a key of the params.optionsMap object. n is the row that the key is in.\n      // If it is the second column it is something like optionsMap.RH_n[0].\n      // That is because the in memory representation (params.optionsMap object) uses the value of the first column to\n      // denote a hashmap key, and the rest of the columns are contained in a list starting\n      // with index 0 at the left of the table.\n      // like .. key:[col2,col3,....coln], so it might be...\n      // optionsMap.RH:[0,1..n] to denote the rest of a row.\n      //NOTE: we trim the keys but not the other cell values - they might contain necessary white space.\n      var keyParts = dataField.replace('optionsMap.', '').split('_');\n      var key = keyParts[0];\n      var optionsMap = param.optionsMap;\n\n      if (keyParts[1].indexOf('[') !== -1) {\n        // this is a key and list index\n        var index = keyParts[1].split('[')[1].replace(']', '');\n        optionsMap[key][index] = value;\n      } else {\n        //  we are essentially renaming the key to new value and deleting the old key\n        value = value.trim(); // trim the whitespace from both ends\n\n        if (key != value) {\n          // don't do it if it is somehow the same.\n          Object.defineProperty(optionsMap, value, Object.getOwnPropertyDescriptor(optionsMap, key));\n          delete optionsMap[key];\n        }\n      } // optionsMap has been changed...\n\n\n      param.optionsMap = optionsMap;\n      param.options = Object.keys(optionsMap);\n    } else {\n      // regular field - just set the value\n      param.field = value;\n    } //console.log (\"change:  value:\" + value + \"\\n  field: \" + dataField + \"\\n  paramSelectedName \" + paramSelectedName + \"  \\n param: \\n\" + JSON.stringify(param));\n\n\n    Session.set('params', params);\n    Session.set('lastUpdate', Date.now()); // force re-render to get the optionMap\n\n    return false;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.authorization.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/template.authorization.js                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"authorization\");\nTemplate[\"authorization\"] = new Template(\"Template.authorization\", (function() {\n  var view = this;\n  return HTML.DIV({\n    id: \"authorizationModal\",\n    class: \"modal\",\n    role: \"dialog\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                \", HTML.FORM({\n    name: \"authForm\",\n    novalidate: \"\"\n  }, \"\\n                \", HTML.Raw('<div class=\"modal-header\">\\n                    <h4>Authorization</h4>\\n                </div>'), \"\\n                \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                    \", HTML.Raw('<div>\\n                        <label>Apply new role ...</label>\\n                        <input id=\"userRoleName\" class=\"data-input textInput user_role_name\" type=\"text\" required=\"\" placeholder=\"Enter a new role name\" name=\"new_role_name\">\\n                        <input id=\"userRoleDescription\" class=\"data-input textInput user_role_description\" type=\"text\" required=\"\" placeholder=\"Enter new role description\" name=\"new_role_description\">\\n                    </div>'), \"\\n                    \", HTML.DIV(\"\\n                        \", HTML.Raw(\"<label>Apply existing role...</label>\"), \"\\n                        \", HTML.SELECT({\n    class: \"data-input role-select\",\n    size: \"5\",\n    name: \"authorization_role\",\n    id: \"authorizationRole\"\n  }, \"\\n                            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"roleOptions\"));\n  }, function() {\n    return [ \"\\n                                \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"name\"));\n      }\n    }, Blaze.View(\"lookup:name\", function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    }), \" - \", Blaze.View(\"lookup:description\", function() {\n      return Spacebars.mustache(view.lookup(\"description\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.Raw('<div>\\n                        <label>Apply to unauthorized user email ...</label>\\n                        <input id=\"newUserEmail\" class=\"data-input textInput user-email\" type=\"email\" required=\"\" placeholder=\"Enter a valid email address\" name=\"apply_role_to_new\">\\n                    </div>'), \"\\n                    \", HTML.DIV(\"\\n                        \", HTML.Raw(\"<label>Apply to previously authorized email...</label>\"), \"\\n                        \", HTML.SELECT({\n    class: \"data-input user-select\",\n    size: \"5\",\n    name: \"apply_role_to\",\n    id: \"existingUserEmail\"\n  }, \"\\n                            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"emailOptions\"));\n  }, function() {\n    return [ \"\\n                                \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"email\"));\n      }\n    }, Blaze.View(\"lookup:email\", function() {\n      return Spacebars.mustache(view.lookup(\"email\"));\n    }), \":\", Blaze.View(\"lookup:roles\", function() {\n      return Spacebars.mustache(view.lookup(\"roles\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                        <button name=\"cancelAuthorization\" type=\"button\" class=\"cancel-authorization btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel</button>\\n                        <button name=\"applyAuthorization\" type=\"button\" class=\"apply_authorization btn btn-primary\">&nbsp;&nbsp;Apply</button>\\n                        <button name=\"removeAuthorization\" type=\"button\" class=\"remove_authorization btn btn-primary\">&nbsp;&nbsp;Remove Selected</button>\\n                    </div>'), \"\\n                \"), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n        \"), HTML.Raw(\"\\n        <!-- /.modal-dialog -->\\n    \"));\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"authorization.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/authorization.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nTemplate.authorization.helpers({\n  roleOptions: function () {\n    return matsCollections.Roles.find({}).fetch();\n  },\n  emailOptions: function () {\n    return matsCollections.Authorization.find({}).fetch();\n  }\n});\nTemplate.authorization.events({\n  'click .apply_authorization': function () {\n    var userRoleName = document.getElementById(\"userRoleName\").value;\n    var userRoleDescription = document.getElementById(\"userRoleDescription\").value;\n    var authorizationRole = document.getElementById(\"authorizationRole\").value;\n    var newUserEmail = document.getElementById(\"newUserEmail\").value;\n    var existingUserEmail = document.getElementById(\"existingUserEmail\").value;\n    var settings = {};\n    settings.userRoleName = userRoleName;\n    settings.userRoleDescription = userRoleDescription;\n    settings.authorizationRole = authorizationRole;\n    settings.newUserEmail = newUserEmail;\n    settings.existingUserEmail = existingUserEmail;\n    Meteor.call('applyAuthorization', settings, function (error) {\n      if (error) {\n        setError(new Error(error.message));\n      }\n    }); // reset modal\n\n    document.getElementById(\"userRoleName\").value = \"\";\n    document.getElementById(\"userRoleDescription\").value = \"\";\n    document.getElementById(\"authorizationRole\").value = \"\";\n    document.getElementById(\"newUserEmail\").value = \"\";\n    document.getElementById(\"existingUserEmail\").value = \"\";\n    $(\"#authorizationModal\").modal('hide');\n    return false;\n  },\n  'click .remove_authorization': function () {\n    var userRoleName = document.getElementById(\"userRoleName\").value;\n    var userRoleDescription = document.getElementById(\"userRoleDescription\").value;\n    var authorizationRole = document.getElementById(\"authorizationRole\").value;\n    var newUserEmail = document.getElementById(\"newUserEmail\").value;\n    var existingUserEmail = document.getElementById(\"existingUserEmail\").value;\n    var settings = {};\n    settings.userRoleName = userRoleName;\n    settings.userRoleDescription = userRoleDescription;\n    settings.authorizationRole = authorizationRole;\n    settings.newUserEmail = newUserEmail;\n    settings.existingUserEmail = existingUserEmail;\n    Meteor.call('removeAuthorization', settings, function (error) {\n      if (error) {\n        setError(new Error(error.message));\n      }\n    }); // reset modal\n\n    document.getElementById(\"userRoleName\").value = \"\";\n    document.getElementById(\"userRoleDescription\").value = \"\";\n    document.getElementById(\"authorizationRole\").value = \"\";\n    document.getElementById(\"newUserEmail\").value = \"\";\n    document.getElementById(\"existingUserEmail\").value = \"\";\n    $(\"#authorizationModal\").modal('hide');\n    return false;\n  },\n  'click .cancel-authorization': function () {\n    // reset the form\n    document.getElementById(\"userRoleName\").value = \"\";\n    document.getElementById(\"userRoleDescription\").value = \"\";\n    document.getElementById(\"authorizationRole\").value = \"\";\n    document.getElementById(\"newUserEmail\").value = \"\";\n    document.getElementById(\"existingUserEmail\").value = \"\";\n  },\n  'click .user_role_description': function () {\n    document.getElementById('authorizationRole').value = '';\n  },\n  'click .user_role_name': function () {\n    document.getElementById('authorizationRole').value = '';\n  },\n  'change .role-select': function () {\n    document.getElementById('userRoleName').value = '';\n    document.getElementById('userRoleDescription').value = '';\n  },\n  'click .user-email': function () {\n    document.getElementById('existingUserEmail').value = '';\n  },\n  'change .user-select': function () {\n    document.getElementById('newUserEmail').value = '';\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.mail_credentials.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/template.mail_credentials.js                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"mailCredentials\");\nTemplate[\"mailCredentials\"] = new Template(\"Template.mailCredentials\", (function() {\n  var view = this;\n  return [ HTML.STYLE({\n    id: \"jsbin-css\"\n  }, \"\\n        #apstMoleculeModal .form-group {\\n            padding-right:20px;\\n            position:relative;\\n        }\\n\\n        #apstMoleculeModal .help {\\n            position:absolute;\\n            right:-8px;\\n            top:12px;\\n        }\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"mailCredentialsModal\",\n    class: \"modal\",\n    role: \"dialog\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                \", HTML.Raw('<div class=\"modal-header\">\\n                    <h4 class=\"modal-title\">Mail Credentials</h4>\\n                </div>'), \"\\n                \", HTML.FORM({\n    class: \"form-horizontal\",\n    name: \"credForm\",\n    novalidate: \"\"\n  }, \"\\n                    \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.DIV({\n    class: \"controls col-xs-12\"\n  }, \"\\n                                \", HTML.Raw(\"<label>name</label>\"), \"\\n                                \", HTML.INPUT({\n    id: \"credentials-name\",\n    class: \"form-control data-input textInput credentials_name\",\n    type: \"text\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    },\n    name: \"credentials__name\"\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.DIV({\n    class: \"controls col-xs-12\"\n  }, \"\\n                                \", HTML.Raw(\"<label>id</label>\"), \"\\n                                \", HTML.INPUT({\n    id: \"credentials_client_id\",\n    class: \"form-control data-input textInput credentials_client_id\",\n    type: \"text\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"client_id\"));\n    },\n    name: \"credentials_client_id\"\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.DIV({\n    class: \"controls col-xs-12\"\n  }, \"\\n                                \", HTML.Raw(\"<label>secret</label>\"), \"\\n                                \", HTML.INPUT({\n    id: \"credentials_client_secret\",\n    class: \"form-control data-input textInput credentials_client_secret\",\n    type: \"text\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"client_secret\"));\n    },\n    name: \"credentials_client_secret\"\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.DIV({\n    class: \"controls col-xs-12\"\n  }, \"\\n                                \", HTML.Raw(\"<label>refresh token</label>\"), \"\\n                                \", HTML.INPUT({\n    id: \"credentials_client_refresh_token\",\n    class: \"form-control data-input textInput credentials_client_refresh_token\",\n    type: \"text\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"refresh_token\"));\n    },\n    name: \"credentials_client_refresh_token\"\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                            <button name=\"cancelCredentials\" type=\"button\" class=\"cancel-credentials btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel</button>\\n                            <button name=\"applyCredentials\" type=\"button\" class=\"apply_credentials btn btn-primary\">&nbsp;&nbsp;Apply</button>\\n                        </div>'), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n        \"), \"\\n        \", HTML.Raw(\"<!-- /.modal-dialog -->\"), \"\\n    \") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mail_credentials.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/mail_credentials.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar methods;\nmodule.link(\"meteor/randyp:mats-common\", {\n  methods: function (v) {\n    methods = v;\n  }\n}, 2);\nTemplate.mailCredentials.helpers({\n  name: function () {\n    var credentials = matsCollections.Credentials.findOne({});\n    return credentials === undefined ? \"\" : credentials.name;\n  },\n  client_id: function () {\n    var credentials = matsCollections.Credentials.findOne({});\n    return credentials === undefined ? \"\" : credentials.clientId;\n  },\n  client_secret: function () {\n    var credentials = matsCollections.Credentials.findOne({});\n    return credentials === undefined ? \"\" : credentials.clientSecret;\n  },\n  refresh_token: function () {\n    var credentials = matsCollections.Credentials.findOne({});\n    return credentials === undefined ? \"\" : credentials.refresh_token;\n  }\n});\nTemplate.mailCredentials.events({\n  'click .apply_credentials': function () {\n    var name = document.getElementById(\"credentials-name\").value;\n    var clientId = document.getElementById(\"credentials_client_id\").value;\n    var clientSecret = document.getElementById(\"credentials_client_secret\").value;\n    var clientRefreshToken = document.getElementById(\"credentials_client_refresh_token\").value;\n    var settings = {};\n    settings.name = name;\n    settings.clientId = clientId;\n    settings.clientSecret = clientSecret;\n    settings.clientRefreshToken = clientRefreshToken;\n    methods.setCredentials(settings, function (error) {\n      if (error) {\n        setError(new Error(error.message));\n      }\n    }); // reset modal\n\n    document.getElementById(\"credentials-name\").value = \"\";\n    document.getElementById(\"credentials_client_id\").value = \"\";\n    document.getElementById(\"credentials_client_secret\").value = \"\";\n    document.getElementById(\"credentials_client_refresh_token\").value = \"\";\n    $(\"#authorizationModal\").modal('hide');\n    return false;\n  },\n  'click .cancel-credentials': function () {\n    // reset the form\n    var credentials = matsCollections.Credentials.findOne({});\n    document.getElementById(\"credentials-name\").value = credentials.name;\n    document.getElementById(\"credentials_client_id\").value = credentials.clientId;\n    document.getElementById(\"credentials_client_secret\").value = credentials.clientSecret;\n    document.getElementById(\"credentials_client_refresh_token\").value = credentials.refresh_token;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.PlotGraphFunctions.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/template.PlotGraphFunctions.js                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"plotGraphFunctions\");\nTemplate[\"plotGraphFunctions\"] = new Template(\"Template.plotGraphFunctions\", (function() {\n  var view = this;\n  return [ HTML.STYLE({\n    id: \"jsbin-css\"\n  }, \"\\n        #apstMoleculeModal .form-group {\\n            padding-right: 20px;\\n            position: relative;\\n        }\\n\\n        #apstMoleculeModal .help {\\n            position: absolute;\\n            right: -8px;\\n            top: 12px;\\n        }\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"plotGraphFunctionsModal\",\n    class: \"modal\",\n    role: \"dialog\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                \", HTML.Raw('<div class=\"modal-header\">\\n                    <h4 class=\"modal-title\">PlotGraphFunctions</h4>\\n                </div>'), \"\\n                \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                    \", HTML.FORM({\n    class: \"form-horizontal\",\n    name: \"pgForm\",\n    novalidate: \"\"\n  }, \"\\n                        \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                            \", HTML.DIV({\n    class: \"form-group\"\n  }, \"\\n                                \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                    <label>Plot Graph</label>\\n                                </div>'), \"\\n                                \", HTML.Raw('<div class=\"controls col-xs-1\">\\n                                    <button type=\"button\" id=\"plotGraphFunction-selection-add\" class=\"plotGraphFunction-selection-add btn btn-xs btn-success fa fa-plus\"></button>\\n                                    <button type=\"button\" id=\"plotGraphFunction-selection-remove\" class=\"plotGraphFunction-selection-remove btn btn-xs btn-danger fa fa-minus\"></button>\\n                                </div>'), \"\\n\\n                                \", HTML.DIV({\n    class: \"controls col-xs-2\"\n  }, \"\\n                                    \", HTML.SELECT({\n    class: \"plotGraphFunction\",\n    size: \"5\",\n    name: \"plotGraphFunction\",\n    id: \"plotGraphFunction-selection\"\n  }, \"\\n                                        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"plotGraphFunction\"));\n  }, function() {\n    return [ \"\\n                                            \", HTML.OPTION({\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"plotType\"));\n      }\n    }, Blaze.View(\"lookup:plotType\", function() {\n      return Spacebars.mustache(view.lookup(\"plotType\"));\n    })), \"\\n                                        \" ];\n  }), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \"), \"\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"plotType\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>Plot Type</label>\\n                            </div>'), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-12\">\\n                                    <input id=\"plotType\" class=\"form-control data-input textInput plotType\" type=\"text\" required=\"\" placeholder=\"plotType\" name=\"plotType\">\\n                            </div>'), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"dataFunction\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>Data Function</label>\\n                            </div>'), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-12\">\\n                                <input id=\"dataFunction\" class=\"form-control data-input textInput dataFunction\" type=\"text\" required=\"\" placeholder=\"dataFunction\" name=\"dataFunction\">\\n                            </div>'), \"\\n\\n                            \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"errorTypeIs\"), \"graphFunction\");\n  }, function() {\n    return [ \"\\n                                \", HTML.DIV({\n      id: \"errorMessage\",\n      class: \"errorMessage\",\n      style: \"color: red; display: none\"\n    }, Blaze.View(\"lookup:errorMessage\", function() {\n      return Spacebars.mustache(view.lookup(\"errorMessage\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-2\">\\n                                <label>Graph Function</label>\\n                            </div>'), \"\\n                            \", HTML.Raw('<div class=\"controls col-xs-12\">\\n                                <input id=\"graphFunction\" class=\"form-control data-input textInput graphFunction\" type=\"text\" required=\"\" placeholder=\"graphFunction\" name=\"graphFunction\">\\n                            </div>'), \"\\n\\n                        \"), \"\\n\\n                        \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                            <button name=\"cancelPlotgraphFunction\" type=\"button\" class=\"cancel-plotGraphFunction btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel\\n                            </button>\\n                            <button name=\"applyPlotGraphFunction\" type=\"button\" class=\"apply-plotGraphFunction btn btn-primary\">\\n                                &nbsp;&nbsp;Apply\\n                            </button>\\n                        </div>'), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n        \"), \"\\n        \", HTML.Raw(\"<!-- /.modal-dialog -->\"), \"\\n    \") ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"PlotGraphFunctions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/PlotGraphFunctions.js                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 0);\nTemplate.plotGraphFunctions.helpers({\n  plotGraphFunction: function () {\n    if (Session.get(\"PlotGraphFunctions\") === undefined || Session.get(\"PlotGraphFunctions\").length == 0) {\n      Session.set(\"PlotGraphFunctions\", matsCollections.PlotGraphFunctions.find({}).fetch());\n    }\n\n    return Session.get(\"PlotGraphFunctions\");\n  },\n  errorMessage: function () {\n    return Session.get(\"errorMessage\");\n  },\n  errorTypeIs: function (type) {\n    return Session.get(\"errorType\") === type;\n  }\n});\n\nvar resetError = function () {\n  errorMessage = \"\";\n  Session.set(\"errorMessage\", \"\");\n  Session.set(\"errorType\", \"\");\n\n  if (document.getElementById(\"errorMessage\")) {\n    document.getElementById(\"errorMessage\").style.display = \"none\";\n  }\n};\n\nvar setError = function (type, message) {\n  Session.set(\"errorMessage\", message);\n  Session.set(\"errorType\", type);\n  document.getElementById(\"errorMessage\").style.display = \"block\";\n};\n\nTemplate.plotGraphFunctions.events({\n  'click .plotGraphFunction': function (event) {\n    event.preventDefault();\n    resetError();\n    var plotTypeStr = document.getElementById('plotGraphFunction-selection').value;\n    var plotGraphFunctions = Session.get(\"PlotGraphFunctions\");\n    var plotGraphFunction = plotGraphFunctions.filter(function (obj) {\n      return obj.plotType === plotTypeStr;\n    })[0];\n    document.getElementById(\"plotType\").value = plotGraphFunction.plotType;\n    document.getElementById(\"dataFunction\").value = plotGraphFunction.dataFunction;\n    document.getElementById(\"graphFunction\").value = plotGraphFunction.graphFunction;\n    return false;\n  },\n  'click .plotGraphFunction-selection-add': function (event) {\n    event.preventDefault();\n    resetError();\n    var d = (Date.now() / 1000 | 0).toString();\n    var plotGraphFunctions = Session.get(\"PlotGraphFunctions\");\n    plotGraphFunctions.push({\n      plotType: d,\n      graphFunction: \"graph...\",\n      dataFunction: \"data...\"\n    });\n    Session.set(\"PlotGraphFunctions\", plotGraphFunctions);\n    return false;\n  },\n  'click .plotGraphFunction-selection-remove': function (event) {\n    event.preventDefault();\n    resetError();\n    var plotTypeStr = document.getElementById('plotGraphFunction-selection').value;\n    var plotGraphFunctions = Session.get(\"PlotGraphFunctions\");\n\n    for (i = plotGraphFunctions.length - 1; i >= 0; i--) {\n      if (plotGraphFunctions[i].plotType == plotTypeStr) plotGraphFunctions.splice(i, 1);\n    }\n\n    Session.set(\"PlotGraphFunctions\", plotGraphFunctions);\n    return false;\n  },\n  'click .apply-plotGraphFunction': function () {\n    event.preventDefault(); //\n\n    var sPlotGraphFunctions = Session.get(\"PlotGraphFunctions\");\n    var plotGraphFunctions = matsCollections.PlotGraphFunctions.find({}).fetch();\n\n    var sPlotTypes = _.pluck(sPlotGraphFunctions, 'plotType');\n\n    var plotTypes = _.pluck(plotGraphFunctions, 'plotType'); // find any superfluous ones in plotTypes (this is a remove) and remove them from collection\n\n\n    var toRemoveFromCollection = plotTypes.filter(function (el) {\n      return sPlotTypes.indexOf(el) < 0;\n    });\n\n    for (var ip = 0; ip < toRemoveFromCollection.length; ip++) {\n      var p = toRemoveFromCollection[ip];\n      var plotType = matsCollections.PlotGraphFunctions.findOne({\n        plotType: p\n      });\n      var id = plotType._id;\n      matsCollections.PlotGraphFunctions.remove({\n        _id: id\n      });\n    } // iterate all the ones in the session and overwrite/add them\n\n\n    for (var i = 0; i < sPlotTypes.length; i++) {\n      var s = sPlotTypes[i];\n      var spgf = sPlotGraphFunctions.filter(function (obj) {\n        return obj.plotType === s;\n      })[0];\n      var pt = matsCollections.PlotGraphFunctions.findOne({\n        plotType: s\n      });\n\n      if (pt) {\n        // update\n        var ptid = pt._id;\n        delete spgf._id;\n        matsCollections.PlotGraphFunctions.update({\n          _id: ptid\n        }, {\n          $set: spgf\n        });\n      } else {\n        //insert\n        matsCollections.PlotGraphFunctions.insert(spgf);\n      }\n    }\n\n    Session.set(\"PlotGraphFunctions\", matsCollections.PlotGraphFunctions.find({}).fetch());\n    $(\"#plotGraphFunctionsModal\").modal('hide');\n    return false;\n  },\n  'click .cancel-plotGraphFunction': function () {\n    event.preventDefault();\n    $(\"#plotGraphFunctionsModal\").modal('hide');\n    return false;\n  },\n  'change .plotType, change .dataFunction, change .graphFunction': function () {\n    var plotTypeStr = document.getElementById('plotGraphFunction-selection').value;\n    var sPlotGraphFunctions = Session.get(\"PlotGraphFunctions\");\n    var spgf = sPlotGraphFunctions.filter(function (obj) {\n      return obj.plotType === plotTypeStr;\n    })[0];\n    var plotType = document.getElementById('plotType').value;\n    var dataFunction = document.getElementById('dataFunction').value;\n    var graphFunction = document.getElementById('graphFunction').value;\n    spgf.plotType = plotType;\n    spgf.dataFunction = dataFunction;\n    spgf.graphFunction = graphFunction;\n    Session.set(\"PlotGraphFunctions\", sPlotGraphFunctions);\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.administration.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/template.administration.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\nTemplate.__checkName(\"administration\");\nTemplate[\"administration\"] = new Template(\"Template.administration\", (function() {\n  var view = this;\n  return [ HTML.DIV(HTML.Attrs({\n    id: \"adminContainer\",\n    style: \"display:none;\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"adminChanged\"));\n  }), \"\\n    \", HTML.DIV({\n    id: \"administration\",\n    class: \"container-fluid pull-right\",\n    style: \"height:100%;margin-top:0; padding: 0;\"\n  }, \"\\n        \", HTML.SPAN({\n    style: \"background-color: lightgreen;font-size: small;color: black; \"\n  }, Blaze.View(\"lookup:signedIn\", function() {\n    return Spacebars.mustache(view.lookup(\"signedIn\"));\n  })), \"\\n        \", HTML.DIV({\n    class: \"btn-toolbar btn-group btn-xs\",\n    role: \"toolbar\"\n  }, \"\\n            \", HTML.BUTTON({\n    style: function() {\n      return [ \"color: black;background-color:lightgreen;display:\", Spacebars.mustache(view.lookup(\"showAdministratorDiv\")) ];\n    },\n    type: \"button\",\n    name: \"authorization\",\n    id: \"authorization\",\n    class: \"authorization btn btn-success btn-xs fa fa-users\"\n  }, HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), \"Authorization\"), \"\\n            \", HTML.BUTTON({\n    style: function() {\n      return [ \"color: black;background-color:lightgreen;display:\", Spacebars.mustache(view.lookup(\"showAdministratorDiv\")) ];\n    },\n    type: \"button\",\n    name: \"database\",\n    id: \"database\",\n    class: \"database btn btn-success  btn-xs fa fa-database\"\n  }, HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), \"Database\"), \"\\n            \", HTML.BUTTON({\n    style: function() {\n      return [ \"color: black;background-color:lightgreen;display:\", Spacebars.mustache(view.lookup(\"showAdministratorDiv\")) ];\n    },\n    type: \"button\",\n    name: \"credentials\",\n    id: \"credentials\",\n    class: \"credentials btn btn-success btn-xs fa fa-envelope-o\"\n  }, HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), \"Email Credentials\"), \"\\n            \", HTML.BUTTON({\n    style: function() {\n      return [ \"color: black;background-color:lightgreen;display:\", Spacebars.mustache(view.lookup(\"showAdministratorDiv\")) ];\n    },\n    type: \"button\",\n    name: \"curveParams\",\n    id: \"credentials\",\n    class: \"curveParams btn btn-success btn-xs fa fa-align-center\"\n  }, HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), \"Curve Parameters\"), \"\\n            \", HTML.BUTTON({\n    style: function() {\n      return [ \"color: black;background-color:lightgreen;display:\", Spacebars.mustache(view.lookup(\"showAdministratorDiv\")) ];\n    },\n    type: \"button\",\n    name: \"plotGraphFunctions\",\n    id: \"plotGraphFunctions\",\n    class: \"plotGraphFunctions btn btn-success btn-xs fa fa-align-center\"\n  }, HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), \"Plot Graph Functions\"), \"\\n            \", HTML.BUTTON({\n    style: function() {\n      return [ \"color: black;background-color:lightgreen;display:\", Spacebars.mustache(view.lookup(\"showAdministratorDiv\")) ];\n    },\n    type: \"button\",\n    name: \"export\",\n    id: \"export\",\n    class: \"export btn btn-success btn-xs fa fa-download\"\n  }, HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), \"Export\"), \"\\n            \", HTML.BUTTON({\n    style: function() {\n      return [ \"color: black;background-color:lightgreen;display:\", Spacebars.mustache(view.lookup(\"showAdministratorDiv\")) ];\n    },\n    type: \"button\",\n    name: \"import\",\n    id: \"import\",\n    class: \"import btn btn-success btn-xs fa fa-upload\"\n  }, HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), \"Import\"), \"\\n        \"), \"\\n        \", HTML.DIV(\"\\n        \", HTML.DIV({\n    class: \"pull-right btn-toolbar btn-group btn-xs\",\n    role: \"toolbar\"\n  }, \"\\n            \", HTML.BUTTON({\n    style: function() {\n      return [ \"color: black;background-color:lightgreen;display:\", Spacebars.mustache(view.lookup(\"showAuthenticatedDiv\")) ];\n    },\n    type: \"button\",\n    name: \"colors\",\n    id: \"colors\",\n    class: \"colors btn btn-success btn-xs fa fa-paint-brush\"\n  }, HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), \"Colors\"), \"\\n            \", HTML.BUTTON({\n    style: function() {\n      return [ \"color: black;background-color:lightgreen;display:\", Spacebars.mustache(view.lookup(\"showAuthenticatedDiv\")) ];\n    },\n    type: \"button\",\n    name: \"settings\",\n    id: \"settings\",\n    class: \"settings btn btn-success btn-xs fa fa-cogs\"\n  }, HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), \"Settings\"), \"\\n            \", HTML.BUTTON({\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"showResetNow\")) ];\n    },\n    type: \"button\",\n    name: \"resetNow\",\n    id: \"resetNow\",\n    class: \"resetNow btn btn-danger btn-xs fa fa-exclamation\"\n  }, HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), \"Reset Now\"), \"\\n        \"), \"\\n        \"), \"\\n        \", Spacebars.include(view.lookupTemplate(\"authorization\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"mailCredentials\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"settings\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"colorScheme\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"databases\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"curveParams\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"plotGraphFunctions\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"export\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"import\")), \"\\n        \", Spacebars.include(view.lookupTemplate(\"reset\")), \"\\n    \"), \"\\n    \"), HTML.Raw('\\n    <div id=\"showAdministration\"><button style=\"background-color: lightgreen; color: black; display: none;\" class=\"adminControl btn btn-xs pull-right fa fa-gears\"></button></div>') ];\n}));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"administration.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// packages/randyp_mats-common/templates/administration/administration.js                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Hooks;\nmodule.link(\"meteor/differential:event-hooks\", {\n  Hooks: function (v) {\n    Hooks = v;\n  }\n}, 1);\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 2);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 3);\nvar matsMethods;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsMethods: function (v) {\n    matsMethods = v;\n  }\n}, 4);\nAccounts.onLogin(function () {\n  matsMethods.getAuthorizations.call(function (error, result) {\n    if (error !== undefined) {\n      Session.set('roles', []);\n      setError(new Error(error.toLocaleString()));\n      return false;\n    }\n\n    authList = result;\n\n    for (var ai = 0; ai < authList.length; ai++) {\n      var roles = authList[ai];\n      Session.set('roles', roles);\n      Session.set('signedIn', new Date().getTime()); // force re-render after sign in success\n    }\n  });\n});\n\nHooks.onLoggedOut = function (userid) {\n  Session.set('roles', []);\n  var adminContainerDiv = document.getElementById('adminContainer');\n  var adminDiv = document.getElementById(\"administration\");\n  var userDiv = document.getElementById(\"administration\");\n  adminContainerDiv.style.display = \"none\";\n  adminDiv.style.display = \"none\";\n  userDiv.style.display = \"none\";\n};\n\nTemplate.administration.helpers({\n  adminChanged: function () {\n    return Session.get('adminChanged');\n  },\n  signedIn: function () {\n    var d = new Date(Session.get('signedIn'));\n    return (d.toDateString() + \" \" + d.toTimeString()).split(\"+\")[0];\n  },\n  showAdministratorDiv: function () {\n    var roles = Session.get('roles');\n\n    if (roles !== undefined && roles.indexOf('administrator') > -1) {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  showAuthenticatedDiv: function () {\n    var roles = Session.get('roles');\n\n    if (roles !== undefined && roles.indexOf('user') > -1 || roles !== undefined && roles.indexOf('administrator') > -1) {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  showResetNow: function () {\n    var adminChanged = Session.get('adminChanged');\n    var settings = matsCollections.Settings.findOne({});\n\n    if (document.getElementById(\"ResetFromCode\") == null) {\n      return \"none\";\n    }\n\n    var resetEnabled = settings === undefined ? false : document.getElementById(\"ResetFromCode\").checked;\n    var roles = Session.get('roles');\n\n    if (roles !== undefined && roles.indexOf('administrator') > -1 && resetEnabled) {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  }\n});\nTemplate.administration.events({\n  'click .authorization': function () {\n    $(\"#authorizationModal\").modal('show');\n  },\n  'click .credentials': function () {\n    $(\"#mailCredentialsModal\").modal('show');\n  },\n  'click .database': function () {\n    $(\"#databasesModal\").modal('show');\n  },\n  'click .colors': function () {\n    $(\"#colorSchemeModal\").modal('show');\n  },\n  'click .settings': function () {\n    $(\"#settingsModal\").modal('show');\n  },\n  'click .curveParams': function () {\n    var params = matsCollections.CurveParams.find({}, {\n      sort: {\n        displayOrder: 1\n      }\n    }).fetch();\n    Session.set('params', params);\n    $(\"#curveParamsModal\").modal('show');\n  },\n  'click .plotGraphFunctions': function () {\n    $(\"#plotGraphFunctionsModal\").modal('show');\n  },\n  'click .export': function () {\n    $(\"#exportModal\").modal('show');\n  },\n  'click .import': function () {\n    $(\"#importModal\").modal('show');\n  },\n  'click .adminControl': function () {\n    var adminContainerDiv = document.getElementById('adminContainer');\n    var adminDiv = document.getElementById(\"administration\");\n    var userDiv = document.getElementById(\"administration\");\n\n    if (adminContainerDiv.style.display == \"none\") {\n      adminContainerDiv.style.display = \"block\";\n      var roles = Session.get('roles');\n\n      if (roles !== undefined && Session.get('roles').indexOf('administrator') > -1) {\n        adminDiv.style.display = \"block\";\n        userDiv.style.display = \"block\";\n      } else if (roles !== undefined && Session.get('roles').indexOf('user') > -1) {\n        userDiv.style.display = \"block\";\n      } else {\n        adminContainerDiv.style.display = \"none\";\n        adminDiv.style.display = \"none\";\n        userDiv.style.display = \"none\";\n      }\n    } else {\n      adminContainerDiv.style.display = \"none\";\n      adminDiv.style.display = \"none\";\n      userDiv.style.display = \"none\";\n    }\n  },\n  'click .resetNow': function () {\n    $(\"#resetModal\").modal('show');\n    document.getElementById(\"ResetFromCode\").checked = false;\n    var settings = matsCollections.Settings.findOne({});\n    settings.resetFromCode = false;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"node_modules\":{\"@babel\":{\"runtime\":{\"helpers\":{\"interopRequireDefault.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/@babel/runtime/helpers/interopRequireDefault.js                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"typeof.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/@babel/runtime/helpers/typeof.js                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nfunction _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"toConsumableArray.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/@babel/runtime/helpers/toConsumableArray.js                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"arrayWithoutHoles.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"iterableToArray.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/@babel/runtime/helpers/iterableToArray.js                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"nonIterableSpread.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/@babel/runtime/helpers/nonIterableSpread.js                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"objectSpread.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/@babel/runtime/helpers/objectSpread.js                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"defineProperty.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/@babel/runtime/helpers/defineProperty.js                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"url\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/url/package.json                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"url\",\n  \"version\": \"0.11.0\",\n  \"main\": \"./url.js\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"url.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/url/url.js                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"util.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/url/util.js                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"punycode\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/punycode/package.json                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"punycode\",\n  \"version\": \"1.3.2\",\n  \"main\": \"punycode.js\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"punycode.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/punycode/punycode.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"querystring\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/querystring/package.json                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"querystring\",\n  \"version\": \"0.2.0\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/querystring/index.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"decode.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/querystring/decode.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"encode.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/querystring/encode.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"csv-stringify\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/csv-stringify/package.json                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"csv-stringify\",\n  \"version\": \"4.3.1\",\n  \"main\": \"./lib\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/csv-stringify/lib/index.js                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n// Generated by CoffeeScript 2.3.2\n// # CSV Stringifier\n\n// Please look at the [project documentation](https://csv.js.org/stringify/) for additional\n// information.\nvar Stringifier, get, stream, util;\n\nstream = require('stream');\n\nutil = require('util');\n\nget = require('lodash.get');\n\n// ## Usage\n\n// This module export a function as its main entry point and return a transform\n// stream.\n\n// Refers to the [official prject documentation](http://csv.adaltas.com/stringify/)\n// on how to call this function.\nmodule.exports = function() {\n  var callback, chunks, data, options, stringifier;\n  if (arguments.length === 3) {\n    data = arguments[0];\n    options = arguments[1];\n    callback = arguments[2];\n  } else if (arguments.length === 2) {\n    if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n    if (typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      options = arguments[1];\n    }\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      callback = arguments[0];\n    } else if (Array.isArray(arguments[0])) {\n      data = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  }\n  if (options == null) {\n    options = {};\n  }\n  stringifier = new Stringifier(options);\n  if (data) {\n    process.nextTick(function() {\n      var d, j, len;\n      for (j = 0, len = data.length; j < len; j++) {\n        d = data[j];\n        stringifier.write(d);\n      }\n      return stringifier.end();\n    });\n  }\n  if (callback) {\n    chunks = [];\n    stringifier.on('readable', function() {\n      var chunk, results;\n      results = [];\n      while (chunk = stringifier.read()) {\n        results.push(chunks.push(chunk));\n      }\n      return results;\n    });\n    stringifier.on('error', function(err) {\n      return callback(err);\n    });\n    stringifier.on('end', function() {\n      return callback(null, chunks.join(''));\n    });\n  }\n  return stringifier;\n};\n\n// You can also use *util.promisify* native function (Node.js 8+) in order to wrap callbacks into promises for more convenient use when source is a readable stream and you are OK with storing entire result set in memory:\n\n// ```\n// const { promisify } = require('util');\n// const csv = require('csv');\n// const stringifyAsync = promisify(csv.stringify);\n\n// //returns promise\n// function generateCsv(sourceData) {\n//     return stringifyAsync(sourceData);\n// }\n// ```\n\n// ## `Stringifier([options])`\n\n// Options are documented [here](http://csv.adaltas.com/stringify/).\nStringifier = function(opts = {}) {\n  var base, base1, base10, base11, base12, base13, base14, base2, base3, base4, base5, base6, base7, base8, base9, k, options, v;\n  // Immutable options\n  options = {};\n  for (k in opts) {\n    v = opts[k];\n    options[k] = v;\n  }\n  options.objectMode = true;\n  stream.Transform.call(this, options);\n  //# Default options\n  this.options = options;\n  if ((base = this.options).delimiter == null) {\n    base.delimiter = ',';\n  }\n  if ((base1 = this.options).quote == null) {\n    base1.quote = '\"';\n  }\n  if ((base2 = this.options).quoted == null) {\n    base2.quoted = false;\n  }\n  if ((base3 = this.options).quotedEmpty == null) {\n    base3.quotedEmpty = void 0;\n  }\n  if ((base4 = this.options).quotedString == null) {\n    base4.quotedString = false;\n  }\n  if ((base5 = this.options).eof == null) {\n    base5.eof = true;\n  }\n  if ((base6 = this.options).escape == null) {\n    base6.escape = '\"';\n  }\n  if ((base7 = this.options).header == null) {\n    base7.header = false;\n  }\n  // Normalize the columns option\n  this.options.columns = Stringifier.normalize_columns(this.options.columns);\n  if ((base8 = this.options).formatters == null) {\n    base8.formatters = {};\n  }\n  if (this.options.formatters.bool) {\n    // Backward compatibility\n    this.options.formatters.boolean = this.options.formatters.bool;\n  }\n  // Custom formatters\n  if ((base9 = this.options.formatters).string == null) {\n    base9.string = function(value) {\n      return value;\n    };\n  }\n  if ((base10 = this.options.formatters).date == null) {\n    base10.date = function(value) {\n      // Cast date to timestamp string by default\n      return '' + value.getTime();\n    };\n  }\n  if ((base11 = this.options.formatters).boolean == null) {\n    base11.boolean = function(value) {\n      // Cast boolean to string by default\n      if (value) {\n        return '1';\n      } else {\n        return '';\n      }\n    };\n  }\n  if ((base12 = this.options.formatters).number == null) {\n    base12.number = function(value) {\n      // Cast number to string using native casting by default\n      return '' + value;\n    };\n  }\n  if ((base13 = this.options.formatters).object == null) {\n    base13.object = function(value) {\n      // Stringify object as JSON by default\n      return JSON.stringify(value);\n    };\n  }\n  if ((base14 = this.options).rowDelimiter == null) {\n    base14.rowDelimiter = '\\n';\n  }\n  // Internal usage, state related\n  if (this.countWriten == null) {\n    this.countWriten = 0;\n  }\n  switch (this.options.rowDelimiter) {\n    case 'auto':\n      this.options.rowDelimiter = null;\n      break;\n    case 'unix':\n      this.options.rowDelimiter = \"\\n\";\n      break;\n    case 'mac':\n      this.options.rowDelimiter = \"\\r\";\n      break;\n    case 'windows':\n      this.options.rowDelimiter = \"\\r\\n\";\n      break;\n    case 'ascii':\n      this.options.rowDelimiter = \"\\u001e\";\n      break;\n    case 'unicode':\n      this.options.rowDelimiter = \"\\u2028\";\n  }\n  return this;\n};\n\nutil.inherits(Stringifier, stream.Transform);\n\nmodule.exports.Stringifier = Stringifier;\n\n// ## `Stringifier.prototype._transform(chunk, encoding, callback)`\n\n// Implementation of the [transform._transform function](https://nodejs.org/api/stream.html#stream_transform_transform_chunk_encoding_callback).\nStringifier.prototype._transform = function(chunk, encoding, callback) {\n  var base, e, preserve;\n  // Nothing to do if null or undefined\n  if (chunk == null) {\n    return;\n  }\n  preserve = typeof chunk !== 'object';\n  // Emit and stringify the record if an object or an array\n  if (!preserve) {\n    // Detect columns from the first record\n    if (this.countWriten === 0 && !Array.isArray(chunk)) {\n      if ((base = this.options).columns == null) {\n        base.columns = Stringifier.normalize_columns(Object.keys(chunk));\n      }\n    }\n    try {\n      this.emit('record', chunk, this.countWriten);\n    } catch (error) {\n      e = error;\n      return this.emit('error', e);\n    }\n    // Convert the record into a string\n    if (this.options.eof) {\n      chunk = this.stringify(chunk);\n      if (chunk == null) {\n        return;\n      }\n      chunk = chunk + this.options.rowDelimiter;\n    } else {\n      chunk = this.stringify(chunk);\n      if (chunk == null) {\n        return;\n      }\n      if (this.options.header || this.countWriten) {\n        chunk = this.options.rowDelimiter + chunk;\n      }\n    }\n  }\n  if (typeof chunk === 'number') {\n    // Emit the csv\n    chunk = `${chunk}`;\n  }\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  if (!preserve) {\n    this.countWriten++;\n  }\n  this.push(chunk);\n  return callback();\n};\n\n// ## `Stringifier.prototype._flush(callback)`\n\n// Implementation of the [transform._flush function](https://nodejs.org/api/stream.html#stream_transform_flush_callback).\nStringifier.prototype._flush = function(callback) {\n  if (this.countWriten === 0) {\n    this.headers();\n  }\n  return callback();\n};\n\n// ## `Stringifier.prototype.stringify(line)`\n\n// Convert a line to a string. Line may be an object, an array or a string.\nStringifier.prototype.stringify = function(record) {\n  var _record, column, columns, containsEscape, containsQuote, containsRowDelimiter, containsdelimiter, delimiter, err, escape, field, i, j, l, newrecord, quote, ref, ref1, regexp, shouldQuote, type, value;\n  if (typeof record !== 'object') {\n    return record;\n  }\n  columns = this.options.columns;\n  delimiter = this.options.delimiter;\n  quote = this.options.quote;\n  escape = this.options.escape;\n  if (!Array.isArray(record)) {\n    _record = [];\n    if (columns) {\n      for (i = j = 0, ref = columns.length; (0 <= ref ? j < ref : j > ref); i = 0 <= ref ? ++j : --j) {\n        value = get(record, columns[i].key);\n        _record[i] = (typeof value === 'undefined' || value === null) ? '' : value;\n      }\n    } else {\n      for (column in record) {\n        _record.push(record[column]);\n      }\n    }\n    record = _record;\n    _record = null;\n  } else if (columns) { // Note, we used to have @options.columns\n    // We are getting an array but the user want specified output columns. In\n    // this case, we respect the columns indexes\n    record.splice(columns.length);\n  }\n  if (Array.isArray(record)) {\n    newrecord = '';\n    for (i = l = 0, ref1 = record.length; (0 <= ref1 ? l < ref1 : l > ref1); i = 0 <= ref1 ? ++l : --l) {\n      field = record[i];\n      type = typeof field;\n      try {\n        if (type === 'string') {\n          // fine 99% of the cases\n          field = this.options.formatters.string(field);\n        } else if (type === 'number') {\n          field = this.options.formatters.number(field);\n        } else if (type === 'boolean') {\n          field = this.options.formatters.boolean(field);\n        } else if (field instanceof Date) {\n          field = this.options.formatters.date(field);\n        } else if (type === 'object' && field !== null) {\n          field = this.options.formatters.object(field);\n        }\n      } catch (error) {\n        err = error;\n        this.emit('error', err);\n        return;\n      }\n      if (field) {\n        if (typeof field !== 'string') {\n          this.emit('error', Error('Formatter must return a string, null or undefined'));\n          return null;\n        }\n        containsdelimiter = field.indexOf(delimiter) >= 0;\n        containsQuote = (quote !== '') && field.indexOf(quote) >= 0;\n        containsEscape = field.indexOf(escape) >= 0 && (escape !== quote);\n        containsRowDelimiter = field.indexOf(this.options.rowDelimiter) >= 0;\n        shouldQuote = containsQuote || containsdelimiter || containsRowDelimiter || this.options.quoted || (this.options.quotedString && typeof record[i] === 'string');\n        if (shouldQuote && containsEscape) {\n          regexp = escape === '\\\\' ? new RegExp(escape + escape, 'g') : new RegExp(escape, 'g');\n          field = field.replace(regexp, escape + escape);\n        }\n        if (containsQuote) {\n          regexp = new RegExp(quote, 'g');\n          field = field.replace(regexp, escape + quote);\n        }\n        if (shouldQuote) {\n          field = quote + field + quote;\n        }\n        newrecord += field;\n      } else if (this.options.quotedEmpty || ((this.options.quotedEmpty == null) && record[i] === '' && this.options.quotedString)) {\n        newrecord += quote + quote;\n      }\n      if (i !== record.length - 1) {\n        newrecord += delimiter;\n      }\n    }\n    record = newrecord;\n  }\n  return record;\n};\n\n// ## `Stringifier.prototype.headers`\n\n// Print the header line if the option \"header\" is \"true\".\nStringifier.prototype.headers = function() {\n  var headers;\n  if (!this.options.header) {\n    return;\n  }\n  if (!this.options.columns) {\n    return;\n  }\n  headers = this.options.columns.map(function(column) {\n    return column.header;\n  });\n  if (this.options.eof) {\n    headers = this.stringify(headers) + this.options.rowDelimiter;\n  } else {\n    headers = this.stringify(headers);\n  }\n  return this.push(headers);\n};\n\n// ## `Stringifier.prototype.headers`\n\n// Print the header line if the option \"header\" is \"true\".\nStringifier.normalize_columns = function(columns) {\n  var column, k, v;\n  if (columns == null) {\n    return null;\n  }\n  if (columns != null) {\n    if (typeof columns !== 'object') {\n      throw Error('Invalid option \"columns\": expect an array or an object');\n    }\n    if (!Array.isArray(columns)) {\n      columns = (function() {\n        var results;\n        results = [];\n        for (k in columns) {\n          v = columns[k];\n          results.push({\n            key: k,\n            header: v\n          });\n        }\n        return results;\n      })();\n    } else {\n      columns = (function() {\n        var j, len, results;\n        results = [];\n        for (j = 0, len = columns.length; j < len; j++) {\n          column = columns[j];\n          if (typeof column === 'string') {\n            results.push({\n              key: column,\n              header: column\n            });\n          } else if (typeof column === 'object' && (column != null) && !Array.isArray(column)) {\n            if (!column.key) {\n              throw Error('Invalid column definition: property \"key\" is required');\n            }\n            if (column.header == null) {\n              column.header = column.key;\n            }\n            results.push(column);\n          } else {\n            throw Error('Invalid column definition: expect a string or an object');\n          }\n        }\n        return results;\n      })();\n    }\n  }\n  return columns;\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"lodash.get\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/lodash.get/package.json                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"lodash.get\",\n  \"version\": \"4.4.2\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/lodash.get/index.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"fs-extra\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/package.json                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"fs-extra\",\n  \"version\": \"7.0.0\",\n  \"main\": \"./lib/index.js\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/index.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nmodule.exports = Object.assign(\n  {},\n  // Export promiseified graceful-fs:\n  require('./fs'),\n  // Export extra methods:\n  require('./copy-sync'),\n  require('./copy'),\n  require('./empty'),\n  require('./ensure'),\n  require('./json'),\n  require('./mkdirs'),\n  require('./move-sync'),\n  require('./move'),\n  require('./output'),\n  require('./path-exists'),\n  require('./remove')\n)\n\n// Export fs.promises as a getter property so that we don't trigger\n// ExperimentalWarning before fs.promises is actually accessed.\nconst fs = require('fs')\nif (Object.getOwnPropertyDescriptor(fs, 'promises')) {\n  Object.defineProperty(module.exports, 'promises', {\n    get () { return fs.promises }\n  })\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fs\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/fs/index.js                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n// This is adapted from https://github.com/normalize/mz\n// Copyright (c) 2014-2016 Jonathan Ong me@jongleberry.com and Contributors\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\n\nconst api = [\n  'access',\n  'appendFile',\n  'chmod',\n  'chown',\n  'close',\n  'copyFile',\n  'fchmod',\n  'fchown',\n  'fdatasync',\n  'fstat',\n  'fsync',\n  'ftruncate',\n  'futimes',\n  'lchown',\n  'lchmod',\n  'link',\n  'lstat',\n  'mkdir',\n  'mkdtemp',\n  'open',\n  'readFile',\n  'readdir',\n  'readlink',\n  'realpath',\n  'rename',\n  'rmdir',\n  'stat',\n  'symlink',\n  'truncate',\n  'unlink',\n  'utimes',\n  'writeFile'\n].filter(key => {\n  // Some commands are not available on some systems. Ex:\n  // fs.copyFile was added in Node.js v8.5.0\n  // fs.mkdtemp was added in Node.js v5.10.0\n  // fs.lchown is not available on at least some Linux\n  return typeof fs[key] === 'function'\n})\n\n// Export all keys:\nObject.keys(fs).forEach(key => {\n  if (key === 'promises') {\n    // fs.promises is a getter property that triggers ExperimentalWarning\n    // Don't re-export it here, the getter is defined in \"lib/index.js\"\n    return\n  }\n  exports[key] = fs[key]\n})\n\n// Universalify async methods:\napi.forEach(method => {\n  exports[method] = u(fs[method])\n})\n\n// We differ from mz/fs in that we still ship the old, broken, fs.exists()\n// since we are a drop-in replacement for the native module\nexports.exists = function (filename, callback) {\n  if (typeof callback === 'function') {\n    return fs.exists(filename, callback)\n  }\n  return new Promise(resolve => {\n    return fs.exists(filename, resolve)\n  })\n}\n\n// fs.read() & fs.write need special treatment due to multiple callback args\n\nexports.read = function (fd, buffer, offset, length, position, callback) {\n  if (typeof callback === 'function') {\n    return fs.read(fd, buffer, offset, length, position, callback)\n  }\n  return new Promise((resolve, reject) => {\n    fs.read(fd, buffer, offset, length, position, (err, bytesRead, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesRead, buffer })\n    })\n  })\n}\n\n// Function signature can be\n// fs.write(fd, buffer[, offset[, length[, position]]], callback)\n// OR\n// fs.write(fd, string[, position[, encoding]], callback)\n// We need to handle both cases, so we use ...args\nexports.write = function (fd, buffer, ...args) {\n  if (typeof args[args.length - 1] === 'function') {\n    return fs.write(fd, buffer, ...args)\n  }\n\n  return new Promise((resolve, reject) => {\n    fs.write(fd, buffer, ...args, (err, bytesWritten, buffer) => {\n      if (err) return reject(err)\n      resolve({ bytesWritten, buffer })\n    })\n  })\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"copy-sync\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/copy-sync/index.js                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nmodule.exports = {\n  copySync: require('./copy-sync')\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"copy-sync.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/copy-sync/copy-sync.js                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirpSync = require('../mkdirs').mkdirsSync\nconst utimesSync = require('../util/utimes.js').utimesMillisSync\n\nconst notExist = Symbol('notExist')\n\nfunction copySync (src, dest, opts) {\n  if (typeof opts === 'function') {\n    opts = {filter: opts}\n  }\n\n  opts = opts || {}\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  const destStat = checkPaths(src, dest)\n\n  if (opts.filter && !opts.filter(src, dest)) return\n\n  const destParent = path.dirname(dest)\n  if (!fs.existsSync(destParent)) mkdirpSync(destParent)\n  return startCopy(destStat, src, dest, opts)\n}\n\nfunction startCopy (destStat, src, dest, opts) {\n  if (opts.filter && !opts.filter(src, dest)) return\n  return getStats(destStat, src, dest, opts)\n}\n\nfunction getStats (destStat, src, dest, opts) {\n  const statSync = opts.dereference ? fs.statSync : fs.lstatSync\n  const srcStat = statSync(src)\n\n  if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isFile() ||\n           srcStat.isCharacterDevice() ||\n           srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts)\n  else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts)\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts) {\n  if (destStat === notExist) return copyFile(srcStat, src, dest, opts)\n  return mayCopyFile(srcStat, src, dest, opts)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts) {\n  if (opts.overwrite) {\n    fs.unlinkSync(dest)\n    return copyFile(srcStat, src, dest, opts)\n  } else if (opts.errorOnExist) {\n    throw new Error(`'${dest}' already exists`)\n  }\n}\n\nfunction copyFile (srcStat, src, dest, opts) {\n  if (typeof fs.copyFileSync === 'function') {\n    fs.copyFileSync(src, dest)\n    fs.chmodSync(dest, srcStat.mode)\n    if (opts.preserveTimestamps) {\n      return utimesSync(dest, srcStat.atime, srcStat.mtime)\n    }\n    return\n  }\n  return copyFileFallback(srcStat, src, dest, opts)\n}\n\nfunction copyFileFallback (srcStat, src, dest, opts) {\n  const BUF_LENGTH = 64 * 1024\n  const _buff = require('../util/buffer')(BUF_LENGTH)\n\n  const fdr = fs.openSync(src, 'r')\n  const fdw = fs.openSync(dest, 'w', srcStat.mode)\n  let pos = 0\n\n  while (pos < srcStat.size) {\n    const bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos)\n    fs.writeSync(fdw, _buff, 0, bytesRead)\n    pos += bytesRead\n  }\n\n  if (opts.preserveTimestamps) fs.futimesSync(fdw, srcStat.atime, srcStat.mtime)\n\n  fs.closeSync(fdr)\n  fs.closeSync(fdw)\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts) {\n  if (destStat === notExist) return mkDirAndCopy(srcStat, src, dest, opts)\n  if (destStat && !destStat.isDirectory()) {\n    throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`)\n  }\n  return copyDir(src, dest, opts)\n}\n\nfunction mkDirAndCopy (srcStat, src, dest, opts) {\n  fs.mkdirSync(dest)\n  copyDir(src, dest, opts)\n  return fs.chmodSync(dest, srcStat.mode)\n}\n\nfunction copyDir (src, dest, opts) {\n  fs.readdirSync(src).forEach(item => copyDirItem(item, src, dest, opts))\n}\n\nfunction copyDirItem (item, src, dest, opts) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  const destStat = checkPaths(srcItem, destItem)\n  return startCopy(destStat, srcItem, destItem, opts)\n}\n\nfunction onLink (destStat, src, dest, opts) {\n  let resolvedSrc = fs.readlinkSync(src)\n\n  if (opts.dereference) {\n    resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n  }\n\n  if (destStat === notExist) {\n    return fs.symlinkSync(resolvedSrc, dest)\n  } else {\n    let resolvedDest\n    try {\n      resolvedDest = fs.readlinkSync(dest)\n    } catch (err) {\n      // dest exists and is a regular file or directory,\n      // Windows may throw UNKNOWN error. If dest already exists,\n      // fs throws error anyway, so no need to guard against it here.\n      if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlinkSync(resolvedSrc, dest)\n      throw err\n    }\n    if (opts.dereference) {\n      resolvedDest = path.resolve(process.cwd(), resolvedDest)\n    }\n    if (isSrcSubdir(resolvedSrc, resolvedDest)) {\n      throw new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`)\n    }\n\n    // prevent copy if src is a subdir of dest since unlinking\n    // dest in this case would result in removing src contents\n    // and therefore a broken symlink would be created.\n    if (fs.statSync(dest).isDirectory() && isSrcSubdir(resolvedDest, resolvedSrc)) {\n      throw new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`)\n    }\n    return copyLink(resolvedSrc, dest)\n  }\n}\n\nfunction copyLink (resolvedSrc, dest) {\n  fs.unlinkSync(dest)\n  return fs.symlinkSync(resolvedSrc, dest)\n}\n\n// return true if dest is a subdir of src, otherwise false.\nfunction isSrcSubdir (src, dest) {\n  const srcArray = path.resolve(src).split(path.sep)\n  const destArray = path.resolve(dest).split(path.sep)\n  return srcArray.reduce((acc, current, i) => acc && destArray[i] === current, true)\n}\n\nfunction checkStats (src, dest) {\n  const srcStat = fs.statSync(src)\n  let destStat\n  try {\n    destStat = fs.statSync(dest)\n  } catch (err) {\n    if (err.code === 'ENOENT') return {srcStat, destStat: notExist}\n    throw err\n  }\n  return {srcStat, destStat}\n}\n\nfunction checkPaths (src, dest) {\n  const {srcStat, destStat} = checkStats(src, dest)\n  if (destStat.ino && destStat.ino === srcStat.ino) {\n    throw new Error('Source and destination must not be the same.')\n  }\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(`Cannot copy '${src}' to a subdirectory of itself, '${dest}'.`)\n  }\n  return destStat\n}\n\nmodule.exports = copySync\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"mkdirs\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/mkdirs/index.js                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\nconst u = require('universalify').fromCallback\nconst mkdirs = u(require('./mkdirs'))\nconst mkdirsSync = require('./mkdirs-sync')\n\nmodule.exports = {\n  mkdirs,\n  mkdirsSync,\n  // alias\n  mkdirp: mkdirs,\n  mkdirpSync: mkdirsSync,\n  ensureDir: mkdirs,\n  ensureDirSync: mkdirsSync\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mkdirs.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/mkdirs/mkdirs.js                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst invalidWin32Path = require('./win32').invalidWin32Path\n\nconst o777 = parseInt('0777', 8)\n\nfunction mkdirs (p, opts, callback, made) {\n  if (typeof opts === 'function') {\n    callback = opts\n    opts = {}\n  } else if (!opts || typeof opts !== 'object') {\n    opts = { mode: opts }\n  }\n\n  if (process.platform === 'win32' && invalidWin32Path(p)) {\n    const errInval = new Error(p + ' contains invalid WIN32 path characters.')\n    errInval.code = 'EINVAL'\n    return callback(errInval)\n  }\n\n  let mode = opts.mode\n  const xfs = opts.fs || fs\n\n  if (mode === undefined) {\n    mode = o777 & (~process.umask())\n  }\n  if (!made) made = null\n\n  callback = callback || function () {}\n  p = path.resolve(p)\n\n  xfs.mkdir(p, mode, er => {\n    if (!er) {\n      made = made || p\n      return callback(null, made)\n    }\n    switch (er.code) {\n      case 'ENOENT':\n        if (path.dirname(p) === p) return callback(er)\n        mkdirs(path.dirname(p), opts, (er, made) => {\n          if (er) callback(er, made)\n          else mkdirs(p, opts, callback, made)\n        })\n        break\n\n      // In the case of any other error, just see if there's a dir\n      // there already.  If so, then hooray!  If not, then something\n      // is borked.\n      default:\n        xfs.stat(p, (er2, stat) => {\n          // if the stat fails, then that's super weird.\n          // let the original error be the failure reason.\n          if (er2 || !stat.isDirectory()) callback(er, made)\n          else callback(null, made)\n        })\n        break\n    }\n  })\n}\n\nmodule.exports = mkdirs\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"win32.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/mkdirs/win32.js                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst path = require('path')\n\n// get drive on windows\nfunction getRootPath (p) {\n  p = path.normalize(path.resolve(p)).split(path.sep)\n  if (p.length > 0) return p[0]\n  return null\n}\n\n// http://stackoverflow.com/a/62888/10333 contains more accurate\n// TODO: expand to include the rest\nconst INVALID_PATH_CHARS = /[<>:\"|?*]/\n\nfunction invalidWin32Path (p) {\n  const rp = getRootPath(p)\n  p = p.replace(rp, '')\n  return INVALID_PATH_CHARS.test(p)\n}\n\nmodule.exports = {\n  getRootPath,\n  invalidWin32Path\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mkdirs-sync.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/mkdirs/mkdirs-sync.js                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst invalidWin32Path = require('./win32').invalidWin32Path\n\nconst o777 = parseInt('0777', 8)\n\nfunction mkdirsSync (p, opts, made) {\n  if (!opts || typeof opts !== 'object') {\n    opts = { mode: opts }\n  }\n\n  let mode = opts.mode\n  const xfs = opts.fs || fs\n\n  if (process.platform === 'win32' && invalidWin32Path(p)) {\n    const errInval = new Error(p + ' contains invalid WIN32 path characters.')\n    errInval.code = 'EINVAL'\n    throw errInval\n  }\n\n  if (mode === undefined) {\n    mode = o777 & (~process.umask())\n  }\n  if (!made) made = null\n\n  p = path.resolve(p)\n\n  try {\n    xfs.mkdirSync(p, mode)\n    made = made || p\n  } catch (err0) {\n    if (err0.code === 'ENOENT') {\n      if (path.dirname(p) === p) throw err0\n      made = mkdirsSync(path.dirname(p), opts, made)\n      mkdirsSync(p, opts, made)\n    } else {\n      // In the case of any other error, just see if there's a dir there\n      // already. If so, then hooray!  If not, then something is borked.\n      let stat\n      try {\n        stat = xfs.statSync(p)\n      } catch (err1) {\n        throw err0\n      }\n      if (!stat.isDirectory()) throw err0\n    }\n  }\n\n  return made\n}\n\nmodule.exports = mkdirsSync\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"util\":{\"utimes.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/util/utimes.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst fs = require('graceful-fs')\nconst os = require('os')\nconst path = require('path')\n\n// HFS, ext{2,3}, FAT do not, Node.js v0.10 does not\nfunction hasMillisResSync () {\n  let tmpfile = path.join('millis-test-sync' + Date.now().toString() + Math.random().toString().slice(2))\n  tmpfile = path.join(os.tmpdir(), tmpfile)\n\n  // 550 millis past UNIX epoch\n  const d = new Date(1435410243862)\n  fs.writeFileSync(tmpfile, 'https://github.com/jprichardson/node-fs-extra/pull/141')\n  const fd = fs.openSync(tmpfile, 'r+')\n  fs.futimesSync(fd, d, d)\n  fs.closeSync(fd)\n  return fs.statSync(tmpfile).mtime > 1435410243000\n}\n\nfunction hasMillisRes (callback) {\n  let tmpfile = path.join('millis-test' + Date.now().toString() + Math.random().toString().slice(2))\n  tmpfile = path.join(os.tmpdir(), tmpfile)\n\n  // 550 millis past UNIX epoch\n  const d = new Date(1435410243862)\n  fs.writeFile(tmpfile, 'https://github.com/jprichardson/node-fs-extra/pull/141', err => {\n    if (err) return callback(err)\n    fs.open(tmpfile, 'r+', (err, fd) => {\n      if (err) return callback(err)\n      fs.futimes(fd, d, d, err => {\n        if (err) return callback(err)\n        fs.close(fd, err => {\n          if (err) return callback(err)\n          fs.stat(tmpfile, (err, stats) => {\n            if (err) return callback(err)\n            callback(null, stats.mtime > 1435410243000)\n          })\n        })\n      })\n    })\n  })\n}\n\nfunction timeRemoveMillis (timestamp) {\n  if (typeof timestamp === 'number') {\n    return Math.floor(timestamp / 1000) * 1000\n  } else if (timestamp instanceof Date) {\n    return new Date(Math.floor(timestamp.getTime() / 1000) * 1000)\n  } else {\n    throw new Error('fs-extra: timeRemoveMillis() unknown parameter type')\n  }\n}\n\nfunction utimesMillis (path, atime, mtime, callback) {\n  // if (!HAS_MILLIS_RES) return fs.utimes(path, atime, mtime, callback)\n  fs.open(path, 'r+', (err, fd) => {\n    if (err) return callback(err)\n    fs.futimes(fd, atime, mtime, futimesErr => {\n      fs.close(fd, closeErr => {\n        if (callback) callback(futimesErr || closeErr)\n      })\n    })\n  })\n}\n\nfunction utimesMillisSync (path, atime, mtime) {\n  const fd = fs.openSync(path, 'r+')\n  fs.futimesSync(fd, atime, mtime)\n  return fs.closeSync(fd)\n}\n\nmodule.exports = {\n  hasMillisRes,\n  hasMillisResSync,\n  timeRemoveMillis,\n  utimesMillis,\n  utimesMillisSync\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"buffer.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/util/buffer.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n/* eslint-disable node/no-deprecated-api */\nmodule.exports = function (size) {\n  if (typeof Buffer.allocUnsafe === 'function') {\n    try {\n      return Buffer.allocUnsafe(size)\n    } catch (e) {\n      return new Buffer(size)\n    }\n  }\n  return new Buffer(size)\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"copy\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/copy/index.js                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst u = require('universalify').fromCallback\nmodule.exports = {\n  copy: u(require('./copy'))\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"copy.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/copy/copy.js                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdirp = require('../mkdirs').mkdirs\nconst pathExists = require('../path-exists').pathExists\nconst utimes = require('../util/utimes').utimesMillis\n\nconst notExist = Symbol('notExist')\n\nfunction copy (src, dest, opts, cb) {\n  if (typeof opts === 'function' && !cb) {\n    cb = opts\n    opts = {}\n  } else if (typeof opts === 'function') {\n    opts = {filter: opts}\n  }\n\n  cb = cb || function () {}\n  opts = opts || {}\n\n  opts.clobber = 'clobber' in opts ? !!opts.clobber : true // default to true for now\n  opts.overwrite = 'overwrite' in opts ? !!opts.overwrite : opts.clobber // overwrite falls back to clobber\n\n  // Warn about using preserveTimestamps on 32-bit node\n  if (opts.preserveTimestamps && process.arch === 'ia32') {\n    console.warn(`fs-extra: Using the preserveTimestamps option in 32-bit node is not recommended;\\n\n    see https://github.com/jprichardson/node-fs-extra/issues/269`)\n  }\n\n  checkPaths(src, dest, (err, destStat) => {\n    if (err) return cb(err)\n    if (opts.filter) return handleFilter(checkParentDir, destStat, src, dest, opts, cb)\n    return checkParentDir(destStat, src, dest, opts, cb)\n  })\n}\n\nfunction checkParentDir (destStat, src, dest, opts, cb) {\n  const destParent = path.dirname(dest)\n  pathExists(destParent, (err, dirExists) => {\n    if (err) return cb(err)\n    if (dirExists) return startCopy(destStat, src, dest, opts, cb)\n    mkdirp(destParent, err => {\n      if (err) return cb(err)\n      return startCopy(destStat, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction handleFilter (onInclude, destStat, src, dest, opts, cb) {\n  Promise.resolve(opts.filter(src, dest)).then(include => {\n    if (include) {\n      if (destStat) return onInclude(destStat, src, dest, opts, cb)\n      return onInclude(src, dest, opts, cb)\n    }\n    return cb()\n  }, error => cb(error))\n}\n\nfunction startCopy (destStat, src, dest, opts, cb) {\n  if (opts.filter) return handleFilter(getStats, destStat, src, dest, opts, cb)\n  return getStats(destStat, src, dest, opts, cb)\n}\n\nfunction getStats (destStat, src, dest, opts, cb) {\n  const stat = opts.dereference ? fs.stat : fs.lstat\n  stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n\n    if (srcStat.isDirectory()) return onDir(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isFile() ||\n             srcStat.isCharacterDevice() ||\n             srcStat.isBlockDevice()) return onFile(srcStat, destStat, src, dest, opts, cb)\n    else if (srcStat.isSymbolicLink()) return onLink(destStat, src, dest, opts, cb)\n  })\n}\n\nfunction onFile (srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return copyFile(srcStat, src, dest, opts, cb)\n  return mayCopyFile(srcStat, src, dest, opts, cb)\n}\n\nfunction mayCopyFile (srcStat, src, dest, opts, cb) {\n  if (opts.overwrite) {\n    fs.unlink(dest, err => {\n      if (err) return cb(err)\n      return copyFile(srcStat, src, dest, opts, cb)\n    })\n  } else if (opts.errorOnExist) {\n    return cb(new Error(`'${dest}' already exists`))\n  } else return cb()\n}\n\nfunction copyFile (srcStat, src, dest, opts, cb) {\n  if (typeof fs.copyFile === 'function') {\n    return fs.copyFile(src, dest, err => {\n      if (err) return cb(err)\n      return setDestModeAndTimestamps(srcStat, dest, opts, cb)\n    })\n  }\n  return copyFileFallback(srcStat, src, dest, opts, cb)\n}\n\nfunction copyFileFallback (srcStat, src, dest, opts, cb) {\n  const rs = fs.createReadStream(src)\n  rs.on('error', err => cb(err)).once('open', () => {\n    const ws = fs.createWriteStream(dest, { mode: srcStat.mode })\n    ws.on('error', err => cb(err))\n      .on('open', () => rs.pipe(ws))\n      .once('close', () => setDestModeAndTimestamps(srcStat, dest, opts, cb))\n  })\n}\n\nfunction setDestModeAndTimestamps (srcStat, dest, opts, cb) {\n  fs.chmod(dest, srcStat.mode, err => {\n    if (err) return cb(err)\n    if (opts.preserveTimestamps) {\n      return utimes(dest, srcStat.atime, srcStat.mtime, cb)\n    }\n    return cb()\n  })\n}\n\nfunction onDir (srcStat, destStat, src, dest, opts, cb) {\n  if (destStat === notExist) return mkDirAndCopy(srcStat, src, dest, opts, cb)\n  if (destStat && !destStat.isDirectory()) {\n    return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`))\n  }\n  return copyDir(src, dest, opts, cb)\n}\n\nfunction mkDirAndCopy (srcStat, src, dest, opts, cb) {\n  fs.mkdir(dest, err => {\n    if (err) return cb(err)\n    copyDir(src, dest, opts, err => {\n      if (err) return cb(err)\n      return fs.chmod(dest, srcStat.mode, cb)\n    })\n  })\n}\n\nfunction copyDir (src, dest, opts, cb) {\n  fs.readdir(src, (err, items) => {\n    if (err) return cb(err)\n    return copyDirItems(items, src, dest, opts, cb)\n  })\n}\n\nfunction copyDirItems (items, src, dest, opts, cb) {\n  const item = items.pop()\n  if (!item) return cb()\n  return copyDirItem(items, item, src, dest, opts, cb)\n}\n\nfunction copyDirItem (items, item, src, dest, opts, cb) {\n  const srcItem = path.join(src, item)\n  const destItem = path.join(dest, item)\n  checkPaths(srcItem, destItem, (err, destStat) => {\n    if (err) return cb(err)\n    startCopy(destStat, srcItem, destItem, opts, err => {\n      if (err) return cb(err)\n      return copyDirItems(items, src, dest, opts, cb)\n    })\n  })\n}\n\nfunction onLink (destStat, src, dest, opts, cb) {\n  fs.readlink(src, (err, resolvedSrc) => {\n    if (err) return cb(err)\n\n    if (opts.dereference) {\n      resolvedSrc = path.resolve(process.cwd(), resolvedSrc)\n    }\n\n    if (destStat === notExist) {\n      return fs.symlink(resolvedSrc, dest, cb)\n    } else {\n      fs.readlink(dest, (err, resolvedDest) => {\n        if (err) {\n          // dest exists and is a regular file or directory,\n          // Windows may throw UNKNOWN error. If dest already exists,\n          // fs throws error anyway, so no need to guard against it here.\n          if (err.code === 'EINVAL' || err.code === 'UNKNOWN') return fs.symlink(resolvedSrc, dest, cb)\n          return cb(err)\n        }\n        if (opts.dereference) {\n          resolvedDest = path.resolve(process.cwd(), resolvedDest)\n        }\n        if (isSrcSubdir(resolvedSrc, resolvedDest)) {\n          return cb(new Error(`Cannot copy '${resolvedSrc}' to a subdirectory of itself, '${resolvedDest}'.`))\n        }\n\n        // do not copy if src is a subdir of dest since unlinking\n        // dest in this case would result in removing src contents\n        // and therefore a broken symlink would be created.\n        if (destStat.isDirectory() && isSrcSubdir(resolvedDest, resolvedSrc)) {\n          return cb(new Error(`Cannot overwrite '${resolvedDest}' with '${resolvedSrc}'.`))\n        }\n        return copyLink(resolvedSrc, dest, cb)\n      })\n    }\n  })\n}\n\nfunction copyLink (resolvedSrc, dest, cb) {\n  fs.unlink(dest, err => {\n    if (err) return cb(err)\n    return fs.symlink(resolvedSrc, dest, cb)\n  })\n}\n\n// return true if dest is a subdir of src, otherwise false.\nfunction isSrcSubdir (src, dest) {\n  const srcArray = path.resolve(src).split(path.sep)\n  const destArray = path.resolve(dest).split(path.sep)\n  return srcArray.reduce((acc, current, i) => acc && destArray[i] === current, true)\n}\n\nfunction checkStats (src, dest, cb) {\n  fs.stat(src, (err, srcStat) => {\n    if (err) return cb(err)\n    fs.stat(dest, (err, destStat) => {\n      if (err) {\n        if (err.code === 'ENOENT') return cb(null, {srcStat, destStat: notExist})\n        return cb(err)\n      }\n      return cb(null, {srcStat, destStat})\n    })\n  })\n}\n\nfunction checkPaths (src, dest, cb) {\n  checkStats(src, dest, (err, stats) => {\n    if (err) return cb(err)\n    const {srcStat, destStat} = stats\n    if (destStat.ino && destStat.ino === srcStat.ino) {\n      return cb(new Error('Source and destination must not be the same.'))\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(`Cannot copy '${src}' to a subdirectory of itself, '${dest}'.`))\n    }\n    return cb(null, destStat)\n  })\n}\n\nmodule.exports = copy\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"path-exists\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/path-exists/index.js                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\nconst u = require('universalify').fromPromise\nconst fs = require('../fs')\n\nfunction pathExists (path) {\n  return fs.access(path).then(() => true).catch(() => false)\n}\n\nmodule.exports = {\n  pathExists: u(pathExists),\n  pathExistsSync: fs.existsSync\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"empty\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/empty/index.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst remove = require('../remove')\n\nconst emptyDir = u(function emptyDir (dir, callback) {\n  callback = callback || function () {}\n  fs.readdir(dir, (err, items) => {\n    if (err) return mkdir.mkdirs(dir, callback)\n\n    items = items.map(item => path.join(dir, item))\n\n    deleteItem()\n\n    function deleteItem () {\n      const item = items.pop()\n      if (!item) return callback()\n      remove.remove(item, err => {\n        if (err) return callback(err)\n        deleteItem()\n      })\n    }\n  })\n})\n\nfunction emptyDirSync (dir) {\n  let items\n  try {\n    items = fs.readdirSync(dir)\n  } catch (err) {\n    return mkdir.mkdirsSync(dir)\n  }\n\n  items.forEach(item => {\n    item = path.join(dir, item)\n    remove.removeSync(item)\n  })\n}\n\nmodule.exports = {\n  emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir,\n  emptydir: emptyDir\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"remove\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/remove/index.js                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst rimraf = require('./rimraf')\n\nmodule.exports = {\n  remove: u(rimraf),\n  removeSync: rimraf.sync\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"rimraf.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/remove/rimraf.js                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst assert = require('assert')\n\nconst isWindows = (process.platform === 'win32')\n\nfunction defaults (options) {\n  const methods = [\n    'unlink',\n    'chmod',\n    'stat',\n    'lstat',\n    'rmdir',\n    'readdir'\n  ]\n  methods.forEach(m => {\n    options[m] = options[m] || fs[m]\n    m = m + 'Sync'\n    options[m] = options[m] || fs[m]\n  })\n\n  options.maxBusyTries = options.maxBusyTries || 3\n}\n\nfunction rimraf (p, options, cb) {\n  let busyTries = 0\n\n  if (typeof options === 'function') {\n    cb = options\n    options = {}\n  }\n\n  assert(p, 'rimraf: missing path')\n  assert.strictEqual(typeof p, 'string', 'rimraf: path should be a string')\n  assert.strictEqual(typeof cb, 'function', 'rimraf: callback function required')\n  assert(options, 'rimraf: invalid options argument provided')\n  assert.strictEqual(typeof options, 'object', 'rimraf: options should be object')\n\n  defaults(options)\n\n  rimraf_(p, options, function CB (er) {\n    if (er) {\n      if ((er.code === 'EBUSY' || er.code === 'ENOTEMPTY' || er.code === 'EPERM') &&\n          busyTries < options.maxBusyTries) {\n        busyTries++\n        const time = busyTries * 100\n        // try again, with the same exact callback as this one.\n        return setTimeout(() => rimraf_(p, options, CB), time)\n      }\n\n      // already gone\n      if (er.code === 'ENOENT') er = null\n    }\n\n    cb(er)\n  })\n}\n\n// Two possible strategies.\n// 1. Assume it's a file.  unlink it, then do the dir stuff on EPERM or EISDIR\n// 2. Assume it's a directory.  readdir, then do the file stuff on ENOTDIR\n//\n// Both result in an extra syscall when you guess wrong.  However, there\n// are likely far more normal files in the world than directories.  This\n// is based on the assumption that a the average number of files per\n// directory is >= 1.\n//\n// If anyone ever complains about this, then I guess the strategy could\n// be made configurable somehow.  But until then, YAGNI.\nfunction rimraf_ (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  // sunos lets the root user unlink directories, which is... weird.\n  // so we have to lstat here and make sure it's not a dir.\n  options.lstat(p, (er, st) => {\n    if (er && er.code === 'ENOENT') {\n      return cb(null)\n    }\n\n    // Windows can EPERM on stat.  Life is suffering.\n    if (er && er.code === 'EPERM' && isWindows) {\n      return fixWinEPERM(p, options, er, cb)\n    }\n\n    if (st && st.isDirectory()) {\n      return rmdir(p, options, er, cb)\n    }\n\n    options.unlink(p, er => {\n      if (er) {\n        if (er.code === 'ENOENT') {\n          return cb(null)\n        }\n        if (er.code === 'EPERM') {\n          return (isWindows)\n            ? fixWinEPERM(p, options, er, cb)\n            : rmdir(p, options, er, cb)\n        }\n        if (er.code === 'EISDIR') {\n          return rmdir(p, options, er, cb)\n        }\n      }\n      return cb(er)\n    })\n  })\n}\n\nfunction fixWinEPERM (p, options, er, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n  if (er) {\n    assert(er instanceof Error)\n  }\n\n  options.chmod(p, 0o666, er2 => {\n    if (er2) {\n      cb(er2.code === 'ENOENT' ? null : er)\n    } else {\n      options.stat(p, (er3, stats) => {\n        if (er3) {\n          cb(er3.code === 'ENOENT' ? null : er)\n        } else if (stats.isDirectory()) {\n          rmdir(p, options, er, cb)\n        } else {\n          options.unlink(p, cb)\n        }\n      })\n    }\n  })\n}\n\nfunction fixWinEPERMSync (p, options, er) {\n  let stats\n\n  assert(p)\n  assert(options)\n  if (er) {\n    assert(er instanceof Error)\n  }\n\n  try {\n    options.chmodSync(p, 0o666)\n  } catch (er2) {\n    if (er2.code === 'ENOENT') {\n      return\n    } else {\n      throw er\n    }\n  }\n\n  try {\n    stats = options.statSync(p)\n  } catch (er3) {\n    if (er3.code === 'ENOENT') {\n      return\n    } else {\n      throw er\n    }\n  }\n\n  if (stats.isDirectory()) {\n    rmdirSync(p, options, er)\n  } else {\n    options.unlinkSync(p)\n  }\n}\n\nfunction rmdir (p, options, originalEr, cb) {\n  assert(p)\n  assert(options)\n  if (originalEr) {\n    assert(originalEr instanceof Error)\n  }\n  assert(typeof cb === 'function')\n\n  // try to rmdir first, and only readdir on ENOTEMPTY or EEXIST (SunOS)\n  // if we guessed wrong, and it's not a directory, then\n  // raise the original error.\n  options.rmdir(p, er => {\n    if (er && (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM')) {\n      rmkids(p, options, cb)\n    } else if (er && er.code === 'ENOTDIR') {\n      cb(originalEr)\n    } else {\n      cb(er)\n    }\n  })\n}\n\nfunction rmkids (p, options, cb) {\n  assert(p)\n  assert(options)\n  assert(typeof cb === 'function')\n\n  options.readdir(p, (er, files) => {\n    if (er) return cb(er)\n\n    let n = files.length\n    let errState\n\n    if (n === 0) return options.rmdir(p, cb)\n\n    files.forEach(f => {\n      rimraf(path.join(p, f), options, er => {\n        if (errState) {\n          return\n        }\n        if (er) return cb(errState = er)\n        if (--n === 0) {\n          options.rmdir(p, cb)\n        }\n      })\n    })\n  })\n}\n\n// this looks simpler, and is strictly *faster*, but will\n// tie up the JavaScript thread and fail on excessively\n// deep directory trees.\nfunction rimrafSync (p, options) {\n  let st\n\n  options = options || {}\n  defaults(options)\n\n  assert(p, 'rimraf: missing path')\n  assert.strictEqual(typeof p, 'string', 'rimraf: path should be a string')\n  assert(options, 'rimraf: missing options')\n  assert.strictEqual(typeof options, 'object', 'rimraf: options should be object')\n\n  try {\n    st = options.lstatSync(p)\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      return\n    }\n\n    // Windows can EPERM on stat.  Life is suffering.\n    if (er.code === 'EPERM' && isWindows) {\n      fixWinEPERMSync(p, options, er)\n    }\n  }\n\n  try {\n    // sunos lets the root user unlink directories, which is... weird.\n    if (st && st.isDirectory()) {\n      rmdirSync(p, options, null)\n    } else {\n      options.unlinkSync(p)\n    }\n  } catch (er) {\n    if (er.code === 'ENOENT') {\n      return\n    } else if (er.code === 'EPERM') {\n      return isWindows ? fixWinEPERMSync(p, options, er) : rmdirSync(p, options, er)\n    } else if (er.code !== 'EISDIR') {\n      throw er\n    }\n    rmdirSync(p, options, er)\n  }\n}\n\nfunction rmdirSync (p, options, originalEr) {\n  assert(p)\n  assert(options)\n  if (originalEr) {\n    assert(originalEr instanceof Error)\n  }\n\n  try {\n    options.rmdirSync(p)\n  } catch (er) {\n    if (er.code === 'ENOTDIR') {\n      throw originalEr\n    } else if (er.code === 'ENOTEMPTY' || er.code === 'EEXIST' || er.code === 'EPERM') {\n      rmkidsSync(p, options)\n    } else if (er.code !== 'ENOENT') {\n      throw er\n    }\n  }\n}\n\nfunction rmkidsSync (p, options) {\n  assert(p)\n  assert(options)\n  options.readdirSync(p).forEach(f => rimrafSync(path.join(p, f), options))\n\n  // We only end up here once we got ENOTEMPTY at least once, and\n  // at this point, we are guaranteed to have removed all the kids.\n  // So, we know that it won't be ENOENT or ENOTDIR or anything else.\n  // try really hard to delete stuff on windows, because it has a\n  // PROFOUNDLY annoying habit of not closing handles promptly when\n  // files are deleted, resulting in spurious ENOTEMPTY errors.\n  const retries = isWindows ? 100 : 1\n  let i = 0\n  do {\n    let threw = true\n    try {\n      const ret = options.rmdirSync(p, options)\n      threw = false\n      return ret\n    } finally {\n      if (++i < retries && threw) continue // eslint-disable-line\n    }\n  } while (true)\n}\n\nmodule.exports = rimraf\nrimraf.sync = rimrafSync\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"ensure\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/ensure/index.js                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst file = require('./file')\nconst link = require('./link')\nconst symlink = require('./symlink')\n\nmodule.exports = {\n  // file\n  createFile: file.createFile,\n  createFileSync: file.createFileSync,\n  ensureFile: file.createFile,\n  ensureFileSync: file.createFileSync,\n  // link\n  createLink: link.createLink,\n  createLinkSync: link.createLinkSync,\n  ensureLink: link.createLink,\n  ensureLinkSync: link.createLinkSync,\n  // symlink\n  createSymlink: symlink.createSymlink,\n  createSymlinkSync: symlink.createSymlinkSync,\n  ensureSymlink: symlink.createSymlink,\n  ensureSymlinkSync: symlink.createSymlinkSync\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"file.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/ensure/file.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction createFile (file, callback) {\n  function makeFile () {\n    fs.writeFile(file, '', err => {\n      if (err) return callback(err)\n      callback()\n    })\n  }\n\n  fs.stat(file, (err, stats) => { // eslint-disable-line handle-callback-err\n    if (!err && stats.isFile()) return callback()\n    const dir = path.dirname(file)\n    pathExists(dir, (err, dirExists) => {\n      if (err) return callback(err)\n      if (dirExists) return makeFile()\n      mkdir.mkdirs(dir, err => {\n        if (err) return callback(err)\n        makeFile()\n      })\n    })\n  })\n}\n\nfunction createFileSync (file) {\n  let stats\n  try {\n    stats = fs.statSync(file)\n  } catch (e) {}\n  if (stats && stats.isFile()) return\n\n  const dir = path.dirname(file)\n  if (!fs.existsSync(dir)) {\n    mkdir.mkdirsSync(dir)\n  }\n\n  fs.writeFileSync(file, '')\n}\n\nmodule.exports = {\n  createFile: u(createFile),\n  createFileSync\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"link.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/ensure/link.js                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction createLink (srcpath, dstpath, callback) {\n  function makeLink (srcpath, dstpath) {\n    fs.link(srcpath, dstpath, err => {\n      if (err) return callback(err)\n      callback(null)\n    })\n  }\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    fs.lstat(srcpath, (err) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureLink')\n        return callback(err)\n      }\n\n      const dir = path.dirname(dstpath)\n      pathExists(dir, (err, dirExists) => {\n        if (err) return callback(err)\n        if (dirExists) return makeLink(srcpath, dstpath)\n        mkdir.mkdirs(dir, err => {\n          if (err) return callback(err)\n          makeLink(srcpath, dstpath)\n        })\n      })\n    })\n  })\n}\n\nfunction createLinkSync (srcpath, dstpath) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  try {\n    fs.lstatSync(srcpath)\n  } catch (err) {\n    err.message = err.message.replace('lstat', 'ensureLink')\n    throw err\n  }\n\n  const dir = path.dirname(dstpath)\n  const dirExists = fs.existsSync(dir)\n  if (dirExists) return fs.linkSync(srcpath, dstpath)\n  mkdir.mkdirsSync(dir)\n\n  return fs.linkSync(srcpath, dstpath)\n}\n\nmodule.exports = {\n  createLink: u(createLink),\n  createLinkSync\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"symlink.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/ensure/symlink.js                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst _mkdirs = require('../mkdirs')\nconst mkdirs = _mkdirs.mkdirs\nconst mkdirsSync = _mkdirs.mkdirsSync\n\nconst _symlinkPaths = require('./symlink-paths')\nconst symlinkPaths = _symlinkPaths.symlinkPaths\nconst symlinkPathsSync = _symlinkPaths.symlinkPathsSync\n\nconst _symlinkType = require('./symlink-type')\nconst symlinkType = _symlinkType.symlinkType\nconst symlinkTypeSync = _symlinkType.symlinkTypeSync\n\nconst pathExists = require('../path-exists').pathExists\n\nfunction createSymlink (srcpath, dstpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    symlinkPaths(srcpath, dstpath, (err, relative) => {\n      if (err) return callback(err)\n      srcpath = relative.toDst\n      symlinkType(relative.toCwd, type, (err, type) => {\n        if (err) return callback(err)\n        const dir = path.dirname(dstpath)\n        pathExists(dir, (err, dirExists) => {\n          if (err) return callback(err)\n          if (dirExists) return fs.symlink(srcpath, dstpath, type, callback)\n          mkdirs(dir, err => {\n            if (err) return callback(err)\n            fs.symlink(srcpath, dstpath, type, callback)\n          })\n        })\n      })\n    })\n  })\n}\n\nfunction createSymlinkSync (srcpath, dstpath, type) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  const relative = symlinkPathsSync(srcpath, dstpath)\n  srcpath = relative.toDst\n  type = symlinkTypeSync(relative.toCwd, type)\n  const dir = path.dirname(dstpath)\n  const exists = fs.existsSync(dir)\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type)\n  mkdirsSync(dir)\n  return fs.symlinkSync(srcpath, dstpath, type)\n}\n\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"symlink-paths.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/ensure/symlink-paths.js                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst pathExists = require('../path-exists').pathExists\n\n/**\n * Function that returns two types of paths, one relative to symlink, and one\n * relative to the current working directory. Checks if path is absolute or\n * relative. If the path is relative, this function checks if the path is\n * relative to symlink or relative to current working directory. This is an\n * initiative to find a smarter `srcpath` to supply when building symlinks.\n * This allows you to determine which path to use out of one of three possible\n * types of source paths. The first is an absolute path. This is detected by\n * `path.isAbsolute()`. When an absolute path is provided, it is checked to\n * see if it exists. If it does it's used, if not an error is returned\n * (callback)/ thrown (sync). The other two options for `srcpath` are a\n * relative url. By default Node's `fs.symlink` works by creating a symlink\n * using `dstpath` and expects the `srcpath` to be relative to the newly\n * created symlink. If you provide a `srcpath` that does not exist on the file\n * system it results in a broken symlink. To minimize this, the function\n * checks to see if the 'relative to symlink' source file exists, and if it\n * does it will use it. If it does not, it checks if there's a file that\n * exists that is relative to the current working directory, if does its used.\n * This preserves the expectations of the original fs.symlink spec and adds\n * the ability to pass in `relative to current working direcotry` paths.\n */\n\nfunction symlinkPaths (srcpath, dstpath, callback) {\n  if (path.isAbsolute(srcpath)) {\n    return fs.lstat(srcpath, (err) => {\n      if (err) {\n        err.message = err.message.replace('lstat', 'ensureSymlink')\n        return callback(err)\n      }\n      return callback(null, {\n        'toCwd': srcpath,\n        'toDst': srcpath\n      })\n    })\n  } else {\n    const dstdir = path.dirname(dstpath)\n    const relativeToDst = path.join(dstdir, srcpath)\n    return pathExists(relativeToDst, (err, exists) => {\n      if (err) return callback(err)\n      if (exists) {\n        return callback(null, {\n          'toCwd': relativeToDst,\n          'toDst': srcpath\n        })\n      } else {\n        return fs.lstat(srcpath, (err) => {\n          if (err) {\n            err.message = err.message.replace('lstat', 'ensureSymlink')\n            return callback(err)\n          }\n          return callback(null, {\n            'toCwd': srcpath,\n            'toDst': path.relative(dstdir, srcpath)\n          })\n        })\n      }\n    })\n  }\n}\n\nfunction symlinkPathsSync (srcpath, dstpath) {\n  let exists\n  if (path.isAbsolute(srcpath)) {\n    exists = fs.existsSync(srcpath)\n    if (!exists) throw new Error('absolute srcpath does not exist')\n    return {\n      'toCwd': srcpath,\n      'toDst': srcpath\n    }\n  } else {\n    const dstdir = path.dirname(dstpath)\n    const relativeToDst = path.join(dstdir, srcpath)\n    exists = fs.existsSync(relativeToDst)\n    if (exists) {\n      return {\n        'toCwd': relativeToDst,\n        'toDst': srcpath\n      }\n    } else {\n      exists = fs.existsSync(srcpath)\n      if (!exists) throw new Error('relative srcpath does not exist')\n      return {\n        'toCwd': srcpath,\n        'toDst': path.relative(dstdir, srcpath)\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  symlinkPaths,\n  symlinkPathsSync\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"symlink-type.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/ensure/symlink-type.js                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst fs = require('graceful-fs')\n\nfunction symlinkType (srcpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n  if (type) return callback(null, type)\n  fs.lstat(srcpath, (err, stats) => {\n    if (err) return callback(null, 'file')\n    type = (stats && stats.isDirectory()) ? 'dir' : 'file'\n    callback(null, type)\n  })\n}\n\nfunction symlinkTypeSync (srcpath, type) {\n  let stats\n\n  if (type) return type\n  try {\n    stats = fs.lstatSync(srcpath)\n  } catch (e) {\n    return 'file'\n  }\n  return (stats && stats.isDirectory()) ? 'dir' : 'file'\n}\n\nmodule.exports = {\n  symlinkType,\n  symlinkTypeSync\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"json\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/json/index.js                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst jsonFile = require('./jsonfile')\n\njsonFile.outputJson = u(require('./output-json'))\njsonFile.outputJsonSync = require('./output-json-sync')\n// aliases\njsonFile.outputJSON = jsonFile.outputJson\njsonFile.outputJSONSync = jsonFile.outputJsonSync\njsonFile.writeJSON = jsonFile.writeJson\njsonFile.writeJSONSync = jsonFile.writeJsonSync\njsonFile.readJSON = jsonFile.readJson\njsonFile.readJSONSync = jsonFile.readJsonSync\n\nmodule.exports = jsonFile\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"jsonfile.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/json/jsonfile.js                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst jsonFile = require('jsonfile')\n\nmodule.exports = {\n  // jsonfile exports\n  readJson: u(jsonFile.readFile),\n  readJsonSync: jsonFile.readFileSync,\n  writeJson: u(jsonFile.writeFile),\n  writeJsonSync: jsonFile.writeFileSync\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"output-json.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/json/output-json.js                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\nconst jsonFile = require('./jsonfile')\n\nfunction outputJson (file, data, options, callback) {\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  const dir = path.dirname(file)\n\n  pathExists(dir, (err, itDoes) => {\n    if (err) return callback(err)\n    if (itDoes) return jsonFile.writeJson(file, data, options, callback)\n\n    mkdir.mkdirs(dir, err => {\n      if (err) return callback(err)\n      jsonFile.writeJson(file, data, options, callback)\n    })\n  })\n}\n\nmodule.exports = outputJson\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"output-json-sync.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/json/output-json-sync.js                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst jsonFile = require('./jsonfile')\n\nfunction outputJsonSync (file, data, options) {\n  const dir = path.dirname(file)\n\n  if (!fs.existsSync(dir)) {\n    mkdir.mkdirsSync(dir)\n  }\n\n  jsonFile.writeJsonSync(file, data, options)\n}\n\nmodule.exports = outputJsonSync\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"move-sync\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/move-sync/index.js                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copySync = require('../copy-sync').copySync\nconst removeSync = require('../remove').removeSync\nconst mkdirpSync = require('../mkdirs').mkdirsSync\nconst buffer = require('../util/buffer')\n\nfunction moveSync (src, dest, options) {\n  options = options || {}\n  const overwrite = options.overwrite || options.clobber || false\n\n  src = path.resolve(src)\n  dest = path.resolve(dest)\n\n  if (src === dest) return fs.accessSync(src)\n\n  if (isSrcSubdir(src, dest)) throw new Error(`Cannot move '${src}' into itself '${dest}'.`)\n\n  mkdirpSync(path.dirname(dest))\n  tryRenameSync()\n\n  function tryRenameSync () {\n    if (overwrite) {\n      try {\n        return fs.renameSync(src, dest)\n      } catch (err) {\n        if (err.code === 'ENOTEMPTY' || err.code === 'EEXIST' || err.code === 'EPERM') {\n          removeSync(dest)\n          options.overwrite = false // just overwriteed it, no need to do it again\n          return moveSync(src, dest, options)\n        }\n\n        if (err.code !== 'EXDEV') throw err\n        return moveSyncAcrossDevice(src, dest, overwrite)\n      }\n    } else {\n      try {\n        fs.linkSync(src, dest)\n        return fs.unlinkSync(src)\n      } catch (err) {\n        if (err.code === 'EXDEV' || err.code === 'EISDIR' || err.code === 'EPERM' || err.code === 'ENOTSUP') {\n          return moveSyncAcrossDevice(src, dest, overwrite)\n        }\n        throw err\n      }\n    }\n  }\n}\n\nfunction moveSyncAcrossDevice (src, dest, overwrite) {\n  const stat = fs.statSync(src)\n\n  if (stat.isDirectory()) {\n    return moveDirSyncAcrossDevice(src, dest, overwrite)\n  } else {\n    return moveFileSyncAcrossDevice(src, dest, overwrite)\n  }\n}\n\nfunction moveFileSyncAcrossDevice (src, dest, overwrite) {\n  const BUF_LENGTH = 64 * 1024\n  const _buff = buffer(BUF_LENGTH)\n\n  const flags = overwrite ? 'w' : 'wx'\n\n  const fdr = fs.openSync(src, 'r')\n  const stat = fs.fstatSync(fdr)\n  const fdw = fs.openSync(dest, flags, stat.mode)\n  let pos = 0\n\n  while (pos < stat.size) {\n    const bytesRead = fs.readSync(fdr, _buff, 0, BUF_LENGTH, pos)\n    fs.writeSync(fdw, _buff, 0, bytesRead)\n    pos += bytesRead\n  }\n\n  fs.closeSync(fdr)\n  fs.closeSync(fdw)\n  return fs.unlinkSync(src)\n}\n\nfunction moveDirSyncAcrossDevice (src, dest, overwrite) {\n  const options = {\n    overwrite: false\n  }\n\n  if (overwrite) {\n    removeSync(dest)\n    tryCopySync()\n  } else {\n    tryCopySync()\n  }\n\n  function tryCopySync () {\n    copySync(src, dest, options)\n    return removeSync(src)\n  }\n}\n\n// return true if dest is a subdir of src, otherwise false.\n// extract dest base dir and check if that is the same as src basename\nfunction isSrcSubdir (src, dest) {\n  try {\n    return fs.statSync(src).isDirectory() &&\n           src !== dest &&\n           dest.indexOf(src) > -1 &&\n           dest.split(path.dirname(src) + path.sep)[1].split(path.sep)[0] === path.basename(src)\n  } catch (e) {\n    return false\n  }\n}\n\nmodule.exports = {\n  moveSync\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"move\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/move/index.js                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst copy = require('../copy').copy\nconst remove = require('../remove').remove\nconst mkdirp = require('../mkdirs').mkdirp\nconst pathExists = require('../path-exists').pathExists\n\nfunction move (src, dest, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts\n    opts = {}\n  }\n\n  const overwrite = opts.overwrite || opts.clobber || false\n\n  src = path.resolve(src)\n  dest = path.resolve(dest)\n\n  if (src === dest) return fs.access(src, cb)\n\n  fs.stat(src, (err, st) => {\n    if (err) return cb(err)\n\n    if (st.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(`Cannot move '${src}' to a subdirectory of itself, '${dest}'.`))\n    }\n    mkdirp(path.dirname(dest), err => {\n      if (err) return cb(err)\n      return doRename(src, dest, overwrite, cb)\n    })\n  })\n}\n\nfunction doRename (src, dest, overwrite, cb) {\n  if (overwrite) {\n    return remove(dest, err => {\n      if (err) return cb(err)\n      return rename(src, dest, overwrite, cb)\n    })\n  }\n  pathExists(dest, (err, destExists) => {\n    if (err) return cb(err)\n    if (destExists) return cb(new Error('dest already exists.'))\n    return rename(src, dest, overwrite, cb)\n  })\n}\n\nfunction rename (src, dest, overwrite, cb) {\n  fs.rename(src, dest, err => {\n    if (!err) return cb()\n    if (err.code !== 'EXDEV') return cb(err)\n    return moveAcrossDevice(src, dest, overwrite, cb)\n  })\n}\n\nfunction moveAcrossDevice (src, dest, overwrite, cb) {\n  const opts = {\n    overwrite,\n    errorOnExist: true\n  }\n\n  copy(src, dest, opts, err => {\n    if (err) return cb(err)\n    return remove(src, cb)\n  })\n}\n\nfunction isSrcSubdir (src, dest) {\n  const srcArray = src.split(path.sep)\n  const destArray = dest.split(path.sep)\n\n  return srcArray.reduce((acc, current, i) => {\n    return acc && destArray[i] === current\n  }, true)\n}\n\nmodule.exports = {\n  move: u(move)\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"output\":{\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fs-extra/lib/output/index.js                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst pathExists = require('../path-exists').pathExists\n\nfunction outputFile (file, data, encoding, callback) {\n  if (typeof encoding === 'function') {\n    callback = encoding\n    encoding = 'utf8'\n  }\n\n  const dir = path.dirname(file)\n  pathExists(dir, (err, itDoes) => {\n    if (err) return callback(err)\n    if (itDoes) return fs.writeFile(file, data, encoding, callback)\n\n    mkdir.mkdirs(dir, err => {\n      if (err) return callback(err)\n\n      fs.writeFile(file, data, encoding, callback)\n    })\n  })\n}\n\nfunction outputFileSync (file, ...args) {\n  const dir = path.dirname(file)\n  if (fs.existsSync(dir)) {\n    return fs.writeFileSync(file, ...args)\n  }\n  mkdir.mkdirsSync(dir)\n  fs.writeFileSync(file, ...args)\n}\n\nmodule.exports = {\n  outputFile: u(outputFile),\n  outputFileSync\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"universalify\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/universalify/package.json                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"universalify\",\n  \"version\": \"0.1.2\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/universalify/index.js                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nexports.fromCallback = function (fn) {\n  return Object.defineProperty(function () {\n    if (typeof arguments[arguments.length - 1] === 'function') fn.apply(this, arguments)\n    else {\n      return new Promise((resolve, reject) => {\n        arguments[arguments.length] = (err, res) => {\n          if (err) return reject(err)\n          resolve(res)\n        }\n        arguments.length++\n        fn.apply(this, arguments)\n      })\n    }\n  }, 'name', { value: fn.name })\n}\n\nexports.fromPromise = function (fn) {\n  return Object.defineProperty(function () {\n    const cb = arguments[arguments.length - 1]\n    if (typeof cb !== 'function') return fn.apply(this, arguments)\n    else fn.apply(this, arguments).then(r => cb(null, r), cb)\n  }, 'name', { value: fn.name })\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"graceful-fs\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/graceful-fs/package.json                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"graceful-fs\",\n  \"version\": \"4.1.15\",\n  \"main\": \"graceful-fs.js\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"graceful-fs.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/graceful-fs/graceful-fs.js                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar fs = require('fs')\nvar polyfills = require('./polyfills.js')\nvar legacy = require('./legacy-streams.js')\nvar clone = require('./clone.js')\n\nvar queue = []\n\nvar util = require('util')\n\nfunction noop () {}\n\nvar debug = noop\nif (util.debuglog)\n  debug = util.debuglog('gfs4')\nelse if (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || ''))\n  debug = function() {\n    var m = util.format.apply(util, arguments)\n    m = 'GFS4: ' + m.split(/\\n/).join('\\nGFS4: ')\n    console.error(m)\n  }\n\nif (/\\bgfs4\\b/i.test(process.env.NODE_DEBUG || '')) {\n  process.on('exit', function() {\n    debug(queue)\n    require('assert').equal(queue.length, 0)\n  })\n}\n\nmodule.exports = patch(clone(fs))\nif (process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH && !fs.__patched) {\n    module.exports = patch(fs)\n    fs.__patched = true;\n}\n\n// Always patch fs.close/closeSync, because we want to\n// retry() whenever a close happens *anywhere* in the program.\n// This is essential when multiple graceful-fs instances are\n// in play at the same time.\nmodule.exports.close = (function (fs$close) { return function (fd, cb) {\n  return fs$close.call(fs, fd, function (err) {\n    if (!err)\n      retry()\n\n    if (typeof cb === 'function')\n      cb.apply(this, arguments)\n  })\n}})(fs.close)\n\nmodule.exports.closeSync = (function (fs$closeSync) { return function (fd) {\n  // Note that graceful-fs also retries when fs.closeSync() fails.\n  // Looks like a bug to me, although it's probably a harmless one.\n  var rval = fs$closeSync.apply(fs, arguments)\n  retry()\n  return rval\n}})(fs.closeSync)\n\n// Only patch fs once, otherwise we'll run into a memory leak if\n// graceful-fs is loaded multiple times, such as in test environments that\n// reset the loaded modules between tests.\n// We look for the string `graceful-fs` from the comment above. This\n// way we are not adding any extra properties and it will detect if older\n// versions of graceful-fs are installed.\nif (!/\\bgraceful-fs\\b/.test(fs.closeSync.toString())) {\n  fs.closeSync = module.exports.closeSync;\n  fs.close = module.exports.close;\n}\n\nfunction patch (fs) {\n  // Everything that references the open() function needs to be in here\n  polyfills(fs)\n  fs.gracefulify = patch\n  fs.FileReadStream = ReadStream;  // Legacy name.\n  fs.FileWriteStream = WriteStream;  // Legacy name.\n  fs.createReadStream = createReadStream\n  fs.createWriteStream = createWriteStream\n  var fs$readFile = fs.readFile\n  fs.readFile = readFile\n  function readFile (path, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$readFile(path, options, cb)\n\n    function go$readFile (path, options, cb) {\n      return fs$readFile(path, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$readFile, [path, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$writeFile = fs.writeFile\n  fs.writeFile = writeFile\n  function writeFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$writeFile(path, data, options, cb)\n\n    function go$writeFile (path, data, options, cb) {\n      return fs$writeFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$writeFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$appendFile = fs.appendFile\n  if (fs$appendFile)\n    fs.appendFile = appendFile\n  function appendFile (path, data, options, cb) {\n    if (typeof options === 'function')\n      cb = options, options = null\n\n    return go$appendFile(path, data, options, cb)\n\n    function go$appendFile (path, data, options, cb) {\n      return fs$appendFile(path, data, options, function (err) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$appendFile, [path, data, options, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  var fs$readdir = fs.readdir\n  fs.readdir = readdir\n  function readdir (path, options, cb) {\n    var args = [path]\n    if (typeof options !== 'function') {\n      args.push(options)\n    } else {\n      cb = options\n    }\n    args.push(go$readdir$cb)\n\n    return go$readdir(args)\n\n    function go$readdir$cb (err, files) {\n      if (files && files.sort)\n        files.sort()\n\n      if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n        enqueue([go$readdir, [args]])\n\n      else {\n        if (typeof cb === 'function')\n          cb.apply(this, arguments)\n        retry()\n      }\n    }\n  }\n\n  function go$readdir (args) {\n    return fs$readdir.apply(fs, args)\n  }\n\n  if (process.version.substr(0, 4) === 'v0.8') {\n    var legStreams = legacy(fs)\n    ReadStream = legStreams.ReadStream\n    WriteStream = legStreams.WriteStream\n  }\n\n  var fs$ReadStream = fs.ReadStream\n  if (fs$ReadStream) {\n    ReadStream.prototype = Object.create(fs$ReadStream.prototype)\n    ReadStream.prototype.open = ReadStream$open\n  }\n\n  var fs$WriteStream = fs.WriteStream\n  if (fs$WriteStream) {\n    WriteStream.prototype = Object.create(fs$WriteStream.prototype)\n    WriteStream.prototype.open = WriteStream$open\n  }\n\n  fs.ReadStream = ReadStream\n  fs.WriteStream = WriteStream\n\n  function ReadStream (path, options) {\n    if (this instanceof ReadStream)\n      return fs$ReadStream.apply(this, arguments), this\n    else\n      return ReadStream.apply(Object.create(ReadStream.prototype), arguments)\n  }\n\n  function ReadStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        if (that.autoClose)\n          that.destroy()\n\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n        that.read()\n      }\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (this instanceof WriteStream)\n      return fs$WriteStream.apply(this, arguments), this\n    else\n      return WriteStream.apply(Object.create(WriteStream.prototype), arguments)\n  }\n\n  function WriteStream$open () {\n    var that = this\n    open(that.path, that.flags, that.mode, function (err, fd) {\n      if (err) {\n        that.destroy()\n        that.emit('error', err)\n      } else {\n        that.fd = fd\n        that.emit('open', fd)\n      }\n    })\n  }\n\n  function createReadStream (path, options) {\n    return new ReadStream(path, options)\n  }\n\n  function createWriteStream (path, options) {\n    return new WriteStream(path, options)\n  }\n\n  var fs$open = fs.open\n  fs.open = open\n  function open (path, flags, mode, cb) {\n    if (typeof mode === 'function')\n      cb = mode, mode = null\n\n    return go$open(path, flags, mode, cb)\n\n    function go$open (path, flags, mode, cb) {\n      return fs$open(path, flags, mode, function (err, fd) {\n        if (err && (err.code === 'EMFILE' || err.code === 'ENFILE'))\n          enqueue([go$open, [path, flags, mode, cb]])\n        else {\n          if (typeof cb === 'function')\n            cb.apply(this, arguments)\n          retry()\n        }\n      })\n    }\n  }\n\n  return fs\n}\n\nfunction enqueue (elem) {\n  debug('ENQUEUE', elem[0].name, elem[1])\n  queue.push(elem)\n}\n\nfunction retry () {\n  var elem = queue.shift()\n  if (elem) {\n    debug('RETRY', elem[0].name, elem[1])\n    elem[0].apply(null, elem[1])\n  }\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"polyfills.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/graceful-fs/polyfills.js                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar constants = require('constants')\n\nvar origCwd = process.cwd\nvar cwd = null\n\nvar platform = process.env.GRACEFUL_FS_PLATFORM || process.platform\n\nprocess.cwd = function() {\n  if (!cwd)\n    cwd = origCwd.call(process)\n  return cwd\n}\ntry {\n  process.cwd()\n} catch (er) {}\n\nvar chdir = process.chdir\nprocess.chdir = function(d) {\n  cwd = null\n  chdir.call(process, d)\n}\n\nmodule.exports = patch\n\nfunction patch (fs) {\n  // (re-)implement some things that are known busted or missing.\n\n  // lchmod, broken prior to 0.6.2\n  // back-port the fix here.\n  if (constants.hasOwnProperty('O_SYMLINK') &&\n      process.version.match(/^v0\\.6\\.[0-2]|^v0\\.5\\./)) {\n    patchLchmod(fs)\n  }\n\n  // lutimes implementation, or no-op\n  if (!fs.lutimes) {\n    patchLutimes(fs)\n  }\n\n  // https://github.com/isaacs/node-graceful-fs/issues/4\n  // Chown should not fail on einval or eperm if non-root.\n  // It should not fail on enosys ever, as this just indicates\n  // that a fs doesn't support the intended operation.\n\n  fs.chown = chownFix(fs.chown)\n  fs.fchown = chownFix(fs.fchown)\n  fs.lchown = chownFix(fs.lchown)\n\n  fs.chmod = chmodFix(fs.chmod)\n  fs.fchmod = chmodFix(fs.fchmod)\n  fs.lchmod = chmodFix(fs.lchmod)\n\n  fs.chownSync = chownFixSync(fs.chownSync)\n  fs.fchownSync = chownFixSync(fs.fchownSync)\n  fs.lchownSync = chownFixSync(fs.lchownSync)\n\n  fs.chmodSync = chmodFixSync(fs.chmodSync)\n  fs.fchmodSync = chmodFixSync(fs.fchmodSync)\n  fs.lchmodSync = chmodFixSync(fs.lchmodSync)\n\n  fs.stat = statFix(fs.stat)\n  fs.fstat = statFix(fs.fstat)\n  fs.lstat = statFix(fs.lstat)\n\n  fs.statSync = statFixSync(fs.statSync)\n  fs.fstatSync = statFixSync(fs.fstatSync)\n  fs.lstatSync = statFixSync(fs.lstatSync)\n\n  // if lchmod/lchown do not exist, then make them no-ops\n  if (!fs.lchmod) {\n    fs.lchmod = function (path, mode, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchmodSync = function () {}\n  }\n  if (!fs.lchown) {\n    fs.lchown = function (path, uid, gid, cb) {\n      if (cb) process.nextTick(cb)\n    }\n    fs.lchownSync = function () {}\n  }\n\n  // on Windows, A/V software can lock the directory, causing this\n  // to fail with an EACCES or EPERM if the directory contains newly\n  // created files.  Try again on failure, for up to 60 seconds.\n\n  // Set the timeout this long because some Windows Anti-Virus, such as Parity\n  // bit9, may lock files for up to a minute, causing npm package install\n  // failures. Also, take care to yield the scheduler. Windows scheduling gives\n  // CPU to a busy looping process, which can cause the program causing the lock\n  // contention to be starved of CPU by node, so the contention doesn't resolve.\n  if (platform === \"win32\") {\n    fs.rename = (function (fs$rename) { return function (from, to, cb) {\n      var start = Date.now()\n      var backoff = 0;\n      fs$rename(from, to, function CB (er) {\n        if (er\n            && (er.code === \"EACCES\" || er.code === \"EPERM\")\n            && Date.now() - start < 60000) {\n          setTimeout(function() {\n            fs.stat(to, function (stater, st) {\n              if (stater && stater.code === \"ENOENT\")\n                fs$rename(from, to, CB);\n              else\n                cb(er)\n            })\n          }, backoff)\n          if (backoff < 100)\n            backoff += 10;\n          return;\n        }\n        if (cb) cb(er)\n      })\n    }})(fs.rename)\n  }\n\n  // if read() returns EAGAIN, then just try it again.\n  fs.read = (function (fs$read) { return function (fd, buffer, offset, length, position, callback_) {\n    var callback\n    if (callback_ && typeof callback_ === 'function') {\n      var eagCounter = 0\n      callback = function (er, _, __) {\n        if (er && er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n        }\n        callback_.apply(this, arguments)\n      }\n    }\n    return fs$read.call(fs, fd, buffer, offset, length, position, callback)\n  }})(fs.read)\n\n  fs.readSync = (function (fs$readSync) { return function (fd, buffer, offset, length, position) {\n    var eagCounter = 0\n    while (true) {\n      try {\n        return fs$readSync.call(fs, fd, buffer, offset, length, position)\n      } catch (er) {\n        if (er.code === 'EAGAIN' && eagCounter < 10) {\n          eagCounter ++\n          continue\n        }\n        throw er\n      }\n    }\n  }})(fs.readSync)\n\n  function patchLchmod (fs) {\n    fs.lchmod = function (path, mode, callback) {\n      fs.open( path\n             , constants.O_WRONLY | constants.O_SYMLINK\n             , mode\n             , function (err, fd) {\n        if (err) {\n          if (callback) callback(err)\n          return\n        }\n        // prefer to return the chmod error, if one occurs,\n        // but still try to close, and report closing errors if they occur.\n        fs.fchmod(fd, mode, function (err) {\n          fs.close(fd, function(err2) {\n            if (callback) callback(err || err2)\n          })\n        })\n      })\n    }\n\n    fs.lchmodSync = function (path, mode) {\n      var fd = fs.openSync(path, constants.O_WRONLY | constants.O_SYMLINK, mode)\n\n      // prefer to return the chmod error, if one occurs,\n      // but still try to close, and report closing errors if they occur.\n      var threw = true\n      var ret\n      try {\n        ret = fs.fchmodSync(fd, mode)\n        threw = false\n      } finally {\n        if (threw) {\n          try {\n            fs.closeSync(fd)\n          } catch (er) {}\n        } else {\n          fs.closeSync(fd)\n        }\n      }\n      return ret\n    }\n  }\n\n  function patchLutimes (fs) {\n    if (constants.hasOwnProperty(\"O_SYMLINK\")) {\n      fs.lutimes = function (path, at, mt, cb) {\n        fs.open(path, constants.O_SYMLINK, function (er, fd) {\n          if (er) {\n            if (cb) cb(er)\n            return\n          }\n          fs.futimes(fd, at, mt, function (er) {\n            fs.close(fd, function (er2) {\n              if (cb) cb(er || er2)\n            })\n          })\n        })\n      }\n\n      fs.lutimesSync = function (path, at, mt) {\n        var fd = fs.openSync(path, constants.O_SYMLINK)\n        var ret\n        var threw = true\n        try {\n          ret = fs.futimesSync(fd, at, mt)\n          threw = false\n        } finally {\n          if (threw) {\n            try {\n              fs.closeSync(fd)\n            } catch (er) {}\n          } else {\n            fs.closeSync(fd)\n          }\n        }\n        return ret\n      }\n\n    } else {\n      fs.lutimes = function (_a, _b, _c, cb) { if (cb) process.nextTick(cb) }\n      fs.lutimesSync = function () {}\n    }\n  }\n\n  function chmodFix (orig) {\n    if (!orig) return orig\n    return function (target, mode, cb) {\n      return orig.call(fs, target, mode, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chmodFixSync (orig) {\n    if (!orig) return orig\n    return function (target, mode) {\n      try {\n        return orig.call(fs, target, mode)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n\n  function chownFix (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid, cb) {\n      return orig.call(fs, target, uid, gid, function (er) {\n        if (chownErOk(er)) er = null\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function chownFixSync (orig) {\n    if (!orig) return orig\n    return function (target, uid, gid) {\n      try {\n        return orig.call(fs, target, uid, gid)\n      } catch (er) {\n        if (!chownErOk(er)) throw er\n      }\n    }\n  }\n\n\n  function statFix (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target, cb) {\n      return orig.call(fs, target, function (er, stats) {\n        if (!stats) return cb.apply(this, arguments)\n        if (stats.uid < 0) stats.uid += 0x100000000\n        if (stats.gid < 0) stats.gid += 0x100000000\n        if (cb) cb.apply(this, arguments)\n      })\n    }\n  }\n\n  function statFixSync (orig) {\n    if (!orig) return orig\n    // Older versions of Node erroneously returned signed integers for\n    // uid + gid.\n    return function (target) {\n      var stats = orig.call(fs, target)\n      if (stats.uid < 0) stats.uid += 0x100000000\n      if (stats.gid < 0) stats.gid += 0x100000000\n      return stats;\n    }\n  }\n\n  // ENOSYS means that the fs doesn't support the op. Just ignore\n  // that, because it doesn't matter.\n  //\n  // if there's no getuid, or if getuid() is something other\n  // than 0, and the error is EINVAL or EPERM, then just ignore\n  // it.\n  //\n  // This specific case is a silent failure in cp, install, tar,\n  // and most other unix tools that manage permissions.\n  //\n  // When running as root, or if other types of errors are\n  // encountered, then it's strict.\n  function chownErOk (er) {\n    if (!er)\n      return true\n\n    if (er.code === \"ENOSYS\")\n      return true\n\n    var nonroot = !process.getuid || process.getuid() !== 0\n    if (nonroot) {\n      if (er.code === \"EINVAL\" || er.code === \"EPERM\")\n        return true\n    }\n\n    return false\n  }\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"legacy-streams.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/graceful-fs/legacy-streams.js                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar Stream = require('stream').Stream\n\nmodule.exports = legacy\n\nfunction legacy (fs) {\n  return {\n    ReadStream: ReadStream,\n    WriteStream: WriteStream\n  }\n\n  function ReadStream (path, options) {\n    if (!(this instanceof ReadStream)) return new ReadStream(path, options);\n\n    Stream.call(this);\n\n    var self = this;\n\n    this.path = path;\n    this.fd = null;\n    this.readable = true;\n    this.paused = false;\n\n    this.flags = 'r';\n    this.mode = 438; /*=0666*/\n    this.bufferSize = 64 * 1024;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.encoding) this.setEncoding(this.encoding);\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.end === undefined) {\n        this.end = Infinity;\n      } else if ('number' !== typeof this.end) {\n        throw TypeError('end must be a Number');\n      }\n\n      if (this.start > this.end) {\n        throw new Error('start must be <= end');\n      }\n\n      this.pos = this.start;\n    }\n\n    if (this.fd !== null) {\n      process.nextTick(function() {\n        self._read();\n      });\n      return;\n    }\n\n    fs.open(this.path, this.flags, this.mode, function (err, fd) {\n      if (err) {\n        self.emit('error', err);\n        self.readable = false;\n        return;\n      }\n\n      self.fd = fd;\n      self.emit('open', fd);\n      self._read();\n    })\n  }\n\n  function WriteStream (path, options) {\n    if (!(this instanceof WriteStream)) return new WriteStream(path, options);\n\n    Stream.call(this);\n\n    this.path = path;\n    this.fd = null;\n    this.writable = true;\n\n    this.flags = 'w';\n    this.encoding = 'binary';\n    this.mode = 438; /*=0666*/\n    this.bytesWritten = 0;\n\n    options = options || {};\n\n    // Mixin options into this\n    var keys = Object.keys(options);\n    for (var index = 0, length = keys.length; index < length; index++) {\n      var key = keys[index];\n      this[key] = options[key];\n    }\n\n    if (this.start !== undefined) {\n      if ('number' !== typeof this.start) {\n        throw TypeError('start must be a Number');\n      }\n      if (this.start < 0) {\n        throw new Error('start must be >= zero');\n      }\n\n      this.pos = this.start;\n    }\n\n    this.busy = false;\n    this._queue = [];\n\n    if (this.fd === null) {\n      this._open = fs.open;\n      this._queue.push([this._open, this.path, this.flags, this.mode, undefined]);\n      this.flush();\n    }\n  }\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"clone.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/graceful-fs/clone.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict'\n\nmodule.exports = clone\n\nfunction clone (obj) {\n  if (obj === null || typeof obj !== 'object')\n    return obj\n\n  if (obj instanceof Object)\n    var copy = { __proto__: obj.__proto__ }\n  else\n    var copy = Object.create(null)\n\n  Object.getOwnPropertyNames(obj).forEach(function (key) {\n    Object.defineProperty(copy, key, Object.getOwnPropertyDescriptor(obj, key))\n  })\n\n  return copy\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"jsonfile\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/jsonfile/package.json                                           //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"jsonfile\",\n  \"version\": \"4.0.0\",\n  \"main\": \"index.js\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/jsonfile/index.js                                               //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nvar _fs\ntry {\n  _fs = require('graceful-fs')\n} catch (_) {\n  _fs = require('fs')\n}\n\nfunction readFile (file, options, callback) {\n  if (callback == null) {\n    callback = options\n    options = {}\n  }\n\n  if (typeof options === 'string') {\n    options = {encoding: options}\n  }\n\n  options = options || {}\n  var fs = options.fs || _fs\n\n  var shouldThrow = true\n  if ('throws' in options) {\n    shouldThrow = options.throws\n  }\n\n  fs.readFile(file, options, function (err, data) {\n    if (err) return callback(err)\n\n    data = stripBom(data)\n\n    var obj\n    try {\n      obj = JSON.parse(data, options ? options.reviver : null)\n    } catch (err2) {\n      if (shouldThrow) {\n        err2.message = file + ': ' + err2.message\n        return callback(err2)\n      } else {\n        return callback(null, null)\n      }\n    }\n\n    callback(null, obj)\n  })\n}\n\nfunction readFileSync (file, options) {\n  options = options || {}\n  if (typeof options === 'string') {\n    options = {encoding: options}\n  }\n\n  var fs = options.fs || _fs\n\n  var shouldThrow = true\n  if ('throws' in options) {\n    shouldThrow = options.throws\n  }\n\n  try {\n    var content = fs.readFileSync(file, options)\n    content = stripBom(content)\n    return JSON.parse(content, options.reviver)\n  } catch (err) {\n    if (shouldThrow) {\n      err.message = file + ': ' + err.message\n      throw err\n    } else {\n      return null\n    }\n  }\n}\n\nfunction stringify (obj, options) {\n  var spaces\n  var EOL = '\\n'\n  if (typeof options === 'object' && options !== null) {\n    if (options.spaces) {\n      spaces = options.spaces\n    }\n    if (options.EOL) {\n      EOL = options.EOL\n    }\n  }\n\n  var str = JSON.stringify(obj, options ? options.replacer : null, spaces)\n\n  return str.replace(/\\n/g, EOL) + EOL\n}\n\nfunction writeFile (file, obj, options, callback) {\n  if (callback == null) {\n    callback = options\n    options = {}\n  }\n  options = options || {}\n  var fs = options.fs || _fs\n\n  var str = ''\n  try {\n    str = stringify(obj, options)\n  } catch (err) {\n    // Need to return whether a callback was passed or not\n    if (callback) callback(err, null)\n    return\n  }\n\n  fs.writeFile(file, str, options, callback)\n}\n\nfunction writeFileSync (file, obj, options) {\n  options = options || {}\n  var fs = options.fs || _fs\n\n  var str = stringify(obj, options)\n  // not sure if fs.writeFileSync returns anything, but just in case\n  return fs.writeFileSync(file, str, options)\n}\n\nfunction stripBom (content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8')\n  content = content.replace(/^\\uFEFF/, '')\n  return content\n}\n\nvar jsonfile = {\n  readFile: readFile,\n  readFileSync: readFileSync,\n  writeFile: writeFile,\n  writeFileSync: writeFileSync\n}\n\nmodule.exports = jsonfile\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"fibers\":{\"future.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fibers/future.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n\"use strict\";\nvar Fiber = require('./fibers');\nvar util = require('util');\nmodule.exports = Future;\nFunction.prototype.future = function(detach) {\n\tvar fn = this;\n\tvar ret = function() {\n\t\tvar future = new FiberFuture(fn, this, arguments);\n\t\tif (detach) {\n\t\t\tfuture.detach();\n\t\t}\n\t\treturn future;\n\t};\n\tret.toString = function() {\n\t\treturn '<<Future '+ fn+ '.future()>>';\n\t};\n\treturn ret;\n};\n\nfunction Future() {}\n\n/**\n * Run a function(s) in a future context, and return a future to their return value. This is useful\n * for instances where you want a closure to be able to `.wait()`. This also lets you wait for\n * mulitple parallel opertions to run.\n */\nFuture.task = function(fn) {\n\tif (arguments.length === 1) {\n\t\treturn fn.future()();\n\t} else {\n\t\tvar future = new Future, pending = arguments.length, error, values = new Array(arguments.length);\n\t\tfor (var ii = 0; ii < arguments.length; ++ii) {\n\t\t\targuments[ii].future()().resolve(function(ii, err, val) {\n\t\t\t\tif (err) {\n\t\t\t\t\terror = err;\n\t\t\t\t}\n\t\t\t\tvalues[ii] = val;\n\t\t\t\tif (--pending === 0) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tfuture.throw(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfuture.return(values);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}.bind(null, ii));\n\t\t}\n\t\treturn future;\n\t}\n};\n\n/**\n * Wrap node-style async functions to instead return futures. This assumes that the last parameter\n * of the function is a callback.\n *\n * If a single function is passed a future-returning function is created. If an object is passed a\n * new object is returned with all functions wrapped.\n *\n * The value that is returned from the invocation of the underlying function is assigned to the\n * property `_` on the future. This is useful for functions like `execFile` which take a callback,\n * but also return meaningful information.\n *\n * `multi` indicates that this callback will return more than 1 argument after `err`. For example,\n * `child_process.exec()`\n *\n * `suffix` will append a string to every method that was overridden, if you pass an object to\n * `Future.wrap()`. Default is 'Future'.\n *\n * var readFileFuture = Future.wrap(require('fs').readFile);\n * var fs = Future.wrap(require('fs'));\n * fs.readFileFuture('example.txt').wait();\n */\nFuture.wrap = function(fnOrObject, multi, suffix, stop) {\n\tif (typeof fnOrObject === 'object') {\n\t\tvar wrapped = Object.create(fnOrObject);\n\t\tfor (var ii in fnOrObject) {\n\t\t\tif (wrapped[ii] instanceof Function) {\n\t\t\t\twrapped[suffix === undefined ? ii+ 'Future' : ii+ suffix] = Future.wrap(wrapped[ii], multi, suffix, stop);\n\t\t\t}\n\t\t}\n\t\treturn wrapped;\n\t} else if (typeof fnOrObject === 'function') {\n\t\tvar fn = function() {\n\t\t\tvar future = new Future;\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\tif (multi) {\n\t\t\t\tvar cb = future.resolver();\n\t\t\t\targs.push(function(err) {\n\t\t\t\t\tcb(err, Array.prototype.slice.call(arguments, 1));\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\targs.push(future.resolver());\n\t\t\t}\n\t\t\tfuture._ = fnOrObject.apply(this, args);\n\t\t\treturn future;\n\t\t}\n\t\t// Modules like `request` return a function that has more functions as properties. Handle this\n\t\t// in some kind of reasonable way.\n\t\tif (!stop) {\n\t\t\tvar proto = Object.create(fnOrObject);\n\t\t\tfor (var ii in fnOrObject) {\n\t\t\t\tif (fnOrObject.hasOwnProperty(ii) && fnOrObject[ii] instanceof Function) {\n\t\t\t\t\tproto[ii] = proto[ii];\n\t\t\t\t}\n\t\t\t}\n\t\t\tfn.__proto__ = Future.wrap(proto, multi, suffix, true);\n\t\t}\n\t\treturn fn;\n\t}\n};\n\n/**\n * Wait on a series of futures and then return. If the futures throw an exception this function\n * /won't/ throw it back. You can get the value of the future by calling get() on it directly. If\n * you want to wait on a single future you're better off calling future.wait() on the instance.\n */\nFuture.wait = function wait(/* ... */) {\n\n\t// Normalize arguments + pull out a FiberFuture for reuse if possible\n\tvar futures = [], singleFiberFuture;\n\tfor (var ii = 0; ii < arguments.length; ++ii) {\n\t\tvar arg = arguments[ii];\n\t\tif (arg instanceof Future) {\n\t\t\t// Ignore already resolved fibers\n\t\t\tif (arg.isResolved()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\t// Look for fiber reuse\n\t\t\tif (!singleFiberFuture && arg instanceof FiberFuture && !arg.started) {\n\t\t\t\tsingleFiberFuture = arg;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tfutures.push(arg);\n\t\t} else if (arg instanceof Array) {\n\t\t\tfor (var jj = 0; jj < arg.length; ++jj) {\n\t\t\t\tvar aarg = arg[jj];\n\t\t\t\tif (aarg instanceof Future) {\n\t\t\t\t\t// Ignore already resolved fibers\n\t\t\t\t\tif (aarg.isResolved()) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t// Look for fiber reuse\n\t\t\t\t\tif (!singleFiberFuture && aarg instanceof FiberFuture && !aarg.started) {\n\t\t\t\t\t\tsingleFiberFuture = aarg;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tfutures.push(aarg);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(aarg+ ' is not a future');\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new Error(arg+ ' is not a future');\n\t\t}\n\t}\n\n\t// Resumes current fiber\n\tvar fiber = Fiber.current;\n\tif (!fiber) {\n\t\tthrow new Error('Can\\'t wait without a fiber');\n\t}\n\n\t// Resolve all futures\n\tvar pending = futures.length + (singleFiberFuture ? 1 : 0);\n\tfunction cb() {\n\t\tif (!--pending) {\n\t\t\tfiber.run();\n\t\t}\n\t}\n\tfor (var ii = 0; ii < futures.length; ++ii) {\n\t\tfutures[ii].resolve(cb);\n\t}\n\n\t// Reusing a fiber?\n\tif (singleFiberFuture) {\n\t\tsingleFiberFuture.started = true;\n\t\ttry {\n\t\t\tsingleFiberFuture.return(\n\t\t\t\tsingleFiberFuture.fn.apply(singleFiberFuture.context, singleFiberFuture.args));\n\t\t} catch(e) {\n\t\t\tsingleFiberFuture.throw(e);\n\t\t}\n\t\t--pending;\n\t}\n\n\t// Yield this fiber\n\tif (pending) {\n\t\tFiber.yield();\n\t}\n};\n\n/**\n * Return a Future that waits on an ES6 Promise.\n */\nFuture.fromPromise = function(promise) {\n\tvar future = new Future;\n\tpromise.then(function(val) {\n\t\tfuture.return(val);\n\t}, function(err) {\n\t\tfuture.throw(err);\n\t});\n\treturn future;\n};\n\nFuture.prototype = {\n\t/**\n\t * Return the value of this future. If the future hasn't resolved yet this will throw an error.\n\t */\n\tget: function() {\n\t\tif (!this.resolved) {\n\t\t\tthrow new Error('Future must resolve before value is ready');\n\t\t} else if (this.error) {\n\t\t\t// Link the stack traces up\n\t\t\tvar error = this.error;\n\t\t\tvar localStack = {};\n\t\t\tError.captureStackTrace(localStack, Future.prototype.get);\n\t\t\tvar futureStack = Object.getOwnPropertyDescriptor(error, 'futureStack');\n\t\t\tif (!futureStack) {\n\t\t\t\tfutureStack = Object.getOwnPropertyDescriptor(error, 'stack');\n\t\t\t\tif (futureStack) {\n\t\t\t\t\tObject.defineProperty(error, 'futureStack', futureStack);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (futureStack && futureStack.get) {\n\t\t\t\tObject.defineProperty(error, 'stack', {\n\t\t\t\t\tget: function() {\n\t\t\t\t\t\tvar stack = futureStack.get.apply(error);\n\t\t\t\t\t\tif (stack) {\n\t\t\t\t\t\t\tstack = stack.split('\\n');\n\t\t\t\t\t\t\treturn [stack[0]]\n\t\t\t\t\t\t\t\t.concat(localStack.stack.split('\\n').slice(1))\n\t\t\t\t\t\t\t\t.concat('    - - - - -')\n\t\t\t\t\t\t\t\t.concat(stack.slice(1))\n\t\t\t\t\t\t\t\t.join('\\n');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn localStack.stack;\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tset: function(stack) {\n\t\t\t\t\t\tObject.defineProperty(error, 'stack', {\n\t\t\t\t\t\t\tvalue: stack,\n\t\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t\t\tenumerable: false,\n\t\t\t\t\t\t\twritable: true,\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: false,\n\t\t\t\t});\n\t\t\t}\n\t\t\tthrow error;\n\t\t} else {\n\t\t\treturn this.value;\n\t\t}\n\t},\n\n\t/**\n\t * Mark this future as returned. All pending callbacks will be invoked immediately.\n\t */\n\t\"return\": function(value) {\n\t\tif (this.resolved) {\n\t\t\tthrow new Error('Future resolved more than once');\n\t\t}\n\t\tthis.value = value;\n\t\tthis.resolved = true;\n\n\t\tvar callbacks = this.callbacks;\n\t\tif (callbacks) {\n\t\t\tdelete this.callbacks;\n\t\t\tfor (var ii = 0; ii < callbacks.length; ++ii) {\n\t\t\t\ttry {\n\t\t\t\t\tvar ref = callbacks[ii];\n\t\t\t\t\tif (ref[1]) {\n\t\t\t\t\t\tref[1](value);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tref[0](undefined, value);\n\t\t\t\t\t}\n\t\t\t\t} catch(ex) {\n\t\t\t\t\t// console.log('Resolve cb threw', String(ex.stack || ex.message || ex));\n\t\t\t\t\tprocess.nextTick(function() {\n\t\t\t\t\t\tthrow(ex);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Throw from this future as returned. All pending callbacks will be invoked immediately.\n\t */\n\t\"throw\": function(error) {\n\t\tif (this.resolved) {\n\t\t\tthrow new Error('Future resolved more than once');\n\t\t} else if (!error) {\n\t\t\tthrow new Error('Must throw non-empty error');\n\t\t}\n\t\tthis.error = error;\n\t\tthis.resolved = true;\n\n\t\tvar callbacks = this.callbacks;\n\t\tif (callbacks) {\n\t\t\tdelete this.callbacks;\n\t\t\tfor (var ii = 0; ii < callbacks.length; ++ii) {\n\t\t\t\ttry {\n\t\t\t\t\tvar ref = callbacks[ii];\n\t\t\t\t\tif (ref[1]) {\n\t\t\t\t\t\tref[0].throw(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tref[0](error);\n\t\t\t\t\t}\n\t\t\t\t} catch(ex) {\n\t\t\t\t\t// console.log('Resolve cb threw', String(ex.stack || ex.message || ex));\n\t\t\t\t\tprocess.nextTick(function() {\n\t\t\t\t\t\tthrow(ex);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * \"detach\" this future. Basically this is useful if you want to run a task in a future, you\n\t * aren't interested in its return value, but if it throws you don't want the exception to be\n\t * lost. If this fiber throws, an exception will be thrown to the event loop and node will\n\t * probably fall down.\n\t */\n\tdetach: function() {\n\t\tthis.resolve(function(err) {\n\t\t\tif (err) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Returns whether or not this future has resolved yet.\n\t */\n\tisResolved: function() {\n\t\treturn this.resolved === true;\n\t},\n\n\t/**\n\t * Returns a node-style function which will mark this future as resolved when called.\n\t */\n\tresolver: function() {\n\t\treturn function(err, val) {\n\t\t\tif (err) {\n\t\t\t\tthis.throw(err);\n\t\t\t} else {\n\t\t\t\tthis.return(val);\n\t\t\t}\n\t\t}.bind(this);\n\t},\n\n\t/**\n\t * Waits for this future to resolve and then invokes a callback.\n\t *\n\t * If two arguments are passed, the first argument is a future which will be thrown to in the case\n\t * of error, and the second is a function(val){} callback.\n\t *\n\t * If only one argument is passed it is a standard function(err, val){} callback.\n\t */\n\tresolve: function(arg1, arg2) {\n\t\tif (this.resolved) {\n\t\t\tif (arg2) {\n\t\t\t\tif (this.error) {\n\t\t\t\t\targ1.throw(this.error);\n\t\t\t\t} else {\n\t\t\t\t\targ2(this.value);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\targ1(this.error, this.value);\n\t\t\t}\n\t\t} else {\n\t\t\t(this.callbacks = this.callbacks || []).push([arg1, arg2]);\n\t\t}\n\t\treturn this;\n\t},\n\n\t/**\n\t * Resolve only in the case of success\n\t */\n\tresolveSuccess: function(cb) {\n\t\tthis.resolve(function(err, val) {\n\t\t\tif (err) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcb(val);\n\t\t});\n\t\treturn this;\n\t},\n\n\t/**\n\t * Propogate results to another future.\n\t */\n\tproxy: function(future) {\n\t\tthis.resolve(function(err, val) {\n\t\t\tif (err) {\n\t\t\t\tfuture.throw(err);\n\t\t\t} else {\n\t\t\t\tfuture.return(val);\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n\t * Propogate only errors to an another future or array of futures.\n\t */\n\tproxyErrors: function(futures) {\n\t\tthis.resolve(function(err) {\n\t\t\tif (!err) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (futures instanceof Array) {\n\t\t\t\tfor (var ii = 0; ii < futures.length; ++ii) {\n\t\t\t\t\tfutures[ii].throw(err);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfutures.throw(err);\n\t\t\t}\n\t\t});\n\t\treturn this;\n\t},\n\n\t/**\n\t * Returns an ES6 Promise\n\t */\n\tpromise: function() {\n\t\tvar that = this;\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\tthat.resolve(function(err, val) {\n\t\t\t\tif (err) {\n\t\t\t\t\treject(err);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(val);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n\t * Differs from its functional counterpart in that it actually resolves the future. Thus if the\n\t * future threw, future.wait() will throw.\n\t */\n\twait: function() {\n\t\tif (this.isResolved()) {\n\t\t\treturn this.get();\n\t\t}\n\t\tFuture.wait(this);\n\t\treturn this.get();\n\t},\n};\n\n/**\n * A function call which loads inside a fiber automatically and returns a future.\n */\nfunction FiberFuture(fn, context, args) {\n\tthis.fn = fn;\n\tthis.context = context;\n\tthis.args = args;\n\tthis.started = false;\n\tvar that = this;\n\tprocess.nextTick(function() {\n\t\tif (!that.started) {\n\t\t\tthat.started = true;\n\t\t\tFiber(function() {\n\t\t\t\ttry {\n\t\t\t\t\tthat.return(fn.apply(context, args));\n\t\t\t\t} catch(e) {\n\t\t\t\t\tthat.throw(e);\n\t\t\t\t}\n\t\t\t}).run();\n\t\t}\n\t});\n}\nutil.inherits(FiberFuture, Future);\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fibers.js\":function(require,exports,module,__filename,__dirname){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/fibers/fibers.js                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nif (process.fiberLib) {\n\tmodule.exports = process.fiberLib;\n} else {\n\tvar fs = require('fs'), path = require('path');\n\n\t// Seed random numbers [gh-82]\n\tMath.random();\n\n\t// Look for binary for this platform\n\tvar modPath = path.join(__dirname, 'bin', process.platform+ '-'+ process.arch+ '-'+ process.versions.modules, 'fibers');\n\ttry {\n\t\tfs.statSync(modPath+ '.node');\n\t} catch (ex) {\n\t\t// No binary!\n\t\tconsole.error(\n\t\t\t'## There is an issue with `node-fibers` ##\\n'+\n\t\t\t'`'+ modPath+ '.node` is missing.\\n\\n'+\n\t\t\t'Try running this to fix the issue: '+ process.execPath+ ' '+ __dirname.replace(' ', '\\\\ ')+ '/build'\n\t\t);\n\t\tthrow new Error('Missing binary. See message above.');\n\t}\n\n\t// Pull in fibers implementation\n\tprocess.fiberLib = module.exports = require(modPath).Fiber;\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"node-file-cache\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/node-file-cache/package.json                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"node-file-cache\",\n  \"version\": \"1.0.2\",\n  \"main\": \"lib/index.js\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"index.js\":function(require,exports){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/node-file-cache/lib/index.js                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict';\r\nvar database = require('lowdb');\r\nvar util = require('util');\r\nfunction create(options) {\r\n    return new Cache(options || {});\r\n}\r\nexports.create = create;\r\nvar Cache = (function () {\r\n    function Cache(options) {\r\n        this.set = function (key, value, options) {\r\n            var record = this._createRecord(key, value, options || {});\r\n            this.expire(key); // remove previous\r\n            this.db.get('index').push(record).value();\r\n            return this;\r\n        };\r\n        this.get = function (key) {\r\n            var record = this.db.get('index').find({ key: key }).value();\r\n            if (!record)\r\n                return null;\r\n            if (record.life < this._createTimestamp()) {\r\n                this.expire(key);\r\n                return null; // expired \r\n            }\r\n            return record.val;\r\n        };\r\n        /**\r\n         * Clears all records from cache storage\r\n         */\r\n        this.clear = function () {\r\n            this.db.set('index', []).value();\r\n            return this;\r\n        };\r\n        this.config = this._merge({\r\n            file: 'store.json',\r\n            life: 3600 // one hour\r\n        }, options || {});\r\n        this.db = database(this.config.file);\r\n        this.db.defaults({\r\n            index: []\r\n        }).value();\r\n    }\r\n    /**\r\n     * Removes records from cache storage\r\n     */\r\n    Cache.prototype.expire = function (value) {\r\n        var _ = this.db._;\r\n        var removed, staying;\r\n        switch (true) {\r\n            case util.isFunction(value):\r\n                // remove by filter callback\r\n                removed = this.db.get('index')\r\n                    .filter(value)\r\n                    .map('key')\r\n                    .value();\r\n                break;\r\n            case util.isArray(value):\r\n                // remove by tags\r\n                removed = this.db.get('index')\r\n                    .filter(function (record) { return _.intersection(record.tags, value).length; })\r\n                    .map('key')\r\n                    .value();\r\n                break;\r\n            case util.isString(value):\r\n                // remove by key\r\n                removed = this.db.get('index')\r\n                    .filter(function (record) { return record.key === value; })\r\n                    .map('key')\r\n                    .value();\r\n                break;\r\n            default:\r\n                throw new Error('Unsupported expiration method: ' + (typeof value));\r\n        }\r\n        staying = this.db.get('index')\r\n            .filter(function (record) { return removed.indexOf(record.key) < 0; })\r\n            .value();\r\n        this._set(staying);\r\n        return this;\r\n    };\r\n    Cache.prototype.size = function () {\r\n        return this.db.get('index').value().length;\r\n    };\r\n    Cache.prototype._set = function (records) {\r\n        this.db.set('index', records).value();\r\n    };\r\n    Cache.prototype._createRecord = function (key, value, options) {\r\n        var tags = options.tags || [];\r\n        var span = options.life || this.config.life;\r\n        var life = span * 1000 + this._createTimestamp();\r\n        return {\r\n            key: key,\r\n            val: value,\r\n            life: life,\r\n            tags: tags\r\n        };\r\n    };\r\n    Cache.prototype._createTimestamp = function () {\r\n        return new Date().getTime();\r\n    };\r\n    Cache.prototype._merge = function (a, b) {\r\n        for (var p in b) {\r\n            try {\r\n                if (b[p].constructor === Object) {\r\n                    a[p] = this._merge(a[p], b[p]);\r\n                }\r\n                else {\r\n                    a[p] = b[p];\r\n                }\r\n            }\r\n            catch (e) {\r\n                a[p] = b[p];\r\n            }\r\n        }\r\n        return a;\r\n    };\r\n    return Cache;\r\n}());\r\nexports.Cache = Cache;\r\n//# sourceMappingURL=index.js.map\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"lowdb\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/lowdb/package.json                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"lowdb\",\n  \"version\": \"0.14.0\",\n  \"browser\": {\n    \"./lib/index.node.js\": \"./lib/index.browser.js\"\n  },\n  \"main\": \"./lib/index.node.js\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lib\":{\"index.node.js\":\"/node_modules/meteor/randyp:mats-common/node_modules/lowdb/lib/index.browser.js\",\"index.browser.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/lowdb/lib/index.browser.js                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict';\n\nvar index = require('./_index');\nvar storage = require('./browser');\n\nmodule.exports = function low(source) {\n  var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : { storage: storage };\n\n  return index(source, opts, window._);\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/lowdb/lib/_index.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict';\n\nvar isPromise = require('is-promise');\n\nmodule.exports = function (source) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$format = _ref.format,\n      format = _ref$format === undefined ? null : _ref$format,\n      _ref$storage = _ref.storage,\n      storage = _ref$storage === undefined ? null : _ref$storage,\n      _ref$writeOnChange = _ref.writeOnChange,\n      writeOnChange = _ref$writeOnChange === undefined ? true : _ref$writeOnChange;\n\n  var lodash = arguments[2];\n\n  // Create a fresh copy of lodash\n  var _ = lodash.runInContext();\n\n  var db = _.chain({});\n\n  if (source) {\n    if (format) {\n      if (format.serialize) {\n        db.serialize = format.serialize;\n      }\n      if (format.deserialize) {\n        db.deserialize = format.deserialize;\n      }\n    }\n\n    if (storage) {\n      if (storage.read) {\n        db.read = function () {\n          var s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : source;\n\n          var res = storage.read(s, db.deserialize);\n          var init = function init(obj) {\n            db.__wrapped__ = obj;\n            db._checksum = JSON.stringify(db.__wrapped__);\n          };\n\n          if (isPromise(res)) {\n            return res.then(function (obj) {\n              init(obj);\n              return db;\n            });\n          }\n\n          init(res);\n          return db;\n        };\n      }\n\n      if (storage.write) {\n        db.write = function () {\n          var dest = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : source;\n          return storage.write(dest, db.__wrapped__, db.serialize);\n        };\n      }\n    }\n  }\n\n  // Persist database state\n  function persist() {\n    if (db.source && db.write && writeOnChange) {\n      var str = JSON.stringify(db.__wrapped__);\n\n      if (str !== db._checksum) {\n        db._checksum = str;\n        db.write(db.source);\n      }\n    }\n  }\n\n  // Modify value function to call save before returning result\n  _.prototype.value = _.wrap(_.prototype.value, function (value) {\n    var v = value.apply(this);\n    persist();\n    return v;\n  });\n\n  // Get or set database state\n  db.getState = function () {\n    return db.__wrapped__;\n  };\n  db.setState = function (state) {\n    db.__wrapped__ = state;\n    persist();\n  };\n\n  db._ = _;\n  db.source = source;\n\n  // Read\n  if (db.read) {\n    return db.read();\n  } else {\n    return db;\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"browser.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/lowdb/lib/browser.js                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n'use strict';\n\n/* global localStorage */\n\nmodule.exports = {\n  read: function read(source) {\n    var deserialize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : JSON.parse;\n\n    var data = localStorage.getItem(source);\n    if (data) {\n      return deserialize(data);\n    } else {\n      localStorage.setItem(source, '{}');\n      return {};\n    }\n  },\n  write: function write(dest, obj) {\n    var serialize = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : JSON.stringify;\n    return localStorage.setItem(dest, serialize(obj));\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"is-promise\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/is-promise/package.json                                         //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"is-promise\",\n  \"version\": \"2.1.0\",\n  \"main\": \"index.js\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/is-promise/index.js                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = isPromise;\n\nfunction isPromise(obj) {\n  return !!obj && (typeof obj === 'object' || typeof obj === 'function') && typeof obj.then === 'function';\n}\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"jquery-ui\":{\"package.json\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/jquery-ui/package.json                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.exports = {\n  \"name\": \"jquery-ui\",\n  \"version\": \"1.12.1\",\n  \"main\": \"ui/widget.js\"\n};\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ui\":{\"widget.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// node_modules/meteor/randyp_mats-common/node_modules/jquery-ui/ui/widget.js                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\n/*!\n * jQuery UI Widget 1.12.1\n * http://jqueryui.com\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license.\n * http://jquery.org/license\n */\n\n//>>label: Widget\n//>>group: Core\n//>>description: Provides a factory for creating stateful widgets with a common API.\n//>>docs: http://api.jqueryui.com/jQuery.widget/\n//>>demos: http://jqueryui.com/widget/\n\n( function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\n\t\t// AMD. Register as an anonymous module.\n\t\tdefine( [ \"jquery\", \"./version\" ], factory );\n\t} else {\n\n\t\t// Browser globals\n\t\tfactory( jQuery );\n\t}\n}( function( $ ) {\n\nvar widgetUuid = 0;\nvar widgetSlice = Array.prototype.slice;\n\n$.cleanData = ( function( orig ) {\n\treturn function( elems ) {\n\t\tvar events, elem, i;\n\t\tfor ( i = 0; ( elem = elems[ i ] ) != null; i++ ) {\n\t\t\ttry {\n\n\t\t\t\t// Only trigger remove when necessary to save time\n\t\t\t\tevents = $._data( elem, \"events\" );\n\t\t\t\tif ( events && events.remove ) {\n\t\t\t\t\t$( elem ).triggerHandler( \"remove\" );\n\t\t\t\t}\n\n\t\t\t// Http://bugs.jquery.com/ticket/8235\n\t\t\t} catch ( e ) {}\n\t\t}\n\t\torig( elems );\n\t};\n} )( $.cleanData );\n\n$.widget = function( name, base, prototype ) {\n\tvar existingConstructor, constructor, basePrototype;\n\n\t// ProxiedPrototype allows the provided prototype to remain unmodified\n\t// so that it can be used as a mixin for multiple widgets (#8876)\n\tvar proxiedPrototype = {};\n\n\tvar namespace = name.split( \".\" )[ 0 ];\n\tname = name.split( \".\" )[ 1 ];\n\tvar fullName = namespace + \"-\" + name;\n\n\tif ( !prototype ) {\n\t\tprototype = base;\n\t\tbase = $.Widget;\n\t}\n\n\tif ( $.isArray( prototype ) ) {\n\t\tprototype = $.extend.apply( null, [ {} ].concat( prototype ) );\n\t}\n\n\t// Create selector for plugin\n\t$.expr[ \":\" ][ fullName.toLowerCase() ] = function( elem ) {\n\t\treturn !!$.data( elem, fullName );\n\t};\n\n\t$[ namespace ] = $[ namespace ] || {};\n\texistingConstructor = $[ namespace ][ name ];\n\tconstructor = $[ namespace ][ name ] = function( options, element ) {\n\n\t\t// Allow instantiation without \"new\" keyword\n\t\tif ( !this._createWidget ) {\n\t\t\treturn new constructor( options, element );\n\t\t}\n\n\t\t// Allow instantiation without initializing for simple inheritance\n\t\t// must use \"new\" keyword (the code above always passes args)\n\t\tif ( arguments.length ) {\n\t\t\tthis._createWidget( options, element );\n\t\t}\n\t};\n\n\t// Extend with the existing constructor to carry over any static properties\n\t$.extend( constructor, existingConstructor, {\n\t\tversion: prototype.version,\n\n\t\t// Copy the object used to create the prototype in case we need to\n\t\t// redefine the widget later\n\t\t_proto: $.extend( {}, prototype ),\n\n\t\t// Track widgets that inherit from this widget in case this widget is\n\t\t// redefined after a widget inherits from it\n\t\t_childConstructors: []\n\t} );\n\n\tbasePrototype = new base();\n\n\t// We need to make the options hash a property directly on the new instance\n\t// otherwise we'll modify the options hash on the prototype that we're\n\t// inheriting from\n\tbasePrototype.options = $.widget.extend( {}, basePrototype.options );\n\t$.each( prototype, function( prop, value ) {\n\t\tif ( !$.isFunction( value ) ) {\n\t\t\tproxiedPrototype[ prop ] = value;\n\t\t\treturn;\n\t\t}\n\t\tproxiedPrototype[ prop ] = ( function() {\n\t\t\tfunction _super() {\n\t\t\t\treturn base.prototype[ prop ].apply( this, arguments );\n\t\t\t}\n\n\t\t\tfunction _superApply( args ) {\n\t\t\t\treturn base.prototype[ prop ].apply( this, args );\n\t\t\t}\n\n\t\t\treturn function() {\n\t\t\t\tvar __super = this._super;\n\t\t\t\tvar __superApply = this._superApply;\n\t\t\t\tvar returnValue;\n\n\t\t\t\tthis._super = _super;\n\t\t\t\tthis._superApply = _superApply;\n\n\t\t\t\treturnValue = value.apply( this, arguments );\n\n\t\t\t\tthis._super = __super;\n\t\t\t\tthis._superApply = __superApply;\n\n\t\t\t\treturn returnValue;\n\t\t\t};\n\t\t} )();\n\t} );\n\tconstructor.prototype = $.widget.extend( basePrototype, {\n\n\t\t// TODO: remove support for widgetEventPrefix\n\t\t// always use the name + a colon as the prefix, e.g., draggable:start\n\t\t// don't prefix for widgets that aren't DOM-based\n\t\twidgetEventPrefix: existingConstructor ? ( basePrototype.widgetEventPrefix || name ) : name\n\t}, proxiedPrototype, {\n\t\tconstructor: constructor,\n\t\tnamespace: namespace,\n\t\twidgetName: name,\n\t\twidgetFullName: fullName\n\t} );\n\n\t// If this widget is being redefined then we need to find all widgets that\n\t// are inheriting from it and redefine all of them so that they inherit from\n\t// the new version of this widget. We're essentially trying to replace one\n\t// level in the prototype chain.\n\tif ( existingConstructor ) {\n\t\t$.each( existingConstructor._childConstructors, function( i, child ) {\n\t\t\tvar childPrototype = child.prototype;\n\n\t\t\t// Redefine the child widget using the same prototype that was\n\t\t\t// originally used, but inherit from the new version of the base\n\t\t\t$.widget( childPrototype.namespace + \".\" + childPrototype.widgetName, constructor,\n\t\t\t\tchild._proto );\n\t\t} );\n\n\t\t// Remove the list of existing child constructors from the old constructor\n\t\t// so the old child constructors can be garbage collected\n\t\tdelete existingConstructor._childConstructors;\n\t} else {\n\t\tbase._childConstructors.push( constructor );\n\t}\n\n\t$.widget.bridge( name, constructor );\n\n\treturn constructor;\n};\n\n$.widget.extend = function( target ) {\n\tvar input = widgetSlice.call( arguments, 1 );\n\tvar inputIndex = 0;\n\tvar inputLength = input.length;\n\tvar key;\n\tvar value;\n\n\tfor ( ; inputIndex < inputLength; inputIndex++ ) {\n\t\tfor ( key in input[ inputIndex ] ) {\n\t\t\tvalue = input[ inputIndex ][ key ];\n\t\t\tif ( input[ inputIndex ].hasOwnProperty( key ) && value !== undefined ) {\n\n\t\t\t\t// Clone objects\n\t\t\t\tif ( $.isPlainObject( value ) ) {\n\t\t\t\t\ttarget[ key ] = $.isPlainObject( target[ key ] ) ?\n\t\t\t\t\t\t$.widget.extend( {}, target[ key ], value ) :\n\n\t\t\t\t\t\t// Don't extend strings, arrays, etc. with objects\n\t\t\t\t\t\t$.widget.extend( {}, value );\n\n\t\t\t\t// Copy everything else by reference\n\t\t\t\t} else {\n\t\t\t\t\ttarget[ key ] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn target;\n};\n\n$.widget.bridge = function( name, object ) {\n\tvar fullName = object.prototype.widgetFullName || name;\n\t$.fn[ name ] = function( options ) {\n\t\tvar isMethodCall = typeof options === \"string\";\n\t\tvar args = widgetSlice.call( arguments, 1 );\n\t\tvar returnValue = this;\n\n\t\tif ( isMethodCall ) {\n\n\t\t\t// If this is an empty collection, we need to have the instance method\n\t\t\t// return undefined instead of the jQuery instance\n\t\t\tif ( !this.length && options === \"instance\" ) {\n\t\t\t\treturnValue = undefined;\n\t\t\t} else {\n\t\t\t\tthis.each( function() {\n\t\t\t\t\tvar methodValue;\n\t\t\t\t\tvar instance = $.data( this, fullName );\n\n\t\t\t\t\tif ( options === \"instance\" ) {\n\t\t\t\t\t\treturnValue = instance;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !instance ) {\n\t\t\t\t\t\treturn $.error( \"cannot call methods on \" + name +\n\t\t\t\t\t\t\t\" prior to initialization; \" +\n\t\t\t\t\t\t\t\"attempted to call method '\" + options + \"'\" );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !$.isFunction( instance[ options ] ) || options.charAt( 0 ) === \"_\" ) {\n\t\t\t\t\t\treturn $.error( \"no such method '\" + options + \"' for \" + name +\n\t\t\t\t\t\t\t\" widget instance\" );\n\t\t\t\t\t}\n\n\t\t\t\t\tmethodValue = instance[ options ].apply( instance, args );\n\n\t\t\t\t\tif ( methodValue !== instance && methodValue !== undefined ) {\n\t\t\t\t\t\treturnValue = methodValue && methodValue.jquery ?\n\t\t\t\t\t\t\treturnValue.pushStack( methodValue.get() ) :\n\t\t\t\t\t\t\tmethodValue;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t} else {\n\n\t\t\t// Allow multiple hashes to be passed on init\n\t\t\tif ( args.length ) {\n\t\t\t\toptions = $.widget.extend.apply( null, [ options ].concat( args ) );\n\t\t\t}\n\n\t\t\tthis.each( function() {\n\t\t\t\tvar instance = $.data( this, fullName );\n\t\t\t\tif ( instance ) {\n\t\t\t\t\tinstance.option( options || {} );\n\t\t\t\t\tif ( instance._init ) {\n\t\t\t\t\t\tinstance._init();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$.data( this, fullName, new object( options, this ) );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\treturn returnValue;\n\t};\n};\n\n$.Widget = function( /* options, element */ ) {};\n$.Widget._childConstructors = [];\n\n$.Widget.prototype = {\n\twidgetName: \"widget\",\n\twidgetEventPrefix: \"\",\n\tdefaultElement: \"<div>\",\n\n\toptions: {\n\t\tclasses: {},\n\t\tdisabled: false,\n\n\t\t// Callbacks\n\t\tcreate: null\n\t},\n\n\t_createWidget: function( options, element ) {\n\t\telement = $( element || this.defaultElement || this )[ 0 ];\n\t\tthis.element = $( element );\n\t\tthis.uuid = widgetUuid++;\n\t\tthis.eventNamespace = \".\" + this.widgetName + this.uuid;\n\n\t\tthis.bindings = $();\n\t\tthis.hoverable = $();\n\t\tthis.focusable = $();\n\t\tthis.classesElementLookup = {};\n\n\t\tif ( element !== this ) {\n\t\t\t$.data( element, this.widgetFullName, this );\n\t\t\tthis._on( true, this.element, {\n\t\t\t\tremove: function( event ) {\n\t\t\t\t\tif ( event.target === element ) {\n\t\t\t\t\t\tthis.destroy();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t\tthis.document = $( element.style ?\n\n\t\t\t\t// Element within the document\n\t\t\t\telement.ownerDocument :\n\n\t\t\t\t// Element is window or document\n\t\t\t\telement.document || element );\n\t\t\tthis.window = $( this.document[ 0 ].defaultView || this.document[ 0 ].parentWindow );\n\t\t}\n\n\t\tthis.options = $.widget.extend( {},\n\t\t\tthis.options,\n\t\t\tthis._getCreateOptions(),\n\t\t\toptions );\n\n\t\tthis._create();\n\n\t\tif ( this.options.disabled ) {\n\t\t\tthis._setOptionDisabled( this.options.disabled );\n\t\t}\n\n\t\tthis._trigger( \"create\", null, this._getCreateEventData() );\n\t\tthis._init();\n\t},\n\n\t_getCreateOptions: function() {\n\t\treturn {};\n\t},\n\n\t_getCreateEventData: $.noop,\n\n\t_create: $.noop,\n\n\t_init: $.noop,\n\n\tdestroy: function() {\n\t\tvar that = this;\n\n\t\tthis._destroy();\n\t\t$.each( this.classesElementLookup, function( key, value ) {\n\t\t\tthat._removeClass( value, key );\n\t\t} );\n\n\t\t// We can probably remove the unbind calls in 2.0\n\t\t// all event bindings should go through this._on()\n\t\tthis.element\n\t\t\t.off( this.eventNamespace )\n\t\t\t.removeData( this.widgetFullName );\n\t\tthis.widget()\n\t\t\t.off( this.eventNamespace )\n\t\t\t.removeAttr( \"aria-disabled\" );\n\n\t\t// Clean up events and states\n\t\tthis.bindings.off( this.eventNamespace );\n\t},\n\n\t_destroy: $.noop,\n\n\twidget: function() {\n\t\treturn this.element;\n\t},\n\n\toption: function( key, value ) {\n\t\tvar options = key;\n\t\tvar parts;\n\t\tvar curOption;\n\t\tvar i;\n\n\t\tif ( arguments.length === 0 ) {\n\n\t\t\t// Don't return a reference to the internal hash\n\t\t\treturn $.widget.extend( {}, this.options );\n\t\t}\n\n\t\tif ( typeof key === \"string\" ) {\n\n\t\t\t// Handle nested keys, e.g., \"foo.bar\" => { foo: { bar: ___ } }\n\t\t\toptions = {};\n\t\t\tparts = key.split( \".\" );\n\t\t\tkey = parts.shift();\n\t\t\tif ( parts.length ) {\n\t\t\t\tcurOption = options[ key ] = $.widget.extend( {}, this.options[ key ] );\n\t\t\t\tfor ( i = 0; i < parts.length - 1; i++ ) {\n\t\t\t\t\tcurOption[ parts[ i ] ] = curOption[ parts[ i ] ] || {};\n\t\t\t\t\tcurOption = curOption[ parts[ i ] ];\n\t\t\t\t}\n\t\t\t\tkey = parts.pop();\n\t\t\t\tif ( arguments.length === 1 ) {\n\t\t\t\t\treturn curOption[ key ] === undefined ? null : curOption[ key ];\n\t\t\t\t}\n\t\t\t\tcurOption[ key ] = value;\n\t\t\t} else {\n\t\t\t\tif ( arguments.length === 1 ) {\n\t\t\t\t\treturn this.options[ key ] === undefined ? null : this.options[ key ];\n\t\t\t\t}\n\t\t\t\toptions[ key ] = value;\n\t\t\t}\n\t\t}\n\n\t\tthis._setOptions( options );\n\n\t\treturn this;\n\t},\n\n\t_setOptions: function( options ) {\n\t\tvar key;\n\n\t\tfor ( key in options ) {\n\t\t\tthis._setOption( key, options[ key ] );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t_setOption: function( key, value ) {\n\t\tif ( key === \"classes\" ) {\n\t\t\tthis._setOptionClasses( value );\n\t\t}\n\n\t\tthis.options[ key ] = value;\n\n\t\tif ( key === \"disabled\" ) {\n\t\t\tthis._setOptionDisabled( value );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\t_setOptionClasses: function( value ) {\n\t\tvar classKey, elements, currentElements;\n\n\t\tfor ( classKey in value ) {\n\t\t\tcurrentElements = this.classesElementLookup[ classKey ];\n\t\t\tif ( value[ classKey ] === this.options.classes[ classKey ] ||\n\t\t\t\t\t!currentElements ||\n\t\t\t\t\t!currentElements.length ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// We are doing this to create a new jQuery object because the _removeClass() call\n\t\t\t// on the next line is going to destroy the reference to the current elements being\n\t\t\t// tracked. We need to save a copy of this collection so that we can add the new classes\n\t\t\t// below.\n\t\t\telements = $( currentElements.get() );\n\t\t\tthis._removeClass( currentElements, classKey );\n\n\t\t\t// We don't use _addClass() here, because that uses this.options.classes\n\t\t\t// for generating the string of classes. We want to use the value passed in from\n\t\t\t// _setOption(), this is the new value of the classes option which was passed to\n\t\t\t// _setOption(). We pass this value directly to _classes().\n\t\t\telements.addClass( this._classes( {\n\t\t\t\telement: elements,\n\t\t\t\tkeys: classKey,\n\t\t\t\tclasses: value,\n\t\t\t\tadd: true\n\t\t\t} ) );\n\t\t}\n\t},\n\n\t_setOptionDisabled: function( value ) {\n\t\tthis._toggleClass( this.widget(), this.widgetFullName + \"-disabled\", null, !!value );\n\n\t\t// If the widget is becoming disabled, then nothing is interactive\n\t\tif ( value ) {\n\t\t\tthis._removeClass( this.hoverable, null, \"ui-state-hover\" );\n\t\t\tthis._removeClass( this.focusable, null, \"ui-state-focus\" );\n\t\t}\n\t},\n\n\tenable: function() {\n\t\treturn this._setOptions( { disabled: false } );\n\t},\n\n\tdisable: function() {\n\t\treturn this._setOptions( { disabled: true } );\n\t},\n\n\t_classes: function( options ) {\n\t\tvar full = [];\n\t\tvar that = this;\n\n\t\toptions = $.extend( {\n\t\t\telement: this.element,\n\t\t\tclasses: this.options.classes || {}\n\t\t}, options );\n\n\t\tfunction processClassString( classes, checkOption ) {\n\t\t\tvar current, i;\n\t\t\tfor ( i = 0; i < classes.length; i++ ) {\n\t\t\t\tcurrent = that.classesElementLookup[ classes[ i ] ] || $();\n\t\t\t\tif ( options.add ) {\n\t\t\t\t\tcurrent = $( $.unique( current.get().concat( options.element.get() ) ) );\n\t\t\t\t} else {\n\t\t\t\t\tcurrent = $( current.not( options.element ).get() );\n\t\t\t\t}\n\t\t\t\tthat.classesElementLookup[ classes[ i ] ] = current;\n\t\t\t\tfull.push( classes[ i ] );\n\t\t\t\tif ( checkOption && options.classes[ classes[ i ] ] ) {\n\t\t\t\t\tfull.push( options.classes[ classes[ i ] ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._on( options.element, {\n\t\t\t\"remove\": \"_untrackClassesElement\"\n\t\t} );\n\n\t\tif ( options.keys ) {\n\t\t\tprocessClassString( options.keys.match( /\\S+/g ) || [], true );\n\t\t}\n\t\tif ( options.extra ) {\n\t\t\tprocessClassString( options.extra.match( /\\S+/g ) || [] );\n\t\t}\n\n\t\treturn full.join( \" \" );\n\t},\n\n\t_untrackClassesElement: function( event ) {\n\t\tvar that = this;\n\t\t$.each( that.classesElementLookup, function( key, value ) {\n\t\t\tif ( $.inArray( event.target, value ) !== -1 ) {\n\t\t\t\tthat.classesElementLookup[ key ] = $( value.not( event.target ).get() );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_removeClass: function( element, keys, extra ) {\n\t\treturn this._toggleClass( element, keys, extra, false );\n\t},\n\n\t_addClass: function( element, keys, extra ) {\n\t\treturn this._toggleClass( element, keys, extra, true );\n\t},\n\n\t_toggleClass: function( element, keys, extra, add ) {\n\t\tadd = ( typeof add === \"boolean\" ) ? add : extra;\n\t\tvar shift = ( typeof element === \"string\" || element === null ),\n\t\t\toptions = {\n\t\t\t\textra: shift ? keys : extra,\n\t\t\t\tkeys: shift ? element : keys,\n\t\t\t\telement: shift ? this.element : element,\n\t\t\t\tadd: add\n\t\t\t};\n\t\toptions.element.toggleClass( this._classes( options ), add );\n\t\treturn this;\n\t},\n\n\t_on: function( suppressDisabledCheck, element, handlers ) {\n\t\tvar delegateElement;\n\t\tvar instance = this;\n\n\t\t// No suppressDisabledCheck flag, shuffle arguments\n\t\tif ( typeof suppressDisabledCheck !== \"boolean\" ) {\n\t\t\thandlers = element;\n\t\t\telement = suppressDisabledCheck;\n\t\t\tsuppressDisabledCheck = false;\n\t\t}\n\n\t\t// No element argument, shuffle and use this.element\n\t\tif ( !handlers ) {\n\t\t\thandlers = element;\n\t\t\telement = this.element;\n\t\t\tdelegateElement = this.widget();\n\t\t} else {\n\t\t\telement = delegateElement = $( element );\n\t\t\tthis.bindings = this.bindings.add( element );\n\t\t}\n\n\t\t$.each( handlers, function( event, handler ) {\n\t\t\tfunction handlerProxy() {\n\n\t\t\t\t// Allow widgets to customize the disabled handling\n\t\t\t\t// - disabled as an array instead of boolean\n\t\t\t\t// - disabled class as method for disabling individual parts\n\t\t\t\tif ( !suppressDisabledCheck &&\n\t\t\t\t\t\t( instance.options.disabled === true ||\n\t\t\t\t\t\t$( this ).hasClass( \"ui-state-disabled\" ) ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\n\t\t\t\t\t.apply( instance, arguments );\n\t\t\t}\n\n\t\t\t// Copy the guid so direct unbinding works\n\t\t\tif ( typeof handler !== \"string\" ) {\n\t\t\t\thandlerProxy.guid = handler.guid =\n\t\t\t\t\thandler.guid || handlerProxy.guid || $.guid++;\n\t\t\t}\n\n\t\t\tvar match = event.match( /^([\\w:-]*)\\s*(.*)$/ );\n\t\t\tvar eventName = match[ 1 ] + instance.eventNamespace;\n\t\t\tvar selector = match[ 2 ];\n\n\t\t\tif ( selector ) {\n\t\t\t\tdelegateElement.on( eventName, selector, handlerProxy );\n\t\t\t} else {\n\t\t\t\telement.on( eventName, handlerProxy );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_off: function( element, eventName ) {\n\t\teventName = ( eventName || \"\" ).split( \" \" ).join( this.eventNamespace + \" \" ) +\n\t\t\tthis.eventNamespace;\n\t\telement.off( eventName ).off( eventName );\n\n\t\t// Clear the stack to avoid memory leaks (#10056)\n\t\tthis.bindings = $( this.bindings.not( element ).get() );\n\t\tthis.focusable = $( this.focusable.not( element ).get() );\n\t\tthis.hoverable = $( this.hoverable.not( element ).get() );\n\t},\n\n\t_delay: function( handler, delay ) {\n\t\tfunction handlerProxy() {\n\t\t\treturn ( typeof handler === \"string\" ? instance[ handler ] : handler )\n\t\t\t\t.apply( instance, arguments );\n\t\t}\n\t\tvar instance = this;\n\t\treturn setTimeout( handlerProxy, delay || 0 );\n\t},\n\n\t_hoverable: function( element ) {\n\t\tthis.hoverable = this.hoverable.add( element );\n\t\tthis._on( element, {\n\t\t\tmouseenter: function( event ) {\n\t\t\t\tthis._addClass( $( event.currentTarget ), null, \"ui-state-hover\" );\n\t\t\t},\n\t\t\tmouseleave: function( event ) {\n\t\t\t\tthis._removeClass( $( event.currentTarget ), null, \"ui-state-hover\" );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_focusable: function( element ) {\n\t\tthis.focusable = this.focusable.add( element );\n\t\tthis._on( element, {\n\t\t\tfocusin: function( event ) {\n\t\t\t\tthis._addClass( $( event.currentTarget ), null, \"ui-state-focus\" );\n\t\t\t},\n\t\t\tfocusout: function( event ) {\n\t\t\t\tthis._removeClass( $( event.currentTarget ), null, \"ui-state-focus\" );\n\t\t\t}\n\t\t} );\n\t},\n\n\t_trigger: function( type, event, data ) {\n\t\tvar prop, orig;\n\t\tvar callback = this.options[ type ];\n\n\t\tdata = data || {};\n\t\tevent = $.Event( event );\n\t\tevent.type = ( type === this.widgetEventPrefix ?\n\t\t\ttype :\n\t\t\tthis.widgetEventPrefix + type ).toLowerCase();\n\n\t\t// The original event may come from any element\n\t\t// so we need to reset the target on the new event\n\t\tevent.target = this.element[ 0 ];\n\n\t\t// Copy original event properties over to the new event\n\t\torig = event.originalEvent;\n\t\tif ( orig ) {\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tif ( !( prop in event ) ) {\n\t\t\t\t\tevent[ prop ] = orig[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.element.trigger( event, data );\n\t\treturn !( $.isFunction( callback ) &&\n\t\t\tcallback.apply( this.element[ 0 ], [ event ].concat( data ) ) === false ||\n\t\t\tevent.isDefaultPrevented() );\n\t}\n};\n\n$.each( { show: \"fadeIn\", hide: \"fadeOut\" }, function( method, defaultEffect ) {\n\t$.Widget.prototype[ \"_\" + method ] = function( element, options, callback ) {\n\t\tif ( typeof options === \"string\" ) {\n\t\t\toptions = { effect: options };\n\t\t}\n\n\t\tvar hasOptions;\n\t\tvar effectName = !options ?\n\t\t\tmethod :\n\t\t\toptions === true || typeof options === \"number\" ?\n\t\t\t\tdefaultEffect :\n\t\t\t\toptions.effect || defaultEffect;\n\n\t\toptions = options || {};\n\t\tif ( typeof options === \"number\" ) {\n\t\t\toptions = { duration: options };\n\t\t}\n\n\t\thasOptions = !$.isEmptyObject( options );\n\t\toptions.complete = callback;\n\n\t\tif ( options.delay ) {\n\t\t\telement.delay( options.delay );\n\t\t}\n\n\t\tif ( hasOptions && $.effects && $.effects.effect[ effectName ] ) {\n\t\t\telement[ method ]( options );\n\t\t} else if ( effectName !== method && element[ effectName ] ) {\n\t\t\telement[ effectName ]( options.duration, options.easing, callback );\n\t\t} else {\n\t\t\telement.queue( function( next ) {\n\t\t\t\t$( this )[ method ]();\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback.call( element[ 0 ] );\n\t\t\t\t}\n\t\t\t\tnext();\n\t\t\t} );\n\t\t}\n\t};\n} );\n\nreturn $.widget;\n\n} ) );\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".html\",\n    \".css\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/randyp:mats-common/client/main.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/both/index.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/both/mats-types.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/both/mats-collections.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/api/matsMethods.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/ui/layouts/template.notFound.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/ui/layouts/template.appBody.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/ui/layouts/appBody.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/client/curve_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/client/graph_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/client/select_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/client/index.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/client/init.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/client/routes.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/server/data_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/server/data_query_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/server/data_diff_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/server/data_match_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/server/data_curve_ops_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/server/data_plot_ops_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/server/data_process_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/server/plot_spec_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/server/index.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/server/publications.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/imports/startup/server/cache.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/template.footer.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/client/error.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/client/info.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/lib/regression.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/lib/param_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/lib/plot_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/lib/math_util.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/topnav/template.top_nav.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/topnav/top_nav.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/spinner/template.spinner.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/spinner/spinner.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/template.Home.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/Home.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/underConstruction/template.underConstruction.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/underConstruction/underConstruction.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/template.about.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/about.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/version/template.version.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/version/version.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/plot/template.plot_list.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/plot/plot_list.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/help/template.help.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/plot/template.plot_param_group.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/plot/plot_param_group.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/plot/template.QC_param_group.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/plot/QC_param_group.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/error/template.error.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/error/error.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/info/template.info.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/info/info.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/changePlotType/template.changePlotType.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/changePlotType/changePlotType.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/graph/template.graph.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/graph/graph.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/graphStandAlone/template.graphStandAlone.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/graphStandAlone/graphStandAlone.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/graph/displayFunctions/graph_plotly.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/template.text_input.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/text_input.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/graph/template.text_output.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/graph/text_output.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/template.select.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/select.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/template.map.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/map.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/template.date_range.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/date_range.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/template.checkbox_group.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/checkbox_group.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/template.number_spinner.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/number_spinner.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/template.radio_group_option.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/radio_group_option.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/template.item.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/common/item.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/curves/template.curve_item.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/curves/curve_item.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/curves/template.curve_param_item_group.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/curves/curve_param_item_group.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/curves/template.curve_list.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/curves/curve_list.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/params/template.param_list.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/params/param_list.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/params/template.curve_param_group.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/params/curve_param_group.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/params/template.scatter_axis.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/params/scatter_axis.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/plotType/template.plot_type.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/plotType/plot_type.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/template.reset.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/reset.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/template.export.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/export.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/template.import.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/import.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/template.settings.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/settings.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/template.databases.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/databases.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/plotParams.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/template.colorsScheme.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/colorScheme.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/template.curveParams.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/curveParams.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/template.authorization.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/authorization.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/template.mail_credentials.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/mail_credentials.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/template.PlotGraphFunctions.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/PlotGraphFunctions.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/template.administration.js\");\nrequire(\"/node_modules/meteor/randyp:mats-common/templates/administration/administration.js\");\n\n/* Exports */\nPackage._define(\"randyp:mats-common\", exports, {\n  matsCollections: matsCollections,\n  matsTypes: matsTypes,\n  matsMethods: matsMethods,\n  matsCurveUtils: matsCurveUtils,\n  matsSelectUtils: matsSelectUtils,\n  matsGraphUtils: matsGraphUtils,\n  matsParamUtils: matsParamUtils,\n  matsMathUtils: matsMathUtils,\n  matsPlotUtils: matsPlotUtils,\n  regression: regression\n});\n\n})();\n","servePath":"/packages/randyp_mats-common.js","sourceMap":{"version":3,"sources":["packages/randyp:mats-common/client/main.js","packages/randyp:mats-common/client/error.js","packages/randyp:mats-common/client/info.js","packages/randyp:mats-common/imports/startup/both/index.js","packages/randyp:mats-common/imports/startup/both/mats-types.js","packages/randyp:mats-common/imports/startup/both/mats-collections.js","packages/randyp:mats-common/imports/startup/api/matsMethods.js","packages/randyp:mats-common/imports/startup/ui/layouts/appBody.js","packages/randyp:mats-common/imports/startup/client/curve_util.js","packages/randyp:mats-common/imports/startup/client/graph_util.js","packages/randyp:mats-common/imports/startup/client/select_util.js","packages/randyp:mats-common/imports/startup/client/index.js","packages/randyp:mats-common/imports/startup/client/init.js","packages/randyp:mats-common/imports/startup/client/routes.js","packages/randyp:mats-common/imports/startup/server/data_util.js","packages/randyp:mats-common/imports/startup/server/data_query_util.js","packages/randyp:mats-common/imports/startup/server/data_diff_util.js","packages/randyp:mats-common/imports/startup/server/data_match_util.js","packages/randyp:mats-common/imports/startup/server/data_curve_ops_util.js","packages/randyp:mats-common/imports/startup/server/data_plot_ops_util.js","packages/randyp:mats-common/imports/startup/server/data_process_util.js","packages/randyp:mats-common/imports/startup/server/plot_spec_util.js","packages/randyp:mats-common/imports/startup/server/index.js","packages/randyp:mats-common/imports/startup/server/publications.js","packages/randyp:mats-common/imports/startup/server/cache.js","packages/randyp:mats-common/lib/regression.js","packages/randyp:mats-common/lib/param_util.js","packages/randyp:mats-common/lib/plot_util.js","packages/randyp:mats-common/lib/math_util.js","packages/randyp:mats-common/templates/topnav/top_nav.js","packages/randyp:mats-common/templates/spinner/spinner.js","packages/randyp:mats-common/templates/Home.js","packages/randyp:mats-common/templates/underConstruction/underConstruction.js","packages/randyp:mats-common/templates/about.js","packages/randyp:mats-common/templates/version/version.js","packages/randyp:mats-common/templates/plot/plot_list.js","packages/randyp:mats-common/templates/plot/plot_param_group.js","packages/randyp:mats-common/templates/plot/QC_param_group.js","packages/randyp:mats-common/templates/error/error.js","packages/randyp:mats-common/templates/info/info.js","packages/randyp:mats-common/templates/changePlotType/changePlotType.js","packages/randyp:mats-common/templates/graph/graph.js","packages/randyp:mats-common/templates/graph/displayFunctions/graph_plotly.js","packages/randyp:mats-common/templates/graph/text_output.js","packages/randyp:mats-common/templates/graphStandAlone/graphStandAlone.js","packages/randyp:mats-common/templates/common/text_input.js","packages/randyp:mats-common/templates/common/select.js","packages/randyp:mats-common/templates/common/map.js","packages/randyp:mats-common/templates/common/date_range.js","packages/randyp:mats-common/templates/common/checkbox_group.js","packages/randyp:mats-common/templates/common/number_spinner.js","packages/randyp:mats-common/templates/common/radio_group_option.js","packages/randyp:mats-common/templates/common/item.js","packages/randyp:mats-common/templates/curves/curve_item.js","packages/randyp:mats-common/templates/curves/curve_param_item_group.js","packages/randyp:mats-common/templates/curves/curve_list.js","packages/randyp:mats-common/templates/params/param_list.js","packages/randyp:mats-common/templates/params/curve_param_group.js","packages/randyp:mats-common/templates/params/scatter_axis.js","packages/randyp:mats-common/templates/plotType/plot_type.js","packages/randyp:mats-common/templates/administration/reset.js","packages/randyp:mats-common/templates/administration/export.js","packages/randyp:mats-common/templates/administration/import.js","packages/randyp:mats-common/templates/administration/settings.js","packages/randyp:mats-common/templates/administration/databases.js","packages/randyp:mats-common/templates/administration/plotParams.js","packages/randyp:mats-common/templates/administration/colorScheme.js","packages/randyp:mats-common/templates/administration/curveParams.js","packages/randyp:mats-common/templates/administration/authorization.js","packages/randyp:mats-common/templates/administration/mail_credentials.js","packages/randyp:mats-common/templates/administration/PlotGraphFunctions.js","packages/randyp:mats-common/templates/administration/administration.js"],"names":["module","link","setError","error","myError","myStackTrace","String","Error","toLocaleString","indexOf","strinfo","replace","setInfo","Session","set","message","stack","$","modal","clearError","getError","get","getStack","info","clearInfo","getInfo","DatabaseRoles","MODEL_DATA","META_DATA","SUMS_DATA","SITE_DATA","AppTypes","mats","metexpress","mats4met","InputTypes","textInput","select","selectOrderEnforced","numberSpinner","dateRange","radioGroup","checkBoxGroup","resetButton","controlButton","element","selectMap","custom","unused","forecastSingleCycle","forecastMultiCycle","PlotTypes","timeSeries","profile","dieoff","threshold","validtime","dailyModelCycle","reliability","map","histogram","contour","contourDiff","scatter2d","ForecastTypes","utcCycle","singleCycle","PlotFormats","none","matching","pairwise","absolute","PlotActions","matched","unmatched","BestFits","linear","linearThroughOrigin","exponential","logarithmic","power","MatchFormats","time","level","site","PlotAxisFilters","PlotView","graph","textSeries","ReservedWords","Zero","zero","ideal0","ideal1","ideal2","ideal3","ideal4","ideal5","ideal6","ideal7","ideal8","ideal9","perfectReliability","noSkill","blueCurveText","blackCurveText","redCurveText","Messages","NO_DATA_FOUND","selectorsToHide","MetaDataDBRecord","poolName","dbName","tables","Array","_records","record","push","addRecord","getRecords","exportDefault","matsTypes","Mongo","v","CurveParams","Collection","Scatter2dParams","CurveTextPatterns","ScatterAxisTextPattern","SavedCurveParams","PlotParams","SavedPlotParams","PlotGraphFunctions","SavedPlotGraphFunctions","RegionsPerModel","SitesPerModel","RegionDescriptions","Models","Instruments","FcstLensPerModel","CurveSettings","Settings","ColorScheme","SentAddresses","Authorization","Roles","SavedRoles","Databases","SavedDatabases","Credentials","SavedCredentials","SiteMap","StationMap","appName","matsCollections","Meteor","ValidatedMethod","SimpleSchema","matsCache","matsDataQueryUtils","matsDataUtils","mysql","url","metaDataTableUpdates","LayoutStoreCollection","DownSampleResults","MV_DIRS","isServer","settings","private","undefined","_MV_OUT","MV_OUTPUT","_MV_HOME","MV_HOME","_MV_LOGDIR","_MV_ERRDIR","_MV_DATADIR","_MV_SQLDIR","_MV_XMLDIR","_MV_SCRIPTSDIR","_MV_PLOTSSDIR","process","env","JAVA_HOME","LOGDIR","ERRDIR","DATADIR","SQLDIR","XMLDIR","SCRIPTSDIR","PLOTSDIR","HOME","rawCollection","createIndex","expireAfterSeconds","Picker","route","params","req","res","next","middleware","_getCSV","_getJSON","_clearCache","_refreshMetadataMWltData","_mvGetData","_mvGetPoints1","_mvGetPoints2","_mvGetXml","_mvGetPlot","_mvGetScript","_mvGetSql","_mvGetLog","_mvGetErr","_checkMetaDataRefresh","refresh","tableUpdates","find","fetch","tui","length","id","_id","pool","name","tableNames","lastRefreshed","updatedEpoch","Number","MAX_VALUE","ti","tName","rows","simplePoolQueryWrapSynchronous","global","i","e","lastRefreshedEpoch","moment","valueOf","console","log","utc","format","asrKeys","appSpecificResetRoutines","ai","update","$set","clear","end","stringify","require","csv","result","_getFlattenedResultData","key","statArray","Object","values","stats","dataArray","data","statResultArray","dataResultArray","si","keys","label","di","dataSubArray","dataHeader","filter","dsi","fileName","setHeader","header","err","output","write","flatJSON","_getPagenatedData","JSON","dsiRealPageIndex","dsiTextDirection","rk","p","np","resp","r","plotTypes","basis","plotParams","plotType","_","invert","returnData","ci","reservedWords","glob_stats","d_mean","sd","n_good","stde_betsy","lag1","minVal","maxVal","curveData","cdi","x","curveDataElement","raw_stat","y","cdata","labelSuffix","sample_climo","prob_bin","hit_rate","obs_y","obs_n","reduce","prev","curr","N_times","average","queryVal","stdev","min_time","max_time","siteName","glob_mean","glob_sd","glob_n","glob_min","glob_max","bin_stats","bin_n","bin_rf","binLowBound","binUpBound","bin_mean","bin_sd","n","mean","minDate","maxDate","xTextOutput","yTextOutput","zTextOutput","nTextOutput","minDateTextOutput","maxDateTextOutput","firstBestFitIndex","bestFitIndexes","bestFitIndex","cbi","curveTextData","rky","myPageIndex","newPageIndex","ret","rawReturn","getResult","parse","start","direction","dsiStart","dsiEnd","csi","Math","floor","slice","fse","filePath","baseName","readFile","_saveResultData","sizeof","hash","dSize","TimeSeries","DailyModelCycle","downsampler","totalPoints","x_epoch","allowedNumberOfPoints","downSampleResult","dsData","xyDataset","d","index","ratioTotalPoints","myAllowedPoints","round","downsampledSeries","processData","originalIndex","arrayKeys","nonArrayKeys","ki","isArray","array","annotation","insert","Date","storeResult","addSentAddress","validate","toAddress","type","validator","run","userId","upsert","address","applyAuthorization","blackbox","roles","roleName","authorization","userRoleName","userRoleDescription","authorizationRole","newUserEmail","existingUserEmail","role","findOne","description","email","applyDatabaseSettings","status","host","database","user","password","deleteSettings","remove","emailImage","imageStr","subject","fromAddress","services","google","credentials","clientId","clientSecret","refresh_token","smtpTransporter","Nodemailer","createTransport","service","auth","XOAuth2","refreshToken","mailOptions","sender","replyTo","from","to","attachments","filename","contents","Buffer","split","sendMail","response","close","getAuthorizations","userEmail","toLowerCase","getDataFunctionFileList","getGraphData","expireKey","Boolean","plotGraphFunction","dataFunction","NODE_ENV","results","Future","future","wait","dsResults","disableOplog","dataFunctionError","getGraphDataByKey","resultKey","getGraphFunctionFileList","getLayout","getMvArtifactsByKey","getPlotResult","pageIndex","rKey","pi","npi","getReleaseNotes","dFuture","fData","PWD","file","getUserAddress","insertColor","newColor","insertAfterIndex","colorScheme","colors","splice","mvBatch","mvbatch","plotSpecFunction","app","artifacts","png","xml","sql","R","points1","points2","plotSpecFilePath","pngFilePath","sqlFilePath","logFilePath","errFilePath","scriptFilePath","dataFilePath","points1Path","points2Path","mvPlot","unlinkSync","ignore","artifactPaths","filesExist","xmlSpecExists","existsSync","plotExists","scriptExists","dataExists","sqlExists","logExists","plotSpec","mvBatchCmd","cp","outputFileSync","execSync","stdout","stderr","match","sqlout","readFunctionFile","path","toString","refreshMetaData","removeAuthorization","$pull","multi","removeColor","removeIndex","removeDatabase","resetApp","appRef","metaDataTableRecords","appMdr","appType","dep_env","PYTHON_PATH","RUN_ENV","deployment","deploymentText","Assets","getText","dep","deployment_environment","apps","appVersion","version","appTitle","title","buildDate","metaDataTables","mdti","metaDataRef","count","doRoles","doAuthorization","doCredentials","doColorScheme","doSettings","restoreFromFile","ype","writeFile","restoreFromParameterFile","o","omit","forEach","saveLayout","layout","curveOpsUpdate","saveSettings","saveAs","permission","created","owner","savedAt","savedBy","setCredentials","clientRefreshToken","setSettings","labelPrefix","lineWidth","nullFillString","resetFromCode","LabelPrefix","Title","LineWidth","NullFillString","testGetMetaDataTableUpdates","testGetTables","queryWrap","wrap","callback","connection","createConnection","query","a","Tables_in_ruc_ua_sums2","testSetMetaDataTableUpdatesLastRefreshedBack","mtu","matsMethods","Template","FlowRouter","AppBody","onCreated","matsPlotUtils","matsParamUtils","Info","graphResult","plot","_1","_2","_3","_4","prototype","call","_5","_6","_7","getPlotResultData","plotResultData","setPlotResultData","showSpinner","hideSpinner","resetPlotResultData","getGraphResult","setGraphResult","resetGraphResult","getUsedLabels","getNextCurveLabel","setNextCurveLabel","usedLabels","fields","prefixLabels","l","lastIndexOf","RegExp","lastUsedLabel","last","lastLabelNumber","minusPrefix","tryNum","parseInt","isNaN","newLabelNumber","nextCurveLabel","setNextCurveColor","usedColors","lastUsedIndex","nextCurveColor","newIndex","rint","random","getNextCurveColor","clearUsedLabel","newUsedLabels","reject","clearUsedColor","color","newUsedColors","c","clearAllUsed","setUsedColors","curves","setUsedLabels","setUsedColorsAndLabels","resetScatterApply","getPlotType","document","getElementById","checked","addDiffs","newCurves","curvesLength","getPlotFormat","baseIndex","newCurve","extend","diffFrom","findWhere","base_index","removeDiffs","curve","checkDiffs","plotFormat","showTimeseriesFace","faceOptions","faceSelectors","elem","fidx","style","display","now","showProfileFace","showDieOffFace","param","getParameterForName","setValueTextForParamName","default","showThresholdFace","showValidTimeFace","showDailyModelCycleFace","showReliabilityFace","showMapFace","showHistogramFace","showContourFace","isContour","isContourDiff","showScatterFace","get_err","sVals","sSecs","subVals","subSecs","sum_d","sum2_d","sd2","sqrt","sd_limit","last_secs","MIN_VALUE","minDelta","minSecs","max_secs","secs","delta","abs","data_wg","n_gaps","sum","sum2","loopTime","lastSecond","sec","lag","n_in_lag","t","betsy","min","max","matsCurveUtils","setNoDataLabels","dataset","curveId","value","disabled","marker","setNoDataLabelsMap","lat","width","squareWidthHeight","rectangleWidth","height","rectangleHeight","standAloneWidth","vpw","documentElement","clientWidth","window","innerWidth","standAloneHeight","vph","clientHeight","innerHeight","resizeGraph","setTextView","setGraphView","standAloneSetGraphView","setDefaultView","downloadFile","fileURL","ActiveXObject","save","createElement","href","target","substring","download","navigator","userAgent","search","location","evt","MouseEvent","dispatchEvent","URL","webkitURL","revokeObjectURL","execCommand","_window","open","matsGraphUtils","refreshPeer","event","peerName","targetParam","targetId","targetElem","refreshMapEvent","CustomEvent","detail","refElement","refreshDependents","dependentNames","selectAllbool","re","elements","options","multiple","i1","selected","previously_selected","i2","text","checkDisableOther","firstRender","disableOtherFor","controlledSelectors","getInputElementForParamName","selectedOptions","selectedText","hideOtherFor","inArray","checkHideOther","otherInputElement","selectorControlElem","selectedIndex","scrollIntoView","matsSelectUtils","paramName","disabledOptions","getDisabledOptionsForParamName","optionsGroups","optionsMap","superiorNames","superiorDimensionality","superiors","sNames","sn","superiorElement","selectedSuperiorValue","sNameIndex","elems","getElementsByClassName","val","brothers","myOptions","selectedSuperiorValues","firstSuperiorOptions","theseSuperiors","theseSuperiorsIndex","superior","nextSuperiorOptions","intersection","optionsGroupsKeys","k","concat","sort","optionsAsString","firstGroup","dIndex","empty","append","selectedOptionIndex","sviText","svi","getControlElementForParamName","offsetParent","belem","belemSelectedOptions","Option","isClient","subscribe","Accounts","ui","config","requestOfflineToken","ref","pathArray","protocol","hostport","hostName","matsRef","helpRef","endsWith","matsref","appref","helpref","collections","action","render","areObjectsEqual","arrayContainsArray","superArray","subArray","b","j","arrayContainsSubArray","current","arraysEqual","arrayUnique","arr","includes","findArrayInSubArray","objectContainsObject","superObject","subObject","superObjectKeys","currentObject","avg","squareDiffs","diff","avgSquareDiff","stdDev","dateConvert","dStr","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","yr","day","month","hour","minute","dateParts","dateArray","timeArray","getDateRange","dates","fromDateStr","fromDate","toDateStr","toDate","fromSecs","secsConvert","toSecs","fromSeconds","toSeconds","getTime","my_date","UTC","date_in_secs","deploymentRoles","settingsId","os","Npm","hostname","getPlotParamsFromStack","captureStackTrace","arguments","callee","stackElems","sElem","trim","startsWith","dataFunctionName","noJoy","sLevs","autocorr_limit","hasLevels","outlierQCParam","subLevs","qaCorrected","lastPressure","n_pressures","lag1_t","lag1_p","r1_t","r1_p","n_deltas","lev","lag_by_r","lag1_max","r_sum","n_r","setHistogramParameters","yAxisFormat","binType","binNum","binStart","binStride","pivotVal","binBounds","item","calculateHistogramBins","curveSubStats","curveSubSecs","binParams","binStats","binUpBounds","binLowBounds","binMeans","globalStats","fullLowBound","fullUpBound","fullRange","binInterval","b_idx","closestBoundToPivot","binLabels","lowSdFromMean","upSdFromMean","toFixed","prescribeHistogramBins","binIntervalSum","binIntervalAverage","sortHistogramBins","curveSubLevs","masterBinStats","binSubStats","binSubSecs","binSubLevs","d_idx","ymin","ymax","xmin","xmax","getDiffContourCurveParams","curveKeys","currKey","ckidx","sortFunction","getModelCadence","dataSource","startDate","endDate","cycles","cycles_raw","cycle_seconds","cycles_keys","newTime","chosenStartTime","chosenEndTime","chosenStartIdx","chosenEndIdx","foundStart","foundEnd","startCycles","endCycles","union","middleCycles","currCycles","getTimeInterval","avTime","time_interval","foreCastOffset","dayInMilliSeconds","minCycleTime","thisCadence","thisCadenceIdx","nextCadenceIdx","statement","queryDBTimeSeries","forecastOffset","averageStr","validTimes","forceRegularCadence","completenessQCParam","vtCycles","regular","error_x","error_y","N0","parsedData","parseQueryDataTimeSeries","queryDBSpecialtyCurve","parseQueryDataSpecialtyCurve","parseQueryDataHistogram","queryMapDB","variable","varUnits","siteMap","lon","dBlue","dBlack","dRed","pFuture","rowIndex","sta_name","model_ob_diff","tooltips","thisSite","obj","point","textMarker","dataBlue","dataBlack","dataRed","queryDBContour","z","zmin","zmax","parseQueryDataContour","curveTime","curveStats","avtime","avSeconds","stat","time_diff","sub_values","sub_secs","sub_levs","sub_data","curr_sub_data","sd_idx","NaN","N0_max","N_times_max","this_N0","this_N_times","filteredx","filteredy","curveIndependentVars","independentVar","hr_of_day","avVal","sub_stats","cycles_missing","missingIdx","dSorted","didx","curveSubStatsRaw","curveSubSecsRaw","curveSubLevsRaw","apply","curveStatLookup","curveNLookup","rowXVal","xVal","rowYVal","yVal","statKey","min_secs","currX","currY","currStat","currN","currStatKey","currYStatArray","currYNArray","nPoints","filteredz","filteredMinDate","filteredMaxDate","getLargeIntervalCurveData","independentVarName","dataMaxInterval","largeIntervalCurveData","getDataForDiffCurve","statVarName","minuendData","subtrahendData","subtrahendIndex","minuendIndex","largeIntervalCurveIndex","subtrahendIndependentVar","minuendIndependentVar","largeIntervalIndependentVar","minuendChanged","subtrahendChanged","diffValue","tempSubValsArray","tempSubSecsArray","tempSubLevsArray","minuendDataSubValues","minuendDataSubSeconds","minuendDataSubLevels","subtrahendDataSubValues","subtrahendDataSubSeconds","subtrahendDataSubLevels","mvalIdx","svalIdx","binLabel","getDataForDiffContour","diffDataset","xAxisKey","yAxisKey","visible","minuendYIndex","subtrahendYIndex","diffDataYIndex","diffDataY","minuendY","subtrahendY","minuendXIndex","subtrahendXIndex","diffDataXIndex","diffDataX","minuendX","subtrahendX","diffNumber","diffMinDate","diffMaxDate","toPrecision","colorbar","reversescale","contours","maxZ","matsDataDiffUtils","getMatchedDataSet","subValues","newSubSecs","newSubValues","independentVarGroups","independentVarHasPoint","currIndependentVar","curveIndex","fi","matchingIndependentVars","matchingIndependentHasPoint","subSecIntersection","currSubSecIntersection","dataLength","newVal","newSec","getMatchedDataSetWithLevels","newSubLevs","subIntersections","currSubIntersections","tempSubIntersections","tempPair","newLev","getMatchedDataSetHistogram","subStatsRaw","subSecsRaw","subStats","newSubStats","newCurveData","newStat","newCurveDataKeys","getMatchedDataSetHistogramWithLevels","subLevsRaw","matsDataMatchUtils","getHorizontalValueLine","yValue","cLabel","valueLine","getVerticalValueLine","xValue","getLinearValueLine","generateSeriesCurveOptions","axisMap","dataSeries","axisKey","axisLabel","axisNumber","error_y_temp","thickness","curveOptions","xaxis","yaxis","annotateColor","mode","symbol","size","line","dash","generateProfileCurveOptions","dataProfile","error_x_temp","generateReliabilityCurveOptions","generateBarChartCurveOptions","dataBars","generateMapCurveOptions","markerSizes","ceil","opacity","generateMapColorTextOptions","textfont","family","hoverinfo","generateContourCurveOptions","unitKey","autocontour","ncontours","showlabels","colorscale","titleside","titlefont","matsDataCurveOpsUtils","generateSeriesPlotOptions","errorMax","margin","pad","zeroline","hovermode","hoverlabel","showlegend","tickfont","axisAnchor","axisSide","axisPosition","yAxisNumber","axisIdx","yPad","axisObjectKey","range","anchor","overlaying","side","position","xPad","generateProfilePlotOptions","xAxisNumber","tickVals","tickText","tickvals","ticktext","autorange","generateDieoffPlotOptions","generateThresholdPlotOptions","generateValidTimePlotOptions","generateReliabilityPlotOptions","perfectLine","generateMapPlotOptions","autosize","mapbox","bearing","center","pitch","zoom","accesstoken","generateHistogramPlotOptions","plotBins","bargap","barmode","generateContourPlotOptions","matsDataPlotOpsUtils","processDataXYCurve","appParams","curveInfoParams","bookkeepingParams","axisLimitReprocessed","statisticSelect","indVars","means","rawStat","errorResult","errorBar","fhr","utcCycleStarts","filteredMeans","miny","maxy","minx","maxx","zeroLine","idealValueLine","idealLabel","ivIdx","idealValues","resultOptions","totalProcessingFinish","dataRequests","begin","totalProcessingStart","finish","duration","asSeconds","queries","processDataProfile","levels","reverse","processDataReliability","skillmin","skillmax","noSkillLine","xClimoLine","yClimoLine","processDataHistogram","allReturnedSubStats","allReturnedSubSecs","allReturnedSubLevs","curvesLengthSoFar","sortedData","postQueryStartMoment","dataFoundForCurve","alreadyMatched","diffResult","cOptions","postQueryFinishMoment","processDataContour","currText","currYTextArray","matsDataProcessUtils","statMvTranslation","xmlBuilder","_pad","num","s","_title","someError","_plotText","_componentToHex","hex","_rgbToHex","cParts","g","_getUniqDates","model","region","forecastLength","regionsClause","regions","join","forecastLengthsClause","forecastValueMap","valuesMap","forecastLengths","fl","metadataPool","dstrMoment","dstr","valid","momentSdiHour","vti","thisvt","_getSortedDatesForIndepRange","sortedDates","_getSortedHoursForIndepRange","hours","Set","add","_getSortedDatesForDepRange","addIndepUngroupedDateElementsBetween","sdi","ele","addDatabaseElement","databases","databasesStr","addFolders","MV_RSCRIPT","folders","startPlotSpec","create","encoding","standalone","sumPool","connectionConfig","port","management_system","MV_DB_MANAGEMENT_SYSTEM","addPlotCi","cList","cListStr","addShowSignif","addPlotDisp","addColors","ch","addPch","addType","addLty","addLwd","addConSeries","addOrderSeries","addLegend","addSeries","dependentAxes","hiddenCurves","sVars","seriesAxisMap","series","models","vx_masks","fcst_leads","fcst_levls","seriesElem","axis","initHours","seriesElements","seriesElementValues","daci","sVar","sValues","paddedV","sValuesStr","thisVar","has","sElementKeys","sei","seVar","svars","getDependentAxis","yaxesDefault","dependentAxesVariables","yaxes","addDeps","deps","depKey","depAxis","subDep","variableStatisticPairs","vars","depElem","addAnomalycorrDeps","variables","_addSeriesLabels","y1vars","y1i","y2vars","y2i","addTemplate","templateStr","addIndepDates","indep","addIndepLevels","lvlSet","levelVals","lvls","li","att","addIndepValidHours","hi","addIndepForecastHours","leadSet","leads","addTmpl","tmpl","plotAction","addPlotFix","addPlotCond","addCalcStat","statType","addPlotStat","addPlotCmd","addY1Lim","addY1Bufr","addY2Lim","addMiscellaneous","endPlotSpec","pretty","matsPlotSpecUtils","publish","ready","Results","life","expire","gaussianElimination","maxrow","tmp","methods","gradient","intercept","len","coordinate","string","equation","points","denominator","A","pow","E","B","polynomial","order","lhs","rhs","answer","w","lastvalue","regression","method","getControlButtonIdForParamName","pname","getValueElementForParamName","getValueIdForParamName","getValueForParamName","textContent","selection","getInputIdForParamName","setInputForParamName","idSelectorStr","idSelector","prop","getElementValues","curveParams","scatterParams","selector","el","idSelect","axisStr","expandParams","dataElem","collapseParams","collapseParam","typeSort","setDefaultForParamName","defaultValue","getDefaultDateRange","dateParam","startInit","stopInit","stopDate","getMinMaxDates","minMoment","maxMoment","subtract","setAllParamsToDefault","nonDependents","resetMapEvent","isInputElementVisible","inputElement","is","isParamVisible","paramRef","isControlButtonVisible","setInputValueForParamAndtriggerChange","trigger","getOptionsMapForParam","getOptionsForParam","getAppName","getCurveItemValueForParamName","curveNumber","visibilityControllerForParam","found","some","pKeys","getAxisText","scatterAxisTextPattern","textPattern","pName","delimiter","getCurveText","curveTextPattern","buttons","getElementsByName","plotFormatParam","getBestFit","containsPoint","pointArray","pLat","pLon","disableActionButtons","enableActionButtons","isNum","args","parseFloat","variance","median","matsMathUtils","topNav","events","preventDefault","homeref","referrer","rparts","pop","spinner","helpers","image","img","Home","isUnderConstruction","resetDefaults","underConstruction","jqueryui","notes","About","versionStr","releaseNotes","plotList","PlotParamGroups","groupNums","displayGroup","uniq","privateDisabled","privateRestoreNames","names","publicRestoreNames","savedSettings","isOwner","deleteThis","formats","template","currentTarget","plotTypeElems","ptei","ptElem","plotParam","paramData","restoreFrom","plotTypeSaved","dateArr","idref","setStartDate","setEndDate","pt","pgf","graphFunction","oldCurves","mvs","onRendered","sidx","plotParamHandler","plotParamGroup","QCParamGroup","completenessNumber","noQC","errorMessage","stackTrace","infoMessage","changePlotType","plotChangeType","Hooks","openWindows","xAxes","yAxes","resize","Plotly","newPlot","showLink","eval","lineTypeResetOpts","lidx","barTypeResetOpts","bidx","mapResetOpts","midx","plotName","toUpperCase","curveText","pfuncs","confidenceDisplay","mvSpanDisplay","updated","plotText","isProfile","isLinePlot","isNotMap","sentAddresses","addresses","hideButtonText","sval","pointsButtonText","errorBarButtonText","barChartButtonText","annotateButtonText","heatMapButtonText","curveShowHideDisplay","pointsShowHideDisplay","errorbarsShowHideDisplay","isMatched","barsShowHideDisplay","annotateShowHideDisplay","heatMapShowHideDisplay","xAxisControlsNumberVisibility","xAxisControlsTextVisibility","yAxisControlsNumberVisibility","yAxisControlsTextVisibility","displayReplotZoom","metApp","mvFiles","mvDisabled","mvLoading","mvWindow","setTimeout","reload","ctbgElems","h","wind","resizeTo","widx","graphView","click","newOpts","yAxis","relayout","pageTextDirection","newDateRange","innerHTML","actionId","plotMatched","myDataIdx","findIndex","restyle","updatedKeys","kidx","updatedKey","jsonHappyKey","hidden","changeYScaleBack","updates","uidx","isStartDefined","isEndDefined","startVal","endVal","graphPlotly","resultSet","fillStr","times","getDataForTime","getDataForCurve","textOutput","notScatter","statHeaders","elementHeaders","curveLabel","elementHtml","labelKey","parentData","elementLabel","cindex","jsPDF","html2canvas","resizeOptions","GraphStandAlone","getRouteName","getParam","backgroundColor","ptypes","mapLoadPause","graphFunctionDispay","matsplotFilemname","each","querySelector","scale","then","canvas","pdf","addImage","toDataURL","uri","body","appendChild","removeChild","defaultTextInput","input","select2","minimumResultsForSearch","closeOnSelect","addEventListener","optionMaxLength","sOptions","longest","isSelectedByDefault","foreach","Soptions","isMultiple","selectionIsOptional","selectionOptional","setValue","firstOption","lastOption","curveItem","controlElem","editMode","defaultOption","priorSelected","curveOption","unusedOption","oi","option","setCustomValidity","checkValidity","defaultAttrs","getScript","markers","thisMarkers","peerOptions","selectedValues","divElement","divId","initializeSelectorMap","defaultPoint","defaultMapView","defaultZoomLevel","zoomLevel","targetElement","highLightColor","on","eventdata","currPoint","pointNumber","tidx","selectedpoints","refreshOptionsForPeer","peerElement","peerId","redraw","resetMap","defaultDateRange","daterangepicker","locale","ranges","startOf","endOf","ev","picker","valStr","curVals","startDsr","endDsr","isValid","isAfter","superiorVals","datesMap","si2","thisSuperior","superiorMinimumDateStr","superiorMinimumMoment","superiorMaximumDateStr","superiorMaximumMoment","dataStart","dataEnd","tStart","tEnd","isBefore","endDsrLess30","jqIdRef","newDateStr","checkboxGroup","checkedByDefault","def","labelValue","refValueDisplay","dispElem","dispDefault","step","setAttribute","cbname","controlButtonText","textValue","hasHelp","help","isSelect","isSelectMap","isInput","isSpinner","isDateRange","isCheckBoxGroup","isRadioGroup","displayPriority","controlButtonVisibility","controlButtonCovered","elementHidden","Event","load","default_value","errMsg","colorpicker","align","removeCurve","confirmRemoveCurve","displayEditXaxis","displayEditYaxis","displayEdit","colorpick","regionName","defaultColor","DBcurve","editingThis","editCurve","editTarget","setParamsToAxis","newAxis","currentParams","currentParamName","curveListEditNode","css","border","confirm","Curves","confirmCurve","jQuery","srcEditButton","editingCurve","parentNode","eventTargetCurve","srcDisplayButton","inputElem","focus","intendedName","activeDisplayButton","allGroups","curveParamItemGroup","curveParamGroups","lastUpdate","elmementValues","pValues","pattern","groupSize","displayParams","pGroups","groupParams","pvi","paramGroup","pNameArr","prefix","buttonId","upperName","spanId","elementChanged","adb","isEditMode","inputElemIsVisible","displayParam","visibilityControllingParam","curveList","displayPlotUnMatched","displayPlotMatched","displaySaveSettings","displayCurves","averagesDisabled","disabledPlotsHidden","identicalContourDisabled","xAxis","identicalContourHidden","mismatchContourDiffDisabled","xAxis0","yAxis0","xAxis1","yAxis1","mismatchContourDiffHidden","matchedLabel","setMatchName","shadeRGBColor","percent","f","G","paramList","CurveParamGroups","isEdit","paramWellColor","curveBeingEdited","grep","lighterShadeOfColor","labelId","paramView","plotView","isScatter","isMap","isReliability","curveNames","pluck","cname","ctlElem","isHidden","isUnused","dateParams","dateParamNames","dindex","dElem","scatterCurveNames","paramElems","contains","changingCurveLabel","Element","axisParams","api","ap","pp","ptype","sitesParamHidden","hiddenForPlotTypes","duplicate","filterParams","xparams","yparams","newParams","xp","yp","curveParamGroup","restoreSettingsTime","isEditing","setAxisText","modeText","creating","editing","xaxisCurveText","yaxisCurveText","yApplyEnabled","xaxisCurveColor","yaxisCurveColor","curveIcon","scatter2dParams","scatter2dOptions","className","idOption","idParam","isDefault","displayScatter2d","parent","labelParam","isNumberSpinner","param_elems","pelem","elem_id","target_id","telem","$options","clone","axis_elems","aelem","aelem_id","oldDatesExist","curveDate","oldCurveDatesExist","tsDate","reset","export","dataFiles","graphFiles","parameterOut","json","blob","Blob","createObjectURL","import","File","FileReader","FileList","alert","files","reader","onload","exc","readAsText","ResetFromCodeChecked","dbs","unshift","errorTypeIs","resetError","db","verify","colorOptions","insertAfterColor","displayOrder","optionRows","paramSelectedName","optionKeys","optionList","oli","Exception","types","errType","restoreDates","scp","cl","changeList","utcSeconds","comment","userName","setUTCSeconds","mo","getMonth","getDate","getFullYear","hr","getHours","mn","getMinutes","getSeconds","second","commentStr","restoreDate","dispOrder","dispPri","dispGroup","seconds","unique","removeName","optionSelected","selectedKey","listIndex","indexStr","indexes","emailAddress","saveSecond","paramsCursor","clName","$push","doc","savedSecond","paramNames","curveParamNames","namesToRemoveFromCollection","rName","cParam","cid","curveParam","taId","getAttribute","rfd","restoreFromSeconds","savedParams","dataField","keyParts","defineProperty","getOwnPropertyDescriptor","field","roleOptions","emailOptions","mailCredentials","client_id","client_secret","plotGraphFunctions","plotTypeStr","sPlotGraphFunctions","sPlotTypes","toRemoveFromCollection","ip","spgf","ptid","onLogin","authList","onLoggedOut","userid","adminContainerDiv","adminDiv","userDiv","administration","adminChanged","signedIn","toDateString","toTimeString","showAdministratorDiv","showAuthenticatedDiv","showResetNow","resetEnabled"],"mappings":"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","file":"/packages/randyp_mats-common.js","sourcesContent":["/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/31/16.\n */\n\nimport '../imports/startup/client';\nimport '../imports/startup/both';\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nsetError = function(error){\n    var myError = \"\";\n    var myStackTrace = \"\";\n    if (typeof(error) === \"string\" || error instanceof String) {\n        myError = new Error(error);\n    } else {\n        myError = error;\n    }\n\n    if ( myError.toLocaleString().indexOf( \"INFO:\" ) !== -1) {\n        const strinfo = myError && myError.error && myError.error.replace( \"INFO:\", \"\" );\n        setInfo( strinfo );\n        return;\n    }\n\n    Session.set('errorMessage', myError.message);\n    if (myError.stack) {\n        myStackTrace = myError.stack;\n    } else {\n        myStackTrace = \"StackTrace unavailable\";\n    }\n    Session.set('stackTrace',myStackTrace);\n    $(\"#error\").modal('show');\n};\n\nclearError = function(message){\n    Session.set('errorMessage', '');\n    Session.set('stackTrace', '');\n    $(\"#error\").modal('hide');\n};\n\ngetError = function() {\n    return Session.get('errorMessage');\n};\n\ngetStack = function() {\n    return Session.get('stackTrace');\n};","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nsetInfo = function(info){\n    Session.set('infoMessage', info );\n    $(\"#info\").modal('show');\n};\n\nclearInfo = function(info){\n    Session.set('infoMessage', '');\n    $(\"#info\").modal('hide');\n};\n\ngetInfo = function() {\n    return Session.get('infoMessage');\n};","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/31/16.\n */\nimport './mats-collections.js';\nimport './mats-types.js';\nimport '../api/matsMethods.js';","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/31/16.\n */\nvar DatabaseRoles = {\n    MODEL_DATA: 'model_data',\n    META_DATA: 'meta_data',\n    SUMS_DATA: 'sums_data',\n    SITE_DATA: 'site_data'\n};\n\nvar AppTypes = {\n    mats: 'mats',\n    metexpress: 'metexpress',\n    mats4met: 'mats4met'\n};\n\nvar InputTypes = {\n    textInput: 'textInput',\n    select: 'select',\n    selectOrderEnforced: 'selectOrderEnforced',\n    numberSpinner: 'numberSpinner',\n    dateRange: 'dateRange',\n    radioGroup: 'radioGroup',\n    checkBoxGroup: 'checkBoxGroup',\n    resetButton: 'resetButton',\n    controlButton: 'controlButton',\n    element: 'element',\n    selectMap: 'selectMap',\n    custom: 'custom',\n    unused: \"unused\",\n    forecastSingleCycle: 'forecasts single cycle',\n    forecastMultiCycle: 'forecasts multi cycle'\n};\n\nvar PlotTypes = {\n    timeSeries: \"TimeSeries\",\n    profile: \"Profile\",\n    dieoff: \"DieOff\",\n    threshold: \"Threshold\",\n    validtime: \"ValidTime\",\n    dailyModelCycle: \"DailyModelCycle\",\n    reliability: \"Reliability\",\n    map: \"Map\",\n    histogram: \"Histogram\",\n    contour: \"Contour\",\n    contourDiff: \"ContourDiff\",\n    scatter2d: \"Scatter2d\"\n};\n\nvar ForecastTypes = {\n    dieoff: \"dieoff\",\n    utcCycle: \"utc cycle\",\n    singleCycle: \"single cycle\"\n};\n\nvar PlotFormats = {\n    none: \"none\",\n    matching: \"matching\",\n    pairwise: \"pairwise\",\n    absolute: \"absolute\"\n};\n\nvar PlotActions = {\n    matched: \"matched\",\n    unmatched: \"unmatched\"\n};\n\nvar BestFits = {\n    none: 'none',\n    linear: 'linear',\n    linearThroughOrigin: 'linearThroughOrigin',\n    exponential: 'exponential',\n    logarithmic: 'logarithmic',\n    power: 'power'\n};\n\nvar MatchFormats = {\n    none: \"none\",\n    time: \"time\",\n    level: \"level\",\n    site: \"site\"\n};\n\nvar PlotAxisFilters = {\n    none: \"none\",\n    level: \"level\",\n    site: \"site\"\n};\n\nvar PlotView = {\n    graph: \"graph\",\n    textSeries: \"text\",\n};\n\nvar ReservedWords = {\n    Zero: \"Zero\",\n    zero: \"zero\",\n    ideal0: \"ideal0\",\n    ideal1: \"ideal1\",\n    ideal2: \"ideal2\",\n    ideal3: \"ideal3\",\n    ideal4: \"ideal4\",\n    ideal5: \"ideal5\",\n    ideal6: \"ideal6\",\n    ideal7: \"ideal7\",\n    ideal8: \"ideal8\",\n    ideal9: \"ideal9\",\n    perfectReliability: \"Perfect Reliability\",\n    noSkill: \"No Skill\",\n    blueCurveText: \"blueCurveText\",\n    blackCurveText: \"blackCurveText\",\n    redCurveText: \"redCurveText\"\n};\n\nvar Messages = {\n    NO_DATA_FOUND: \"INFO:0 data records found\"\n};\n\n//hide non-timeseries selectors at startup\nvar selectorsToHide = ['dieoff-type', 'utc-cycle-start', 'histogram-bin-controls', 'histogram-yaxis-controls', 'bin-number', 'bin-pivot', 'bin-start', 'bin-stride', 'bin-bounds', 'x-axis-parameter', 'y-axis-parameter'];\n\n/*\nClass for holding metaData records. These are stored in an array. An app can have multiple metadata databases and each database has a pool for connections.\nThese pools are global (although for future reference the access might be from this collection.). They are refenced in this script via the pool name.\nThis class enforces the types of the poolName (in case someone accidentally tries to store the whole pool object), and the database name and a list\nof table names. The internal list can be appended. The getRecords returns the internal list.\n */\nclass MetaDataDBRecord {\n    constructor(poolName, dbName, tables) {\n        if (!typeof poolName === \"string\") {\n            throw new Error(\"MetaDataDBRecord.constructor : poolName is not a string\");\n        }\n        if (!typeof dbName === \"string\") {\n            throw new Error(\"MetaDataDBRecord.constructor : dbName is not a string\");\n        }\n        if (!tables instanceof Array) {\n            throw new Error(\"MetaDataDBRecord.constructor : tables is not an array\");\n        }\n        this._records = [];\n        var record = {'pool': poolName, 'name': dbName, 'tables': tables};\n        this._records.push(record);\n    }\n\n    addRecord(poolName, dbName, tables) {\n        if (!typeof poolName === \"string\") {\n            throw new Error(\"MetaDataDBRecord.constructor : poolName is not a string\");\n        }\n        if (!typeof dbName === \"string\") {\n            throw new Error(\"MetaDataDBRecord.constructor : dbName is not a string\");\n        }\n        if (!tables instanceof Array) {\n            throw new Error(\"MetaDataDBRecord.constructor : tables is not an array\");\n        }\n        var record = {'pool': poolName, 'name': dbName, 'tables': tables};\n        this._records.push(record);\n    }\n\n    getRecords() {\n        return this._records;\n    }\n}\n\nexport default matsTypes = {\n    InputTypes: InputTypes,\n    PlotTypes: PlotTypes,\n    PlotFormats: PlotFormats,\n    PlotActions: PlotActions,\n    BestFits: BestFits,\n    MatchFormats: MatchFormats,\n    PlotAxisFilters: PlotAxisFilters,\n    PlotView: PlotView,\n    Messages: Messages,\n    ForecastTypes: ForecastTypes,\n    ReservedWords: ReservedWords,\n    selectorsToHide: selectorsToHide,\n    MetaDataDBRecord: MetaDataDBRecord,\n    AppTypes: AppTypes,\n    DatabaseRoles: DatabaseRoles\n}\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/31/16.\n */\nimport { Mongo } from 'meteor/mongo';\nvar CurveParams = new Mongo.Collection(\"CurveParams\");\nvar Scatter2dParams = new Mongo.Collection(\"Scatter2dParams\");\nvar CurveTextPatterns = new Mongo.Collection(\"CurveTextPatterns\");\nvar ScatterAxisTextPattern = new Mongo.Collection(\"ScatterAxisTextPattern\");\nvar SavedCurveParams = new Mongo.Collection(\"SavedCurveParams\");\nvar PlotParams = new Mongo.Collection(\"PlotParams\");\nvar SavedPlotParams = new Mongo.Collection(\"SavedPlotParams\");\nvar PlotGraphFunctions = new Mongo.Collection(\"PlotGraphFunctions\");\nvar SavedPlotGraphFunctions = new Mongo.Collection(\"SavedPlotGraphFunctions\");\nvar RegionsPerModel = new Mongo.Collection(\"RegionsPerModel\");\nvar SitesPerModel = new Mongo.Collection(\"SitesPerModel\");\nvar RegionDescriptions = new Mongo.Collection(\"RegionDescriptions\");\nvar Models = new Mongo.Collection(\"Models\");\nvar Instruments = new Mongo.Collection(\"Instruments\");\nvar FcstLensPerModel = new Mongo.Collection(\"FcstLensPerModel\");\nvar CurveSettings = new Mongo.Collection(\"CurveSettings\");\nvar Settings = new Mongo.Collection(\"Settings\");\nvar ColorScheme = new Mongo.Collection(\"ColorScheme\");\nvar SentAddresses = new Mongo.Collection(\"SentAddresses\");\nvar Authorization = new Mongo.Collection(\"Authorization\");\nvar Roles = new Mongo.Collection(\"Roles\");\nvar SavedRoles = new Mongo.Collection(\"SavedRoles\");\nvar Databases = new Mongo.Collection(\"Databases\");\nvar SavedDatabases = new Mongo.Collection(\"SavedDatabases\");\nvar Credentials = new Mongo.Collection(\"Credentials\");\nvar SavedCredentials = new Mongo.Collection(\"SavedCredentials\");\nvar SiteMap = new Mongo.Collection(\"SiteMap\");\nvar StationMap = new Mongo.Collection(\"StationMap\");\nvar appName = new Mongo.Collection(\"appName\");\n\nexport default matsCollections = {\n    CurveParams:CurveParams,\n    Scatter2dParams:Scatter2dParams,\n    CurveTextPatterns:CurveTextPatterns,\n    ScatterAxisTextPattern:ScatterAxisTextPattern,\n    SavedCurveParams:SavedCurveParams,\n    PlotParams:PlotParams,\n    SavedPlotParams:SavedPlotParams,\n    PlotGraphFunctions:PlotGraphFunctions,\n    SavedPlotGraphFunctions:SavedPlotGraphFunctions,\n    RegionsPerModel:RegionsPerModel,\n    SitesPerModel:SitesPerModel,\n    RegionDescriptions:RegionDescriptions,\n    Models:Models,\n    Instruments:Instruments,\n    FcstLensPerModel:FcstLensPerModel,\n    CurveSettings:CurveSettings,\n    Settings:Settings,\n    ColorScheme:ColorScheme,\n    SentAddresses:SentAddresses,\n    Authorization:Authorization,\n    Roles:Roles,\n    SavedRoles:SavedRoles,\n    Databases:Databases,\n    SavedDatabases:SavedDatabases,\n    Credentials:Credentials,\n    SavedCredentials:SavedCredentials,\n    SiteMap:SiteMap,\n    StationMap:StationMap,\n    appName:appName\n};","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {Meteor} from \"meteor/meteor\";\nimport {ValidatedMethod} from 'meteor/mdg:validated-method';\nimport {SimpleSchema} from 'meteor/aldeed:simple-schema';\nimport {matsCache, matsCollections, matsDataQueryUtils, matsDataUtils, matsTypes} from 'meteor/randyp:mats-common';\nimport {mysql} from 'meteor/pcel:mysql';\nimport {url} from 'url';\nimport {Mongo} from 'meteor/mongo';\n\n// PRIVATE\n\n// local collection used to keep the table update times for refresh - won't ever be synchronized or persisted.\nconst metaDataTableUpdates = new Mongo.Collection(null);\nconst LayoutStoreCollection = new Mongo.Collection(\"LayoutStoreCollection\"); // initialize collection used for pop-out window functionality\nconst DownSampleResults = new Mongo.Collection(\"DownSampleResults\");\n\nvar MV_DIRS = {};\n// Define routes for server\nif (Meteor.isServer) {\n    if (Meteor.settings.private !== undefined && Meteor.settings.private !== null) {\n        const _MV_OUT = Meteor.settings.private.MV_OUTPUT;\n        const _MV_HOME = Meteor.settings.private.MV_HOME;\n        const _MV_LOGDIR = _MV_OUT + \"/xml/\";\n        const _MV_ERRDIR = _MV_OUT + \"/xml/\";\n        const _MV_DATADIR = _MV_OUT + \"/data/\";\n        const _MV_SQLDIR = _MV_OUT + \"/xml/\";  // sql output goes with the xml output\n        const _MV_XMLDIR = _MV_OUT + \"/xml/\";\n        const _MV_SCRIPTSDIR = _MV_OUT + \"/scripts/\";\n        const _MV_PLOTSSDIR = _MV_OUT + \"/plots/\";\n        process.env.JAVA_HOME = Meteor.settings.private.JAVA_HOME;\n        process.env.MV_HOME = Meteor.settings.private.MV_HOME;\n\n        MV_DIRS = {\n            LOGDIR: _MV_LOGDIR,\n            ERRDIR: _MV_ERRDIR,\n            DATADIR: _MV_DATADIR,\n            SQLDIR: _MV_SQLDIR,\n            XMLDIR: _MV_XMLDIR,\n            SCRIPTSDIR: _MV_SCRIPTSDIR,\n            PLOTSDIR: _MV_PLOTSSDIR,\n            HOME: _MV_HOME\n        };\n    }\n\n    // add indexes to result and axes collections\n    DownSampleResults.rawCollection().createIndex({\"createdAt\": 1}, {expireAfterSeconds: 3600 * 8}); // 8 hour expiration\n    LayoutStoreCollection.rawCollection().createIndex({\"createdAt\": 1}, {expireAfterSeconds: 900}); // 15 min expiration\n\n    // define some server side routes\n    Picker.route('/_getCSV/:key', function (params, req, res, next) {\n        Picker.middleware(_getCSV(params, req, res, next));\n    });\n\n    Picker.route('/CSV/:f/:key/:m/:a', function (params, req, res, next) {\n        Picker.middleware(_getCSV(params, req, res, next));\n    });\n\n    Picker.route('/:app/CSV/:f/:key/:m/:a', function (params, req, res, next) {\n        Picker.middleware(_getCSV(params, req, res, next));\n    });\n\n    Picker.route('/gsd/mats/:app/CSV/:f/:key/:m/:a', function (params, req, res, next) {\n        Picker.middleware(_getCSV(params, req, res, next));\n    });\n\n    Picker.route('/_getJSON/:key', function (params, req, res, next) {\n        Picker.middleware(_getJSON(params, req, res, next));\n    });\n\n    Picker.route('/JSON/:f/:key/:m/:a', function (params, req, res, next) {\n        Picker.middleware(_getJSON(params, req, res, next));\n    });\n\n    Picker.route('/:app/JSON/:f/:key/:m/:a', function (params, req, res, next) {\n        Picker.middleware(_getJSON(params, req, res, next));\n    });\n\n    Picker.route('/gsd/mats/:app/JSON/:f/:key/:m/:a', function (params, req, res, next) {\n        Picker.middleware(_getJSON(params, req, res, next));\n    });\n\n    Picker.route('/_clearCache', function (params, req, res, next) {\n        Picker.middleware(_clearCache(params, req, res, next));\n    });\n\n    Picker.route('/:app/_clearCache', function (params, req, res, next) {\n        Picker.middleware(_clearCache(params, req, res, next));\n    });\n\n    Picker.route('/gsd/mats/:app/_clearCache', function (params, req, res, next) {\n        Picker.middleware(_clearCache(params, req, res, next));\n    });\n\n    Picker.route('/refreshMetadata', function (params, req, res, next) {\n        Picker.middleware(_refreshMetadataMWltData(params, req, res, next));\n    });\n\n    Picker.route('/:app/refreshMetadata', function (params, req, res, next) {\n        Picker.middleware(_refreshMetadataMWltData(params, req, res, next));\n    });\n\n    Picker.route('/gsd/mats/:app/refreshMetadata', function (params, req, res, next) {\n        Picker.middleware(_refreshMetadataMWltData(params, req, res, next));\n    });\n\n// create picker routes for metviewer middleware static files\n    Picker.route('/:app/mvdata/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetData(params, req, res, next));\n    });\n    Picker.route('/gsd/mats/:app/mvdata/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetData(params, req, res, next));\n    });\n\n    Picker.route('/:app/mvpoints1/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetPoints1(params, req, res, next));\n    });\n    Picker.route('/gsd/mats/:app/mvpoints1/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetPoints1(params, req, res, next));\n    });\n\n    Picker.route('/:app/mvpoints2/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetPoints2(params, req, res, next));\n    });\n    Picker.route('/gsd/mats/:app/mvpoints2/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetPoints2(params, req, res, next));\n    });\n\n    Picker.route('/:app/mvxml/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetXml(params, req, res, next));\n    });\n    Picker.route('/gsd/mats/:app/mvxml/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetXml(params, req, res, next));\n    });\n\n    Picker.route('/:app/mvplot/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetPlot(params, req, res, next));\n    });\n    Picker.route('/gsd/mats/:app/mvplot/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetPlot(params, req, res, next));\n    });\n\n    Picker.route('/:app/mvscript/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetScript(params, req, res, next));\n    });\n    Picker.route('/gsd/mats/:app/mvscript/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetScript(params, req, res, next));\n    });\n\n    Picker.route('/:app/mvsql/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetSql(params, req, res, next));\n    });\n    Picker.route('/gsd/mats/:app/mvsql/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetSql(params, req, res, next));\n    });\n\n    Picker.route('/:app/mvlog/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetLog(params, req, res, next));\n    });\n    Picker.route('/gsd/mats/:app/mvlog/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetLog(params, req, res, next));\n    });\n\n    Picker.route('/:app/mverr/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetErr(params, req, res, next));\n    });\n    Picker.route('/gsd/mats/:app/mverr/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetErr(params, req, res, next));\n    });\n}\n\n// private - used to see if the main page needs to update its selectors\nconst _checkMetaDataRefresh = function () {\n    // This routine compares the current last modified time of the tables used for curveParameter metadata\n    // with the last update time to determine if an update is necessary. We really only do this for Curveparams\n    /*\n        metaDataTableUpdates:\n        {\n            name: dataBaseName,\n            tables: [tableName1, tableName2 ..],\n            lastRefreshed : timestamp\n        }\n     */\n    var refresh = false;\n    const tableUpdates = metaDataTableUpdates.find({}).fetch();\n    for (var tui = 0; tui < tableUpdates.length; tui++) {\n        var id = tableUpdates[tui]._id;\n        var poolName = tableUpdates[tui].pool;\n        var dbName = tableUpdates[tui].name;\n        var tableNames = tableUpdates[tui].tables;\n        var lastRefreshed = tableUpdates[tui]['lastRefreshed'];\n        var updatedEpoch = Number.MAX_VALUE;\n        for (var ti = 0; ti < tableNames.length; ti++) {\n            var tName = tableNames[ti];\n            var rows = matsDataQueryUtils.simplePoolQueryWrapSynchronous(global[poolName], \"SELECT UNIX_TIMESTAMP(UPDATE_TIME)\" +\n                \"    FROM   information_schema.tables\" +\n                \"    WHERE  TABLE_SCHEMA = '\" + dbName + \"'\" +\n                \"    AND TABLE_NAME = '\" + tName + \"'\");\n            for (var i = 0; i < rows.length; i++) {\n                try {\n                    updatedEpoch = rows[i]['UNIX_TIMESTAMP(UPDATE_TIME)'];\n                    break;\n                } catch (e) {\n                    throw new Error(\"_checkMetaDataRefresh - cannot find last update time for database: \" + dbName + \" and table: \" + tName + \" ERROR:\" + e.message);\n                }\n                if (updatedEpoch === Number.MAX_VALUE) {\n                    throw new Error(\"_checkMetaDataRefresh - cannot find last update time for database: \" + dbName + \" and table: \" + tName);\n                }\n            }\n            const lastRefreshedEpoch = moment(lastRefreshed).valueOf() / 1000;\n            if (lastRefreshedEpoch < updatedEpoch) {\n                refresh = true;\n                console.log(\"Refreshing the metadata in the app selectors because table \" + dbName + \".\" + tName + \" was updated at \" + moment.utc(updatedEpoch * 1000).format(\"YYYY-MM-DD HH:mm:ss\") + \" while the metadata was last refreshed at \" + moment.utc(lastRefreshedEpoch * 1000).format(\"YYYY-MM-DD HH:mm:ss\"));\n                break;\n            }\n        }\n        if (refresh === true) {\n            // refresh the app metadata\n            // app specific routines\n            //const asrKeys = Object.keys(appSpecificResetRoutines);\n            const asrKeys = appSpecificResetRoutines;\n            for (var ai = 0; ai < asrKeys.length; ai++) {\n                global.appSpecificResetRoutines[ai]();\n            }\n            // remember that we updated ALL the metadata tables just now\n            metaDataTableUpdates.update({_id: id}, {$set: {lastRefreshed: moment().format()}});\n        }\n    }\n    return true;\n};\n\n// private middleware for clearing the cache\nconst _clearCache = function (params, req, res, next) {\n    if (Meteor.isServer) {\n        matsCache.clear();\n        res.end();\n    }\n};\n\n// private middleware for _getCSV route\nconst _getCSV = function (params, req, res, next) {\n    if (Meteor.isServer) {\n        var stringify = require('csv-stringify');\n        var csv = \"\";\n        try {\n            var result = _getFlattenedResultData(params.key, 0, -1000);\n            var statArray = Object.values(result.stats);\n            var dataArray = Object.values(result.data);\n            var statResultArray = [];\n            var dataResultArray = [];\n            for (var si = 0; si < statArray.length; si++) {\n                statResultArray.push(Object.keys(statArray[si])); // push the stat header for this curve(keys)\n                statResultArray.push(statArray[si]['n'] === 0 ? [statArray[si].label] : Object.values(statArray[si])); // push the stats for this curve\n            }\n\n            for (var di = 0; di < dataArray.length; di++) {\n                var dataSubArray = Object.values(dataArray[di]);\n                var dataHeader = dataSubArray[0] === undefined ? statArray[di].label : Object.keys(dataSubArray[0]);\n                //dataHeader[0] = 'label';\n                dataHeader[0] = dataSubArray[0] === undefined ? \"NO DATA\" : Object.keys(dataSubArray[0]).filter(key => key.indexOf('Curve') != -1)[0];\n                dataResultArray.push(dataHeader); // push this curve data header (keys)\n                if (dataSubArray[0] === undefined) {\n                    continue;\n                }\n                for (var dsi = 0; dsi < dataSubArray.length; dsi++) {  // push this curves data\n                    dataResultArray.push(Object.values(dataSubArray[dsi]));\n                }\n            }\n            var fileName = \"matsplot-\" + moment.utc().format('YYYYMMDD-HH.mm.ss') + \".csv\";\n            res.setHeader('Content-disposition', 'attachment; filename=' + fileName);\n            res.setHeader('Content-Type', 'attachment.ContentType');\n            stringify(statResultArray, {header: true}, function (err, output) {\n                if (err) {\n                    console.log(\"error in _getCSV:\", err);\n                    res.write(\"error,\" + err.toLocaleString());\n                    res.end();\n                    return;\n                }\n                res.write(output);\n                stringify(dataResultArray, {header: true}, function (err, output) {\n                    if (err) {\n                        console.log(\"error in _getCSV:\", err);\n                        res.write(\"error,\" + err.toLocaleString());\n                        res.end();\n                        return;\n                    }\n                    res.write(output);\n                    res.end();\n                });\n                delete result;\n                delete statResultArray;\n                delete dataResultArray;\n            });\n        } catch (e) {\n            console.log('error retrieving data: ', e);\n            csv = \"error,\" + e.toLocaleString();\n            res.setHeader('Content-disposition', 'attachment; filename=matsplot.csv');\n            res.setHeader('Content-Type', 'attachment.ContentType');\n            res.end(csv);\n        }\n    }\n};\n\n// private middleware for _getJSON route\nconst _getJSON = function (params, req, res, next) {\n    if (Meteor.isServer) {\n        var flatJSON = \"\";\n        try {\n            var result = _getPagenatedData(params.key, 0, -1000);\n            flatJSON = JSON.stringify(result);\n        } catch (e) {\n            console.log('error retrieving data: ', e);\n            flatJSON = JSON.stringify({error: e});\n            delete flatJSON.dsiRealPageIndex;\n            delete flatJSON.dsiTextDirection;\n        }\n        res.setHeader('Content-Type', 'application/json');\n        res.write(flatJSON);\n        res.end();\n        delete flatJSON;\n        delete result;\n    }\n};\n\n// private method for getting pagenated results and flattening them in order to be appropriate for text display.\nconst _getFlattenedResultData = function (rk, p, np) {\n    if (Meteor.isServer) {\n        var resp;\n        try {\n            var r = rk;\n            var p = p;\n            var np = np;\n            // get the pagenated data\n            var result = _getPagenatedData(r, p, np);\n            // find the type\n            var plotTypes = result.basis.plotParams.plotTypes;\n            var plotType = (_.invert(plotTypes))[true];\n            // extract data\n            var data = result.data;\n            var dsiRealPageIndex = result.dsiRealPageIndex;\n            var dsiTextDirection = result.dsiTextDirection;\n            switch (plotType) {\n                case matsTypes.PlotTypes.timeSeries:\n                case matsTypes.PlotTypes.dailyModelCycle:\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of maps\n                    /*\n                    returnData is\n                    {\n                        stats: {\n                                    curve0: {label:someLabel, mean:someMean,sd:someSd....}\n                                    curve1: {label:someLabel, mean:someMean,sd:someSd....}\n                                    ...\n                                }\n                        data: {\n                                    curve0: [\n                                                {time:someTime, stat: someStat, sd: someSd,....},\n                                                {time:someTime, stat: someStat, sd: someSd,....},\n                                                ....\n                                            ],\n                                    curve1: [\n                                                {time:someTime, stat: someStat, sd: someSd,....},\n                                                {time:someTime, stat: someStat, sd: someSd,....},\n                                                ....\n                                            ],\n                                            ...\n                              }\n                    }\n                     */\n                    for (var ci = 0; ci < data.length; ci++) { // for each curve\n                        // if the curve label is a reserved word do not process the curve (its a zero or max curve)\n                        var reservedWords = Object.values(matsTypes.ReservedWords);\n                        if (reservedWords.indexOf(data[ci].label) >= 0) {\n                            continue; // don't process the zero or max curves\n                        }\n                        var stats = {};\n                        stats['label'] = data[ci].label;\n                        stats['mean'] = data[ci].glob_stats.d_mean;\n                        stats['standard deviation'] = data[ci].glob_stats.sd;\n                        stats['n'] = data[ci].glob_stats.n_good;\n                        stats['standard error'] = data[ci].glob_stats.stde_betsy;\n                        stats['lag1'] = data[ci].glob_stats.lag1;\n                        stats['minimum'] = data[ci].glob_stats.minVal;\n                        stats['maximum'] = data[ci].glob_stats.maxVal;\n                        returnData.stats[data[ci].label] = stats;\n\n                        var curveData = [];  // map of maps\n                        for (var cdi = 0; cdi < data[ci].x.length; cdi++) { //for each datapoint\n                            var curveDataElement = {};\n                            curveDataElement[data[ci].label + ' time'] = data[ci].x[cdi];\n                            curveDataElement['raw stat from query'] = data[ci].stats[cdi].raw_stat;\n                            curveDataElement['plotted stat'] = data[ci].y[cdi];\n                            curveDataElement['std dev'] = data[ci].stats[cdi].sd;\n                            curveDataElement['std error'] = data[ci].stats[cdi].stde_betsy;\n                            curveDataElement['lag1'] = data[ci].stats[cdi].lag1;\n                            curveDataElement['n'] = data[ci].stats[cdi].n_good;\n                            curveData.push(curveDataElement);\n                        }\n                        returnData.data[data[ci].label] = curveData;\n                    }\n                    break;\n                case matsTypes.PlotTypes.profile:\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of map\n                    for (var ci = 0; ci < data.length; ci++) {  // for each curve\n                        var reservedWords = Object.values(matsTypes.ReservedWords);\n                        if (reservedWords.indexOf(data[ci].label) >= 0) {\n                            continue; // don't process the zero or max curves\n                        }\n                        var stats = {};\n                        stats['label'] = data[ci].label;\n                        stats['mean'] = data[ci].glob_stats.d_mean;\n                        stats['standard deviation'] = data[ci].glob_stats.sd;\n                        stats['n'] = data[ci].glob_stats.n_good;\n                        stats['standard error'] = data[ci].glob_stats.stde_betsy;\n                        stats['lag1'] = data[ci].glob_stats.lag1;\n                        stats['minimum'] = data[ci].glob_stats.minVal;\n                        stats['maximum'] = data[ci].glob_stats.maxVal;\n                        returnData.stats[data[ci].label] = stats;\n\n                        var cdata = data[ci].data;\n                        var curveData = [];  // array of maps\n                        for (var cdi = 0; cdi < data[ci].x.length; cdi++) {  // for each datapoint\n                            var curveDataElement = {};\n                            curveDataElement[data[ci].label + ' level'] = data[ci].y[cdi];\n                            curveDataElement['raw stat from query'] = data[ci].stats[cdi].raw_stat;\n                            curveDataElement['plotted stat'] = data[ci].x[cdi];\n                            curveDataElement['std dev'] = data[ci].stats[cdi].sd;\n                            curveDataElement['std error'] = data[ci].stats[cdi].stde_betsy;\n                            curveDataElement['lag1'] = data[ci].stats[cdi].lag1;\n                            curveDataElement['n'] = data[ci].stats[cdi].n_good;\n                            curveData.push(curveDataElement);\n                        }\n                        returnData.data[data[ci].label] = curveData;\n                    }\n                    break;\n                case matsTypes.PlotTypes.dieoff:\n                case matsTypes.PlotTypes.threshold:\n                case matsTypes.PlotTypes.validtime:\n                    var labelSuffix;\n                    switch (plotType) {\n                        case matsTypes.PlotTypes.dieoff:\n                            labelSuffix = \" forecast lead time\";\n                            break;\n                        case matsTypes.PlotTypes.validtime:\n                            labelSuffix = \" hour of day\";\n                            break;\n                        case matsTypes.PlotTypes.threshold:\n                            labelSuffix = \" threshold (in)\";\n                            break;\n                    }\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of maps\n\n                    for (var ci = 0; ci < data.length; ci++) {  // for each curve\n                        var reservedWords = Object.values(matsTypes.ReservedWords);\n                        if (reservedWords.indexOf(data[ci].label) >= 0) {\n                            continue; // don't process the zero or max curves\n                        }\n                        var stats = {};\n                        stats['label'] = data[ci].label;\n                        stats['mean'] = data[ci].glob_stats.d_mean;\n                        stats['standard deviation'] = data[ci].glob_stats.sd;\n                        stats['n'] = data[ci].glob_stats.n_good;\n                        stats['minimum'] = data[ci].glob_stats.minVal;\n                        stats['maximum'] = data[ci].glob_stats.maxVal;\n                        returnData.stats[data[ci].label] = stats;\n\n                        var curveData = [];  // map of maps\n                        for (var cdi = 0; cdi < data[ci].x.length; cdi++) {  // for each datapoint\n                            var curveDataElement = {};\n                            curveDataElement[data[ci].label + labelSuffix] = data[ci].x[cdi];\n                            curveDataElement['raw stat from query'] = data[ci].stats[cdi].raw_stat;\n                            curveDataElement['plotted stat'] = data[ci].y[cdi];\n                            curveDataElement['std dev'] = data[ci].stats[cdi].sd;\n                            curveDataElement['n'] = data[ci].stats[cdi].n_good;\n                            curveData.push(curveDataElement);\n                        }\n                        returnData.data[data[ci].label] = curveData;\n                    }\n                    break;\n                case matsTypes.PlotTypes.reliability:\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of map\n                    for (var ci = 0; ci < data.length; ci++) {  // for each curve\n                        var reservedWords = Object.values(matsTypes.ReservedWords);\n                        if (reservedWords.indexOf(data[ci].label) >= 0) {\n                            continue; // don't process the zero or max curves\n                        }\n                        var stats = {};\n                        stats['label'] = data[ci].label;\n                        stats['sample climo'] = data[ci].glob_stats.sample_climo;\n                        returnData.stats[data[ci].label] = stats;\n\n                        var cdata = data[ci].data;\n                        var curveData = [];  // array of maps\n                        for (var cdi = 0; cdi < data[ci].y.length; cdi++) {  // for each datapoint\n                            var curveDataElement = {};\n                            curveDataElement[data[ci].label + ' probability bin'] = data[ci].stats[cdi].prob_bin;\n                            curveDataElement['hit rate'] = data[ci].stats[cdi].hit_rate;\n                            curveDataElement['oy'] = data[ci].stats[cdi].obs_y;\n                            curveDataElement['on'] = data[ci].stats[cdi].obs_n;\n                            curveData.push(curveDataElement);\n                        }\n                        returnData.data[data[ci].label] = curveData;\n                    }\n                    break;\n                case matsTypes.PlotTypes.map:\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of maps\n\n                    var stats = {};\n                    stats['label'] = data[0].label;\n                    stats['total number of obs'] = data[0].stats.reduce(function (prev, curr) {\n                        return prev + curr.N_times;\n                    }, 0);\n                    stats['mean difference'] = matsDataUtils.average(data[0].queryVal);\n                    stats['standard deviation'] = matsDataUtils.stdev(data[0].queryVal);\n                    stats['minimum time'] = data[0].stats.reduce(function (prev, curr) {\n                        return (prev < curr.min_time ? prev : curr.min_time);\n                    });\n                    stats['minimum time'] = moment.utc(stats['minimum time'] * 1000).format('YYYY-MM-DD HH:mm');\n                    stats['maximum time'] = data[0].stats.reduce(function (prev, curr) {\n                        return (prev > curr.max_time ? prev : curr.max_time);\n                    });\n                    stats['maximum time'] = moment.utc(stats['maximum time'] * 1000).format('YYYY-MM-DD HH:mm');\n\n                    returnData.stats[data[0].label] = stats;\n\n                    var curveData = [];  // map of maps\n                    for (var si = 0; si < data[0].siteName.length; si++) {\n                        var curveDataElement = {};\n                        curveDataElement['Site Name'] = data[0].siteName[si];\n                        curveDataElement['Number of Times'] = data[0].stats[si].N_times;\n                        curveDataElement['Start Date'] = moment.utc((data[0].stats[si].min_time) * 1000).format('YYYY-MM-DD HH:mm');\n                        curveDataElement['End Date'] = moment.utc((data[0].stats[si].max_time) * 1000).format('YYYY-MM-DD HH:mm');\n                        curveDataElement['Average Difference'] = data[0].queryVal[si];\n                        curveData.push(curveDataElement);\n                    }\n                    returnData.data[data[0].label] = curveData;\n                    break;\n                case matsTypes.PlotTypes.histogram:\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of maps\n\n                    for (var ci = 0; ci < data.length; ci++) { // for each curve\n                        var reservedWords = Object.values(matsTypes.ReservedWords);\n                        if (reservedWords.indexOf(data[ci].label) >= 0) {\n                            continue; // don't process the zero or max curves\n                        }\n                        var stats = {};\n                        stats['label'] = data[ci].label;\n                        stats['mean'] = data[ci].glob_stats.glob_mean;\n                        stats['standard deviation'] = data[ci].glob_stats.glob_sd;\n                        stats['n'] = data[ci].glob_stats.glob_n;\n                        stats['minimum'] = data[ci].glob_stats.glob_min;\n                        stats['maximum'] = data[ci].glob_stats.glob_max;\n                        returnData.stats[data[ci].label] = stats;\n\n                        var curveData = [];  // map of maps\n                        for (var cdi = 0; cdi < data[ci].x.length; cdi++) {   // for each datapoint\n                            var curveDataElement = {};\n                            curveDataElement[data[ci].label + ' bin range'] = data[ci].bin_stats[cdi]['binLabel'];\n                            curveDataElement['n'] = data[ci].bin_stats[cdi].bin_n;\n                            curveDataElement['bin rel freq'] = data[ci].bin_stats[cdi].bin_rf;\n                            curveDataElement['bin lower bound'] = data[ci].bin_stats[cdi].binLowBound;\n                            curveDataElement['bin upper bound'] = data[ci].bin_stats[cdi].binUpBound;\n                            curveDataElement['bin mean'] = data[ci].bin_stats[cdi].bin_mean;\n                            curveDataElement['bin std dev'] = data[ci].bin_stats[cdi].bin_sd;\n                            curveData.push(curveDataElement);\n                        }\n                        returnData.data[data[ci].label] = curveData;\n                    }\n                    break;\n                case matsTypes.PlotTypes.contour:\n                case matsTypes.PlotTypes.contourDiff:\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of maps\n                    var stats = {};\n                    stats['label'] = data[0].label;\n                    stats['total number of points'] = data[0].glob_stats.n;\n                    stats['mean stat'] = data[0].glob_stats.mean;\n                    stats['minimum time'] = data[0].glob_stats.minDate;\n                    stats['minimum time'] = moment.utc(stats['minimum time'] * 1000).format('YYYY-MM-DD HH:mm');\n                    stats['maximum time'] = data[0].glob_stats.maxDate;\n                    stats['maximum time'] = moment.utc(stats['maximum time'] * 1000).format('YYYY-MM-DD HH:mm');\n\n                    returnData.stats[data[0].label] = stats;\n\n                    var curveData = [];  // map of maps\n                    for (var si = 0; si < data[0].xTextOutput.length; si++) {\n                        var curveDataElement = {};\n                        curveDataElement['xVal'] = data[0].xTextOutput[si];\n                        curveDataElement['yVal'] = data[0].yTextOutput[si];\n                        curveDataElement['stat'] = data[0].zTextOutput[si];\n                        curveDataElement['N'] = data[0].nTextOutput[si];\n                        curveDataElement['Start Date'] = moment.utc((data[0].minDateTextOutput[si]) * 1000).format('YYYY-MM-DD HH:mm');\n                        curveDataElement['End Date'] = moment.utc((data[0].maxDateTextOutput[si]) * 1000).format('YYYY-MM-DD HH:mm');\n                        curveData.push(curveDataElement);\n                    }\n                    returnData.data[data[0].label] = curveData;\n                    break;\n                case matsTypes.PlotTypes.scatter2d:\n                    var returnData = {}; // returns a map of arrays of maps\n                    /*\n                    returnData = {\n                                    curve0: [\n                                                {\n                                                xval: number,\n                                                yval: number,\n                                                bestfit: number || none\n                                                },\n                                                {\n                                                xval: number,\n                                                yval: number,\n                                                bestfit: number || none\n                                                },\n                                               .....\n                                            ],\n                                     curve1: [\n                                                {\n                                                xval: number,\n                                                yval: number,\n                                                bestfit: number || none\n                                                },\n                                                {\n                                                xval: number,\n                                                yval: number,\n                                                bestfit: number || none\n                                                },\n                                               .....\n                                            ],\n                                            ....\n                                }\n                     */\n                    var firstBestFitIndex = -1;\n                    var bestFitIndexes = {};\n                    for (var ci = 0; ci < data.length; ci++) {\n                        if (ci == firstBestFitIndex) {\n                            break; // best fit curves are at the end so do not do further processing\n                        }\n                        var curveData = data[ci];\n                        // look for a best fit curve - only have to look at curves with higher index than this one\n                        var bestFitIndex = -1;\n                        for (var cbi = ci + 1; cbi < data.length; cbi++) {\n                            if (((data[cbi].label).indexOf(curveData.label) !== -1) && ((data[cbi].label).indexOf(\"-best fit\") != -1)) {\n                                bestFitIndexes[ci] = cbi;\n                                if (firstBestFitIndex == -1) {\n                                    firstBestFitIndex = cbi;\n                                }\n                                break;\n                            }\n                        }\n                        var curveTextData = [];\n                        for (var cdi = 0; cdi < curveData.data.length; cdi++) {\n                            var element = {};\n                            element['xAxis'] = curveData.data[cdi][0];\n                            element['yAxis'] = curveData.data[cdi][1];\n                            if (bestFitIndexes[ci] === undefined) {\n                                element['best fit'] = \"none;\"\n                            } else {\n                                element['best fit'] = data[bestFitIndexes[ci]].data[cdi][1];\n                            }\n                            curveTextData.push(element);\n                        }\n                        returnData[curveData.label] = curveTextData;\n                    }\n                    break;\n                default:\n                    return undefined;\n            }\n            returnData.dsiRealPageIndex = dsiRealPageIndex;\n            returnData.dsiTextDirection = dsiTextDirection;\n            return returnData;\n        } catch (error) {\n           throw new Meteor.Error(\"Error in _getFlattenedResultData function: \" + error.message);\n        }\n    }\n};\n\n// private method for getting pagenated data\n// a newPageIndex of -1000 means get all the data (used for export)\n// a newPageIndex of -2000 means get just the last page\nconst _getPagenatedData = function (rky, p, np) {\n    if (Meteor.isServer) {\n        var key = rky;\n        var myPageIndex = p;\n        var newPageIndex = np;\n        var ret;\n        var rawReturn;\n\n        try {\n            var result = matsCache.getResult(key);\n            rawReturn = result === undefined ? undefined : result.result; // getResult structure is {key:something, result:resultObject}\n        } catch (e) {\n            console.log(\"_getPagenatedData: Error - \", e);\n            return undefined;\n        }\n        ret = rawReturn === undefined ? undefined : JSON.parse(JSON.stringify(rawReturn));\n        var start;\n        var end;\n        var direction = 1;\n        if (newPageIndex === -1000) {\n            // all the data\n            start = 0;\n            end = Number.MAX_VALUE;\n        } else if (newPageIndex === -2000) {\n            // just the last page\n            start = -2000;\n            direction = -1;\n        } else if (myPageIndex <= newPageIndex) {\n            // proceed forward\n            start = (newPageIndex - 1) * 100;\n            end = newPageIndex * 100;\n        } else {\n            // move back\n            direction = -1;\n            start = newPageIndex * 100;\n            end = (newPageIndex + 1) * 100;\n        }\n\n        var dsiStart;\n        var dsiEnd;\n        for (var csi = 0; csi < ret.data.length; csi++) {\n            if (ret.data[csi].x == null || ret.data[csi].x.length <= 100) {\n                continue; // don't bother pagenating datasets less than or equal to a page - ret is rawReturn\n            }\n            dsiStart = start;\n            dsiEnd = end;\n            if (dsiStart > ret.data[csi].x.length || dsiStart === -2000) {\n                // show the last page if we either requested it specifically or are trying to navigate past it\n                dsiStart = Math.floor(rawReturn.data[csi].x.length / 100) * 100;\n                dsiEnd = rawReturn.data[csi].x.length;\n                if (dsiEnd === dsiStart) {\n                    // make sure the last page isn't empty--if rawReturn.data[csi].data.length/100 produces a whole number,\n                    // dsiStart and dsiEnd would be the same. This makes sure that the last full page is indeed the last page, without a phantom empty page afterwards\n                    dsiStart = dsiEnd - 100;\n                }\n            }\n            if (dsiStart < 0) {\n                // show the first page if we are trying to navigate before it\n                dsiStart = 0;\n                dsiEnd = 100;\n            }\n            if (dsiEnd < dsiStart) {\n                // make sure that the end is after the start\n                dsiEnd = dsiStart + 100;\n            }\n            if (dsiEnd > ret.data[csi].x.length) {\n                // make sure we don't request past the end -- if results are one page, this should convert the\n                // start and end from 0 and 100 to 0 and whatever the end is.\n                dsiEnd = ret.data[csi].x.length;\n            }\n            ret.data[csi].x = rawReturn.data[csi].x.slice(dsiStart, dsiEnd);\n            ret.data[csi].y = rawReturn.data[csi].y.slice(dsiStart, dsiEnd);\n            ret.data[csi].stats = rawReturn.data[csi].stats.slice(dsiStart, dsiEnd);\n            ret.data[csi].glob_stats = rawReturn.data[csi].glob_stats;\n        }\n\n        delete rawReturn;\n        if (direction === 1) {\n            ret.dsiRealPageIndex = Math.floor(dsiEnd / 100);\n        } else {\n            ret.dsiRealPageIndex = Math.floor(dsiStart / 100);\n        }\n        ret.dsiTextDirection = direction;\n        return ret;\n    }\n};\n\n//private middleware for getting metviewer data file\nconst _mvGetData = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.DATADIR;\n    const baseName = params.key + \".data\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain')\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting data file :\" + baseName);\n        res.end();\n    }\n}\n\n//private middleware for getting metviewer points1 file\nconst _mvGetPoints1 = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.DATADIR;\n    const baseName = params.key + \".points1\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain')\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting data file :\" + baseName);\n        res.end();\n    }\n}\n\n\n//private middleware for getting metviewer points1 file\nconst _mvGetPoints2 = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.DATADIR;\n    const baseName = params.key + \".points2\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain')\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting data file :\" + baseName);\n        res.end();\n    }\n}\n\n//private middleware for getting metviewer xml file\nconst _mvGetXml = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.XMLDIR;\n    const baseName = params.key + \".xml\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain');\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting xml file :\" + baseName);\n        res.end();\n    }\n}\n//private middleware for getting metviewer plot file\nconst _mvGetPlot = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.PLOTSDIR;\n    const baseName = params.key + \".png\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'image/png');\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'application/txt');\n        res.write(\"Error Error getting plot file :\" + baseName);\n        res.end();\n    }\n}\n//private middleware for getting metviewer script file\nconst _mvGetScript = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.SCRIPTSDIR;\n    const baseName = params.key + \".R\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain');\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting script file :\" + baseName);\n        res.end();\n    }}\n//private middleware for getting metviewer sql file\nconst _mvGetSql = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.SQLDIR;\n    const baseName = params.key + \".sql\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/sql');\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting sql file :\" + baseName);\n        res.end();\n    }\n}\n//private middleware for getting metviewer log file\nconst _mvGetLog = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.LOGDIR;\n    const baseName = params.key + \".log\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain');\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting log file :\" + baseName);\n        res.end();\n    }\n}\n//private middleware for getting metviewer err file\nconst _mvGetErr = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.ERRDIR;\n    const baseName = params.key + \".err\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain');\n            if (err) {\n                res.setHeader('Content-Type', 'text/plain');\n                res.write(\"Error Error getting err file :\" + baseName);\n                res.end();\n            } else {\n                res.end(data); // Send the file data to the browser.\n            }\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting plot file :\" + baseName);\n        res.end();\n    }\n}\n\n\n// private define a middleware for clearing the cache\nconst _refreshMetadataMWltData = function (params, req, res, next) {\n    if (Meteor.isServer) {\n        _checkMetaDataRefresh();\n        res.end();\n    }\n};\n\n// private save the result from the query into mongo and downsample if that result's size is greater than 1Mb\nconst _saveResultData = function (result) {\n    if (Meteor.isServer) {\n        var sizeof = require('object-sizeof');\n        var hash = require('object-hash');\n        var key = hash(result.basis.plotParams);\n        var threshold = 1000000;\n        var ret = {};\n        try {\n            var dSize = sizeof(result.data);\n            //console.log(\"result.basis.data size is \", dSize);\n            // TimeSeries and DailyModelCycle are the only plot types that require downSampling\n            if (dSize > threshold && (result.basis.plotParams.plotTypes.TimeSeries || result.basis.plotParams.plotTypes.DailyModelCycle)) {\n                // greater than threshold need to downsample\n                // downsample and save it in DownSampleResult\n                console.log(\"DownSampling\");\n                var downsampler = require(\"downsample-lttb\");\n                var totalPoints = 0;\n                for (var di = 0; di < result.data.length; di++) {\n                    totalPoints += result.data[di].x_epoch.length;\n                }\n                var allowedNumberOfPoints = (threshold / dSize) * totalPoints;\n                var downSampleResult = result === undefined ? undefined : JSON.parse(JSON.stringify(result));\n                for (var ci = 0; ci < result.data.length; ci++) {\n                    var dsData = {};\n                    var xyDataset = result.data[ci].x_epoch.map(function (d, index) {\n                        return [result.data[ci].x_epoch[index], result.data[ci].y[index]];\n                    });\n                    var ratioTotalPoints = xyDataset.length / totalPoints;\n                    var myAllowedPoints = Math.round(ratioTotalPoints * allowedNumberOfPoints);\n                    // downsample the array\n                    var downsampledSeries;\n                    if (myAllowedPoints < xyDataset.length && xyDataset.length > 2) {\n                        downsampledSeries = downsampler.processData(xyDataset, myAllowedPoints);\n                        // replace the y attributes (tooltips etc.) with the y attributes from the nearest x\n                        var originalIndex = 0;\n                        // skip through the original dataset capturing each downSampled data point\n                        var arrayKeys = [];\n                        var nonArrayKeys = [];\n                        var keys = Object.keys(result.data[ci]);\n                        for (var ki = 0; ki < keys.length; ki++) {\n                            if (keys[ki] !== 'x_epoch') {\n                                if (Array.isArray(result.data[ci][keys[ki]])) {\n                                    arrayKeys.push(keys[ki]);\n                                    dsData[keys[ki]] = [];\n                                } else {\n                                    nonArrayKeys.push(keys[ki]);\n                                }\n                            }\n                        }\n                        // We only ever downsample series plots - never profiles and series plots only ever have error_y arrays.\n                        // This is a little hacky but what is happening is we putting error_y.array on the arrayKeys list so that it gets its\n                        // downsampled equivalent values.\n                        for (ki = 0; ki < nonArrayKeys.length; ki++) {\n                            dsData[nonArrayKeys[ki]] = result.data[ci][nonArrayKeys[ki]];\n                        }\n                        // remove the original error_y array data.\n                        dsData['error_y'].array = [];\n                        for (var dsi = 0; dsi < downsampledSeries.length; dsi++) {\n                            while (originalIndex < result.data[ci].x_epoch.length && (result.data[ci].x_epoch[originalIndex] < downsampledSeries[dsi][0])) {\n                                originalIndex++;\n                            }\n                            // capture the stuff related to this downSampled data point (downSampled data points are always a subset of original data points)\n                            for (ki = 0; ki < arrayKeys.length; ki++) {\n                                dsData[arrayKeys[ki]][dsi] = result.data[ci][arrayKeys[ki]][originalIndex];\n                            }\n                            dsData['error_y']['array'][dsi] = result.data[ci]['error_y']['array'][originalIndex];\n                        }\n                        // add downsampled annotation to curve options\n                        downSampleResult[ci] = dsData;\n                        downSampleResult[ci].annotation += \"   **DOWNSAMPLED**\";\n                    } else {\n                        downSampleResult[ci] = result.data[ci];\n                    }\n                    downSampleResult.data[ci] = downSampleResult[ci];\n                }\n                DownSampleResults.rawCollection().insert({\"createdAt\": new Date(), key: key, result: downSampleResult});// createdAt ensures expiration set in mats-collections\n                ret = {key: key, result: downSampleResult};\n            } else {\n                ret = {key: key, result: result};\n            }\n            // save original dataset in the matsCache\n            if (result.basis.plotParams.plotTypes.TimeSeries || result.basis.plotParams.plotTypes.DailyModelCycle) {\n                for (var ci = 0; ci < result.data.length; ci++) {\n                    delete (result.data[ci]['x_epoch']);     // we only needed this as an index for downsampling\n                }\n            }\n            matsCache.storeResult(key, {key: key, result: result}); // lifespan is handled by lowDb (internally) in matscache\n        } catch (error) {\n            if (error.toLocaleString().indexOf(\"larger than the maximum size\") != -1) {\n                throw new Meteor.Error(+\": Requesting too much data... try averaging\");\n            }\n        }\n        return ret;\n    }\n};\n\n// PUBLIC METHODS\n//administration tools\nconst addSentAddress = new ValidatedMethod({\n    name: 'matsMethods.addSentAddress',\n    validate: new SimpleSchema({\n        toAddress: {type: String}\n    }).validator(),\n    run(toAddress) {\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(401, \"not-logged-in\");\n        }\n        matsCollections.SentAddresses.upsert({address: toAddress}, {address: toAddress, userId: Meteor.userId()});\n        return false;\n    }\n});\n\n\n//  administation tool\nconst applyAuthorization = new ValidatedMethod({\n    name: 'matsMethods.applyAuthorization',\n    validate: new SimpleSchema({\n        settings: {type: Object, blackbox: true}\n    }).validator(),\n    run(settings) {\n        if (Meteor.isServer) {\n            var roles;\n            var roleName;\n            var authorization;\n\n            var userRoleName = settings.userRoleName;\n            var userRoleDescription = settings.userRoleDescription;\n            var authorizationRole = settings.authorizationRole;\n            var newUserEmail = settings.newUserEmail;\n            var existingUserEmail = settings.existingUserEmail;\n\n            if (authorizationRole) {\n                // existing role - the role roleName - no need to verify as the selection list came from the database\n                roleName = authorizationRole;\n            } else if (userRoleName && userRoleDescription) {\n                // possible new role - see if it happens to already exist\n                var role = matsCollections.Roles.findOne({name: userRoleName});\n                if (role === undefined) {\n                    // need to add new role using description\n                    matsCollections.Roles.upsert({name: userRoleName}, {$set: {description: userRoleDescription}});\n                    roleName = userRoleName;\n                } else {\n                    // see if the description matches...\n                    roleName = role.name;\n                    var description = role.description;\n                    if (description != userRoleDescription) {\n                        // have to update the description\n                        matsCollections.Roles.upsert({name: userRoleName}, {$set: {description: userRoleDescription}});\n                    }\n                }\n            }\n            // now we have a role roleName - now we need an email\n            if (existingUserEmail) {\n                // existing user -  no need to verify as the selection list came from the database\n                // see if it already has the role\n                authorization = matsCollections.Authorization.findOne({email: existingUserEmail});\n                roles = authorization.roles;\n                if (roles.indexOf(roleName) == -1) {\n                    // have to add the role\n                    if (roleName) {\n                        roles.push(roleName);\n                    }\n                    matsCollections.Authorization.upsert({email: existingUserEmail}, {$set: {roles: roles}});\n                }\n            } else if (newUserEmail) {\n                // possible new authorization - see if it happens to exist\n                authorization = matsCollections.Authorization.findOne({email: newUserEmail});\n                if (authorization !== undefined) {\n                    // authorization exists - add role to roles if necessary\n                    roles = authorization.roles;\n                    if (roles.indexOf(roleName) == -1) {\n                        // have to add the role\n                        if (roleName) {\n                            roles.push(roleName);\n                        }\n                        matsCollections.Authorization.upsert({email: existingUserEmail}, {$set: {roles: roles}});\n                    }\n                } else {\n                    // need a new authorization\n                    roles = [];\n                    if (roleName) {\n                        roles.push(roleName);\n                    }\n                    if (newUserEmail) {\n                        matsCollections.Authorization.upsert({email: newUserEmail}, {$set: {roles: roles}});\n                    }\n                }\n            }\n            return false;\n        }\n    }\n});\n\n// database controls\nconst applyDatabaseSettings = new ValidatedMethod({\n    name: 'matsMethods.applyDatabaseSettings',\n    validate: new SimpleSchema({\n        settings: {type: Object, blackbox: true}\n    }).validator(),\n\n    run(settings) {\n        if (Meteor.isServer) {\n            if (settings.name) {\n                matsCollections.Databases.upsert({name: settings.name}, {\n                    $set: {\n                        name: settings.name,\n                        role: settings.role,\n                        status: settings.status,\n                        host: settings.host,\n                        database: settings.database,\n                        user: settings.user,\n                        password: settings.password\n                    }\n                });\n            }\n            return false;\n        }\n    }\n});\n\n\n//administration tools\nconst deleteSettings = new ValidatedMethod({\n    name: 'matsMethods.deleteSettings',\n    validate: new SimpleSchema({\n        name: {\n            type: String\n        }\n    }).validator(),\n    run(params) {\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(\"not-logged-in\");\n        }\n        if (Meteor.isServer) {\n            matsCollections.CurveSettings.remove({name: params.name});\n        }\n    }\n});\n\n//administration tools\nconst emailImage = new ValidatedMethod({\n    name: 'matsMethods.emailImage',\n    validate: new SimpleSchema({\n        imageStr: {type: String},\n        toAddress: {type: String},\n        subject: {type: String}\n    }).validator(),\n    run(params) {\n        var imageStr = params.imageStr;\n        var toAddress = params.toAddress;\n        var subject = params.subject;\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(401, \"not-logged-in\");\n        }\n        var fromAddress = Meteor.user().services.google.email;\n        // these come from google - see\n        // http://masashi-k.blogspot.fr/2013/06/sending-mail-with-gmail-using-xoauth2.html\n        //http://stackoverflow.com/questions/24098461/nodemailer-gmail-what-exactly-is-a-refresh-token-and-how-do-i-get-one/24123550\n\n        // the gmail account for the credentials is mats.mail.daemon@gmail.com - pwd mats2015!\n        //var clientId = \"339389735380-382sf11aicmgdgn7e72p4end5gnm9sad.apps.googleusercontent.com\";\n        //var clientSecret = \"7CfNN-tRl5QAL595JTW2TkRl\";\n        //var refresh_token = \"1/PDql7FR01N2gmq5NiTfnrT-OlCYC3U67KJYYDNPeGnA\";\n        var credentials = matsCollections.Credentials.findOne({name: \"oauth_google\"}, {\n            clientId: 1,\n            clientSecret: 1,\n            refresh_token: 1\n        });\n        var clientId = credentials.clientId;\n        var clientSecret = credentials.clientSecret;\n        var refresh_token = credentials.refresh_token;\n\n        var smtpTransporter;\n        try {\n            smtpTransporter = Nodemailer.createTransport(\"SMTP\", {\n                service: \"Gmail\",\n                auth: {\n                    XOAuth2: {\n                        user: \"mats.gsd@noaa.gov\",\n                        clientId: clientId,\n                        clientSecret: clientSecret,\n                        refreshToken: refresh_token\n                    }\n                }\n            });\n\n        } catch (e) {\n            throw new Meteor.Error(401, \"Transport error \" + e.message());\n        }\n        try {\n            var mailOptions = {\n                sender: fromAddress,\n                replyTo: fromAddress,\n                from: fromAddress,\n                to: toAddress,\n                subject: subject,\n                attachments: [\n                    {\n                        filename: \"graph.png\",\n                        contents: new Buffer(imageStr.split(\"base64,\")[1], \"base64\")\n                    }\n                ]\n            };\n\n            smtpTransporter.sendMail(mailOptions, function (error, response) {\n                if (error) {\n                    console.log(\"smtpTransporter error \" + error + \" from:\" + fromAddress + \" to:\" + toAddress);\n                } else {\n                    console.log(response + \" from:\" + fromAddress + \" to:\" + toAddress);\n                }\n                smtpTransporter.close();\n            });\n        } catch (e) {\n            throw new Meteor.Error(401, \"Send error \" + e.message());\n        }\n        return false;\n    }\n});\n\n// administation tool\nconst getAuthorizations = new ValidatedMethod({\n    name: 'matsMethods.getAuthorizations',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        var roles = [];\n        if (Meteor.isServer) {\n            var userEmail = Meteor.user().services.google.email.toLowerCase();\n            roles = matsCollections.Authorization.findOne({email: userEmail}).roles;\n        }\n        return roles;\n    }\n});\n\n// administration tool\nconst getDataFunctionFileList = new ValidatedMethod({\n    name: 'matsMethods.getDataFunctionFileList',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        if (Meteor.isServer) {\n        }\n    }\n});\n\n\n// retrieves the saved query results (or downsampled results)\nconst getGraphData = new ValidatedMethod({\n    name: 'matsMethods.getGraphData',\n    validate: new SimpleSchema({\n        plotParams: {\n            type: Object,\n            blackbox: true\n        },\n        plotType: {\n            type: String\n        },\n        expireKey: {\n            type: Boolean\n        }\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var plotGraphFunction = matsCollections.PlotGraphFunctions.findOne({plotType: params.plotType});\n            var dataFunction = plotGraphFunction.dataFunction;\n            var ret;\n            try {\n                var hash = require('object-hash');\n                var key = hash(params.plotParams);\n                if (process.env.NODE_ENV === \"development\" || params.expireKey) {\n                    matsCache.expireKey(key);\n                }\n                var results = matsCache.getResult(key);\n                if (results === undefined) {\n                    // results aren't in the cache - need to process data routine\n                    const Future = require('fibers/future');\n                    var future = new Future();\n                    global[dataFunction](params.plotParams, function (results) {\n                        ret = _saveResultData(results);\n                        future[\"return\"](ret);\n                    });\n                    return future.wait();\n                } else { // results were already in the matsCache (same params and not yet expired)\n                    // are results in the downsampled collection?\n                    var dsResults = DownSampleResults.findOne({key: key}, {}, {disableOplog: true});\n                    if (dsResults !== undefined) {\n                        // results are in the mongo cache downsampled collection - returned the downsampled graph data\n                        ret = dsResults;\n                        // update the expire time in the downsampled collection - this requires a new Date\n                        DownSampleResults.rawCollection().update({key: key}, {$set: {\"createdAt\": new Date()}});\n                    } else {\n                        ret = results;  // {key:someKey, result:resultObject}\n                        // refresh expire time. The only way to perform a refresh on matsCache is to re-save the result.\n                        matsCache.storeResult(results.key, results);\n                    }\n                    var sizeof = require('object-sizeof');\n                    console.log(\"result.data size is \", sizeof(results));\n                    return ret;\n                }\n            } catch (dataFunctionError) {\n                if (dataFunctionError.toLocaleString().indexOf(\"INFO:\") !== -1) {\n                    throw new Meteor.Error(dataFunctionError.message);\n                } else {\n                    throw new Meteor.Error(\"Error in getGraphData function:\" + dataFunction + \" : \" + dataFunctionError.message);\n                }\n            }\n            return undefined; // probably won't get here\n        }\n    }\n});\n\n// retrieves the saved query results (or downsampled results) for a specific key\nconst getGraphDataByKey = new ValidatedMethod({\n    name: 'matsMethods.getGraphDataByKey',\n    validate: new SimpleSchema({\n        resultKey: {\n            type: String\n        }\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var ret;\n            var key = params.resultKey;\n            try {\n                var dsResults = DownSampleResults.findOne({key: key}, {}, {disableOplog: true});\n                if (dsResults !== undefined) {\n                    ret = dsResults;\n                } else {\n                    ret = matsCache.getResult(key); // {key:someKey, result:resultObject}\n                }\n                var sizeof = require('object-sizeof');\n                console.log(\"getGraphDataByKey results size is \", sizeof(dsResults));\n                return ret;\n            } catch (error) {\n                throw new Meteor.Error(\"Error in getGraphDataByKey function:\" + key + \" : \" + error.message);\n            }\n            return undefined;\n        }\n    }\n});\n\n// administration tool\nconst getGraphFunctionFileList = new ValidatedMethod({\n    name: 'matsMethods.getGraphFunctionFileList',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        if (Meteor.isServer) {\n        }\n    }\n});\n\nconst getLayout = new ValidatedMethod({\n    name: 'matsMethods.getLayout',\n    validate: new SimpleSchema({\n        resultKey: {\n            type: String\n        }\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var ret;\n            var key = params.resultKey;\n            try {\n                ret = LayoutStoreCollection.rawCollection().findOne({key: key});\n                return ret;\n            } catch (error) {\n                throw new Meteor.Error(\"Error in getLayout function:\" + key + \" : \" + error.message);\n            }\n            return undefined;\n        }\n    }\n});\n\n// retrieves the saved artifacts (file urls) that were generated by nvBatch for a specific key\nconst getMvArtifactsByKey = new ValidatedMethod({\n    name: 'matsMethods.getMvArtifactsByKey',\n    validate: new SimpleSchema({\n        key: {\n            type: String\n        }\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var ret;\n            var key = params.key;\n            try {\n                ret = matsCache.getResult(key); // {key:someKey, result:resultObject}\n                return ret;\n            } catch (error) {\n                throw new Meteor.Error(\"Error in getMvArtifactsByKey function:\" + key + \" : \" + error.message);\n            }\n            return undefined;\n        }\n    }\n});\n\n/*\ngetPlotResult is used by the graph/text_*_output templates which are used to display textual results.\nBecause the data isn't being rendered graphically this data is always full size, i.e. NOT downsampled.\nThat is why it only finds it in the Result file cache, never the DownSampleResult collection.\n\nBecause the dataset can be so large ... e.g. megabytes the data retrieval is pagenated. The index is\napplied to the underlying datasets.The data gets stripped down and flattened to only contain the data neccesary for text presentation.\nA new page index of -1000 means get all the data i.e. no pagenation.\n */\nconst getPlotResult = new ValidatedMethod({\n    name: 'matsMethods.getPlotResult',\n    validate: new SimpleSchema({\n        resultKey: {type: String},\n        pageIndex: {type: Number},\n        newPageIndex: {type: Number}\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var rKey = params.resultKey;\n            var pi = params.pageIndex;\n            var npi = params.newPageIndex;\n            var ret = {};\n            try {\n                ret = _getFlattenedResultData(rKey, pi, npi);\n            } catch (e) {\n                console.log(e);\n            }\n            return ret;\n        }\n    }\n});\n\n\nconst getReleaseNotes = new ValidatedMethod({\n    name: 'matsMethods.getReleaseNotes',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        //     return Assets.getText('public/MATSReleaseNotes.html');\n        // }\n        if (Meteor.isServer) {\n            var future = require('fibers/future');\n            var fse = require('fs-extra');\n            var dFuture = new future();\n            var fData;\n            console.log(process.env.PWD);\n            var file;\n            if (process.env.NODE_ENV === \"development\") {\n                file = process.env.PWD + \"/../../meteor_packages/mats-common/public/MATSReleaseNotes.html\";\n            } else {\n                file = process.env.PWD + \"/programs/server/assets/packages/randyp_mats-common/public/MATSReleaseNotes.html\";\n            }\n            try {\n                fse.readFile(file, 'utf8', function (err, data) {\n                    if (err) {\n                        fData = err.message;\n                        dFuture[\"return\"]();\n                    } else {\n                        fData = data;\n                        dFuture[\"return\"]();\n                    }\n                });\n            } catch (e) {\n                fData = e.message;\n                dFuture[\"return\"]();\n            }\n            dFuture.wait();\n            return fData;\n        }\n    }\n});\n\n\n// administration tool\nconst getUserAddress = new ValidatedMethod({\n    name: 'matsMethods.getUserAddress',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        if (Meteor.isServer) {\n            return Meteor.user().services.google.email.toLowerCase();\n        }\n    }\n});\n\n// app utility\nconst insertColor = new ValidatedMethod({\n    name: 'matsMethods.insertColor',\n    validate: new SimpleSchema({\n        newColor: {type: String},\n        insertAfterIndex: {type: Number}\n    }).validator(),\n    run(params) {\n        if (params.newColor == \"rgb(255,255,255)\") {\n            return false;\n        }\n        var colorScheme = matsCollections.ColorScheme.findOne({});\n        colorScheme.colors.splice(params.insertAfterIndex, 0, newColor);\n        matsCollections.update({}, colorScheme);\n        return false;\n    }\n});\n\n\n// checks to see if the mv artifacts are cached (based on plotspec hash) if not execs an mvbatch and caches the results\nconst mvBatch = new ValidatedMethod({\n    name: 'matsMethods.mvBatch',\n    validate: new SimpleSchema({\n        plotParams: {\n            type: Object,\n            blackbox: true\n        },\n        plotType: {\n            type: String\n        }\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var mvbatch = MV_DIRS.HOME + \"/bin/mv_batch.sh\";\n            var plotGraphFunction = matsCollections.PlotGraphFunctions.findOne({plotType: params.plotType});\n            var plotSpecFunction = plotGraphFunction.plotSpecFunction;\n            var ret;\n            const appName = matsCollections.appName.findOne({}).app;\n            const fse = require('fs-extra');\n            // generate the key from the params\n            const hash = require('object-hash');\n            const key = hash(params.plotParams);\n            // generate the server router (Picker) urls according to the hash key.\n            var artifacts = {};\n            if (process.env.NODE_ENV === \"development\") {\n                artifacts = {\n                    png: appName + \"/mvplot/\" + key,\n                    xml: appName + \"/mvxml/\" + key,\n                    sql: appName + \"/mvsql/\" + key,\n                    log: appName + \"/mvlog/\" + key,\n                    err: appName + \"/mverr/\" + key,\n                    R: appName + \"/mvscript/\" + key,\n                    data: appName + \"/mvdata/\" + key,\n                    points1: appName + \"/mvpoints1/\" + key,\n                    points2: appName + \"/mvpoints2/\" + key,\n                };\n            } else {\n                // in production the appName is already at the end of the location.href\n                // - which is used to form a url for retrieving the artifact\n                artifacts = {\n                    png: \"/mvplot/\" + key,\n                    xml: \"/mvxml/\" + key,\n                    sql: \"/mvsql/\" + key,\n                    log: \"/mvlog/\" + key,\n                    err: \"/mverr/\" + key,\n                    R: \"/mvscript/\" + key,\n                    data: \"/mvdata/\" + key,\n                    points1: \"/mvpoints1/\" + key,\n                    points2: \"/mvpoints2/\" + key,\n                };\n            }\n            // generate the real file paths (these are not exposed to clients)\n            const plotSpecFilePath = MV_DIRS.XMLDIR + key + \".xml\";\n            const pngFilePath = MV_DIRS.PLOTSDIR + key + \".png\";\n            const sqlFilePath = MV_DIRS.SQLDIR + key + \".sql\";\n            const logFilePath = MV_DIRS.LOGDIR + key + \".log\";\n            const errFilePath = MV_DIRS.ERRDIR + key + \".err\";\n            const scriptFilePath = MV_DIRS.SCRIPTSDIR + key + \".R\";\n            const dataFilePath = MV_DIRS.DATADIR + key + \".data\";\n            const points1Path = MV_DIRS.DATADIR + key + \".points1\";\n            const points2Path = MV_DIRS.DATADIR + key + \".points2\";\n            // NOTE: the plotParams should include an mvPlot:true parameter.\n            // This should have been set in the caller. This makes the mv plotSpec cache entry unique from a MATS plot\n            if (params.plotParams.mvPlot !== true) {\n                throw new Meteor.Error(\"Error in mvBatch: Not an mv plot request: no plotParams.mvPlot:true\");\n            }\n            if (process.env.NODE_ENV === \"development\" || params.expireKey) {\n                matsCache.expireKey(key);\n                // in development just blow away the files too\n                try {\n                    fse.unlinkSync(plotSpecFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(pngFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(sqlFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(logFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(errFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(scriptFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(dataFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(points1Path);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(points2Path);\n                } catch (ignore){}\n            }\n            // try to get the key from the cache\n            var artifactPaths = matsCache.getResult(key);\n            var filesExist = false;\n            if (artifactPaths != null) {\n                // artifact paths were already cached\n                // do the files exist?\n                // check for file existence\n                var xmlSpecExists = fse.existsSync(plotSpecFilePath);\n                var plotExists = fse.existsSync(pngFilePath);\n                var scriptExists = fse.existsSync(scriptFilePath);\n                var dataExists = fse.existsSync(dataFilePath);\n                var sqlExists = fse.existsSync(sqlFilePath);\n                var logExists = fse.existsSync(logFilePath);\n                filesExist = xmlSpecExists && plotExists && scriptExists && dataExists && sqlExists && logExists;\n            }\n            // either the artifacts were cached but the files don't exist or the artifacts were not cached\n            if (artifactPaths == null || filesExist === false) {\n                // artifactPaths are not in the cache - or the files are not there - need to process plotSpecFunction routine\n                // translate the plotparams to a plotSpec and use the key in the plotSpec reference\n                global[plotSpecFunction](params.plotParams, key, function (err, plotSpec) {\n                    // callback\n                    if (err) {\n                        console.log(err, \"plotspecFunction:\", plotSpecFunction);\n                        throw new Meteor.Error(err + \"plotspecFunction: \" + plotSpecFunction);\n                    } else {\n\n                        // no error and we have a plot spec\n                        // see if the artifacts exist as files. They might have been run before and are still hanging around.\n                        // NOTE: the MV_OUTPUT aren't cached at all (i.e. no expiration) -\n                        // therefore the expiration of the MATS cache plotSpec and the actual artifacts is sloppy.\n\n                        // check for file existence\n                        var xmlSpecExists = fse.existsSync(plotSpecFilePath);\n                        var plotExists = fse.existsSync(pngFilePath);\n                        var scriptExists = fse.existsSync(scriptFilePath);\n                        var dataExists = fse.existsSync(dataFilePath);\n                        var sqlExists = fse.existsSync(sqlFilePath);\n                        var logExists = fse.existsSync(logFilePath);\n                        var filesExist = xmlSpecExists && plotExists && scriptExists && dataExists && sqlExists && logExists;\n                        if (!filesExist) {\n                            const mvBatchCmd = MV_DIRS.HOME + \"/bin/mv_batch.sh \" + ' ' + plotSpecFilePath;\n                            const cp = require('child_process');\n                            // save the plotSpec\n                            fse.outputFileSync(plotSpecFilePath, plotSpec);\n                            // exec mv batch with this plotSpec - this should be synchronous\n                            cp.execSync(mvBatchCmd, (error, stdout, stderr) => {\n                                if (stderr) {\n                                    fse.outputFileSync(errFilePath, stderr, function (err) {\n                                        if (err) {\n                                            console.log(\"Error:couldn't write error file\" + err); //null\n                                        }\n                                    });\n                                } else {\n                                    fse.outputFileSync(errFilePath, \"no stderr for key: \" + key, function (err) {\n                                        if (err) {\n                                            console.log(\"Error:couldn't write error file\" + err); //null\n                                        }\n                                    });\n                                }\n                                if (stdout) {\n                                    if (stdout.match(/ERROR/)) {\n                                        fse.outputFileSync(errFilePath, stdout, function (err) {\n                                            if (err) {\n                                                console.log(\"Error:couldn't write log/err file\" + err);\n                                            }\n                                        });\n                                    }\n                                    fse.outputFileSync(logFilePath, stdout, function (err) {\n                                        if (err) {\n                                            console.log(\"Error:couldn't write log file\" + err);\n                                        }\n                                    });\n                                    var sqlout = stdout.match(/[\\s\\S]*#*(SELECT[\\s\\S]*)Database/) == null ? null : stdout.match(/[\\s\\S]*#*(SELECT[\\s\\S]*)Database/)[1];\n                                    if (sqlout == null) {\n                                        fse.outputFileSync(sqlFilePath, \"no sql statement found in output for key: \" + key, function (err) {\n                                            if (err) {\n                                                console.log(\"Error:couldn't write sql file\" + err);\n                                            }\n                                        });\n                                    } else {\n                                        fse.outputFileSync(sqlFilePath, sqlout, function (err) {\n                                            if (err) {\n                                                console.log(\"Error:couldn't write sql file\" + err);\n                                            }\n                                        });\n                                    }\n                                } else {\n                                    fse.outputFileSync(logFilePath, \"No stdout captured for: \" + key, function (err) {\n                                        if (err) {\n                                            console.log(\"Error:couldn't write log file\" + err);\n                                        }\n                                    });\n                                }\n\n                                // no error - check for the files and cache the spec and filePaths\n                                var xmlSpecExists = fse.existsSync(plotSpecFilePath);\n                                var plotExists = fse.existsSync(pngFilePath);\n                                var scriptExists = fse.existsSync(scriptFilePath);\n                                var dataExists = fse.existsSync(dataFilePath);\n                                var sqlExists = fse.existsSync(sqlFilePath);\n                                var logExists = fse.existsSync(logFilePath);\n                                var filesExist = xmlSpecExists && plotExists && scriptExists && dataExists && sqlExists && logExists;\n                                if (!filesExist) {\n                                    console.error('exec error: expected files do not exist');\n                                }\n                                matsCache.storeResult(key, artifacts);\n                                /*\n                                    The mvbatch should have saved the plot artifacts according to the following plotSpec elements\n                                        <data_file>key.data</data_file>\n                                        <plot_file>key.png</plot_file>\n                                        <r_file>key.R</r_file>\n                                    where key is the same as the key for the matsCache\n                                    The stored artifacts shoulkd be like ...\n                                        MV_OUTPUT/plots/key.png\n                                        MV_OUTPUT/xml/key.xml\n                                        MV_OUTPUT/xml/key.sql\n                                        MV_OUTPUT/xml/key.log\n                                        MV_OUTPUT/scripts/key.R\n                                        MV_OUTPUT/data/key.data\n                                        MV_OUTPUT/data/key.sum_stat.info\n                                        MV_OUTPUT/data/key.data.sum_stat\n\n                                        MV_OUTPUT/xml/key.xml is the plotSpec\n                                */\n                                return {'key': key, 'artifacts':artifacts};\n                            }); //ret = {key:key, result:{artifacts:artifacts}}\n                            // return the key and the artifacts\n                        }  // plotspec did not exist\n                        else {\n                            // the files actually already existed but we needed the plotspec\n                            // so just refresh the cache and return the key right away\n                            matsCache.storeResult(key, artifacts);\n                            return {'key': key, 'artifacts':artifacts};\n                        }\n                    }\n                });\n            } // either artifactPaths == null || filesExist === false\n            else {\n                // artifacts existed and plotspec existed - refresh the cache\n                matsCache.storeResult(key, artifacts);\n                return {'key': key, 'artifacts':artifacts};\n            }\n            return {'key': key, 'artifacts':artifacts};\n        } // if Meteor is Server\n    } // run\n});\n\n// administration tool\nconst readFunctionFile = new ValidatedMethod({\n    name: 'matsMethods.readFunctionFile',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        if (Meteor.isServer) {\n            var future = require('fibers/future');\n            var fse = require('fs-extra');\n            var path = \"\";\n            var fData;\n            if (type == \"data\") {\n                path = \"/web/static/dataFunctions/\" + file;\n                console.log('exporting data file: ' + path);\n            } else if (type == \"graph\") {\n                path = \"/web/static/displayFunctions/\" + file;\n                console.log('exporting graph file: ' + path);\n            } else {\n                return (\"error - wrong type\");\n            }\n            fse.readFile(path, function (err, data) {\n                if (err) throw err;\n                fData = data.toString();\n                future[\"return\"](fData);\n            });\n            return future.wait();\n        }\n    }\n});\n\n// refreshes the metadata for the app that's running\nconst refreshMetaData = new ValidatedMethod({\n    name: 'matsMethods.refreshMetaData',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        if (Meteor.isServer) {\n            try {\n                //console.log(\"Asked to refresh metadata\");\n                _checkMetaDataRefresh();\n            } catch (e) {\n                console.log(e);\n                throw new Meteor.Error(\"Server error: \", e.message);\n            }\n        }\n        return metaDataTableUpdates.find({}).fetch();\n    }\n});\n\n// administation tool\nconst removeAuthorization = new ValidatedMethod({\n    name: 'matsMethods.removeAuthorization',\n    validate: new SimpleSchema({\n        settings: {type: Object, blackbox: true}\n    }).validator(),\n    run(settings) {\n        if (Meteor.isServer) {\n            var email;\n            var roleName;\n            var userRoleName = settings.userRoleName;\n            var authorizationRole = settings.authorizationRole;\n            var newUserEmail = settings.newUserEmail;\n            var existingUserEmail = settings.existingUserEmail;\n            if (authorizationRole) {\n                // existing role - the role roleName - no need to verify as the selection list came from the database\n                roleName = authorizationRole;\n            } else if (userRoleName) {\n                roleName = userRoleName;\n            }\n            if (existingUserEmail) {\n                email = existingUserEmail;\n            } else {\n                email = newUserEmail;\n            }\n\n            // if user and role remove the role from the user\n            if (email && roleName) {\n                matsCollections.Authorization.update({email: email}, {$pull: {roles: roleName}});\n            }\n            // if user and no role remove the user\n            if (email && !roleName) {\n                matsCollections.Authorization.remove({email: email});\n            }\n            // if role and no user remove role and remove role from all users\n            if (roleName && !email) {\n                // remove the role\n                matsCollections.Roles.remove({name: roleName});\n                // remove the roleName role from all the authorizations\n                matsCollections.Authorization.update({roles: roleName}, {$pull: {roles: roleName}}, {multi: true});\n            }\n            return false;\n        }\n    }\n});\n\n// app utility\nconst removeColor = new ValidatedMethod({\n    name: 'matsMethods.removeColor',\n    validate: new SimpleSchema({\n        removeColor: {type: String}\n    }).validator(),\n    run(removeColor) {\n        var colorScheme = matsCollections.ColorScheme.findOne({});\n        var removeIndex = colorScheme.colors.indexOf(removeColor);\n        colorScheme.colors.splice(removeIndex, 1);\n        matsCollections.ColorScheme.update({}, colorScheme);\n        return false;\n    }\n});\n\n// database controls\nconst removeDatabase = new ValidatedMethod({\n    name: 'matsMethods.removeDatabase',\n    validate: new SimpleSchema({\n        dbName: {type: String}\n    }).validator(),\n    run(dbName) {\n        if (Meteor.isServer) {\n            matsCollections.Databases.remove({name: dbName});\n        }\n    }\n});\n\n// makes sure all of the parameters display appropriate selections in relation to one another\nconst resetApp = function (appRef) {\n    var fse = require('fs-extra');\n    const metaDataTableRecords = appRef.appMdr;\n    const type = appRef.appType;\n    const appName = appRef.app;\n    var dep_env = process.env.NODE_ENV;\n    // set some defaults for python processing - these can be overridden\n    if (Meteor.settings.private != null && Meteor.settings.private.PYTHON_PATH == null) {\n        Meteor.settings.private.PYTHON_PATH = \"/usr/bin/python\";\n    }\n\n    if (Meteor.settings.private != null && Meteor.settings.private.process != null && Meteor.settings.private.process.RUN_ENV != null) {\n        switch (Meteor.settings.private.process.RUN_ENV) {\n            case \"development\":\n            case \"integration\":\n            case \"production\":\n                dep_env = Meteor.settings.private.process.RUN_ENV;\n                break;\n            default:\n                dep_env = process.env.NODE_ENV;\n               break;\n        }\n    }\n    var deployment;\n    var deploymentText = Assets.getText('public/deployment/deployment.json');\n    if (deploymentText == null) {  // equivilent to deploymentText === null || deploymentText === undefined\n    }\n    deployment = JSON.parse(deploymentText);\n    var app = {};\n    for (var ai = 0; ai < deployment.length; ai++) {\n        var dep = deployment[ai];\n        if (dep.deployment_environment == dep_env) {\n            app = dep.apps.filter(function (app) {\n                return app.app === appName;\n            })[0];\n        }\n    }\n    const appVersion = app ? app.version : \"unknown\";\n    const appTitle = app ? app.title : \"unknown\";\n    const buildDate = app ? app.buildDate : \"unknown\";\n    const appType = type ? type : matsTypes.AppTypes.mats;\n    matsCollections.appName.upsert({app:appName},{$set:{app:appName}});\n\n    // remember that we updated the metadata tables just now - create metaDataTableUpdates\n    /*\n        metaDataTableUpdates:\n        {\n            name: dataBaseName,\n            tables: [tableName1, tableName2 ..],\n            lastRefreshed : timestamp\n        }\n     */\n    // only create metadata tables if the resetApp was called with a real metaDataTables object\n    if (metaDataTableRecords instanceof matsTypes.MetaDataDBRecord) {\n        var metaDataTables = metaDataTableRecords.getRecords();\n        for (var mdti = 0; mdti < metaDataTables.length; mdti++) {\n            const metaDataRef = metaDataTables[mdti];\n            metaDataRef.lastRefreshed = moment().format();\n            if (metaDataTableUpdates.find({name: metaDataRef.name}).count() == 0) {\n                metaDataTableUpdates.update({name: metaDataRef.name}, metaDataRef, {upsert: true});\n            }\n        }\n    } else {\n        throw new Meteor.Error(\"Server error: \", \"resetApp: bad pool-database entry\");\n    }\n\n    matsCollections.Roles.remove({});\n    matsDataUtils.doRoles();\n    matsCollections.Authorization.remove({});\n    matsDataUtils.doAuthorization();\n    matsCollections.Credentials.remove({});\n    matsDataUtils.doCredentials();\n    matsCollections.PlotGraphFunctions.remove({});\n    matsCollections.ColorScheme.remove({});\n    matsDataUtils.doColorScheme();\n    matsCollections.Settings.remove({});\n    matsDataUtils.doSettings(appTitle, appVersion, buildDate, appType);\n    matsCollections.CurveParams.remove({});\n    matsCollections.PlotParams.remove({});\n    matsCollections.CurveTextPatterns.remove({});\n// app specific routines\n    //const asrKeys = Object.keys(appSpecificResetRoutines);\n    const asrKeys = appSpecificResetRoutines;\n    for (var ai = 0; ai < asrKeys.length; ai++) {\n        global.appSpecificResetRoutines[ai]();\n    }\n    matsCache.clear();\n};\n\n// administration tool\nconst restoreFromFile = new ValidatedMethod({\n    name: 'matsMethods.restoreFromFile',\n    validate: new SimpleSchema({\n        type: {type: String},\n        name: {type: String},\n        data: {type: Object, blackbox: true}\n    }).validator(),\n\n    run(params) {\n        if (Meteor.isServer) {\n            console.log(\"restoring \" + params.type + \" file \" + params.name);\n            var path = \"\";\n            if (params.type == \"data\") {\n                path = \"/web/static/dataFunctions/\" + params.name;\n            } else if (params.ype == \"graph\") {\n                path = \"/web/static/displayFunctions/\" + params.name;\n            } else {\n                return (\"error - wrong tyoe\");\n            }\n            console.log('importing ' + params.type + ' file: ' + path);\n            var fse = require('fs-extra');\n            fse.writeFile(path, params.data.toString(), function (err) {\n                if (err) {\n                    return (err.toLocaleString());\n                }\n                console.log('imported ' + params.type + ' file: ' + path);\n            });\n        }\n    }\n});\n\n// administration tool\nconst restoreFromParameterFile = new ValidatedMethod({\n    name: 'matsMethods.restoreFromParameterFile',\n    validate: new SimpleSchema({\n        name: {type: String},\n        data: {type: Object, blackbox: true}\n    }).validator(),\n    run(params) {\n        var data = params.data;\n        if (Meteor.isServer) {\n            var d = [];\n            if (data.CurveParams) {\n                matsCollections.CurveParams.remove({});\n                d = _.map(data.CurveParams, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.CurveParams.insert(o);\n                });\n            }\n            if (data.PlotParams) {\n                matsCollections.PlotParams.remove({});\n                d = _.map(data.PlotParams, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.PlotParams.insert(o);\n                });\n            }\n            if (data.PlotGraphFunctions) {\n                matsCollections.PlotGraphFunctions.remove({});\n                d = _.map(data.PlotGraphFunctions, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.PlotGraphFunctions.insert(o);\n                });\n            }\n            if (data.Settings) {\n                matsCollections.Settings.remove({});\n                d = _.map(data.Settings, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.Settings.insert(o);\n                });\n            }\n            if (data.ColorScheme) {\n                matsCollections.ColorScheme.remove({});\n                d = _.map(data.ColorScheme, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.ColorScheme.insert(o);\n                });\n            }\n            if (data.Authorization) {\n                matsCollections.Authorization.remove({});\n                d = _.map(data.Authorization, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.Authorization.insert(o);\n                });\n            }\n            if (data.Roles) {\n                matsCollections.Roles.remove({});\n                d = _.map(data.Roles, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.Roles.insert(o);\n                });\n            }\n            if (data.Databases) {\n                matsCollections.Databases.remove({});\n                d = _.map(data.Databases, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.Databases.insert(o);\n                });\n            }\n            if (data.Credentials) {\n                matsCollections.Credentials.remove({});\n                d = _.map(data.Credentials, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.Credentials.insert(o);\n                });\n            }\n        }\n    }\n});\n\nconst saveLayout = new ValidatedMethod({\n    name: 'matsMethods.saveLayout',\n    validate: new SimpleSchema({\n        resultKey: {\n            type: String\n        },\n        layout: {\n            type: Object, blackbox: true\n        },\n        curveOpsUpdate: {\n            type: Object, blackbox: true\n        }\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var key = params.resultKey;\n            var layout = params.layout;\n            var curveOpsUpdate = params.curveOpsUpdate;\n            try {\n                LayoutStoreCollection.upsert({key: key}, {$set: {\"createdAt\": new Date(), layout: layout, curveOpsUpdate: curveOpsUpdate}});\n            } catch (error) {\n                throw new Meteor.Error(\"Error in saveLayout function:\" + key + \" : \" + error.message);\n            }\n        }\n    }\n});\n\n//administration tools\nconst saveSettings = new ValidatedMethod({\n    name: 'matsMethods.saveSettings',\n    validate: new SimpleSchema({\n        saveAs: {\n            type: String\n        },\n        p: {\n            type: Object,\n            blackbox: true\n        },\n        permission: {\n            type: String\n        }\n    }).validator(),\n    run(params) {\n        var user = \"anonymous\";\n        matsCollections.CurveSettings.upsert({name: params.saveAs}, {\n            created: moment().format(\"MM/DD/YYYY HH:mm:ss\"),\n            name: params.saveAs,\n            data: params.p,\n            owner: Meteor.userId() == null ? \"anonymous\" : Meteor.userId(),\n            permission: params.permission,\n            savedAt: new Date(),\n            savedBy: Meteor.user() == null ? \"anonymous\" : user\n        });\n    }\n});\n\n// administation tool\nconst setCredentials = new ValidatedMethod({\n    name: 'matsMethods.setCredentials',\n    validate: new SimpleSchema({\n        settings: {type: Object, blackbox: true}\n    }).validator(),\n    run(settings) {\n        if (Meteor.isServer) {\n            var name = settings.name;\n            var clientId = settings.clientId;\n            var clientSecret = settings.clientSecret;\n            var clientRefreshToken = settings.clientRefreshToken;\n            matsCollections.Credentials.update({}, {\n                $set: {\n                    name: name,\n                    clientId: clientId,\n                    clientSecret: clientSecret,\n                    refresh_token: clientRefreshToken\n                }\n            });\n            return false;\n        }\n    }\n});\n\nconst setSettings = new ValidatedMethod({\n    name: 'matsMethods.setSettings',\n    validate: new SimpleSchema({\n        settings: {type: Object, blackbox: true}\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var settings = params.settings;\n            var labelPrefix = settings.labelPrefix;\n            var title = settings.title;\n            var lineWidth = settings.lineWidth;\n            var nullFillString = settings.nullFillString;\n            var resetFromCode = settings.resetFromCode;\n            matsCollections.Settings.update({}, {\n                $set: {\n                    LabelPrefix: labelPrefix,\n                    Title: title,\n                    LineWidth: lineWidth,\n                    NullFillString: nullFillString,\n                    resetFromCode: resetFromCode\n                }\n            });\n        }\n        return false;\n    }\n});\n\n\n/* test methods */\n\nconst testGetMetaDataTableUpdates = new ValidatedMethod({\n    name: 'matsMethods.testGetMetaDataTableUpdates',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        return metaDataTableUpdates.find({}).fetch();\n    }\n});\n\nconst testGetTables = new ValidatedMethod({\n    name: 'matsMethods.testGetTables',\n    validate: new SimpleSchema(\n        {\n            host: {type: String},\n            user: {type: String},\n            password: {type: String},\n            database: {type: String}\n        }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            const Future = require('fibers/future');\n            const queryWrap = Future.wrap(function (callback) {\n                const connection = mysql.createConnection({\n                    host: params.host,\n                    user: params.user,\n                    password: params.password,\n                    database: params.database\n                });\n                connection.query(\"show tables;\", function (err, result) {\n                    const tables = result.map(function (a) {\n                        return a.Tables_in_ruc_ua_sums2;\n                    });\n                    return callback(err, tables);\n                });\n                connection.end(function (err) {\n                    if (err) {\n                        console.log(\"testGetTables cannot end connection\");\n                    }\n                });\n            });\n            return queryWrap().wait();\n        }\n    }\n});\n\nconst testSetMetaDataTableUpdatesLastRefreshedBack = new ValidatedMethod({\n    name: 'matsMethods.testSetMetaDataTableUpdatesLastRefreshedBack',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        var mtu = metaDataTableUpdates.find({}).fetch();\n        var id = mtu[0]._id;\n        metaDataTableUpdates.update({_id: id}, {$set: {lastRefreshed: 0}});\n        return metaDataTableUpdates.find({}).fetch();\n    }\n});\n\nexport default matsMethods = {\n    addSentAddress: addSentAddress,\n    applyAuthorization: applyAuthorization,\n    applyDatabaseSettings: applyDatabaseSettings,\n    deleteSettings: deleteSettings,\n    emailImage: emailImage,\n    getAuthorizations: getAuthorizations,\n    getDataFunctionFileList: getDataFunctionFileList,\n    getGraphData: getGraphData,\n    getGraphDataByKey: getGraphDataByKey,\n    getGraphFunctionFileList: getGraphFunctionFileList,\n    getLayout: getLayout,\n    getMvArtifactsByKey:getMvArtifactsByKey,\n    getPlotResult: getPlotResult,\n    getReleaseNotes: getReleaseNotes,\n    getUserAddress: getUserAddress,\n    insertColor: insertColor,\n    mvBatch: mvBatch,\n    readFunctionFile: readFunctionFile,\n    refreshMetaData: refreshMetaData,\n    removeAuthorization: removeAuthorization,\n    removeColor: removeColor,\n    removeDatabase: removeDatabase,\n    resetApp: resetApp,\n    restoreFromFile: restoreFromFile,\n    restoreFromParameterFile: restoreFromParameterFile,\n    saveLayout: saveLayout,\n    saveSettings: saveSettings,\n    setCredentials: setCredentials,\n    setSettings: setSettings,\n    testGetMetaDataTableUpdates: testGetMetaDataTableUpdates,\n    testGetTables: testGetTables,\n    testSetMetaDataTableUpdatesLastRefreshedBack: testSetMetaDataTableUpdatesLastRefreshedBack,\n    MV_DIRS: MV_DIRS\n};\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { Template } from \"meteor/templating\";\nimport { FlowRouter } from 'meteor/ostrio:flow-router-extra';\nimport \"./appBody.html\";\n\nTemplate.AppBody.onCreated(function () {\n    console.log(\"in AppBody onCreated\");\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsPlotUtils} from 'meteor/randyp:mats-common';\nimport {matsParamUtils} from 'meteor/randyp:mats-common';\nimport {Info} from 'meteor/randyp:mats-common';\nimport {matsMethods} from 'meteor/randyp:mats-common';\n\n\n/*\n global dataset variable - container for graph dataset.\n This (plotResult) is very important. It isn't \"var\" because it needs to be a meteor global scope.\n The page is rendered whe the graph page comes up, but the data from the data processing callback\n in plotList.js or curveList.js may not have set the global variable\n PlotResult.\n */\n\n//var plotResultData = null; -- this was the global variable for the text output data, but now it is set elsewhere\nvar graphResult = null;     // this is the global variable for the data on the graph\nvar plot;\n\nconst sizeof = function (_1) {\n    var _2 = [_1];\n    var _3 = 0;\n    for (var _4 = 0; _4 < _2.length; _4++) {\n        switch (typeof _2[_4]) {\n            case \"boolean\":\n                _3 += 4;\n                break;\n            case \"number\":\n                _3 += 8;\n                break;\n            case \"string\":\n                _3 += 2 * _2[_4].length;\n                break;\n            case \"object\":\n                if (Object.prototype.toString.call(_2[_4]) != \"[object Array]\") {\n                    for (var _5 in _2[_4]) {\n                        _3 += 2 * _5.length;\n                    }\n                }\n                for (var _5 in _2[_4]) {\n                    var _6 = false;\n                    for (var _7 = 0; _7 < _2.length; _7++) {\n                        if (_2[_7] === _2[_4][_5]) {\n                            _6 = true;\n                            break;\n                        }\n                    }\n                    if (!_6) {\n                        _2.push(_2[_4][_5]);\n                    }\n                }\n        }\n    }\n    return _3;\n};\n\n// Retrieves the globally stored plotResultData for the text output and other things.\n// Re-sets the plotResultData if the requested page range has changed, or if it has not been previously set.\nconst getPlotResultData = function () {\n    var pageIndex = Session.get(\"pageIndex\");\n    var newPageIndex = Session.get(\"newPageIndex\");\n    if (plotResultData === undefined || plotResultData === null || Session.get('textRefreshNeeded') === true) {\n        setPlotResultData();\n    }\n    return plotResultData;\n};\n\n// Sets the global plotResultData variable for the text output to the requested range from the Results data stored in mongo, via a MatsMethod.\nconst setPlotResultData = function () {\n    var pageIndex = Session.get(\"pageIndex\");\n    var newPageIndex = Session.get(\"newPageIndex\");\n\n    if (Session.get('textRefreshNeeded') === true) {\n        showSpinner();\n        matsMethods.getPlotResult.call({\n            resultKey: Session.get(\"plotResultKey\"),\n            pageIndex: pageIndex,\n            newPageIndex: newPageIndex\n        }, function (error, result) {\n            if (error !== undefined) {\n                setError(new Error(\"matsMethods.getPlotResult failed : error: \" + error));\n                Session.set('textRefreshNeeded', false);\n            }\n            if (result == undefined) {\n                plotResultData = undefined;\n                Session.set('textRefreshNeeded', false);\n                hideSpinner();\n                return;\n            }\n            plotResultData = result;\n            Session.set(\"pageIndex\", result.dsiRealPageIndex);\n            Session.set(\"pageTextDirection\", result.dsiTextDirection);\n            Session.set('textLoaded', new Date());\n            console.log(\"size of plotResultData is \", sizeof(plotResultData));\n            Session.set('textRefreshNeeded', false);\n            hideSpinner();\n        });\n    }\n};\n\n// resets the global plotResultData variable for the text output to null\nconst resetPlotResultData = function () {\n    plotResultData = null;\n    Session.set('textLoaded', new Date());\n};\n\n// gets the global graphResult variable, which is the data object for the (possibly downsampled) data on the graph\nconst getGraphResult = function () {\n    if (graphResult === undefined || graphResult === null) {\n        return [];\n    }\n    return graphResult;\n};\n\n// sets the global graphResult variable to the (possibly downsampled) data object returned from MatsMethods, in order to make the graph\nconst setGraphResult = function (result) {\n    graphResult = result;\n    Session.set('graphDataLoaded', new Date());\n    console.log(\"size of graphResultData is\", sizeof(graphResult));\n};\n\n// resets the global graphResult variable to null\nconst resetGraphResult = function () {\n    graphResult = null;\n    Session.set('graphDataLoaded', new Date());\n};\n\n/*\n Curve utilities - used to determine curve labels and colors etc.\n */\nconst getUsedLabels = function () {\n    if (Session.get('UsedLabels') === undefined) {\n        return [];\n    }\n    return Session.get('UsedLabels');\n};\n\nconst getNextCurveLabel = function () {\n    if (Session.get('NextCurveLabel') === undefined) {\n        setNextCurveLabel();\n    }\n    return Session.get('NextCurveLabel');\n};\n\n// determine the next curve Label and set it in the session\n// private, not exported\nconst setNextCurveLabel = function () {\n    const usedLabels = Session.get('UsedLabels');\n    const settings = matsCollections.Settings.findOne({}, {fields: {LabelPrefix: 1}});\n    if (settings === undefined) {\n        return false;\n    }\n    const labelPrefix = settings.LabelPrefix;\n    // find all the labels that start with our prefix (some could be custom)\n    const prefixLabels = _.filter(usedLabels, function (l) {\n        return (l && (l.lastIndexOf(labelPrefix, 0) === 0) && (l.match(new RegExp(labelPrefix, 'g')).length) == 1);\n    });\n    const lastUsedLabel = _.last(prefixLabels);\n    var lastLabelNumber = -1;\n\n    if (lastUsedLabel !== undefined) {\n        const minusPrefix = lastUsedLabel.replace(labelPrefix, '');\n        const tryNum = parseInt(minusPrefix, 10);\n        if (!isNaN(tryNum)) {\n            lastLabelNumber = tryNum;\n        }\n    }\n    var newLabelNumber = lastLabelNumber + 1;\n    var nextCurveLabel = labelPrefix + newLabelNumber;\n    // the label might be one from a removed curve so the next ones might be used\n    while (_.indexOf(usedLabels, nextCurveLabel) != -1) {\n        newLabelNumber++;\n        nextCurveLabel = labelPrefix + newLabelNumber;\n    }\n    Session.set('NextCurveLabel', nextCurveLabel);\n};\n\n// determine the next curve color and set it in the session\n// private - not exported\nconst setNextCurveColor = function () {\n    var usedColors = Session.get('UsedColors');\n    var colors = matsCollections.ColorScheme.findOne({}, {fields: {colors: 1}}).colors;\n    var lastUsedIndex = -1;\n    if (usedColors !== undefined) {\n        lastUsedIndex = _.indexOf(colors, _.last(usedColors));\n    }\n    var nextCurveColor;\n    if (lastUsedIndex !== undefined && lastUsedIndex != -1) {\n        if (lastUsedIndex < colors.length - 1) {\n            var newIndex = lastUsedIndex + 1;\n            nextCurveColor = colors[newIndex];\n            // the color might be one from a removed curve so the next ones might be used\n            while (_.indexOf(usedColors, nextCurveColor) != -1) {\n                newIndex++;\n                nextCurveColor = colors[newIndex];\n            }\n        } else {\n            // out of defaults\n            var rint = Math.round(0xffffff * Math.random());\n            nextCurveColor = 'rgb(' + (rint >> 16) + ',' + (rint >> 8 & 255) + ',' + (rint & 255) + ')';\n        }\n    } else {\n        nextCurveColor = colors[0];\n    }\n    Session.set('NextCurveColor', nextCurveColor);\n};\n\n// get the next curve color from the session\n// private - not exported\nconst getNextCurveColor = function () {\n    if (Session.get('NextCurveColor') === undefined) {\n        setNextCurveColor();\n    }\n    return Session.get('NextCurveColor');\n};\n\n// clear a used label and set the nextCurveLabel to the one just cleared\nconst clearUsedLabel = function (label) {\n    var usedLabels = Session.get('UsedLabels');\n    var newUsedLabels = _.reject(usedLabels, function (l) {\n        return l == label;\n    });\n    Session.set('UsedLabels', newUsedLabels);\n    Session.set('NextCurveLabel', label);\n};\n\n// clear a used color and set the nextCurveColor to the one just cleared\nconst clearUsedColor = function (color) {\n    var usedColors = Session.get('UsedColors');\n    var newUsedColors = _.reject(usedColors, function (c) {\n        return c == color;\n    });\n    Session.set('UsedColors', newUsedColors);\n    Session.set('NextCurveColor', color);\n};\n\n// clear all the used colors and labels and set the nextCurve values\n// to the first in the scheme and the first of the labelPrefix.\n// This is used by the removeAll\nconst clearAllUsed = function () {\n    Session.set('UsedColors', undefined);\n    var colors = matsCollections.ColorScheme.findOne({}, {fields: {colors: 1}}).colors;\n    Session.set('NextCurveColor', colors[0]);\n    Session.set('UsedLabels', undefined);\n    var labelPrefix = matsCollections.Settings.findOne({}, {fields: {LabelPrefix: 1}}).LabelPrefix;\n    Session.set('NextCurveLabel', labelPrefix + 0);\n    Session.set('Curves', []);\n};\n\n// use curves in session to determine which defaults are already used\n// and to set the usedColors in the session\n// this is used on restore settings to set up the usedColors\n// private - not exported\n//setUsedDefaults = function() {\nconst setUsedColors = function () {\n    var curves = Session.get('Curves');\n    var usedColors = [];\n    for (var i = 0; i < curves.length; i++) {\n        var color = curves[i].color;\n        usedColors.push(color);\n    }\n    Session.set('UsedColors', usedColors);\n    setNextCurveColor();\n};\n\n// private - not exported\nconst setUsedLabels = function () {\n    var curves = Session.get('Curves');\n    var usedLabels = [];\n    for (var i = 0; i < curves.length; i++) {\n        var label = curves[i].label;\n        usedLabels.push(label);\n    }\n    Session.set('UsedLabels', usedLabels);\n    setNextCurveLabel();\n};\n\nconst setUsedColorsAndLabels = function () {\n    setUsedColors();\n    setUsedLabels();\n};\n\nconst resetScatterApply = function () {\n    if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n        Session.set('axisCurveIcon', 'fa-asterisk');\n        Session.set('xaxisCurveText', 'XAXIS NOT YET APPLIED');\n        Session.set('yaxisCurveText', 'YAXIS NOT YET APPLIED');\n        Session.set('xaxisCurveColor', 'red');\n        Session.set('yaxisCurveColor', 'red');\n        if (document.getElementById('Fit-Type-radioGroup-none') !== null) {\n            document.getElementById('Fit-Type-radioGroup-none').checked = true;\n        }\n    }\n};\n\n// add the difference curves\n// private - not exported\nconst addDiffs = function () {\n    var curves = Session.get('Curves');\n    var newCurves = Session.get('Curves');\n    // diffs is checked -- have to add diff curves\n    var curvesLength = curves.length;\n    if (curvesLength <= 1) {\n        setInfo(\"You cannot difference less than two curves!\");\n        return false;\n    }\n\n    switch (matsPlotUtils.getPlotFormat()) {\n        case matsTypes.PlotFormats.matching:\n            var baseIndex = 0; // This will probably not default to curve 0 in the future\n            for (var ci = 1; ci < curves.length; ci++) {\n                var newCurve = $.extend(true, {}, curves[ci]);\n                newCurve.label = curves[ci].label + \"-\" + curves[0].label;\n                newCurve.color = getNextCurveColor();\n                newCurve.diffFrom = [ci, baseIndex];\n                // do not create extra diff if it already exists\n                if (_.findWhere(curves, {label: newCurve.label}) === undefined) {\n                    newCurves.push(newCurve);\n                    Session.set('Curves', newCurves);\n                    setUsedColorsAndLabels();\n                }\n            }\n            break;\n        case matsTypes.PlotFormats.pairwise:\n            var baseIndex = 0; // This will probably not default to curve 0 in the future\n            for (var ci = 1; ci < curves.length; ci++) {\n                if (ci % 2 != 0) {  // only diff on odd curves against previous curve\n                    var base_index = ci - 1;\n\n                    var newCurve = $.extend(true, {}, curves[ci]);\n                    newCurve.label = curves[ci].label + \"-\" + curves[base_index].label;\n                    newCurve.color = getNextCurveColor();\n                    newCurve.diffFrom = [ci, baseIndex];\n                    // do not create extra diff if it already exists\n                    if (_.findWhere(curves, {label: newCurve.label}) === undefined) {\n                        newCurves.push(newCurve);\n                        Session.set('Curves', newCurves);\n                        setUsedColorsAndLabels();\n                    }\n                }\n            }\n            break;\n        case matsTypes.PlotFormats.absolute:\n            var baseIndex = 0; // This will probably not default to curve 0 in the future\n            for (var ci = 1; ci < curves.length; ci++) {\n                var newCurve = $.extend(true, {}, curves[ci]);\n                newCurve.label = curves[ci].label + \"-\" + curves[0].label;\n                newCurve.color = getNextCurveColor();\n                newCurve.diffFrom = [ci, baseIndex];\n                // do not create extra diff if it already exists\n                if (_.findWhere(curves, {label: newCurve.label}) === undefined) {\n                    newCurves.push(newCurve);\n                    Session.set('Curves', newCurves);\n                    setUsedColorsAndLabels();\n                }\n            }\n            break;\n    }\n};\n\n\n// remove difference curves\n// private - not exported\nconst removeDiffs = function () {\n    var curves = Session.get('Curves');\n    var newCurves = _.reject(curves, function (curve) {\n        return curve.diffFrom != null\n    });\n    Session.set('Curves', newCurves);\n    setUsedColorsAndLabels();\n};\n\n// resolve the difference curves\n// (used after adding or removing a curve while the show diffs box is checked)\nconst checkDiffs = function () {\n    var curves = Session.get('Curves');\n    if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n        // scatter plots have no concept of difference curves.\n        return;\n    }\n    var plotFormat = matsPlotUtils.getPlotFormat();\n    if (curves.length > 1) {\n        if (plotFormat !== matsTypes.PlotFormats.none) {\n            removeDiffs();\n            addDiffs();\n        } else {\n            removeDiffs();\n        }\n    }\n};\n\n// method to display the appropriate selectors for a timeseries curve\nconst showTimeseriesFace = function () {\n    // move dates selector to plot parameters - one date range for all curves\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.timeSeries).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'none',\n            'dates': 'block',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'block',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.timeSeries);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a profile curve\nconst showProfileFace = function () {\n    // move dates selector to curve parameters - one date range for each curve\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.profile).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'block',\n            'dates': 'none',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'none',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.profile);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a dieoff curve\nconst showDieOffFace = function () {\n    // move dates selector to curve parameters - one date range for each curve\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.dieoff).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'block',\n            'dates': 'none',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'none',\n            'dieoff-type': 'block',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        // reset the value for dieoff-type, so that the checkHideOther routine will work\n        const param = matsParamUtils.getParameterForName('dieoff-type');\n        matsParamUtils.setValueTextForParamName(param.name, param.default);\n\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.dieoff);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a threshold curve\nconst showThresholdFace = function () {\n    // move dates selector to curve parameters - one date range for each curve\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.threshold).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'block',\n            'dates': 'none',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'none',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.threshold);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a valid time curve\nconst showValidTimeFace = function () {\n    // move dates selector to curve parameters - one date range for each curve\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.validtime).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'block',\n            'dates': 'none',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'none',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.validtime);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a daily model cycle curve\nconst showDailyModelCycleFace = function () {\n    // move dates selector to plot parameters - one date range for all curves\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.dailyModelCycle).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'none',\n            'dates': 'block',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'none',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'none',\n            'utc-cycle-start': 'block',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.dailyModelCycle);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a reliability curve\nconst showReliabilityFace = function () {\n    // move dates selector to curve parameters - one date range for each curve\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.reliability).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'none',\n            'dates': 'block',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'block',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'none',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.reliability);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a map\nconst showMapFace = function () {\n    // move dates selector to plot parameters - one date range for all curves\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.map).checked === true) {\n        var faceOptions;\n        faceOptions = {\n            'curve-dates': 'none',\n            'dates': 'block',\n            'region': 'none',\n            'statistic': 'none',\n            'threshold': 'none',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'none',\n            'sites': 'block',\n            'sitesMap': 'block',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.map);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a histogram\nconst showHistogramFace = function () {\n    // move dates selector to curve parameters - one date range for each curve\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.histogram).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'block',\n            'dates': 'none',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'block',\n            'histogram-yaxis-controls': 'block',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.histogram);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a contour plot\nconst showContourFace = function () {\n    // move dates selector to plot parameters - one date range for all curves\n    const isContour = document.getElementById('plot-type-' + matsTypes.PlotTypes.contour) !== null && document.getElementById('plot-type-' + matsTypes.PlotTypes.contour).checked === true;\n    const isContourDiff = document.getElementById('plot-type-' + matsTypes.PlotTypes.contourDiff) !== null && document.getElementById('plot-type-' + matsTypes.PlotTypes.contourDiff).checked === true;\n    if (isContour || isContourDiff) {\n        var faceOptions = {\n            'curve-dates': 'none',\n            'dates': 'block',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'block',\n            'y-axis-parameter': 'block'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        // //need to be consistent with the x and y axis 'hideOtherFor' settings\n        // const xAxisVal = matsParamUtils.getValueForParamName('x-axis-parameter');\n        // const yAxisVal = matsParamUtils.getValueForParamName('y-axis-parameter');\n        // if (xAxisVal === 'Fcst lead time' || yAxisVal === 'Fcst lead time') {\n        //     elem = document.getElementById('forecast-length-item');\n        //     if (elem && elem.style) {\n        //         elem.style.display = 'none';\n        //     }\n        // }\n        // if (xAxisVal === 'Valid UTC hour' || yAxisVal === 'Valid UTC hour') {\n        //     elem = document.getElementById('valid-time-item');\n        //     if (elem && elem.style) {\n        //         elem.style.display = 'none';\n        //     }\n        // }\n        // if (xAxisVal === 'Pressure level' || yAxisVal === 'Pressure level') {\n        //     elem = document.getElementById('pres-level-item');\n        //     if (elem && elem.style) {\n        //         elem.style.display = 'none';\n        //     }\n        // }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        if (isContour) {\n            Session.set('plotType', matsTypes.PlotTypes.contour);\n        } else {\n            Session.set('plotType', matsTypes.PlotTypes.contourDiff);\n        }\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a scatter plot\nconst showScatterFace = function () {\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.scatter2d).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'none',\n            'dates': 'block',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"block\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.scatter2d);\n        Session.set('lastUpdate', Date.now());   // force curveParams to re-render\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// this is no longer used, but it was once employed by the text output routines to calculate the stats for the entire curve\nconst get_err = function (sVals, sSecs) {\n    /* THIS IS DIFFERENT FROM THE ONE IN DATA_UTILS,\n       This one does not throw away outliers and it captures minVal and maxVal\n       refer to perl error_library.pl sub  get_stats\n        to see the perl implementation of these statics calculations.\n        These should match exactly those, except that they are processed in reverse order.\n     */\n    var subVals = [];\n    var subSecs = [];\n    var sVals = sVals;\n    var sSecs = sSecs;\n    var n = sVals.length;\n    var n_good = 0;\n    var sum_d = 0;\n    var sum2_d = 0;\n    var error = \"\";\n    var i;\n    for (i = 0; i < n; i++) {\n        if (sVals[i] !== null) {\n            n_good = n_good + 1;\n            sum_d = sum_d + sVals[i];\n            sum2_d = sum2_d + sVals[i] * sVals[i];\n            subVals.push(sVals[i]);\n            subSecs.push(sSecs[i]);\n        }\n    }\n    var d_mean = sum_d / n_good;\n    var sd2 = sum2_d / n_good - d_mean * d_mean;\n    var sd = sd2 > 0 ? Math.sqrt(sd2) : sd2;\n    var sd_limit = 3 * sd;\n    //console.log(\"see error_library.pl l208 These are processed in reverse order to the perl code -  \\nmean is \" + d_mean + \" sd_limit is +/- \" + sd_limit + \" n_good is \" + n_good + \" sum_d is\" + sum_d + \" sum2_d is \" + sum2_d);\n    // find minimum delta_time, if any value missing, set null\n    var last_secs = Number.MIN_VALUE;\n    var minDelta = Number.MAX_VALUE;\n    var minSecs = Number.MAX_VALUE;\n    var max_secs = Number.MIN_VALUE;\n    var minVal = Number.MAX_VALUE;\n    var maxVal = Number.MIN_VALUE;\n    for (i = 0; i < subSecs.length; i++) {\n        var secs = (subSecs[i]);\n        var delta = Math.abs(secs - last_secs);\n        if (delta < minDelta) {\n            minDelta = delta;\n        }\n        if (secs < minSecs) {\n            minSecs = secs;\n        }\n        if (secs > max_secs) {\n            max_secs = secs;\n        }\n        last_secs = secs;\n    }\n\n    var data_wg = [];\n    var n_gaps = 0;\n    n_good = 0;\n    var sum = 0;\n    var sum2 = 0;\n    var loopTime = minSecs;\n    if (minDelta < 0) {\n        error = (\"Invalid time interval - minDelta: \" + minDelta);\n    }\n    // remove data more than $sd_limit from mean\n    for (i = 0; i < subVals.length; i++) {\n        minVal = minVal < subVals[i] ? minVal : subVals[i];\n        maxVal = maxVal > subVals[i] ? maxVal : subVals[i];\n        n_good++;\n    }\n    //console.log(\"new mean after throwing away outliers is \" + sd + \" n_good is \" + n_good + \" sum is \" + sum  + \" sum2 is \" + sum2 + \" d_mean is \" + d_mean);\n    // look for gaps.... per Bill, we only need one gap per series of gaps...\n    var lastSecond = Number.MIN_VALUE;\n\n    for (i = 0; i < subSecs.length; i++) {\n        var sec = subSecs[i];\n        if (lastSecond >= 0) {\n            if (sec - lastSecond > minDelta) {\n                // insert a gap\n                data_wg.push(null);\n                n_gaps++;\n            }\n        }\n        lastSecond = sec;\n        data_wg.push(subVals[i]);\n    }\n    //console.log (\"n_gaps: \" + n_gaps +  \" time gaps in subseries\");\n\n    //from http://www.itl.nist.gov/div898/handbook/eda/section3/eda35c.htm\n    var r = [];\n    for (var lag = 0; lag <= 1; lag++) {\n        r[lag] = 0;\n        var n_in_lag = 0;\n        for (var t = 0; t < ((n + n_gaps) - lag); t++) {\n            if (data_wg[t] != null && data_wg[t + lag] != null) {\n                r[lag] += +(data_wg[t] - d_mean) * (data_wg[t + lag] - d_mean);\n                n_in_lag++;\n            }\n        }\n        if (n_in_lag > 0 && sd > 0) {\n            r[lag] /= (n_in_lag * sd * sd);\n        } else {\n            r[lag] = null;\n        }\n        //console.log('r for lag ' + lag + \" is \" + r[lag] + \" n_in_lag is \" + n_in_lag + \" n_good is \" + n_good);\n    }\n    // Betsy Weatherhead's correction, based on lag 1\n    if (r[1] >= 1) {\n        r[1] = .99999;\n    }\n    const betsy = Math.sqrt((n_good - 1) * (1 - r[1]));\n    var stde_betsy;\n    if (betsy != 0) {\n        stde_betsy = sd / betsy;\n    } else {\n        stde_betsy = null;\n    }\n    const stats = {\n        d_mean: d_mean,\n        stde_betsy: stde_betsy,\n        sd: sd,\n        n_good: n_good,\n        lag1: r[1],\n        min: minSecs,\n        max: max_secs,\n        minVal: minVal,\n        maxVal: maxVal,\n        sum: sum_d\n    };\n    //console.log(\"stats are \" + JSON.stringify(stats));\n    // stde_betsy is standard error with auto correlation\n    //console.log(\"---------\\n\\n\");\n    return stats;\n};\n\nconst showSpinner = function () {\n    if (document.getElementById(\"spinner\")) {\n        document.getElementById(\"spinner\").style.display = \"block\";\n    }\n};\nconst hideSpinner = function () {\n    if (document.getElementById(\"spinner\")) {\n        document.getElementById(\"spinner\").style.display = \"none\";\n    }\n};\n\nexport default matsCurveUtils = {\n    resetScatterApply: resetScatterApply,\n    getUsedLabels: getUsedLabels,\n    getNextCurveLabel: getNextCurveLabel,\n    getNextCurveColor: getNextCurveColor,\n    clearAllUsed: clearAllUsed,\n    clearUsedLabel: clearUsedLabel,\n    clearUsedColor: clearUsedColor,\n    setUsedLabels: setUsedLabels,\n    setUsedColorsAndLabels: setUsedColorsAndLabels,\n    addDiffs: addDiffs,\n    removeDiffs: removeDiffs,\n    checkDiffs: checkDiffs,\n    showScatterFace: showScatterFace,\n    showTimeseriesFace: showTimeseriesFace,\n    showProfileFace: showProfileFace,\n    showDieOffFace: showDieOffFace,\n    showThresholdFace: showThresholdFace,\n    showValidTimeFace: showValidTimeFace,\n    showDailyModelCycleFace: showDailyModelCycleFace,\n    showReliabilityFace: showReliabilityFace,\n    showMapFace: showMapFace,\n    showHistogramFace: showHistogramFace,\n    showContourFace: showContourFace,\n    get_err: get_err,\n    getPlotResultData: getPlotResultData,\n    //setPlotResultData: setPlotResultData,\n    resetPlotResultData: resetPlotResultData,\n    getGraphResult: getGraphResult,\n    setGraphResult: setGraphResult,\n    resetGraphResult: resetGraphResult,\n    showSpinner: showSpinner,\n    hideSpinner: hideSpinner,\n};\n\n            ","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\n\n// set the label for the hide show buttons (NO DATA) for the initial time here\nconst setNoDataLabels = function (dataset) {\n    for (var c = 0; c < dataset.length; c++) {\n        if (dataset[c].x.length === 0) {\n            Session.set(dataset[c].curveId + \"hideButtonText\", 'NO DATA');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').value = 'NO DATA';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').disabled = true;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"background-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"border-color\"] = \"black\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"color\"] = \"white\";\n            }\n            Session.set(dataset[c].curveId + \"pointsButtonText\", 'NO DATA');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-points')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').value = 'NO DATA';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').disabled = true;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"background-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"border-color\"] = \"black\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"color\"] = \"white\";\n            }\n            Session.set(dataset[c].curveId + \"errorBarButtonText\", 'NO DATA');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').value = 'NO DATA';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').disabled = true;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"background-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"border-color\"] = \"black\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"color\"] = \"white\";\n            }\n            Session.set(dataset[c].curveId + \"barChartButtonText\", 'NO DATA');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-bars')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').value = 'NO DATA';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').disabled = true;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"background-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"border-color\"] = \"black\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"color\"] = \"white\";\n            }\n            Session.set(dataset[c].curveId + \"annotateButtonText\", 'NO DATA');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').value = 'NO DATA';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').disabled = true;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"background-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"border-color\"] = \"black\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"color\"] = \"white\";\n            }\n        } else {\n            Session.set(dataset[c].curveId + \"hideButtonText\", 'hide curve');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').value = 'hide curve';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').disabled = false;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"background-color\"] = \"white\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"border-color\"] = dataset[c].marker.color;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"color\"] = dataset[c].marker.color;\n            }\n            Session.set(dataset[c].curveId + \"pointsButtonText\", 'hide points');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-points')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').value = 'hide points';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').disabled = false;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"background-color\"] = \"white\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"border-color\"] = dataset[c].marker.color;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"color\"] = dataset[c].marker.color;\n            }\n            Session.set(dataset[c].curveId + \"errorBarButtonText\", 'hide error bars');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').value = 'hide error bars';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').disabled = false;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"background-color\"] = \"white\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"border-color\"] = dataset[c].marker.color;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"color\"] = dataset[c].marker.color;\n            }\n            Session.set(dataset[c].curveId + \"barChartButtonText\", 'hide bars');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-bars')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').value = 'hide bars';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').disabled = false;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"background-color\"] = \"white\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"border-color\"] = dataset[c].marker.color;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"color\"] = dataset[c].marker.color;\n            }\n            Session.set(dataset[c].curveId + \"annotateButtonText\", 'hide annotation');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').value = 'hide annotation';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').disabled = false;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"background-color\"] = \"white\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"border-color\"] = dataset[c].marker.color;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"color\"] = dataset[c].marker.color;\n            }\n        }\n    }\n};\n\nconst setNoDataLabelsMap = function (dataset) {\n    for (var c = 0; c < dataset.length; c++) {\n        if (dataset[c].lat.length === 0) {\n            Session.set(dataset[c].curveId + \"heatMapButtonText\", 'NO DATA');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').value = 'NO DATA';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').disabled = true;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"background-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"border-color\"] = \"black\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"color\"] = \"white\";\n            }\n        } else {\n            Session.set(dataset[c].curveId + \"heatMapButtonText\", 'show heat map');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').value = 'show heat map';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').disabled = false;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"background-color\"] = \"white\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"border-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"color\"] = \"red\";\n            }\n        }\n    }\n};\n\n// plot width helper used in multiple places\nconst width = function (plotType) {\n    switch (plotType) {\n        case matsTypes.PlotTypes.profile:\n        case matsTypes.PlotTypes.scatter2d:\n            // set the width square\n            return squareWidthHeight();\n            break;\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.dailyModelCycle:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.threshold:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.reliability:\n        case matsTypes.PlotTypes.map:\n        case matsTypes.PlotTypes.histogram:\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n        default:\n            // set the width wide\n            return rectangleWidth();\n            break;\n    }\n};\n\n// plot height helper used in multiple places\nconst height = function (plotType) {\n    switch (plotType) {\n        case matsTypes.PlotTypes.profile:\n        case matsTypes.PlotTypes.scatter2d:\n            // set the height square\n            return squareWidthHeight();\n            break;\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.dailyModelCycle:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.threshold:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.reliability:\n        case matsTypes.PlotTypes.map:\n        case matsTypes.PlotTypes.histogram:\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n        default:\n            // set the height wide\n            return rectangleHeight();\n            break;\n    }\n};\n\nconst standAloneWidth = function () {\n    var vpw = Math.min(document.documentElement.clientWidth, window.innerWidth || 0);\n    return (.9 * vpw).toString() + \"px\";\n};\nconst standAloneHeight = function () {\n    var vph = Math.min(document.documentElement.clientHeight, window.innerHeight || 0);\n    return (.825 * vph).toString() + \"px\";\n};\n\nconst squareWidthHeight = function () {\n    var vpw = Math.min(document.documentElement.clientWidth, window.innerWidth || 0);\n    var vph = Math.min(document.documentElement.clientHeight, window.innerHeight || 0);\n    var min = Math.min(vpw, vph);\n    if (min < 400) {\n        return (.9 * min).toString() + \"px\";\n    } else {\n        return (.7 * min).toString() + \"px\";\n    }\n};\nconst rectangleWidth = function () {\n    var vpw = Math.min(document.documentElement.clientWidth, window.innerWidth || 0);\n    if (vpw < 400) {\n        return (.9 * vpw).toString() + \"px\";\n    } else {\n        return (.9 * vpw).toString() + \"px\";\n    }\n};\nconst rectangleHeight = function () {\n    var vph = Math.min(document.documentElement.clientHeight, window.innerHeight || 0);\n    if (vph < 400) {\n        return (.8 * vph).toString() + \"px\";\n    } else {\n        return (.7 * vph).toString() + \"px\";\n    }\n};\n\nconst resizeGraph = function (plotType) {\n    document.getElementById('placeholder').style.width = width(plotType);\n    document.getElementById('placeholder').style.height = height(plotType);\n};\n\n// helper to bring up the text page\nconst setTextView = function (plotType) {\n    //shows text page and proper text output, hides everything else\n    document.getElementById('placeholder').style.width = width(plotType);\n    document.getElementById('placeholder').style.height = height(plotType);\n    document.getElementById(\"text-page-button-group\").style.display = \"block\";\n    document.getElementById(\"plot-page-button-group\").style.display = \"none\";\n    document.getElementById(\"curves\").style.display = \"none\";\n    document.getElementById(\"graphView\").style.display = \"none\";\n    document.getElementById(\"textView\").style.display = \"block\";\n    document.getElementById('plot-control-button-group').style.display = \"none\";\n};\n\n// helper to bring up the graph page\nconst setGraphView = function (plotType) {\n    document.getElementById('placeholder').style.width = width(plotType);\n    document.getElementById('placeholder').style.height = height(plotType);\n    //shows graph page, hides everything else\n    document.getElementById('graph-container').style.display = 'block';\n    document.getElementById('plotType').style.display = 'none';\n    document.getElementById('paramList').style.display = 'none';\n    document.getElementById('plotList').style.display = 'none';\n    document.getElementById('curveList').style.display = 'none';\n    if (document.getElementById(\"plotTypeContainer\")) {\n        document.getElementById(\"plotTypeContainer\").style.display = \"none\";\n    }\n    if (document.getElementById(\"scatter2d\")) {\n        document.getElementById(\"scatter2d\").style.display = \"none\";\n    }\n    if (document.getElementById(\"scatterView\")) {\n        document.getElementById(\"scatterView\").style.display = \"none\";\n    }\n    document.getElementById(\"text-page-button-group\").style.display = \"none\";\n    document.getElementById(\"plot-page-button-group\").style.display = \"block\";\n    document.getElementById(\"curves\").style.display = \"block\";\n    document.getElementById(\"graphView\").style.display = \"block\";\n    document.getElementById(\"textView\").style.display = \"none\";\n    if (Session.get('plotType') !== matsTypes.PlotTypes.map) {\n        document.getElementById('plot-control-button-group').style.display = \"block\";\n    } else {\n        document.getElementById('plot-control-button-group').style.display = \"none\";\n    }\n};\n\n// helper to bring up the graph page in a pop-up window\nconst standAloneSetGraphView = function () {\n    //shows graph page, hides everything else\n    document.getElementById('placeholder').style.width = standAloneWidth();\n    document.getElementById('placeholder').style.height = standAloneHeight();\n    document.getElementById('graph-container').style.display = 'block';\n    document.getElementById(\"curves\").style.display = \"block\";\n    document.getElementById(\"graphView\").style.display = \"block\";\n};\n\n// helper to bring up the main selector page\nconst setDefaultView = function () {\n    // show elements of the main page\n    if (document.getElementById('paramList')) {\n        document.getElementById('paramList').style.display = 'block';\n    }\n    if (document.getElementById('plotList')) {\n        document.getElementById('plotList').style.display = 'block';\n    }\n    if (document.getElementById('curveList')) {\n        document.getElementById('curveList').style.display = 'block';\n    }\n    if (document.getElementById(\"plotTypeContainer\")) {\n        document.getElementById(\"plotTypeContainer\").style.display = \"block\";\n    }\n    if (document.getElementById(\"scatterView\")) {\n        document.getElementById(\"scatterView\").style.display = \"block\";\n    }\n    if (document.getElementById(\"scatter2d\")) {\n        document.getElementById(\"scatter2d\").style.display = \"block\";\n    }\n    // hide graph page\n    if (document.getElementById('graph-container')) {\n        document.getElementById('graph-container').style.display = 'none';\n    }\n    document.getElementById(\"plot-page-button-group\").style.display = \"block\";\n    document.getElementById('plot-control-button-group').style.display = \"block\";\n    // hide text page\n    document.getElementById(\"textView\").style.display = \"none\";\n};\n\n\nconst downloadFile = function (fileURL, fileName) {\n    // for non-IE\n    if (!window.ActiveXObject) {\n        var save = document.createElement('a');\n        save.href = fileURL;\n        save.target = '_blank';\n        var filename = fileURL.substring(fileURL.lastIndexOf('/') + 1);\n        save.download = fileName || filename;\n        if (navigator.userAgent.toLowerCase().match(/(ipad|iphone|safari)/) && navigator.userAgent.search(\"Chrome\") < 0) {\n            document.location = save.href;\n        // window event not working here\n        } else {\n            var evt = new MouseEvent('click', {\n                'view': window,\n                'bubbles': true,\n                'cancelable': false\n            });\n            save.dispatchEvent(evt);\n            (window.URL || window.webkitURL).revokeObjectURL(save.href);\n        }\n    }\n\n    // for IE < 11\n    else if (!!window.ActiveXObject && document.execCommand) {\n        var _window = window.open(fileURL, '_blank');\n        _window.document.close();\n        _window.document.execCommand('SaveAs', true, fileName || fileURL)\n        _window.close();\n    }\n};\n\nexport default matsGraphUtils = {\n    setNoDataLabels: setNoDataLabels,\n    setNoDataLabelsMap: setNoDataLabelsMap,\n    width: width,\n    height: height,\n    standAloneWidth: standAloneWidth,\n    standAloneHeight: standAloneHeight,\n    resizeGraph: resizeGraph,\n    setTextView: setTextView,\n    setGraphView: setGraphView,\n    standAloneSetGraphView: standAloneSetGraphView,\n    setDefaultView: setDefaultView,\n    downloadFile: downloadFile\n};","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsCollections, matsMethods, matsParamUtils, matsPlotUtils, matsTypes} from 'meteor/randyp:mats-common';\n\n// method to refresh the peers of the current selector\nconst refreshPeer = function (event, param) {\n    try {\n        const peerName = param.peerName;\n        if (peerName !== undefined) {\n            // refresh the peer\n            const targetParam = matsParamUtils.getParameterForName(peerName);\n            const targetId = targetParam.name + '-' + targetParam.type;\n            const targetElem = document.getElementById(targetId);\n            const refreshMapEvent = new CustomEvent(\"refresh\", {\n                detail: {\n                    refElement: null\n                }\n            });\n            targetElem.dispatchEvent(refreshMapEvent);\n        }\n        refreshDependents(event, param);\n    } catch (e) {\n        e.message = \"INFO: Error in select.js refreshPeer: \" + e.message;\n        setInfo(e.message);\n    }\n};\n\n// method to refresh the dependents of the current selector\nconst refreshDependents = function (event, param) {\n    try {\n        const dependentNames = param.dependentNames;\n        if (dependentNames && Object.prototype.toString.call(dependentNames) === '[object Array]' && dependentNames.length > 0) {\n            // refresh the dependents\n            var selectAllbool = false;\n            for (var i = 0; i < dependentNames.length; i++) {\n                const name = dependentNames[i];\n                const targetParam = matsParamUtils.getParameterForName(name);\n                var targetId;\n                if (targetParam.type === matsTypes.InputTypes.dateRange) {\n                    targetId = \"element-\" + targetParam.name;\n                } else {\n                    targetId = targetParam.name + '-' + targetParam.type;\n                }\n                const targetElem = document.getElementById(targetId);\n\n                if (document.getElementById('selectAll')) {\n                    selectAllbool = document.getElementById('selectAll').checked;\n                }\n                try {\n                    targetElem.dispatchEvent(new CustomEvent(\"refresh\"))\n                } catch (re) {\n                    re.message = \"INFO: refreshDependents of: \" + param.name + \" dependent: \" + targetParam.name + \" - error: \" + re.message;\n                    setInfo(re.message);\n                }\n                const elements = targetElem.options;\n                const select = true;\n                if (targetElem.multiple && elements !== undefined && elements.length > 0) {\n                    if (selectAllbool) {\n                        for (var i1 = 0; i1 < elements.length; i1++) {\n                            elements[i1].selected = select;\n                        }\n                        matsParamUtils.setValueTextForParamName(name, \"\");\n                    } else {\n                        const previously_selected = Session.get('selected');\n                        for (var i2 = 0; i2 < elements.length; i2++) {\n                            if (_.indexOf(previously_selected, elements[i2].text) != -1) {\n                                elements[i2].selected = select;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        e.message = \"INFO: Error in select.js refreshDependents: \" + e.message;\n        setInfo(e.message);\n    }\n};\n\n// check for enable controlled - This select might have control of another selector\nconst checkDisableOther = function (param, firstRender) {\n    try {\n        if (param.disableOtherFor !== undefined) {\n            // this param controls the enable/disable properties of at least one other param.\n            // Use the options to enable disable that param.\n            const controlledSelectors = Object.keys(param.disableOtherFor);\n            for (var i = 0; i < controlledSelectors.length; i++) {\n                const elem = matsParamUtils.getInputElementForParamName(param.name);\n                if (!elem) {\n                    return;\n                }\n                const selectedOptions = elem.selectedOptions;\n                const selectedText = selectedOptions && selectedOptions.length > 0 ? selectedOptions[0].text : \"\";\n                if ((firstRender == true && param.default == param.hideOtherFor[controlledSelectors[i]]) ||\n                    (param.disableOtherFor[controlledSelectors[i]] === matsTypes.InputTypes.unused && selectedText === \"\") ||\n                    $.inArray(selectedText, param.disableOtherFor[controlledSelectors[i]]) !== -1) {\n                    matsParamUtils.getInputElementForParamName(controlledSelectors[i]).disabled = true;\n                    matsParamUtils.setValueTextForParamName(controlledSelectors[i], matsTypes.InputTypes.unused);\n                } else {\n                    matsParamUtils.getInputElementForParamName(controlledSelectors[i]).disabled = false;\n                }\n            }\n        }\n    } catch (e) {\n        e.message = \"INFO: Error in select.js checkDisableOther: \" + e.message;\n        setInfo(e.message);\n    }\n};\n\n// check for hide controlled - This select might have control of another selector's visibility\nconst checkHideOther = function (param, firstRender) {\n    try {\n        if (param.hideOtherFor !== undefined) {\n            // this param controls the visibility of at least one other param.\n            const controlledSelectors = Object.keys(param.hideOtherFor);\n            for (var i = 0; i < controlledSelectors.length; i++) {\n                const elem = matsParamUtils.getInputElementForParamName(param.name);\n                if (!elem) {\n                    return;\n                }\n                const selectedOptions = elem.selectedOptions;\n                const selectedText = selectedOptions && selectedOptions.length > 0 ? selectedOptions[0].text : \"\";\n\n                var otherInputElement = matsParamUtils.getInputElementForParamName(controlledSelectors[i]);\n\n                var selectorControlElem;\n                if ((firstRender == true && param.default == param.hideOtherFor[controlledSelectors[i]]) ||\n                    (param.hideOtherFor[controlledSelectors[i]] === matsTypes.InputTypes.unused && selectedText === \"\") ||\n                    $.inArray(selectedText, param.hideOtherFor[controlledSelectors[i]]) !== -1) {\n                    selectorControlElem = document.getElementById(controlledSelectors[i] + '-item');\n                    if (selectorControlElem && selectorControlElem.style) {\n                        selectorControlElem.style.display = \"none\";\n                    }\n                    matsParamUtils.setValueTextForParamName(controlledSelectors[i], matsTypes.InputTypes.unused);\n                } else {\n                    selectorControlElem = document.getElementById(controlledSelectors[i] + '-item');\n                    if (selectorControlElem && selectorControlElem.style) {\n                        selectorControlElem.style.display = \"block\";\n                    }\n                    otherInputElement && otherInputElement.options && otherInputElement.selectedIndex >= 0 &&\n                    otherInputElement.options[otherInputElement.selectedIndex].scrollIntoView();\n                }\n            }\n            matsSelectUtils.checkDisableOther(param), firstRender;\n        }\n    } catch (e) {\n        e.message = \"INFO: Error in select.js checkHideOther: \" + e.message;\n        setInfo(e.message);\n    }\n};\n\n// refresh the selector in question to the appropriate options indicated by the values of any superior selectors\nconst refresh = function (event, paramName) {\n    if (paramName.search('axis') === 1) {\n        // this is a \"brother\" (hidden) scatterplot param. There is no need to refresh it or add event listeners etc.\n        return;\n    }\n    const param = matsParamUtils.getParameterForName(paramName);\n    const elem = matsParamUtils.getInputElementForParamName(paramName);\n\n    /*\n    OptionsGroups are a mechanism for displaying the select options in groups.\n    A disabled option is used for the group header. Disabled options simply show up\n    in the selector list in bold font and act as group titles. They are disabled so that\n    they cannot be clicked. DisabledOptions are the headers that the options are to be grouped under.\n    disabledOptions are optional so if there are disabledOptions they are the keys in the optionsGroups\n    and they are the sort order of those keys.\n    */\n    const disabledOptions = matsParamUtils.getDisabledOptionsForParamName(paramName);\n    const optionsGroups = param.optionsGroups;\n    const optionsMap = param.optionsMap;\n\n    const superiorNames = param.superiorNames;\n    const superiorDimensionality = superiorNames !== undefined && superiorNames !== null && superiorNames.length > 0 && Array.isArray(superiorNames[0]) ? superiorNames.length : 1;\n    var superiors = [];\n    // get a list of the current superior selected values - in order of superiority i.e. [databaseValue,dataSourceValue]\n    var sNames;\n    if (superiorNames !== undefined) {\n        if (superiorDimensionality === 1) {\n            sNames = superiorNames;\n        } else {\n            sNames = superiorNames[0];\n        }\n        for (var sn = 0; sn < sNames.length; sn++) {\n            var superiorElement = matsParamUtils.getInputElementForParamName(sNames[sn]);\n            var selectedSuperiorValue = superiorElement.options[superiorElement.selectedIndex] === undefined ? matsParamUtils.getParameterForName(sNames[sn]).default : superiorElement.options[superiorElement.selectedIndex].text;\n            superiors[0] = superiors[0] === undefined ? [] : superiors[0];\n            superiors[0].push({element: superiorElement, value: selectedSuperiorValue});\n        }\n        for (var sNameIndex = 1; sNameIndex < superiorDimensionality; sNameIndex++) {\n            sNames = superiorNames[sNameIndex];\n            for (var sn = 0; sn < sNames.length; sn++) {\n                var superiorElement = matsParamUtils.getInputElementForParamName(sNames[sn]);\n                var selectedSuperiorValue = superiorElement.options[superiorElement.selectedIndex] === undefined ? matsParamUtils.getParameterForName(sNames[sn]).default : superiorElement.options[superiorElement.selectedIndex].text;\n                superiors[sNameIndex] = superiors[sNameIndex] === undefined ? [] : superiors[sNameIndex];\n                superiors[sNameIndex].push({element: superiorElement, value: selectedSuperiorValue});\n            }\n        }\n    }\n    /*\n    So what are superiors now.....\n    superiors = [[{element:anElement,value:aValue},{element:anElement,value:aValue}...]]\n    or they might be [[{element:anElement,value:aValue},{element:anElement,value:aValue}...],[{element:anElement,value:aValue},{element:anElement,value:aValue}...],...]\n\n\n     Axis-brothers:\n     Axis-brothers are for scatter plots. They are a second hidden set of parameters that apply to a different axis.\n     Because there may be axis \"brothers\" This refresh must go and\n     see if there are any brother elements that are essentially hidden copies\n     of this one, and also refresh their options lists\n\n     Superior Heirarchy:\n     There can be a heirarchy of superiors and dependents. The superiorNames are a list of paramNames. The most superior has the 0th index and\n     the least superior has the highest index.\n     The Refresh uses the superiors to get the appropriate options for a given options map.\n     The way it works is that superiors are always refreshed first. The superior heirarchy selections are then used by a\n     dependent to retrieve its appropriate optionsMap from the superiorOptionsMap.\n     superiorsOptionsMap = {\n        mostSuperiorValue0: {  // optionsMap for the most superior first value\n            nextSuperiorValue0: [value0,value1,value2,value3,...],\n            nextSuperiorValue1: [value0,value1,value2,value3,...],\n            nextSuperiorValue2: [value0,value1,value2,value3,...],\n            ...\n        },\n        mostSuperiorValue1:{  // optionsMap for the most superior second value\n            nextSuperiorValue0: [value0,value1,value2,value3,...],\n            nextSuperiorValue1: [value0,value1,value2,value3,...],\n            nextSuperiorValue2: [value0,value1,value2,value3,...],\n            ...\n        },\n        ...,\n        mostSuperiorValue2:{  // optionsMap for the most superior third value\n            nextSuperiorValue0: [value0,value1,value2,value3,...],\n            nextSuperiorValue1: [value0,value1,value2,value3,...],\n            nextSuperiorValue2: [value0,value1,value2,value3,...],\n            ...\n        },\n     }\n     */\n\n    // find all the elements that have ids like .... \"x|y|z\" + \"axis-\" + this.name\n    const name = param.name;\n    const elems = document.getElementsByClassName(\"data-input\") === undefined ? [] : document.getElementsByClassName(\"data-input\");\n    Session.set('selected', $(elem).val());\n\n    if (elem && elem.options) {\n        if (elem.selectedIndex === undefined || elem.selectedIndex === -1) {\n            if (param.default !== matsTypes.InputTypes.unused) {\n                elem.selectedIndex = 0;\n            }\n        }\n        const selectedText = elem.selectedIndex >= 0 ? elem.options[elem.selectedIndex].text : matsTypes.InputTypes.unused;\n        var brothers = [];\n        for (var i = 0; i < elems.length; i++) {\n            if (elems[i].id.indexOf(name) >= 0 && elems[i].id !== elem.id)\n                brothers.push(elems[i]);\n        }\n\n        var myOptions = [];\n        var selectedSuperiorValues = [];\n\n        try {\n            // index down through the options for the list of superiors\n            // starting with the most superior down through the least superior\n            // and get the options list for the first set of superiors.\n            // These are the ancestral options.\n            if (param.optionsMap) {\n                var firstSuperiorOptions = optionsMap;\n                var theseSuperiors = superiors === undefined || superiors.length === 0 ? [] : superiors[0];\n                for (var theseSuperiorsIndex = 0; theseSuperiorsIndex < theseSuperiors.length; theseSuperiorsIndex++) {\n                    var superior = theseSuperiors[theseSuperiorsIndex];\n                    var selectedSuperiorValue = superior.value;\n                    firstSuperiorOptions = firstSuperiorOptions[selectedSuperiorValue];\n                }\n                myOptions = Array.isArray(firstSuperiorOptions) ? firstSuperiorOptions : Object.keys(firstSuperiorOptions);\n            } else {\n                myOptions = param.options;\n            }\n\n            // need to get the ancestral truth options because we may need to intersect the options\n\n\n            /* tricky little bit here:\n            SuperiorDimensionality:\n             It is possible to have two superior options maps.. i.e. datasource and truth.\n             In that case the superiorNames won't look like [\"something\",\"somethingelse\"],\n             instead it will look like [[\"something\",\"somethingelse\"],[\"someotherthing\",\"someotherthingelse\"]]\n             i.e. it will be a multidimensional array.\n\n             If the controlButton for one of these multi-dimensional superior elements is hidden ....\n             matsParamUtils.getControlElementForParamName(superior.element.name).offsetParent !== null\n             it has been hidden because it has a visibility dependency on another param\n             i.e. truth-data-source and truth-variable (for mean there would be no truth, but for bias\n             there must always be truth...).\n             In this case these are dependent upon statistic such that if the statistic is \"mean\" the truth-data-source and truth-variable\n             are hidden. See the wfip2 main.js statistic param as an example....\n             \"disableOtherFor:{'truth-data-source':[statisticOptionsMap.mean][0]},\"\n             and\n             \"hideOtherFor:{'truth-data-source':[statisticOptionsMap.mean][0]},\"\n             are the fields that cause the truth-data-source to be hidden when statistic is set to \"mean\".\n             In that condition (the controlButton is hidden) the superior should not be used as an intersection in the selected sites.\n             matsParamUtils.getControlElementForParamName(superior.element.name).offsetParent will be null if the controlButton\n             for this element (this superior) is hidden. That is the tricky part ... it will be null.\n\n             Also the unused superior is tested against the superior according to the truth table...\n             used && unused  -> use the used\n             unused and used -> use the used\n             used and used -> use the intersection\n             unused and unused - set the options to []\n\n             A select may have a list of disabledOptions. These are used as optionGroup markers.\n             */\n\n            // need to get the actual options here\n            for (var sNameIndex = 1; sNameIndex < superiorDimensionality; sNameIndex++) {\n                // index down through the options for the list of superiors\n                // starting with the most superior down through the least superior\n                // and get the options list for the first set of superiors.\n                // These are the ancestral options.\n                var nextSuperiorOptions = optionsMap;\n                var theseSuperiors = superiors === undefined || superiors.length === 0 ? [] : superiors[sNameIndex];\n                for (var theseSuperiorsIndex = 0; theseSuperiorsIndex < theseSuperiors.length; theseSuperiorsIndex++) {\n                    var superior = theseSuperiors[theseSuperiorsIndex];\n                    var selectedSuperiorValue = superior.value;\n                    nextSuperiorOptions = nextSuperiorOptions[selectedSuperiorValue];\n                }\n                // since we now have multiple options we have to intersect them\n                myOptions = _.intersection(myOptions, nextSuperiorOptions);\n            }\n            if (myOptions === []) {  // none used - set to []\n                matsParamUtils.setValueTextForParamName(name, matsTypes.InputTypes.unused);\n            }\n        } catch (e) {\n            e.message = \"INFO: Error in select.js refresh: determining options from superiors: \" + e.message;\n            setInfo(e.message);\n        }\n\n        try {\n            // reset the options of the select\n            // if the options are null it might be that this is the initial setup.\n            // so use the optionsmap and the default options for the map\n            // it might also mean that there are no superiors for this param\n            if (myOptions == null) {\n                // get the default options\n                if (optionsGroups) {\n                    // optionGroups are an ordered map. It probably has options that are in the disabledOption list\n                    // which are used as markers in the select options pulldown. This is typical for models\n                    const optionsGroupsKeys = Object.keys(optionsGroups);\n                    for (var k = 0; k < optionsGroupsKeys.length; k++) {\n                        if (myOptions === null) {\n                            myOptions = [];\n                            myOptions.push(optionsGroupsKeys[k]);\n                            myOptions = myOptions.concat(optionsGroups[optionsGroupsKeys[k]]); // the primary group does not get sorted\n                        } else {\n                            myOptions.push(optionsGroupsKeys[k]);\n                            myOptions = myOptions.concat(optionsGroups[optionsGroupsKeys[k]].sort()); // non primary  groups get sorted\n                        }\n                    }\n                } else {\n                    myOptions = param.options;\n                }\n            }\n            var optionsAsString = \"\";\n            if (myOptions === undefined || myOptions == null) {\n                return;\n            }\n            var firstGroup = true;\n            for (var i = 0; i < myOptions.length; i++) {\n                var dIndex = disabledOptions === undefined ? -1 : disabledOptions.indexOf(myOptions[i]);\n                if (dIndex >= 0) {   // the option was found in the disabled options so it needs to be an optgroup label\n                    // disabled option\n                    if (firstGroup === true) {\n                        // first in group\n                        optionsAsString += \"<optgroup label=\" + myOptions[i] + \">\";\n                        firstGroup = false;\n                    } else {\n                        optionsAsString += \"</optgroup>\";\n                        optionsAsString += \"<optgroup label=\" + myOptions[i] + \">\";\n                    }\n                } else {\n                    //regular option - the option was not found in the disabled options\n                    optionsAsString += \"<option value='\" + myOptions[i] + \"'>\" + myOptions[i] + \"</option>\";\n                }\n            }\n            if (disabledOptions !== undefined) {\n                optionsAsString += \"</optgroup>\";\n            }\n            $('select[name=\"' + name + '\"]').empty().append(optionsAsString);\n            //reset the selected index if it had been set prior (the list may have changed so the index may have changed)\n            var selectedOptionIndex;\n            if (selectedText === 'initial') {\n                selectedOptionIndex = myOptions.indexOf(param.default);\n            } else {\n                selectedOptionIndex = myOptions.indexOf(selectedText);\n            }\n            var sviText = \"\";\n            if (selectedOptionIndex == -1 && elem.selectedIndex >= 0) {\n                for (var svi = 0; svi < selectedSuperiorValues.length; svi++) {\n                    superior = superiors[svi];\n                    if (matsParamUtils.getControlElementForParamName(superior.element.name).offsetParent !== null) {\n                        if (svi > 0) {\n                            sviText += \" and \";\n                        }\n                        sviText += selectedSuperiorValues[svi]\n                    }\n                }\n                setInfo(\"I changed your selected \" + name + \": '\" + selectedText + \"' to '\" + myOptions[0] + \"' because '\" + selectedText + \"' is no longer an option for \" + sviText);\n            }\n            // if the selectedText existed in the new options list then the selectedOptionIndex won't be -1 and we have to choose the default option\n            if (selectedOptionIndex === -1) {\n                // if the param default is unused set it to unused\n                // else just choose the 0th element in the element options. default?\n                if (param.default === matsTypes.InputTypes.unused) {\n                    matsParamUtils.setValueTextForParamName(name, matsTypes.InputTypes.unused);\n                } else {\n                    elem.selectedIndex = 0;\n                    elem && elem.options && elem.selectedIndex >= 0 && elem.options[elem.selectedIndex].scrollIntoView();\n                    elem && elem.options && elem.selectedIndex >= 0 && matsParamUtils.setValueTextForParamName(name, elem.options[elem.selectedIndex].text);\n                }\n            } else {\n                elem.selectedIndex = selectedOptionIndex;\n                elem && elem.options && elem.selectedIndex >= 0 && elem.options[elem.selectedIndex].scrollIntoView();\n                elem && elem.options && elem.selectedIndex >= 0 && matsParamUtils.setValueTextForParamName(name, elem.options[elem.selectedIndex].text);\n            }\n            for (var i = 0; i < brothers.length; i++) {\n                const belem = brothers[i];\n                const belemSelectedOptions = $(belem.selectedOptions).map(function () {\n                    return (this.value)\n                }).get();\n                if (belemSelectedOptions === undefined || belemSelectedOptions.length === 0) {\n                    belem.options = [];\n                    for (var i1 = 0; i1 < myOptions.length; i1++) {\n                        belem.options[belem.options.length] = new Option(myOptions[i1], myOptions[i1], i1 == 0, i1 == 0);\n                    }\n                }\n            }\n        } catch (e) {\n            e.message = \"INFO: Error in select.js refresh: resetting selected options: \" + e.message;\n            setInfo(e.message);\n        }\n    }\n    refreshPeer(event, param);\n};  // refresh function\n\nexport default matsSelectUtils = {\n    refresh: refresh,\n    refreshPeer: refreshPeer,\n    refreshDependents: refreshDependents,\n    checkDisableOther: checkDisableOther,\n    checkHideOther: checkHideOther\n};\n\n            ","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/31/16.\n */\nimport './curve_util.js';\nimport './graph_util.js';\nimport './select_util.js';\nimport './init.js';\nimport '../both';\nimport './routes.js';\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport matsCollections from 'meteor/randyp:mats-common';\nif (Meteor.isClient) {\n    Meteor.subscribe(\"CurveParams\");\n    Meteor.subscribe(\"Scatter2dParams\");\n    Meteor.subscribe(\"SavedCurveParams\");\n    Meteor.subscribe(\"PlotParams\");\n    Meteor.subscribe(\"PlotGraphFunctions\");\n    Meteor.subscribe(\"RegionsPerModel\");\n    Meteor.subscribe(\"SitesPerModel\");\n    Meteor.subscribe(\"RegionDescriptions\");\n    Meteor.subscribe(\"Models\");\n    Meteor.subscribe(\"FcstLensPerModel\");\n    Meteor.subscribe(\"ColorScheme\");\n    Meteor.subscribe(\"Settings\");\n    Meteor.subscribe(\"CurveSettings\");\n    Meteor.subscribe(\"SentAddresses\");\n    Meteor.subscribe(\"Roles\");\n    Meteor.subscribe(\"Authorization\");\n    Meteor.subscribe(\"Credentials\");\n    Meteor.subscribe(\"Databases\");\n    Meteor.subscribe(\"CurveTextPatterns\");\n    Meteor.subscribe(\"ScatterAxisTextPattern\");\n    Meteor.subscribe(\"RangePerDescriptor\");\n    Meteor.subscribe(\"SiteMap\");\n    Meteor.subscribe(\"StationMap\");\n    Meteor.subscribe(\"appName\");\n    Meteor.subscribe(\"LayoutStoreCollection\");\n    Session.set('Curves', []);\n    Session.set('PlotParams', []);\n\n    Accounts.ui.config({\n        requestOfflineToken: {\n            google: true\n        }\n    });\n\n    const ref = location.href;\n    const pathArray = location.href.split('/');\n    const protocol = pathArray[0];\n    const hostport = pathArray[2];\n    const hostName = hostport.split(':')[0];\n    const app = pathArray[3] == \"\" ? \"/\" : pathArray[3];\n    const matsRef = protocol + \"//\" + hostport;\n    const helpRef = ref.endsWith('/') ? ref + \"help\" : ref + \"/help\";\n    Session.set(\"app\", {appName: app, matsref: matsRef, appref: ref, helpref: helpRef, hostName: hostName});\n    var collections = Object.keys(matsCollections).map(key => matsCollections[key]);\n    Session.set(\"Mongol\", {\n        'collections': collections,\n        'display': false,\n        'opacity_normal': \".7\",\n        'opacity_expand': \".9\",\n        'disable_warning': true\n    });\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport { FlowRouter } from 'meteor/ostrio:flow-router-extra';\nFlowRouter.route('/', {\n    name: 'main',\n    action() {\n        this.render('Home')\n    }\n});\n\nFlowRouter.route('/CSV/:graphFunction/:key/:matching/:appName', {\n    name: 'csv',\n    action(params) {\n        console.log(\"in csv route\");\n        window.location.href=FlowRouter.path;\n    }\n});\n\nFlowRouter.route('/JSON/:graphFunction/:key/:matching/:appName', {\n    name: 'json',\n    action(params) {\n        console.log(\"in json route\");\n        window.location.href=FlowRouter.path;\n    }\n});\n\n\nFlowRouter.route('/preview/:graphFunction/:key/:matching/:appName', {\n    name: 'preview',\n    action(params) {\n        console.log(\"in preview route- setting params\", params);\n        this.render('GraphStandAlone', params);\n    }\n});\n\n\nFlowRouter.route('/gsd/mats/*/preview/:graphFunction/:key/:matching/:appName', {\n    name: 'preview',\n    action(params) {\n        console.log(\"in preview route- setting params\", params);\n        this.render('GraphStandAlone', params);\n    }\n});\n\nFlowRouter.route('/gsd/mats/*/', {\n    name: 'main',\n    action() {\n        this.render('Home')\n    }\n});\n\nFlowRouter.route('*', {\n    action() {\n        console.log ('route: ' + ' not found' );\n        this.render('notFound');\n    }\n});\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsPlotUtils} from 'meteor/randyp:mats-common';\n\n//this function checks if two JSON objects are identical\nconst areObjectsEqual = function (o, p) {\n    if ((o && !p) || (p && !o)) {\n        return false;\n    }\n    if (JSON.stringify(o) === JSON.stringify(p)) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\n//this function checks if values of subArray are also in superArray\nconst arrayContainsArray = function (superArray, subArray) {\n    superArray.sort(function (a, b) {\n        return Number(a) - Number(b);\n    });\n    subArray.sort(function (a, b) {\n        return Number(a) - Number(b);\n    });\n    var i, j;\n    for (i = 0, j = 0; i < superArray.length && j < subArray.length;) {\n        if (superArray[i] < subArray[j]) {\n            ++i;\n        } else if (superArray[i] === subArray[j]) {\n            ++i;\n            ++j;\n        } else {\n            // subArray[j] not in superArray, so superArray does not contain all elements of subArray\n            return false;\n        }\n    }\n    // make sure there are no elements left in sub\n    return j === subArray.length;\n};\n\n//this function checks if the entire array subArray is contained in superArray\nconst arrayContainsSubArray = function (superArray, subArray) {\n    var i, j, current;\n    for (i = 0; i < superArray.length; ++i) {\n        if (subArray.length === superArray[i].length) {\n            current = superArray[i];\n            for (j = 0; j < subArray.length && subArray[j] === current[j]; ++j) ;\n            if (j === subArray.length)\n                return true;\n        }\n    }\n    return false;\n};\n\n//this function checks if two arrays are identical\nconst arraysEqual = function (a, b) {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length !== b.length) return false;\n    for (var i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n};\n\nconst arrayUnique = function(a) {\n    var arr = [];\n    for(var i = 0; i < a.length; i++) {\n        if(!arr.includes(a[i])) {\n            arr.push(a[i]);\n        }\n    }\n    return arr;\n};\n\n//this function finds the position of the array subArray in superArray\nconst findArrayInSubArray = function (superArray, subArray) {\n    var i, j, current;\n    for (i = 0; i < superArray.length; ++i) {\n        if (subArray.length === superArray[i].length) {\n            current = superArray[i];\n            for (j = 0; j < subArray.length && subArray[j] === current[j]; ++j) ;\n            if (j === subArray.length)\n                return i;\n        }\n    }\n    return -1;\n};\n\n//this function checks if an object is a value in another object\nconst objectContainsObject = function (superObject, subObject) {\n    const superObjectKeys = Object.keys(superObject);\n    var currentObject;\n    for (var i = 0; i < superObjectKeys.length; i++) {\n        currentObject = superObject[superObjectKeys[i]];\n        if (areObjectsEqual(subObject,currentObject)) {\n            return true;\n        }\n    }\n    // if the loop completes, the subObject was not found\n    return false;\n};\n\n//utility for calculating the average of an array\nconst average = function (data) {\n    var sum = data.reduce(function (sum, value) {\n        return value == null ? sum : sum + value;\n    }, 0);\n    var avg = sum / data.length;\n    return avg;\n};\n\n//utility for calculating the stdev of an array\nconst stdev = function (data) {\n    var avg = average(data);\n    var squareDiffs = data.map(function(value){\n        var diff = value - avg;\n        return diff * diff;\n    });\n    var avgSquareDiff = average(squareDiffs);\n    var stdDev = Math.sqrt(avgSquareDiff);\n    return stdDev;\n};\n\n//this function makes sure date strings are in the correct format\nconst dateConvert = function (dStr) {\n    if (dStr === undefined || dStr === \" \") {\n        var now = new Date();\n        var date = new Date(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(), now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds());\n        var yr = date.getUTCFullYear();\n        var day = date.getUTCDate();\n        var month = date.getUTCMonth();\n        var hour = date.getUTCHours();\n        var minute = date.getUTCMinutes();\n        return month + \"/\" + day + '/' + yr + ' ' + hour + \":\" + minute;\n    }\n    var dateParts = dStr.split(' ');\n    var dateArray = dateParts[0].split(/[\\-\\/]/);  // split on - or /    01-01-2017 OR 01/01/2017\n    var month = dateArray[0];\n    var day = dateArray[1];\n    var yr = dateArray[2];\n    var hour = 0;\n    var minute = 0;\n    if (dateParts[1]) {\n        var timeArray = dateParts[1].split(\":\");\n        hour = timeArray[0];\n        minute = timeArray[1];\n    }\n    return month + \"/\" + day + '/' + yr + ' ' + hour + \":\" + minute;\n};\n\n//splits the date range string from the date selector into standardized fromDate/toDate strings,\n// plus the epochs for the fromDate and toDate\nconst getDateRange = function (dateRange) {\n    var dates = dateRange.split(' - ');\n    var fromDateStr = dates[0];\n    var fromDate = dateConvert(fromDateStr);\n    var toDateStr = dates[1];\n    var toDate = dateConvert(toDateStr);\n    var fromSecs = secsConvert(fromDateStr);\n    var toSecs = secsConvert(toDateStr);\n    return {\n        fromDate: fromDate,\n        toDate: toDate,\n        fromSeconds: fromSecs,\n        toSeconds: toSecs\n    }\n};\n\n//this function converts a date string into an epoch\nconst secsConvert = function (dStr) {\n    if (dStr === undefined || dStr === \" \") {\n        var now = new Date();\n        return now.getTime() / 1000;\n    }\n    else {\n        var dateParts = dStr.split(' ');\n        var dateArray = dateParts[0].split(/[\\-\\/]/);  // split on - or /    01-01-2017 OR 01/01/2017\n        var month = dateArray[0];\n        var day = dateArray[1];\n        var yr = dateArray[2];\n        var hour = 0;\n        var minute = 0;\n        if (dateParts[1]) {\n            var timeArray = dateParts[1].split(\":\");\n            hour = timeArray[0];\n            minute = timeArray[1];\n        }\n        var my_date = new Date(Date.UTC(yr, month - 1, day, hour, minute, 0));\n        // to UTC time, not local time\n        var date_in_secs = my_date.getTime();\n    }\n    // to UTC time, not local time\n    //return date_in_secs/1000 -3600*6;\n    return date_in_secs / 1000;\n};\n\n//function to manage authorized logins for MATS\nconst doAuthorization = function () {\n    if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n        matsCollections.Authorization.remove({});\n    }\n    if (matsCollections.Authorization.find().count() == 0) {\n        matsCollections.Authorization.insert({email: \"randy.pierce@noaa.gov\", roles: [\"administrator\"]});\n        matsCollections.Authorization.insert({email: \"kirk.l.holub@noaa.gov\", roles: [\"administrator\"]});\n        matsCollections.Authorization.insert({email: \"jeffrey.a.hamilton@noaa.gov\", roles: [\"administrator\"]});\n        matsCollections.Authorization.insert({email: \"bonny.strong@noaa.gov\", roles: [\"administrator\"]});\n        matsCollections.Authorization.insert({email: \"molly.b.smith@noaa.gov\", roles: [\"administrator\"]});\n        matsCollections.Authorization.insert({email: \"mats.gsd@noaa.gov\", roles: [\"administrator\"]});\n    }\n};\n\n//master list of colors for MATS curves\nconst doColorScheme = function () {\n    if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n        matsCollections.ColorScheme.remove({});\n    }\n    if (matsCollections.ColorScheme.find().count() == 0) {\n        matsCollections.ColorScheme.insert({\n            colors: [\n                \"rgb(255,0,0)\",\n                \"rgb(0,0,255)\",\n                \"rgb(255,165,0)\",\n                \"rgb(128,128,128)\",\n                \"rgb(238,130,238)\",\n\n                \"rgb(238,130,238)\",\n                \"rgb(0,0,139)\",\n                \"rgb(148,0,211)\",\n                \"rgb(105,105,105)\",\n                \"rgb(255,140,0)\",\n\n                \"rgb(235,92,92)\",\n                \"rgb(82,92,245)\",\n                \"rgb(133,143,143)\",\n                \"rgb(235,143,92)\",\n                \"rgb(190,120,120)\",\n\n                \"rgb(225,82,92)\",\n                \"rgb(72,82,245)\",\n                \"rgb(123,133,143)\",\n                \"rgb(225,133,92)\",\n                \"rgb(180,120,120)\"\n            ]\n        });\n    }\n};\n\n//utility for google login capabilities in MATS -- broken for esrl.noaa.gov/gsd/mats?\nconst doCredentials = function () {\n// the gmail account for the credentials is mats.mail.daemon@gmail.com - pwd mats2015!\n    if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n        matsCollections.Credentials.remove({});\n    }\n    if (matsCollections.Credentials.find().count() == 0) {\n        matsCollections.Credentials.insert({\n            name: \"oauth_google\",\n            clientId: \"499180266722-aai2tddo8s9edv4km1pst88vebpf9hec.apps.googleusercontent.com\",\n            clientSecret: \"xdU0sc7SbdOOEzSyID_PTIRE\",\n            refresh_token: \"1/3bhWyvCMMfwwDdd4F3ftlJs3-vksgg7G8POtiOBwYnhIgOrJDtdun6zK6XiATCKT\"\n        });\n    }\n};\n\n//another utility to assist at logging into MATS\nconst doRoles = function () {\n    if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n        matsCollections.Roles.remove({});\n    }\n    if (matsCollections.Roles.find().count() == 0) {\n        matsCollections.Roles.insert({name: \"administrator\", description: \"administrator privileges\"});\n    }\n};\n\n//for use in matsMethods.resetApp() to establish default settings\nconst doSettings = function (title, version, buildDate, appType) {\n    if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n        matsCollections.Settings.remove({});\n    }\n    if (matsCollections.Settings.find().count() == 0) {\n        matsCollections.Settings.insert({\n            LabelPrefix: \"Curve\",\n            Title: title,\n            appVersion: version,\n            buildDate: buildDate,\n            appType: appType,\n            LineWidth: 3.5,\n            NullFillString: \"---\",\n            resetFromCode: false\n        });\n    }\n    // always update the version, roles, and the hostname, not just if it doesn't exist...\n    var settings = matsCollections.Settings.findOne({});\n    const deploymentRoles = {\n        \"mats-dev\": \"development\",\n        \"mats-int\": \"integration\",\n        \"mats\": \"production\"\n    };\n    var settingsId = settings._id;\n    var os = Npm.require('os');\n    var hostname = os.hostname().split('.')[0];\n    settings['appVersion'] = version;\n    settings['hostname'] = hostname;\n    settings['deploymentRoles'] = JSON.stringify(deploymentRoles);\n    matsCollections.Settings.update(settingsId, {$set: settings});\n};\n\n//Utility for transferring client-side parameters to the server-side methods via the \"PlotParams\" object in the stack.\n//Add values to this object in the 'click .submit-params' event handler in plot_list.js\nconst getPlotParamsFromStack = function () {\n    var params = {};\n    const err = new Error;\n    Error.captureStackTrace(err, arguments.callee.arguments.callee);\n    const stack = err.stack;\n    const stackElems = stack.split(\"\\n\");\n    for (si = 0; si < stackElems.length; si++) {\n        const sElem = stackElems[si].trim();\n        if (sElem.indexOf('dataFunctions') !== -1 && sElem.startsWith(\"at data\")) {\n            const dataFunctionName = sElem.split('at ')[1];\n            try {\n                params = global[sElem.split('at ')[1].split(' ')[0]].arguments[0]\n            } catch (noJoy) {\n            }\n            break;\n        }\n    }\n    return params;\n};\n\n//calculates mean, stdev, and other statistics for curve data points in all apps and plot types\nconst get_err = function (sVals, sSecs, sLevs) {\n    /* refer to perl error_library.pl sub  get_stats\n     to see the perl implementation of these statics calculations.\n     These should match exactly those, except that they are processed in reverse order.\n     */\n    const autocorr_limit = 0.95;\n    const hasLevels = sLevs.length > 0;\n    const plotParams = getPlotParamsFromStack();\n    var outlierQCParam;\n    if (plotParams[\"outliers\"] !== \"all\") {\n        outlierQCParam = Number(plotParams[\"outliers\"]);\n    } else {\n        outlierQCParam = 100;\n    }\n\n    var subVals = [];\n    var subSecs = [];\n    var subLevs = [];\n    var n = sVals.length;\n    var n_good = 0;\n    var sum_d = 0;\n    var sum2_d = 0;\n    var error = \"\";\n    var i;\n    for (i = 0; i < n; i++) {\n        if (sVals[i] !== null && !isNaN(sVals[i])) {\n            n_good = n_good + 1;\n            sum_d = sum_d + sVals[i];\n            sum2_d = sum2_d + sVals[i] * sVals[i];\n            subVals.push(sVals[i]);\n            subSecs.push(sSecs[i]);\n            if (hasLevels) {\n                subLevs.push(sLevs[i]);\n            }\n        }\n    }\n    var d_mean = sum_d / n_good;\n    var sd2 = sum2_d / n_good - d_mean * d_mean;\n    var sd = sd2 > 0 ? Math.sqrt(sd2) : sd2;\n    var sd_limit = outlierQCParam * sd;\n    //console.log(\"see error_library.pl l208 These are processed in reverse order to the perl code -  \\nmean is \" + d_mean + \" sd_limit is +/- \" + sd_limit + \" n_good is \" + n_good + \" sum_d is\" + sum_d + \" sum2_d is \" + sum2_d);\n\n    // find minimum delta_time, if any value missing, set null\n    var last_secs = 0;\n    var minDelta = Number.MAX_VALUE;\n    var minSecs = Number.MAX_VALUE;\n    var max_secs = Number.MIN_VALUE;\n    var minVal = Number.MAX_VALUE;\n    var maxVal = -1 * Number.MAX_VALUE;\n    var secs;\n    var delta;\n    for (i = 0; i < subSecs.length; i++) {\n        secs = (subSecs[i]);\n        delta = Math.abs(secs - last_secs);\n        if (delta > 0 && delta < minDelta) {\n            minDelta = delta;\n        }\n        if (secs < minSecs) {\n            minSecs = secs;\n        }\n        if (secs > max_secs) {\n            max_secs = secs;\n        }\n        last_secs = secs;\n    }\n\n    var data_wg = [];\n    var n_gaps = 0;\n    n_good = 0;\n    var sum = 0;\n    var sum2 = 0;\n    if (minDelta < 0) {\n        error = (\"Invalid time interval - minDelta: \" + minDelta);\n        console.log(\"matsDataUtil.getErr: Invalid time interval - minDelta: \" + minDelta)\n    }\n    // remove data more than $sd_limit from mean\n    var qaCorrected = [];\n    for (i = 0; i < subVals.length; i++) {\n        if (Math.abs(subVals[i] - d_mean) > sd_limit) {\n            qaCorrected.push(\"removing datum \" + i + \" with value \" + subVals[i] + \" because it exceeds \" + outlierQCParam + \" standard deviations from the mean - mean: \" + d_mean + \" \" + outlierQCParam + \" * sd: \" + sd_limit + \" delta: \" + (subVals[i] - d_mean));\n            // console.log(qaCorrected.join('\\n'));\n            subVals[i] = null;\n        } else {\n            minVal = minVal < subVals[i] ? minVal : subVals[i];\n            maxVal = maxVal > subVals[i] ? maxVal : subVals[i];\n            sum += subVals[i];\n            sum2 += subVals[i] * subVals[i];\n            n_good++;\n        }\n    }\n    if (n_good < 1) {\n        return {d_mean: null, stde_betsy: null, sd: null, n_good: n_good, lag1: null, min: null, max: null, sum: null};\n    }\n\n    // recalculate if we threw anything away.\n    d_mean = sum / n_good;\n    sd2 = sum2 / n_good - d_mean * d_mean;\n    sd = 0;\n    if (sd2 > 0) {\n        sd = Math.sqrt(sd2);\n    }\n    //console.log(\"new mean after throwing away outliers is \" + sd + \" n_good is \" + n_good + \" sum is \" + sum  + \" sum2 is \" + sum2 + \" d_mean is \" + d_mean);\n\n    // look for gaps\n    var lastSecond = -1 * Number.MAX_VALUE;\n    var lastPressure = -1 * Number.MAX_VALUE;\n    var n_pressures;\n    if (hasLevels) {\n        n_pressures = arrayUnique(subLevs).length;\n    } else {\n        n_pressures = 1;\n    }\n    // set lag1_t to the first time the time changes from its initial value + 1 (data zero based)\n    // set lag1_p to the first time the pressure changes from its initial value + 1 (data zero based)\n    var lag1_t = 0;\n    var lag1_p = 0;\n    var r1_t = 0;\t\t\t// autocorrelation for time\n    var r1_p = 0;\t\t\t// autocorrelation for pressure\n    var j = 0;              // i is loop index without gaps; j is loop index with gaps\n    var n_deltas = 0;\n\n    for (i = 0; i < subSecs.length; i++) {\n        var sec = subSecs[i];\n        var lev;\n        if (hasLevels) {\n            lev = subLevs[i];\n            // find first time the pressure changes\n            if (lag1_p === 0 && lastPressure > 0) {\n                if (lev !== lastPressure) {\n                    lag1_p = j;\n                }\n            }\n        }\n        if (lastSecond >= 0) {\n            if(lag1_t === 0 && sec !== lastSecond) {\n                lag1_t = j;\n            }\n            if (Math.abs(sec - lastSecond) > minDelta) {\n                n_deltas = (Math.abs(sec - lastSecond)/minDelta - 1) * n_pressures;\n                // for the Autocorrelation at lag 1, it doesn't matter how many missing\n                // data we put in within gaps! (But for the other AC's it does.)\n                // since we're using only the AC at lag 1 for calculating std err, let's\n                // save cpu time and only put in one missing datum per gap, no matter\n                // how long. WRM 2/22/2019\n                // but if we're using a different lag, which could happen, we'll need\n                // to insert all the missing data in each gap. WRM 2/22/2019\n                // $n_deltas=1;\n                for(var count = 0; count < n_deltas; count++) {\n                    data_wg.push(null);\n                    n_gaps++;\n                    j++;\n                }\n            }\n        }\n        lastSecond = sec;\n        if (hasLevels) {\n            lastPressure = lev;\n        }\n        data_wg.push(subVals[i]);\n        j++;\n    }\n\n    //from http://www.itl.nist.gov/div898/handbook/eda/section3/eda35c.htm\n    var r = [];\n    var lag_by_r = {};\n    var lag1_max = lag1_p > lag1_t ? lag1_p : lag1_t;\n    var r_sum = 0;\n    var n_r = 0;\n    var n_in_lag;\n    var lag;\n    var t;\n    for (lag = 0; lag <= lag1_max; lag++) {\n        r[lag] = 0;\n        n_in_lag = 0;\n        for (t = 0; t < ((n + n_gaps) - lag); t++) {\n            if (data_wg[t] != null && data_wg[t + lag] != null) {\n                r[lag] += +(data_wg[t] - d_mean) * (data_wg[t + lag] - d_mean);\n                n_in_lag++;\n            }\n        }\n        if (n_in_lag > 0 && sd > 0) {\n            r[lag] /= (n_in_lag * sd * sd);\n            r_sum += r[lag];\n            n_r++;\n        } else {\n            r[lag] = null;\n        }\n        if(lag >= 1 && lag < (n + n_gaps) / 2) {\n            lag_by_r[r[lag]] = lag;\n        }\n    }\n    if (lag1_t > 0) {\n        r1_t = r[lag1_t] !== undefined ? r[lag1_t] : 0;\n    }\n    if (lag1_p > 0) {\n        r1_p = r[lag1_p] !== undefined ? r[lag1_p] : 0;\n    }\n\n    // Betsy Weatherhead's correction, based on lag 1, augmented by the highest\n    // lag > 1 and < n/2\n    if (r1_p >= autocorr_limit) {\n        r1_p = autocorr_limit;\n    }\n    if(r1_t >= autocorr_limit) {\n        r1_t = autocorr_limit;\n    }\n\n    const betsy = Math.sqrt((n_good-1)*(1. - r1_p)*(1. - r1_t));\n    var stde_betsy;\n    if (betsy !== 0) {\n        stde_betsy = sd / betsy;\n    } else {\n        stde_betsy = null;\n    }\n    const stats = {\n        d_mean: d_mean,\n        stde_betsy: stde_betsy,\n        sd: sd,\n        n_good: n_good,\n        lag1: r[1],\n        min: minSecs,\n        max: max_secs,\n        minVal: minVal,\n        maxVal: maxVal,\n        sum: sum_d,\n        qaCorrected: qaCorrected\n    };\n    //console.log(\"stats are \" + JSON.stringify(stats));\n    // stde_betsy is standard error with auto correlation\n    //console.log(\"---------\\n\\n\");\n    return stats;\n};\n\n// utility to process the user-input histogram customization controls\nconst setHistogramParameters = function (plotParams) {\n    var yAxisFormat = plotParams['histogram-yaxis-controls'];\n    var binType = plotParams['histogram-bin-controls'];\n    var binNum = 12;    // default bin number\n    var binStart = undefined;    // default is no mandated bin start\n    var binStride = undefined;         // default is no mandated stride\n    var pivotVal = undefined;      // default is not to shift the bins over to a pivot\n    var binBounds = []; // default is no specified bin bounds -- our algorithm will figure them out if this array stays empty\n\n    switch (binType) {\n        case \"Set number of bins\":\n            // get the user's chosen number of bins\n            binNum = Number(plotParams['bin-number']);\n            if (isNaN(binNum)) {\n                throw new Error(\"Error parsing bin number: please enter the desired number of bins.\");\n            }\n            break;\n\n        case \"Make zero a bin bound\":\n            // let the histogram routine know that we want the bins shifted over to zero\n            pivotVal = 0;\n            break;\n\n        case \"Choose a bin bound\":\n            // let the histogram routine know that we want the bins shifted over to whatever was input\n            pivotVal = Number(plotParams['bin-pivot']);\n            if (isNaN(pivotVal)) {\n                throw new Error(\"Error parsing bin pivot: please enter the desired bin pivot.\");\n            }\n            break;\n\n        case \"Set number of bins and make zero a bin bound\":\n            // get the user's chosen number of bins and let the histogram routine know that we want the bins shifted over to zero\n            binNum = Number(plotParams['bin-number']);\n            if (isNaN(binNum)) {\n                throw new Error(\"Error parsing bin number: please enter the desired number of bins.\");\n            }\n            pivotVal = 0;\n            break;\n\n        case \"Set number of bins and choose a bin bound\":\n            // get the user's chosen number of bins and let the histogram routine know that we want the bins shifted over to whatever was input\n            binNum = Number(plotParams['bin-number']);\n            if (isNaN(binNum)) {\n                throw new Error(\"Error parsing bin number: please enter the desired number of bins.\");\n            }\n            pivotVal = Number(plotParams['bin-pivot']);\n            if (isNaN(pivotVal)) {\n                throw new Error(\"Error parsing bin pivot: please enter the desired bin pivot.\");\n            }\n            break;\n\n        case \"Manual bins\":\n            // try to parse whatever we've been given for bin bounds. Throw an error if they didn't follow directions to enter a comma-separated list of numbers.\n            try {\n                binBounds = plotParams['bin-bounds'].split(\",\").map(function (item) {\n                    item.trim();\n                    item = Number(item);\n                    if (!isNaN(item)) {\n                        return item\n                    } else {\n                        throw new Error(\"Error parsing bin bounds: please enter  at least two numbers delimited by commas.\");\n                    }\n                });\n                binNum = binBounds.length + 1; // add 1 because these are inner bin bounds\n            } catch (e) {\n                throw new Error(\"Error parsing bin bounds: please enter  at least two numbers delimited by commas.\");\n            }\n            // make sure that we've been given at least two good bin bounds (enough to make one bin).\n            if (binNum < 3) {\n                throw new Error(\"Error parsing bin bounds: please enter at least two numbers delimited by commas.\");\n            }\n            break;\n\n        case \"Manual bin start, number, and stride\":\n            // get the bin start, number, and stride.\n            binNum = Number(plotParams['bin-number']);\n            if (isNaN(binNum)) {\n                throw new Error(\"Error parsing bin number: please enter the desired number of bins.\");\n            }\n            binStart = Number(plotParams['bin-start']);\n            if (isNaN(binStart)) {\n                throw new Error(\"Error parsing bin start: please enter the desired bin start.\");\n            }\n            binStride = Number(plotParams['bin-stride']);\n            if (isNaN(binStride)) {\n                throw new Error(\"Error parsing bin stride: please enter the desired bin stride.\");\n            }\n            break;\n\n        case \"Default bins\":\n        default:\n            break;\n    }\n    return {\n        yAxisFormat: yAxisFormat,\n        binNum: binNum,\n        binStart: binStart,\n        binStride: binStride,\n        pivotVal: pivotVal,\n        binBounds: binBounds\n    };\n};\n\n// utility that takes arrays of seconds and values and produces a data structure containing bin information for histogram plotting\nconst calculateHistogramBins = function (curveSubStats, curveSubSecs, binParams) {\n\n    // binStart and binStride will only be defined if the user wants to specify the bin spacing.\n    // otherwise, we'll use the mean and standard deviation of the data to space the bins.\n\n    // pivotVal will only be defined if the user wants to shift the bin limits to align with a certain value.\n    // otherwise, we'll keep everything aligned with the data mean.\n\n    var binStats = {};\n    var binUpBounds = [];\n    var binLowBounds = [];\n    var binMeans = [];\n\n    // calculate the global stats across all of the data\n    const globalStats = get_err(curveSubStats, curveSubSecs, []);   // we don't need levels for the mean or sd calculations, so just pass in an empty array\n    const glob_mean = globalStats.d_mean;\n    const glob_sd = globalStats.sd;\n\n    var fullLowBound;\n    var fullUpBound;\n    var fullRange;\n    var binInterval;\n\n    if (binParams.binStart === undefined || binParams.binStride === undefined) {\n        // use the global stats to determine the bin bounds -- should be based on dividing up +/- 3*sd from the mean into requested number of bins\n        fullLowBound = glob_mean - 3 * glob_sd;\n        fullUpBound = glob_mean + 3 * glob_sd;\n        fullRange = 6 * glob_sd;\n        binInterval = fullRange / (binParams.binNum - 2);   // take off two bins from the total number of requested bins to represent values either less than - 3*sd from the mean or greater than 3*sd from the mean\n    } else {\n        // use the user-defined start, number, and stride to determine the bin bounds\n        fullLowBound = binParams.binStart;\n        fullUpBound = binParams.binStart + (binParams.binNum - 2) * binParams.binStride;  // take off two bins from the total number of requested bins to represent values that fall outside of the prescribed range\n        fullRange = (binParams.binNum - 2) * binParams.binStride;\n        binInterval = binParams.binStride;\n    }\n\n    // store an array of the upper and lower bounding values for each bin.\n    binUpBounds[0] = fullLowBound; // the first upper bound should be exactly - 3*sd from the mean, or the previously calculated fullLowBound\n    binLowBounds[0] = -1 * Number.MAX_VALUE;\n    binMeans[0] = fullLowBound - binInterval / 2;\n    for (var b_idx = 1; b_idx < binParams.binNum - 1; b_idx++) {\n        binUpBounds[b_idx] = binUpBounds[b_idx - 1] + binInterval; // increment from fullLowBound to get the rest of the bin upper limits\n        binLowBounds[b_idx] = binUpBounds[b_idx - 1];\n        binMeans[b_idx] = binUpBounds[b_idx - 1] + binInterval / 2;\n    }\n    binUpBounds[binParams.binNum - 1] = Number.MAX_VALUE; // the last bin should have everything too large to fit into the previous bins, so make its upper bound the max number value\n    binLowBounds[binParams.binNum - 1] = fullUpBound;\n    binMeans[binParams.binNum - 1] = fullUpBound + binInterval / 2;\n\n    if (binParams.pivotVal !== undefined && !isNaN(binParams.pivotVal)) {\n        // need to shift the bounds and means over so that one of the bounds is on the chosen pivot\n        var closestBoundToPivot = binLowBounds.reduce(function (prev, curr) {\n            return (Math.abs(curr - binParams.pivotVal) < Math.abs(prev - binParams.pivotVal) ? curr : prev);\n        });\n        binUpBounds = binUpBounds.map(function (val) {\n            return val - (closestBoundToPivot - binParams.pivotVal);\n        });\n        binLowBounds = binLowBounds.map(function (val) {\n            return val - (closestBoundToPivot - binParams.pivotVal);\n        });\n        binMeans = binMeans.map(function (val) {\n            return val - (closestBoundToPivot - binParams.pivotVal);\n        });\n    }\n\n    // calculate the labels for each bin, based on the data bounding range, for the graph x-axis later\n    var binLabels = [];\n    var lowSdFromMean;\n    var upSdFromMean;\n    for (b_idx = 0; b_idx < binParams.binNum; b_idx++) {\n        lowSdFromMean = (binLowBounds[b_idx]).toFixed(2);\n        upSdFromMean = (binUpBounds[b_idx]).toFixed(2);\n        if (b_idx === 0) {\n            binLabels[b_idx] = \"< \" + upSdFromMean;\n        } else if (b_idx === binParams.binNum - 1) {\n            binLabels[b_idx] = \"> \" + lowSdFromMean;\n        } else {\n            binLabels[b_idx] = lowSdFromMean + \"-\" + upSdFromMean;\n        }\n    }\n\n    binStats['glob_mean'] = glob_mean;\n    binStats['glob_sd'] = glob_sd;\n    binStats['binUpBounds'] = binUpBounds;\n    binStats['binLowBounds'] = binLowBounds;\n    binStats['binMeans'] = binMeans;\n    binStats['binLabels'] = binLabels;\n\n    return {'binStats': binStats};\n};\n\n// utility that takes an array of user-defined bin bounds and produces a data structure containing bin information for histogram plotting\nconst prescribeHistogramBins = function (curveSubStats, curveSubSecs, binParams) {\n\n    var binStats = {};\n\n    // calculate the global stats across all of the data\n    const globalStats = get_err(curveSubStats, curveSubSecs, []);   // we don't need levels for the mean or sd calculations, so just pass in an empty array\n    const glob_mean = globalStats.d_mean;\n    const glob_sd = globalStats.sd;\n\n    // make sure the user-defined bins are in order from least to greatest\n    binParams.binBounds = binParams.binBounds.sort(function (a, b) {\n        return Number(a) - Number(b);\n    });\n\n    // store an array of the upper and lower bounding values for each bin.\n    var binUpBounds = [];\n    var binLowBounds = [];\n    var binMeans = [];\n    var binIntervalSum = 0;\n    for (var b_idx = 1; b_idx < binParams.binNum - 1; b_idx++) {\n        binUpBounds[b_idx] = binParams.binBounds[b_idx];\n        binLowBounds[b_idx] = binParams.binBounds[b_idx - 1];\n        binMeans[b_idx] = (binUpBounds[b_idx] + binLowBounds[b_idx]) / 2;\n        binIntervalSum = binIntervalSum + (binUpBounds[b_idx] - binLowBounds[b_idx]);\n    }\n    const binIntervalAverage = binIntervalSum / (binParams.binNum - 2);\n    binUpBounds[0] = binLowBounds[1];\n    binLowBounds[0] = -1 * Number.MAX_VALUE; // the first bin should have everything too small to fit into the other bins, so make its lower bound -1 * the max number value\n    binMeans[0] = binLowBounds[1] - binIntervalAverage / 2; // the bin means for the edge bins is a little arbitrary, so base it on the average bin width\n    binUpBounds[binParams.binNum - 1] = Number.MAX_VALUE; // the last bin should have everything too large to fit into the previous bins, so make its upper bound the max number value\n    binLowBounds[binParams.binNum - 1] = binUpBounds[binParams.binNum - 2];\n    binMeans[binParams.binNum - 1] = binUpBounds[binParams.binNum - 2] + binIntervalAverage / 2; // the bin means for the edge bins is a little arbitrary, so base it on the average bin width\n\n    // calculate the labels for each bin, based on the data bounding range, for the graph x-axis later\n    var binLabels = [];\n    var lowSdFromMean;\n    var upSdFromMean;\n    for (b_idx = 0; b_idx < binParams.binNum; b_idx++) {\n        lowSdFromMean = (binLowBounds[b_idx]).toFixed(2);\n        upSdFromMean = (binUpBounds[b_idx]).toFixed(2);\n        if (b_idx === 0) {\n            binLabels[b_idx] = \"< \" + upSdFromMean;\n        } else if (b_idx === binParams.binNum - 1) {\n            binLabels[b_idx] = \"> \" + lowSdFromMean;\n        } else {\n            binLabels[b_idx] = lowSdFromMean + \"-\" + upSdFromMean;\n        }\n    }\n\n    binStats['glob_mean'] = glob_mean;\n    binStats['glob_sd'] = glob_sd;\n    binStats['binUpBounds'] = binUpBounds;\n    binStats['binLowBounds'] = binLowBounds;\n    binStats['binMeans'] = binMeans;\n    binStats['binLabels'] = binLabels;\n\n    return {'binStats': binStats};\n};\n\n// utility that takes arrays of seconds, values, and optionally levels, and produces a data structure for histogram data\n// processing. Used in the initial histogram DB query and in matching.\nconst sortHistogramBins = function (curveSubStats, curveSubSecs, curveSubLevs, binNum, masterBinStats, hasLevels, d) {\n\n    // need maps to hold the sub values and seconds (and levels) for each bin, after the bin bounds are calculated.\n    var binSubStats = {};\n    var binSubSecs = {};\n    var binSubLevs = {};\n\n    for (var b_idx = 0; b_idx < binNum; b_idx++) {\n        binSubStats[b_idx] = [];\n        binSubSecs[b_idx] = [];\n        binSubLevs[b_idx] = [];\n    }\n\n    // calculate the global stats across all of the data\n    var globalStats;\n    if (hasLevels) {\n        globalStats = get_err(curveSubStats, curveSubSecs, curveSubLevs);\n    } else {\n        globalStats = get_err(curveSubStats, curveSubSecs, []);\n    }\n    const glob_mean = globalStats.d_mean;\n    const glob_sd = globalStats.sd;\n    const glob_n = globalStats.n_good;\n    const glob_max = globalStats.maxVal;\n    const glob_min = globalStats.minVal;\n\n    // sort data into bins\n    const binUpBounds = masterBinStats.binUpBounds;\n    const binLowBounds = masterBinStats.binLowBounds;\n    const binMeans = masterBinStats.binMeans;\n    const binLabels = masterBinStats.binLabels;\n\n    for (var d_idx = 0; d_idx < curveSubStats.length; d_idx++) {\n        // iterate through all of the bins until we find one where the upper limit is greater than our datum.\n        for (b_idx = 0; b_idx < binNum; b_idx++) {\n            if (curveSubStats[d_idx] <= binUpBounds[b_idx]) {\n                binSubStats[b_idx].push(curveSubStats[d_idx]);\n                binSubSecs[b_idx].push(curveSubSecs[d_idx]);\n                if (hasLevels) {\n                    binSubLevs[b_idx].push(curveSubLevs[d_idx]);\n                }\n                break;\n            }\n        }\n    }\n\n    // calculate the statistics for each bin\n    // we are especially interested in the number of values in each bin, as that is the plotted stat in a histogram\n    var binStats;\n    var bin_mean;\n    var bin_sd;\n    var bin_n;\n    var bin_rf;\n\n    var sum = 0;\n    var count = 0;\n    for (b_idx = 0; b_idx < binNum; b_idx++) {\n        if (hasLevels) {\n            binStats = get_err(binSubStats[b_idx], binSubSecs[b_idx], binSubLevs[b_idx]);\n        } else {\n            binStats = get_err(binSubStats[b_idx], binSubSecs[b_idx], []);\n        }\n        bin_mean = binStats.d_mean;\n        bin_sd = binStats.sd;\n        bin_n = binStats.n_good;\n        bin_rf = bin_n / glob_n;\n\n        /*\n        var d = {// d will contain the curve data\n            x: [], //placeholder\n            y: [], //placeholder\n            error_x: [], // unused\n            error_y: [], // unused\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            glob_stats: {}, // placeholder\n            bin_stats: [], // placeholder\n            text: [], //placeholder\n            xmax: Number.MIN_VALUE,\n            xmin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE\n        };\n        */\n\n        d.x.push(binMeans[b_idx]);\n        d.y.push(bin_n);\n        d.subVals.push(binSubStats[b_idx]);\n        d.subSecs.push(binSubSecs[b_idx]);\n        d.bin_stats.push({\n            'bin_mean': bin_mean,\n            'bin_sd': bin_sd,\n            'bin_n': bin_n,\n            'bin_rf': bin_rf,\n            'binLowBound': binLowBounds[b_idx],\n            'binUpBound': binUpBounds[b_idx],\n            'binLabel': binLabels[b_idx]\n        });\n        d.text.push(null);\n\n        if (hasLevels) {\n            d.subLevs.push(binSubLevs[b_idx]);\n        }\n\n        // set axis limits based on returned data\n        if (d.y[b_idx] !== null) {\n            sum = sum + d.y[b_idx];\n            count++;\n            d.ymin = d.ymin < d.y[b_idx] ? d.ymin : d.y[b_idx];\n            d.ymax = d.ymax > d.y[b_idx] ? d.ymax : d.y[b_idx];\n        }\n\n    }\n    d.glob_stats = {\n        'glob_mean': glob_mean,\n        'glob_sd': glob_sd,\n        'glob_n': glob_n,\n        'glob_max': glob_max,\n        'glob_min': glob_min\n    };\n    d.xmin = d.x[0];\n    d.xmax = d.x[binNum - 1];\n\n    return {d: d};\n};\n\n// utility that takes the curve params for two contour plots and collapses them into the curve params for one diff contour.\nconst getDiffContourCurveParams = function (curves) {\n\n    var newCurve = {};\n    const curveKeys = Object.keys(curves[0]);\n    var currKey;\n    for (var ckidx = 0; ckidx < curveKeys.length; ckidx++) {\n        currKey = curveKeys[ckidx];\n        if (currKey === 'color') {\n            newCurve['color'] = \"rgb(255,165,0)\";\n        } else if (curves[0][currKey] === curves[1][currKey]) {\n            newCurve[currKey] = curves[0][currKey];\n        } else {\n            newCurve[currKey] = curves[1][currKey] + \"-\" + curves[0][currKey];\n        }\n    }\n    return [newCurve];\n};\n\n//used for sorting arrays\nconst sortFunction = function (a, b) {\n    if (a[0] === b[0]) {\n        return 0;\n    }\n    else {\n        return (a[0] < b[0]) ? -1 : 1;\n    }\n};\n\nexport default matsDataUtils = {\n\n    areObjectsEqual: areObjectsEqual,\n    arrayContainsArray: arrayContainsArray,\n    arrayContainsSubArray: arrayContainsSubArray,\n    arraysEqual: arraysEqual,\n    arrayUnique: arrayUnique,\n    findArrayInSubArray: findArrayInSubArray,\n    objectContainsObject: objectContainsObject,\n    average: average,\n    stdev: stdev,\n    dateConvert: dateConvert,\n    getDateRange: getDateRange,\n    secsConvert: secsConvert,\n    doAuthorization: doAuthorization,\n    doColorScheme: doColorScheme,\n    doCredentials: doCredentials,\n    doRoles: doRoles,\n    doSettings: doSettings,\n    getPlotParamsFromStack: getPlotParamsFromStack,\n    get_err: get_err,\n    setHistogramParameters: setHistogramParameters,\n    calculateHistogramBins: calculateHistogramBins,\n    prescribeHistogramBins: prescribeHistogramBins,\n    sortHistogramBins: sortHistogramBins,\n    getDiffContourCurveParams: getDiffContourCurveParams,\n    sortFunction: sortFunction,\n\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsDataUtils, matsTypes, matsCollections} from 'meteor/randyp:mats-common';\nimport {Meteor} from \"meteor/meteor\";\n\n//const Future = require('fibers/future');\n\n//utility to get the cadence for a particular model, so that the query function\n//knows where to include null points for missing data.\nconst getModelCadence = function (pool, dataSource, startDate, endDate) {\n    var rows = [];\n    var cycles;\n    try {\n        //this query should only return data if the model cadence is irregular.\n        //otherwise, the cadence will be calculated later by the query function.\n        rows = simplePoolQueryWrapSynchronous(pool, \"select cycle_seconds \" +\n            \"from mats_common.primary_model_orders \" +\n            \"where model = \" +\n            \"(select new_model as display_text from mats_common.standardized_model_list where old_model = '\" + dataSource + \"');\");\n        var cycles_raw = JSON.parse(rows[0].cycle_seconds);\n        var cycles_keys = Object.keys(cycles_raw).sort();\n        //there can be difference cadences for different time periods (each time period is a key in cycles_keys,\n        //with the cadences for that period represented as values in cycles_raw), so this section identifies all\n        //time periods relevant to the requested date range, and returns the union of their cadences.\n        if (cycles_keys.length !== 0) {\n            var newTime;\n            var chosenStartTime;\n            var chosenEndTime;\n            var chosenStartIdx;\n            var chosenEndIdx;\n            var foundStart = false;\n            var foundEnd = false;\n            for (var ti = cycles_keys.length - 1; ti >= 0; ti--) {\n                newTime = cycles_keys[ti];\n                if (startDate >= Number(newTime) && !foundStart) {\n                    chosenStartTime = newTime;\n                    chosenStartIdx = ti;\n                    foundStart = true;\n                }\n                if (endDate >= Number(newTime) && !foundEnd) {\n                    chosenEndTime = newTime;\n                    chosenEndIdx = ti;\n                    foundEnd = true;\n                }\n                if (foundStart && foundEnd) {\n                    break;\n                }\n            }\n            if (chosenStartTime !== undefined && chosenEndTime !== undefined) {\n                if (Number(chosenStartTime) === Number(chosenEndTime)) {\n                    cycles = cycles_raw[chosenStartTime];\n                } else if (chosenEndIdx - chosenStartIdx === 1) {\n                    const startCycles = cycles_raw[chosenStartTime];\n                    const endCycles = cycles_raw[chosenEndTime];\n                    cycles = _.union(startCycles, endCycles);\n                } else {\n                    var middleCycles = [];\n                    var currCycles;\n                    for (ti = chosenStartIdx + 1; ti < chosenEndIdx; ti++) {\n                        currCycles = cycles_raw[cycles_keys[ti]];\n                        middleCycles = _.union(middleCycles, currCycles);\n                    }\n                    const startCycles = cycles_raw[chosenStartTime];\n                    const endCycles = cycles_raw[chosenEndTime];\n                    cycles = _.union(startCycles, endCycles, middleCycles);\n                }\n            }\n        }\n    } catch (e) {\n        //ignore - just a safety check, don't want to exit if there isn't a cycles_per_model entry\n        //if there isn't a cycles_per_model entry, it just means that the model has a regular cadence\n    }\n    if (cycles !== null && cycles !== undefined && cycles.length > 0) {\n        for (var c = 0; c < cycles.length; c++) {\n            cycles[c] = cycles[c] * 1000;         // convert to milliseconds\n        }\n    } else {\n        cycles = []; //regular cadence model--cycles will be calculated later by the query function\n    }\n    return cycles;\n};\n\n//this function calculates the interval between the current time and the next time for irregular cadence models.\nconst getTimeInterval = function (avTime, time_interval, foreCastOffset, cycles) {\n    //have to calculate the time_interval\n    var ti;\n    var dayInMilliSeconds = 24 * 3600 * 1000;\n    var minCycleTime = Math.min(...cycles);\n\n    var thisCadence = (avTime % dayInMilliSeconds); //current hour of day (valid time)\n    if (Number(thisCadence) - (Number(foreCastOffset) * 3600 * 1000) < 0) { //check to see if cycle time was on previous day -- if so, need to wrap around 00Z to get current hour of day (cycle time)\n        thisCadence = (Number(thisCadence) - (Number(foreCastOffset) * 3600 * 1000) + dayInMilliSeconds); //current hour of day (cycle time)\n    } else {\n        thisCadence = (Number(thisCadence) - (Number(foreCastOffset) * 3600 * 1000)); //current hour of day (cycle time)\n    }\n\n    var thisCadenceIdx = cycles.indexOf(thisCadence); //fnd our where the current hour of day is in the cycles array\n    if (thisCadenceIdx !== -1) {\n        var nextCadenceIdx = thisCadenceIdx + 1; //choose the next hour of the day\n        if (nextCadenceIdx >= cycles.length) {\n            ti = (dayInMilliSeconds - thisCadence) + minCycleTime; //if we were at the last cycle cadence, wrap back around to the first cycle cadence\n        } else {\n            ti = cycles[nextCadenceIdx] - cycles[thisCadenceIdx]; //otherwise take the difference between the current and next hours of the day.\n        }\n    } else {\n        ti = time_interval; //if for some reason the current hour of the day isn't in the cycles array, default to the regular cadence interval\n    }\n\n    return ti;\n};\n\n//utility for querying the DB\nconst simplePoolQueryWrapSynchronous = function (pool, statement) {\n    /*\n     simple synchronous query of statement to the specified pool.\n     params :\n     pool - a predefined db pool (usually defined in main.js). i.e. wfip2Pool = mysql.createPool(wfip2Settings);\n     statement - String - a valid sql statement\n     actions - queries database and will wait until query returns.\n     return: rowset - an array of rows\n     throws: error\n     */\n    if (Meteor.isServer) {\n        const Future = require('fibers/future');\n        const queryWrap = Future.wrap(function (pool, statement, callback) {\n            pool.query(statement, function (err, rows) {\n                return callback(err, rows);\n            });\n        });\n        return queryWrap(pool, statement).wait();\n    }\n};\n\n//this method queries the database for timeseries plots\nconst queryDBTimeSeries = function (pool, statement, dataSource, forecastOffset, startDate, endDate, averageStr, validTimes, hasLevels, forceRegularCadence) {\n    //upper air is only verified at 00Z and 12Z, so you need to force irregular models to verify at that regular cadence\n    const Future = require('fibers/future');\n    if (Meteor.isServer) {\n        const plotParams = matsDataUtils.getPlotParamsFromStack();\n        const completenessQCParam = Number(plotParams[\"completeness\"]) / 100;\n\n        var cycles = getModelCadence(pool, dataSource, startDate, endDate); // if irregular model cadence, get cycle times. If regular, get empty array.\n        if (validTimes.length > 0 && validTimes !== matsTypes.InputTypes.unused) {\n            var vtCycles = validTimes.map(function (x) {\n                return (Number(x) - forecastOffset) * 3600 * 1000;\n            }); // selecting validTimes makes the cadence irregular\n            vtCycles = vtCycles.map(function (x) {\n                return x < 0 ? (x + 24 * 3600 * 1000) : x;\n            }); // make sure no cycles are negative\n            vtCycles = vtCycles.sort(function (a, b) {\n                return Number(a) - Number(b);\n            }); //sort 'em\n            cycles = cycles.length > 0 ? _.intersection(cycles, vtCycles) : vtCycles; // if we already had cycles get the ones that correspond to valid times\n        }\n        const regular = (forceRegularCadence || averageStr !== \"None\" || !(cycles !== null && cycles.length > 0)); // If curves have averaging, the cadence is always regular, i.e. it's the cadence of the average\n\n        var dFuture = new Future();\n        var d = {// d will contain the curve data\n            x: [],\n            y: [],\n            error_x: [],\n            error_y: [],\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            stats: [],\n            text: [],\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n        var error = \"\";\n        var N0 = [];\n        var N_times = [];\n\n        pool.query(statement, function (err, rows) {\n            // query callback - build the curve data from the results - or set an error\n            if (err !== undefined && err !== null) {\n                error = err.message;\n            } else if (rows === undefined || rows === null || rows.length === 0) {\n                error = matsTypes.Messages.NO_DATA_FOUND;\n            } else {\n                const parsedData = parseQueryDataTimeSeries(pool, rows, d, completenessQCParam, hasLevels, averageStr, forecastOffset, cycles, regular);\n                d = parsedData.d;\n                N0 = parsedData.N0;\n                N_times = parsedData.N_times;\n                cycles = parsedData.cycles;\n            }\n            // done waiting - have results\n            dFuture['return']();\n        });\n\n        // wait for future to finish\n        dFuture.wait();\n        return {\n            data: d,\n            error: error,\n            N0: N0,\n            N_times: N_times,\n            averageStr: averageStr,\n            cycles: cycles,\n        };\n    }\n};\n\n//this method queries the database for specialty curves such as profiles, dieoffs, threshold plots, valid time plots, and histograms\nconst queryDBSpecialtyCurve = function (pool, statement, plotType, hasLevels) {\n    if (Meteor.isServer) {\n        const Future = require('fibers/future');\n        const plotParams = matsDataUtils.getPlotParamsFromStack();\n        const completenessQCParam = Number(plotParams[\"completeness\"]) / 100;\n        const appType = matsCollections.Settings.findOne({}).appType;\n\n        var dFuture = new Future();\n        var d = {// d will contain the curve data\n            x: [],\n            y: [],\n            error_x: [],\n            error_y: [],\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            stats: [],\n            text: [],\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n\n        var error = \"\";\n        var N0 = [];\n        var N_times = [];\n\n        pool.query(statement, function (err, rows) {\n            // query callback - build the curve data from the results - or set an error\n            if (err !== undefined && err !== null) {\n                error = err.message;\n            } else if (rows === undefined || rows === null || rows.length === 0) {\n                error = matsTypes.Messages.NO_DATA_FOUND;\n            } else {\n                var parsedData;\n                if (plotType !== matsTypes.PlotTypes.histogram) {\n                    parsedData = parseQueryDataSpecialtyCurve(rows, d, completenessQCParam, plotType, appType, hasLevels);\n                } else {\n                    parsedData = parseQueryDataHistogram(d, rows, hasLevels);\n                }\n                d = parsedData.d;\n                N0 = parsedData.N0;\n                N_times = parsedData.N_times;\n            }\n            dFuture['return']();\n        });\n\n        // wait for future to finish\n        dFuture.wait();\n        return {\n            data: d,\n            error: error,\n            N0: N0,\n            N_times: N_times,\n        };\n    }\n};\n\n//this method queries the database for map plots\nconst queryMapDB = function (pool, statement, dataSource, variable, varUnits, siteMap) {\n    if (Meteor.isServer) {\n        // d will contain the curve data\n        var d = {\n            siteName: [],\n            queryVal: [],\n            lat: [],\n            lon: [],\n            color: [],\n            stats: [],\n            text: []\n        };\n        // for biases <= -1\n        var dBlue = {\n            siteName: [],\n            queryVal: [],\n            lat: [],\n            lon: [],\n            stats: [],\n            text: [],\n            color: \"rgb(0,0,255)\"\n        };\n        // for biases > -1 and < 1\n        var dBlack = {\n            siteName: [],\n            queryVal: [],\n            lat: [],\n            lon: [],\n            stats: [],\n            text: [],\n            color: \"rgb(0,0,0)\"\n        };\n        // for biases >= 1\n        var dRed = {\n            siteName: [],\n            queryVal: [],\n            lat: [],\n            lon: [],\n            stats: [],\n            text: [],\n            color: \"rgb(255,0,0)\"\n        };\n\n        var error = \"\";\n        const Future = require('fibers/future');\n        var pFuture = new Future();\n        pool.query(statement, function (err, rows) {\n            // query callback - build the curve data from the results - or set an error\n            if (err !== undefined && err !== null) {\n                error = err.message;\n            } else if (rows === undefined || rows === null || rows.length === 0) {\n                error = matsTypes.Messages.NO_DATA_FOUND;\n            } else {\n                var queryVal;\n                for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                    const site = rows[rowIndex].sta_name;\n                    queryVal = rows[rowIndex].model_ob_diff;\n                    d.siteName.push(site);\n                    d.queryVal.push(queryVal);\n                    d.stats.push({\n                        N_times: rows[rowIndex].N_times,\n                        min_time: rows[rowIndex].min_time,\n                        max_time: rows[rowIndex].max_time\n                    });\n                    var tooltips = site +\n                        \"<br>\" + \"variable: \" + variable +\n                        \"<br>\" + \"model: \" + dataSource +\n                        \"<br>\" + \"model-obs: \" + queryVal + \" \" + varUnits +\n                        \"<br>\" + \"n: \" + rows[rowIndex].N_times;\n                    d.text.push(tooltips);\n\n                    var thisSite = siteMap.find(obj => {\n                        return obj.name === site;\n                    });\n                    d.lat.push(thisSite.point[0]);\n                    d.lon.push(thisSite.point[1]);\n\n                    var textMarker = queryVal === null ? \"\" : queryVal.toFixed(0);\n                    if (queryVal <= -1) {\n                        d.color.push(\"rgb(0,0,255)\");\n                        dBlue.siteName.push(site);\n                        dBlue.queryVal.push(queryVal);\n                        dBlue.text.push(textMarker);\n                        dBlue.lat.push(thisSite.point[0]);\n                        dBlue.lon.push(thisSite.point[1]);\n                    } else if (queryVal >= 1) {\n                        d.color.push(\"rgb(255,0,0)\");\n                        dRed.siteName.push(site);\n                        dRed.queryVal.push(queryVal);\n                        dRed.text.push(textMarker);\n                        dRed.lat.push(thisSite.point[0]);\n                        dRed.lon.push(thisSite.point[1]);\n                    } else {\n                        d.color.push(\"rgb(0,0,0)\");\n                        dBlack.siteName.push(site);\n                        dBlack.queryVal.push(queryVal);\n                        dBlack.text.push(textMarker);\n                        dBlack.lat.push(thisSite.point[0]);\n                        dBlack.lon.push(thisSite.point[1]);\n                    }\n                }// end of loop row\n            }\n            // done waiting - have results\n            pFuture['return']();\n        });\n\n        // wait for future to finish\n        pFuture.wait();\n        return {\n            data: d,    // [sub_values,sub_secs] as arrays\n            dataBlue: dBlue,    // [sub_values,sub_secs] as arrays\n            dataBlack: dBlack,    // [sub_values,sub_secs] as arrays\n            dataRed: dRed,    // [sub_values,sub_secs] as arrays\n            error: error,\n        };\n    }\n};\n\n//this method queries the database for contour plots\nconst queryDBContour = function (pool, statement) {\n    if (Meteor.isServer) {\n        const Future = require('fibers/future');\n\n        var dFuture = new Future();\n        var d = {// d will contain the curve data\n            x: [],\n            y: [],\n            z: [],\n            n: [],\n            text: [],\n            xTextOutput: [],\n            yTextOutput: [],\n            zTextOutput: [],\n            nTextOutput: [],\n            minDateTextOutput: [],\n            maxDateTextOutput: [],\n            stats: [],\n            glob_stats: {},\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            zmin: Number.MAX_VALUE,\n            zmax: Number.MIN_VALUE,\n            sum: 0\n        };\n\n        var error = \"\";\n        pool.query(statement, function (err, rows) {\n            // query callback - build the curve data from the results - or set an error\n            if (err !== undefined && err !== null) {\n                error = err.message;\n            } else if (rows === undefined || rows === null || rows.length === 0) {\n                error = matsTypes.Messages.NO_DATA_FOUND;\n            } else {\n                const parsedData = parseQueryDataContour(rows, d);\n                d = parsedData.d;\n            }\n            dFuture['return']();\n        });\n\n        // wait for future to finish\n        dFuture.wait();\n        return {\n            data: d,\n            error: error\n        };\n    }\n};\n\n//this method parses the returned query data for timeseries plots\nconst parseQueryDataTimeSeries = function (pool, rows, d, completenessQCParam, hasLevels, averageStr, foreCastOffset, cycles, regular) {\n    /*\n        var d = {// d will contain the curve data\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            stats: [],     //pointStats\n            text: [],\n            glob_stats: {},     //curveStats\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n    */\n    d.error_x = null;  // time series doesn't use x errorbars\n    var N0 = [];\n    var N_times = [];\n    var xmax = Number.MIN_VALUE;\n    var xmin = Number.MAX_VALUE;\n\n    var curveTime = [];\n    var curveStats = [];\n    var subVals = [];\n    var subSecs = [];\n    var subLevs = [];\n\n    var time_interval = rows.length > 1 ? Number(rows[1].avtime) - Number(rows[0].avtime) : undefined; //calculate a base time interval -- will be used if data is regular\n    for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n\n        var avSeconds = Number(rows[rowIndex].avtime);\n        var avTime = avSeconds * 1000;\n        xmin = avTime < xmin ? avTime : xmin;\n        xmax = avTime > xmax ? avTime : xmax;\n        var stat = rows[rowIndex].stat;\n        N0.push(rows[rowIndex].N0);             // number of values that go into a time series point\n        N_times.push(rows[rowIndex].N_times);   // number of times that go into a time series point\n\n        // find the minimum time_interval. For regular models, this will differ from the previous time_interval\n        // if the interval was artificially large due to missing values. For irregular models, we need the minimum\n        // interval to be sure we don't accidentally go past the next data point.\n        if (rowIndex < rows.length - 1) {\n            var time_diff = Number(rows[rowIndex + 1].avtime) - Number(rows[rowIndex].avtime);\n            if (time_diff < time_interval) {\n                time_interval = time_diff;\n            }\n        }\n\n        // store sub values that will later be used for calculating error bar statistics.\n        var sub_values = [];\n        var sub_secs = [];\n        var sub_levs = [];\n        if (stat !== null && stat !== \"NULL\" && rows[rowIndex].sub_data !== undefined) {\n            try {\n                var sub_data = rows[rowIndex].sub_data.toString().split(',');\n                var curr_sub_data;\n                for (var sd_idx = 0; sd_idx < sub_data.length; sd_idx++) {\n                    curr_sub_data = sub_data[sd_idx].split(';');\n                    sub_values.push(Number(curr_sub_data[0]));\n                    sub_secs.push(Number(curr_sub_data[1]));\n                    if (hasLevels) {\n                        if (!isNaN(Number(curr_sub_data[2]))) {\n                            sub_levs.push(Number(curr_sub_data[2]));\n                        } else {\n                            sub_levs.push(curr_sub_data[2]);\n                        }\n                    }\n                }\n            } catch (e) {\n                // this is an error produced by a bug in the query function, not an error returned by the mysql database\n                e.message = \"Error in parseQueryDataTimeSeries. The expected fields don't seem to be present in the results cache: \" + e.message;\n                throw new Error(e.message);\n            }\n        } else {\n            sub_values = NaN;\n            sub_secs = NaN;\n            if (hasLevels) {\n                sub_levs = NaN;\n            }\n        }\n        curveTime.push(avTime);\n        curveStats.push(stat);\n        subVals.push(sub_values);\n        subSecs.push(sub_secs);\n        if (hasLevels) {\n            subLevs.push(sub_levs);\n        }\n    }\n\n    var N0_max = Math.max(...N0);\n    var N_times_max = Math.max(...N_times);\n\n    if (xmin < Number(rows[0].avtime) * 1000 || averageStr !== \"None\") {\n        xmin = Number(rows[0].avtime) * 1000;\n    }\n\n    time_interval = time_interval * 1000;\n    var loopTime = xmin;\n    var sum = 0;\n    while (loopTime <= xmax) {\n        var d_idx = curveTime.indexOf(loopTime);\n        if (d_idx < 0) {\n            if (hasLevels) {\n                //d.push([loopTime, null, -1, NaN, NaN, NaN]);// add a null for missing data\n                d.x.push(loopTime);\n                d.y.push(null);\n                //d.error_x not used\n                d.error_y.push(null);   //placeholder\n                d.subVals.push(NaN);\n                d.subSecs.push(NaN);\n                d.subLevs.push(NaN);\n            } else {\n                //d.push([loopTime, null, -1, NaN, NaN]);     // add a null for missing data\n                d.x.push(loopTime);\n                d.y.push(null);\n                //d.error_x not used\n                d.error_y.push(null); //placeholder\n                d.subVals.push(NaN);\n                d.subSecs.push(NaN);\n            }\n        } else {\n            var this_N0 = N0[d_idx];\n            var this_N_times = N_times[d_idx];\n            // Make sure that we don't have any points with far less data than the rest of the graph, and that\n            // we don't have any points with a smaller completeness value than specified by the user.\n            if (this_N0 < 0.1 * N0_max || this_N_times < completenessQCParam * N_times_max) {\n                if (hasLevels) {\n//                    d.push([loopTime, null, -1, NaN, NaN, NaN]);     // add a null if this time doesn't pass QC\n                    d.x.push(loopTime);\n                    d.y.push(null);\n                    //d.error_x not used\n                    d.error_y.push(null); //placeholder\n                    d.subVals.push(NaN);\n                    d.subSecs.push(NaN);\n                    d.subLevs.push(NaN);\n                } else {\n//                    d.push([loopTime, null, -1, NaN, NaN]);     // add a null if this time doesn't pass QC\n                    d.x.push(loopTime);\n                    d.y.push(null);\n                    //d.error_x not used\n                    d.error_y.push(null); //placeholder\n                    d.subVals.push(NaN);\n                    d.subSecs.push(NaN);\n                }\n            } else {\n                sum += curveStats[d_idx];\n                if (hasLevels) {\n                    //d.push([loopTime, curveStats[d_idx], -1, subVals[d_idx], subSecs[d_idx], subLevs[d_idx]]);   // else add the real data\n                    d.x.push(loopTime);\n                    d.y.push(curveStats[d_idx]);\n                    //d.error_x not used\n                    d.error_y.push(null);\n                    d.subVals.push(subVals[d_idx]);\n                    d.subSecs.push(subSecs[d_idx]);\n                    d.subLevs.push(subLevs[d_idx]);\n                } else {\n                    //d.push([loopTime, curveStats[d_idx], -1, subVals[d_idx], subSecs[d_idx]]);   // else add the real data\n                    d.x.push(loopTime);\n                    d.y.push(curveStats[d_idx]);\n                    //d.error_x not used\n                    d.error_y.push(null);\n                    d.subVals.push(subVals[d_idx]);\n                    d.subSecs.push(subSecs[d_idx]);\n                }\n            }\n        }\n        if (!regular) {  // it is a model that has an irregular set of intervals, i.e. an irregular cadence\n            time_interval = getTimeInterval(loopTime, time_interval, foreCastOffset, cycles);   // the time interval most likely will not be the one calculated above\n        }\n        loopTime = loopTime + time_interval;    // advance to the next time.\n    }\n    if (regular) {\n        cycles = [time_interval];   // regular models will return one cycle cadence\n    }\n    const filteredx = d.x.filter(x => x);\n    const filteredy = d.y.filter(y => y);\n    d.xmin = Math.min(...filteredx);\n    d.xmax = Math.max(...filteredx);\n    d.ymin = Math.min(...filteredy);\n    d.ymax = Math.max(...filteredy);\n    d.sum = sum;\n\n    if (d.xmin == \"-Infinity\" || (d.x.indexOf(0) !== -1 && 0 < d.xmin)) {\n        d.xmin = 0;\n    }\n    if (d.ymin == \"-Infinity\" || (d.y.indexOf(0) !== -1 && 0 < d.ymin)) {\n        d.ymin = 0;\n    }\n\n    if (d.xmax == \"-Infinity\") {\n        d.xmax = 0;\n    }\n    if (d.ymax == \"-Infinity\") {\n        d.ymax = 0;\n    }\n    return {\n        d: d,\n        N0: N0,\n        N_times: N_times,\n        cycles: cycles\n    };\n};\n\n//this method parses the returned query data for specialty curves such as profiles, dieoffs, threshold plots, and valid time plots\nconst parseQueryDataSpecialtyCurve = function (rows, d, completenessQCParam, plotType, appType, hasLevels) {\n    /*\n        var d = {// d will contain the curve data\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            stats: [],     //pointStats\n            text: [],\n            glob_stats: {},     //curveStats\n            xmin:num,\n            ymin:num,\n            xmax:num,\n            ymax:num,\n            sum:num;\n        };\n    */\n    var N0 = [];\n    var N_times = [];\n    var curveIndependentVars = [];\n    var curveStats = [];\n    var subVals = [];\n    var subSecs = [];\n    var subLevs = [];\n    for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        var independentVar;\n        if (plotType === matsTypes.PlotTypes.validtime) {\n            independentVar = Number(rows[rowIndex].hr_of_day);\n        } else if (plotType === matsTypes.PlotTypes.profile) {\n            independentVar = Number((rows[rowIndex].avVal).toString().replace('P', ''));\n        } else if (plotType === matsTypes.PlotTypes.dailyModelCycle) {\n            independentVar = Number(rows[rowIndex].avtime) * 1000;\n        } else {\n            independentVar = Number(rows[rowIndex].avtime);\n        }\n\n        var stat = rows[rowIndex].stat;\n        N0.push(rows[rowIndex].N0);             // number of values that go into a point on the graph\n        N_times.push(rows[rowIndex].N_times);   // number of times that go into a point on the graph\n\n        var sub_stats = [];\n        var sub_secs = [];\n        var sub_levs = [];\n        if (stat !== null && stat !== \"NULL\" && rows[rowIndex].sub_data !== undefined) {\n            try {\n                var sub_data = rows[rowIndex].sub_data.toString().split(',');\n                var curr_sub_data;\n                for (var sd_idx = 0; sd_idx < sub_data.length; sd_idx++) {\n                    curr_sub_data = sub_data[sd_idx].split(';');\n                    sub_stats.push(Number(curr_sub_data[0]));\n                    sub_secs.push(Number(curr_sub_data[1]));\n                    if (hasLevels) {\n                        if (!isNaN(Number(curr_sub_data[2]))) {\n                            sub_levs.push(Number(curr_sub_data[2]));\n                        } else {\n                            sub_levs.push(curr_sub_data[2]);\n                        }\n                    }\n                }\n            } catch (e) {\n                // this is an error produced by a bug in the query function, not an error returned by the mysql database\n                e.message = \"Error in parseQueryDataSpecialtyCurve. The expected fields don't seem to be present in the results cache: \" + e.message;\n                throw new Error(e.message);\n            }\n        } else {\n            sub_stats = NaN;\n            sub_secs = NaN;\n            if (hasLevels) {\n                sub_levs = NaN;\n            }\n        }\n\n        // deal with missing forecast cycles for dailyModelCycle plot type\n        if (plotType === matsTypes.PlotTypes.dailyModelCycle && rowIndex > 0 && (Number(independentVar) - Number(rows[rowIndex - 1].avtime * 1000)) > 3600 * 24 * 1000) {\n            const cycles_missing = Math.floor((Number(independentVar) - Number(rows[rowIndex - 1].avtime * 1000)) / (3600 * 24 * 1000));\n            for (var missingIdx = cycles_missing; missingIdx > 0; missingIdx--) {\n                curveIndependentVars.push(independentVar - 3600 * 24 * 1000 * missingIdx);\n                curveStats.push(null);\n                subVals.push(NaN);\n                subSecs.push(NaN);\n                if (hasLevels) {\n                    subLevs.push(NaN);\n                }\n            }\n        }\n        curveIndependentVars.push(independentVar);\n        curveStats.push(stat);\n        subVals.push(sub_stats);\n        subSecs.push(sub_secs);\n        if (hasLevels) {\n            subLevs.push(sub_levs);\n        }\n    }\n    var N0_max = Math.max(...N0);\n    var N_times_max = Math.max(...N_times);\n    var sum = 0;\n    for (var d_idx = 0; d_idx < curveIndependentVars.length; d_idx++) {\n        var this_N0 = N0[d_idx];\n        var this_N_times = N_times[d_idx];\n        // Make sure that we don't have any points with far less data than the rest of the graph, and that\n        // we don't have any points with a smaller completeness value than specified by the user.\n        if (this_N0 < 0.05 * N0_max || this_N_times < completenessQCParam * N_times_max) {\n            if (plotType === matsTypes.PlotTypes.profile) {\n                // profile has the stat first, and then the independent var. The others have independent var and then stat.\n                // this is in the pattern of x-plotted-variable, y-plotted-variable.\n                //d.push([null, curveIndependentVars[d_idx], -1, NaN, NaN, NaN]);\n                d.x.push(null);\n                d.y.push(curveIndependentVars[d_idx]);\n                d.error_x.push(null);  // placeholder\n                //d.error_y not used for profile\n                d.subVals.push(NaN);\n                d.subSecs.push(NaN);\n                d.subLevs.push(NaN);\n            } else if (plotType !== matsTypes.PlotTypes.dieoff) {\n                // for dieoffs, we don't want to add a null for missing data. Just don't have a point for that FHR.\n                if (hasLevels) {\n                    //d.push([curveIndependentVars[d_idx], null, -1, NaN, NaN, NaN]);\n                    d.x.push(curveIndependentVars[d_idx]);\n                    d.y.push(null);\n                    //d.error_x not used for curves other than profile\n                    d.error_y.push(null);  // placeholder\n                    d.subVals.push(NaN);\n                    d.subSecs.push(NaN);\n                    d.subLevs.push(NaN);\n                } else {\n                    //d.push([curveIndependentVars[d_idx], null, -1, NaN, NaN]);\n                    d.x.push(curveIndependentVars[d_idx]);\n                    d.y.push(null);\n                    //d.error_x not used for curves other than profile\n                    d.error_y.push(null);  // placeholder\n                    d.subVals.push(NaN);\n                    d.subSecs.push(NaN);\n                }\n            }\n        } else {\n            // else add the real data\n            sum += curveStats[d_idx];\n            if (plotType === matsTypes.PlotTypes.profile) {\n                // profile has the stat first, and then the independent var. The others have independent var and then stat.\n                // this is in the pattern of x-plotted-variable, y-plotted-variable.\n//                d.push([curveStats[d_idx], curveIndependentVars[d_idx], -1, subVals[d_idx], subSecs[d_idx], subLevs[d_idx]]);\n                d.x.push(curveStats[d_idx]);\n                d.y.push(curveIndependentVars[d_idx]);\n                d.error_x.push(null); // placeholder\n                //d.error_y not used for curves other than profile\n                d.subVals.push(subVals[d_idx]);\n                d.subSecs.push(subSecs[d_idx]);\n                d.subLevs.push(subLevs[d_idx]);\n            } else if (hasLevels) {\n//                d.push([curveIndependentVars[d_idx], curveStats[d_idx], -1, subVals[d_idx], subSecs[d_idx], subLevs[d_idx]]);\n                d.x.push(curveIndependentVars[d_idx]);\n                d.y.push(curveStats[d_idx]);\n                //d.error_x not used for curves other than profile\n                d.error_y.push(null);  // placeholder\n                d.subVals.push(subVals[d_idx]);\n                d.subSecs.push(subSecs[d_idx]);\n                d.subLevs.push(subLevs[d_idx]);\n            } else {\n//                d.push([curveIndependentVars[d_idx], curveStats[d_idx], -1, subVals[d_idx], subSecs[d_idx]]);\n                d.x.push(curveIndependentVars[d_idx]);\n                d.y.push(curveStats[d_idx]);\n                //d.error_x not used for curves other than profile\n                d.error_y.push(null);  // placeholder\n                d.subVals.push(subVals[d_idx]);\n                d.subSecs.push(subSecs[d_idx]);\n            }\n        }\n    }\n\n    // the met levels are ordered as strings, so we need to re-sort them\n    if (plotType === matsTypes.PlotTypes.profile && appType === matsTypes.AppTypes.metexpress) {\n        var dSorted = [];\n        for (var didx = 0; didx < d.y.length; didx++) {\n            dSorted.push({\n                y: d.y[didx],\n                x: d.x[didx],\n                error_x: d.error_x[didx],\n                subVals: d.subVals[didx],\n                subSecs: d.subSecs[didx],\n                subLevs: d.subLevs[didx]\n            });\n        }\n        d.y = [];\n        d.x = [];\n        d.error_x = [];\n        d.subVals = [];\n        d.subSecs = [];\n        d.subLevs = [];\n        dSorted.sort(function(a,b) { return a.y - b.y; });\n        dSorted.map(function (elem) {\n            d.y.push(elem.y);\n            d.x.push(elem.x);\n            d.error_x.push(elem.error_x);\n            d.subVals.push(elem.subVals);\n            d.subSecs.push(elem.subSecs);\n            d.subLevs.push(elem.subLevs);\n        });\n    }\n\n    const filteredx = d.x.filter(x => x);\n    const filteredy = d.y.filter(y => y);\n    d.xmin = Math.min(...filteredx);\n    d.xmax = Math.max(...filteredx);\n    d.ymin = Math.min(...filteredy);\n    d.ymax = Math.max(...filteredy);\n    d.sum = sum;\n\n    if (d.xmin == \"-Infinity\" || (d.x.indexOf(0) !== -1 && 0 < d.xmin)) {\n        d.xmin = 0;\n    }\n    if (d.ymin == \"-Infinity\" || (d.y.indexOf(0) !== -1 && 0 < d.ymin)) {\n        d.ymin = 0;\n    }\n\n    if (d.xmax == \"-Infinity\") {\n        d.xmax = 0;\n    }\n    if (d.ymax == \"-Infinity\") {\n        d.ymax = 0;\n    }\n\n    return {\n        d: d,\n        N0: N0,\n        N_times: N_times\n    };\n};\n\n// this method parses the returned query data for histograms\nconst parseQueryDataHistogram = function (d, rows, hasLevels) {\n    /*\n        var d = {// d will contain the curve data\n            x: [], //placeholder\n            y: [], //placeholder\n            error_x: [], // unused\n            error_y: [], // unused\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            glob_stats: [], // placeholder\n            bin_stats: [], // placeholder\n            text: [] //placeholder\n            xmin:num,\n            xmax:num,\n            ymin:num,\n            ymax:num\n        };\n    */\n\n    // these arrays hold all the sub values and seconds (and levels) until they are sorted into bins\n    var curveSubStatsRaw = [];\n    var curveSubSecsRaw = [];\n    var curveSubLevsRaw = [];\n\n    // parse the data returned from the query\n    for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n\n        var stat = rows[rowIndex].stat;\n        var sub_stats = [];\n        var sub_secs = [];\n        var sub_levs = [];\n        if (stat !== null && stat !== \"NULL\" && rows[rowIndex].sub_data !== undefined) {\n            try {\n                var sub_data = rows[rowIndex].sub_data.toString().split(',');\n                var curr_sub_data;\n                for (var sd_idx = 0; sd_idx < sub_data.length; sd_idx++) {\n                    curr_sub_data = sub_data[sd_idx].split(';');\n                    sub_stats.push(Number(curr_sub_data[0]));\n                    sub_secs.push(Number(curr_sub_data[1]));\n                    if (hasLevels) {\n                            if (!isNaN(Number(curr_sub_data[2]))) {\n                                sub_levs.push(Number(curr_sub_data[2]));\n                            } else {\n                                sub_levs.push(curr_sub_data[2]);\n                            }\n                        }\n                        curveSubLevsRaw.push(sub_levs);\n                    }\n                curveSubStatsRaw.push(sub_stats);\n                curveSubSecsRaw.push(sub_secs);\n            } catch (e) {\n                // this is an error produced by a bug in the query function, not an error returned by the mysql database\n                e.message = \"Error in parseQueryDataHistogram. The expected fields don't seem to be present in the results cache: \" + e.message;\n                throw new Error(e.message);\n            }\n        }\n    }\n\n    // we don't have bins yet, so we want all of the data in one array\n    const subVals = [].concat.apply([], curveSubStatsRaw);\n    const subSecs = [].concat.apply([], curveSubSecsRaw);\n    var subLevs;\n    if (hasLevels) {\n        subLevs = [].concat.apply([], curveSubLevsRaw);\n    }\n\n    d.subVals = subVals;\n    d.subSecs = subSecs;\n    d.subLevs = subLevs;\n\n    return {\n        d: d,\n        N0: subVals.length,\n        N_times: subSecs.length\n    };\n};\n\n//this method parses the returned query data for contour plots\nconst parseQueryDataContour = function (rows, d) {\n    /*\n        var d = {// d will contain the curve data\n            x: [],\n            y: [],\n            z: [],\n            n: [],\n            text: [],\n            xTextOutput: [],\n            yTextOutput: [],\n            zTextOutput: [],\n            nTextOutput: [],\n            minDateTextOutput: [],\n            maxDateTextOutput: [],\n            stats: []],\n            glob_stats: {},\n            xmin:num,\n            ymin:num,\n            zmin:num,\n            xmax:num,\n            ymax:num,\n            zmax:num,\n            sum:num\n        };\n    */\n    var curveStatLookup = {};\n    var curveNLookup = {};\n    // get all the data out of the query array\n    for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        var rowXVal = rows[rowIndex].xVal;\n        var rowYVal = rows[rowIndex].yVal;\n        var statKey = rowXVal.toString() + '_' + rowYVal.toString();\n        var stat = rows[rowIndex].stat;\n        var n = rows[rowIndex].sub_data !== null ? rows[rowIndex].sub_data.toString().split(',').length : 0;\n        var minDate = rows[rowIndex].min_secs;\n        var maxDate = rows[rowIndex].max_secs;\n        if (stat === undefined || stat === null || stat === 'NULL') {\n            stat = null;\n            n = 0;\n            minDate = null;\n            maxDate = null;\n        }\n        // store flat arrays of all the parsed data, used by the text output and for some calculations later\n        d.xTextOutput.push(Number(rowXVal));\n        d.yTextOutput.push(Number(rowYVal));\n        d.zTextOutput.push(stat);\n        d.nTextOutput.push(n);\n        d.minDateTextOutput.push(minDate);\n        d.maxDateTextOutput.push(maxDate);\n        curveStatLookup[statKey] = stat;\n        curveNLookup[statKey] = n;\n    }\n    // get the unique x and y values and sort the stats into the 2D z array accordingly\n    d.x = matsDataUtils.arrayUnique(d.xTextOutput).sort(function (a, b) {\n        return a - b\n    });\n    d.y = matsDataUtils.arrayUnique(d.yTextOutput).sort(function (a, b) {\n        return a - b\n    });\n    var i;\n    var j;\n    var currX;\n    var currY;\n    var currStat;\n    var currN;\n    var currStatKey;\n    var currYStatArray;\n    var currYNArray;\n    var sum = 0;\n    var nPoints = 0;\n    for (j = 0; j < d.y.length; j++) {\n        currY = d.y[j];\n        currYStatArray = [];\n        currYNArray = [];\n        for (i = 0; i < d.x.length; i++) {\n            currX = d.x[i];\n            currStatKey = currX.toString() + '_' + currY.toString();\n            currStat = curveStatLookup[currStatKey];\n            currN = curveNLookup[currStatKey];\n            if (currStat === undefined) {\n                currYStatArray.push(null);\n                currYNArray.push(0);\n            } else {\n                sum += currStat;\n                nPoints = nPoints + 1;\n                currYStatArray.push(currStat);\n                currYNArray.push(currN);\n            }\n        }\n        d.z.push(currYStatArray);\n        d.n.push(currYNArray);\n    }\n\n    // calculate statistics\n    const filteredx = d.x.filter(x => x);\n    const filteredy = d.y.filter(y => y);\n    const filteredz = d.zTextOutput.filter(z => z);\n    d.xmin = Math.min(...filteredx);\n    d.xmax = Math.max(...filteredx);\n    d.ymin = Math.min(...filteredy);\n    d.ymax = Math.max(...filteredy);\n    d.zmin = Math.min(...filteredz);\n    d.zmax = Math.max(...filteredz);\n    d.sum = sum;\n\n    if (d.xmin == \"-Infinity\" || (d.x.indexOf(0) !== -1 && 0 < d.xmin)) {\n        d.xmin = 0;\n    }\n    if (d.ymin == \"-Infinity\" || (d.y.indexOf(0) !== -1 && 0 < d.ymin)) {\n        d.ymin = 0;\n    }\n    if (d.zmin == \"-Infinity\" || (d.zTextOutput.indexOf(0) !== -1 && 0 < d.zmin)) {\n        d.zmin = 0;\n    }\n\n    if (d.xmax == \"-Infinity\") {\n        d.xmax = 0;\n    }\n    if (d.ymax == \"-Infinity\") {\n        d.ymax = 0;\n    }\n    if (d.zmax == \"-Infinity\") {\n        d.zmax = 0;\n    }\n\n    const filteredMinDate = d.minDateTextOutput.filter(t => t);\n    const filteredMaxDate = d.maxDateTextOutput.filter(t => t);\n    d.glob_stats['mean'] = sum / nPoints;\n    d.glob_stats['minDate'] = Math.min(...filteredMinDate);\n    d.glob_stats['maxDate'] = Math.max(...filteredMaxDate);\n    d.glob_stats['n'] = nPoints;\n\n    return {\n        d: d\n    };\n};\n\nexport default matsDataQueryUtils = {\n\n    simplePoolQueryWrapSynchronous: simplePoolQueryWrapSynchronous,\n    queryDBTimeSeries: queryDBTimeSeries,\n    queryDBSpecialtyCurve: queryDBSpecialtyCurve,\n    queryMapDB: queryMapDB,\n    queryDBContour: queryDBContour\n\n}\n\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsPlotUtils} from 'meteor/randyp:mats-common';\n\n// returns the data for whichever curve has the larger interval in its independent variable\nconst getLargeIntervalCurveData = function (dataset, diffFrom, independentVarName) {\n    var dataMaxInterval = Number.MIN_VALUE;\n    var largeIntervalCurveData = dataset[diffFrom[0]];\n    // set up the indexes and determine the minimum independentVarName value for the dataset\n    for (var ci = 0; ci < dataset.length; ci++) {\n        if (dataset[ci][independentVarName] === undefined || dataset[ci][independentVarName].length === 0) {\n            // one of the curves has no data. No match possible. Just use interval from first curve\n            break;\n        }\n        if (dataset[ci][independentVarName].length > 1) {\n            var diff;\n            for (var di = 0; di < dataset[ci][independentVarName].length - 1; di++) {  // don't go all the way to the end - one shy\n                diff = dataset[ci][independentVarName][di + 1] - dataset[ci][independentVarName][di];\n                if (diff > dataMaxInterval) {\n                    dataMaxInterval = diff;\n                    largeIntervalCurveData = dataset[ci];\n                }\n            }\n        }\n    }\n    return largeIntervalCurveData;\n};\n\n// generates diff curves for all plot types that have diff curves.\nconst getDataForDiffCurve = function (dataset, diffFrom, plotType, hasLevels) {\n    /*\n     DATASET ELEMENTS:\n        series: [data,data,data ...... ]   each data is itself an object\n        d = {\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            stats: [],     //pointStats\n            text: [],\n            glob_stats: {},     //curveStats\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n\n     NOTE -- for profiles, x is the statVarName and y is the independentVarName, because profiles plot the statVarName\n        on the x axis and the independentVarName on the y axis.\n\n    For histograms:\n    DATASET ELEMENTS:\n        series: [data,data,data ...... ]   each data is itself an array\n        d = {\n            x: [], //placeholder\n            y: [], //placeholder\n            error_x: [], // unused\n            error_y: [], // unused\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            glob_stats: [], // placeholder\n            bin_stats: [], // placeholder\n            text: [] //placeholder\n        };\n\n     */\n\n    // determine whether data[0] or data[1] is the independent variable, and which is the stat value\n    var independentVarName;\n    var statVarName;\n    if (plotType !== matsTypes.PlotTypes.profile) {\n        independentVarName = 'x';\n        statVarName = 'y';\n    } else {\n        independentVarName = 'y';\n        statVarName = 'x';\n    }\n\n    // initialize variables\n    var minuendData = dataset[diffFrom[0]];\n    var subtrahendData = dataset[diffFrom[1]];\n    var subtrahendIndex = 0;\n    var minuendIndex = 0;\n\n    var d;\n    if (plotType !== matsTypes.PlotTypes.histogram) {\n        d = {\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            glob_stats: [],\n            stats: [],     //curveStats\n            text: [],\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n    } else {\n        d = {\n            x: [],\n            y: [],\n            error_x: [],\n            error_y: [],\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            glob_stats: {\n                'glob_mean': null,\n                'glob_sd': null,\n                'glob_n': null,\n                'glob_max': null,\n                'glob_min': null\n            },\n            bin_stats: [],\n            text: [],\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n        };\n    }\n\n    // make sure neither curve is empty\n    if (minuendData.x.length === 0 || subtrahendData.x.length === 0) {\n        return {'dataset': d};\n    }\n\n    // this is a difference curve - we are differencing diffFrom[0] - diffFrom[1] based on the\n    // independentVarName values of whichever has the largest interval\n    // find the largest interval between diffFrom[0] curve and diffFrom[1] curve\n    var largeIntervalCurveData = getLargeIntervalCurveData(dataset, diffFrom, independentVarName);\n\n    // calculate the differences\n    for (var largeIntervalCurveIndex = 0; largeIntervalCurveIndex < largeIntervalCurveData[independentVarName].length; largeIntervalCurveIndex++) {\n\n        // make sure that we are actually on the same independentVarName value for each curve\n        var subtrahendIndependentVar = subtrahendData[independentVarName][subtrahendIndex];\n        var minuendIndependentVar = minuendData[independentVarName][minuendIndex];\n        var largeIntervalIndependentVar = largeIntervalCurveData[independentVarName][largeIntervalCurveIndex];\n\n        // increment the minuendIndex until it reaches this iteration's largeIntervalIndependentVar\n        var minuendChanged = false;\n        while (largeIntervalIndependentVar > minuendIndependentVar && minuendIndex < minuendData[independentVarName].length - 1) {\n            minuendIndependentVar = minuendData[independentVarName][++minuendIndex];\n            minuendChanged = true;\n        }\n        // if the end of the curve was reached without finding the largeIntervalIndependentVar, increase the minuendIndex to trigger the end conditions.\n        if (!minuendChanged && minuendIndex >= minuendData[independentVarName].length - 1) {\n            ++minuendIndex;\n        }\n\n        // increment the subtrahendIndex until it reaches this iteration's largeIntervalIndependentVar\n        var subtrahendChanged = false;\n        while (largeIntervalIndependentVar > subtrahendIndependentVar && subtrahendIndex < subtrahendData[independentVarName].length - 1) {\n            subtrahendIndependentVar = subtrahendData[independentVarName][++subtrahendIndex];\n            subtrahendChanged = true;\n        }\n        // if the end of the curve was reached without finding the largeIntervalIndependentVar, increase the subtrahendIndex to trigger the end conditions.\n        if (!subtrahendChanged && subtrahendIndex >= subtrahendData[independentVarName].length - 1) {\n            ++subtrahendIndex;\n        }\n\n        var diffValue = null;\n        var tempSubValsArray;\n        var tempSubSecsArray;\n        var tempSubLevsArray;\n        if (minuendData[independentVarName][minuendIndex] !== undefined && subtrahendData[independentVarName][subtrahendIndex] !== undefined) {  // make sure both curves actually have data at this index\n            if ((minuendData[statVarName][minuendIndex] !== null && subtrahendData[statVarName][subtrahendIndex] !== null) && minuendData[independentVarName][minuendIndex] === subtrahendData[independentVarName][subtrahendIndex]) { // make sure data is not null at this point and the independentVars actually match\n\n                diffValue = minuendData[statVarName][minuendIndex] - subtrahendData[statVarName][subtrahendIndex];\n                d[independentVarName].push(largeIntervalIndependentVar);\n                d[statVarName].push(diffValue);\n                d.error_x.push(null);\n                d.error_y.push(null);\n                tempSubValsArray = [];\n                tempSubSecsArray = [];\n                if (hasLevels) {\n                    tempSubLevsArray = [];\n                }\n\n                if (plotType !== matsTypes.PlotTypes.histogram) {\n                    var minuendDataSubValues = minuendData.subVals[minuendIndex];\n                    var minuendDataSubSeconds = minuendData.subSecs[minuendIndex];\n                    if (hasLevels) {\n                        var minuendDataSubLevels = minuendData.subLevs[minuendIndex];\n                    }\n                    var subtrahendDataSubValues = subtrahendData.subVals[subtrahendIndex];\n                    var subtrahendDataSubSeconds = subtrahendData.subSecs[subtrahendIndex];\n                    if (hasLevels) {\n                        var subtrahendDataSubLevels = subtrahendData.subLevs[subtrahendIndex];\n                    }\n\n                    // find matching sub values and diff those\n                    for (var mvalIdx = 0; mvalIdx < minuendDataSubValues.length; mvalIdx++) {\n                        for (var svalIdx = 0; svalIdx < subtrahendDataSubValues.length; svalIdx++) {\n                            if (hasLevels && minuendDataSubSeconds[mvalIdx] === subtrahendDataSubSeconds[svalIdx] && minuendDataSubLevels[mvalIdx] === subtrahendDataSubLevels[svalIdx]) {\n                                tempSubValsArray.push(minuendDataSubValues[mvalIdx] - subtrahendDataSubValues[svalIdx]);\n                                tempSubSecsArray.push(minuendDataSubSeconds[mvalIdx]);\n                                tempSubLevsArray.push(minuendDataSubLevels[mvalIdx]);\n                            } else if (!hasLevels && minuendDataSubSeconds[mvalIdx] === subtrahendDataSubSeconds[svalIdx]) {\n                                tempSubValsArray.push(minuendDataSubValues[mvalIdx] - subtrahendDataSubValues[svalIdx]);\n                                tempSubSecsArray.push(minuendDataSubSeconds[mvalIdx]);\n                            }\n                        }\n                    }\n\n                    d.subVals.push(tempSubValsArray);\n                    d.subSecs.push(tempSubSecsArray);\n                    if (hasLevels) {\n                        d.subLevs.push(tempSubLevsArray);\n                    }\n\n                    d.sum = d.sum + d[independentVarName][largeIntervalCurveIndex];\n\n                } else {\n                    d.bin_stats.push({\n                        'bin_mean': null,\n                        'bin_sd': null,\n                        'bin_n': diffValue,\n                        'bin_rf': minuendData.bin_stats[minuendIndex].bin_rf - subtrahendData.bin_stats[subtrahendIndex].bin_rf,\n                        'binLowBound': minuendData.bin_stats[minuendIndex].binLowBound,\n                        'binUpBound': minuendData.bin_stats[minuendIndex].binUpBound,\n                        'binLabel': minuendData.bin_stats[minuendIndex].binLabel\n                    });\n                }\n\n            } else {\n                // no match for this independentVarName\n                d[independentVarName].push(largeIntervalIndependentVar);\n                d[statVarName].push(null);\n                d.error_x.push(null);\n                d.error_y.push(null);\n                d.subVals.push([]);\n                d.subSecs.push([]);\n                if (hasLevels) {\n                    d.subLevs.push([]);\n                }\n                if (plotType === matsTypes.PlotTypes.histogram) {\n                    d.bin_stats.push({\n                        'bin_mean': null,\n                        'bin_sd': null,\n                        'bin_n': null,\n                        'bin_rf': null,\n                        'binLowBound': minuendData.bin_stats[minuendIndex].binLowBound,\n                        'binUpBound': minuendData.bin_stats[minuendIndex].binUpBound,\n                        'binLabel': minuendData.bin_stats[minuendIndex].binLabel\n                    });\n                }\n\n            }\n        } else if ((!subtrahendChanged && subtrahendIndex >= subtrahendData[independentVarName].length - 1) || (!minuendChanged && minuendIndex >= minuendData[independentVarName].length - 1)) {\n            // we've reached the end of at least one curve, so end the diffing.\n            break;\n        }\n    }\n\n    const filteredx = d.x.filter(x => x);\n    const filteredy = d.y.filter(y => y);\n    d.xmin = Math.min(...filteredx);\n    d.xmax = Math.max(...filteredx);\n    d.ymin = Math.min(...filteredy);\n    d.ymax = Math.max(...filteredy);\n\n    return {'dataset': d};\n};\n\n// generates diff of two contours.\nconst getDataForDiffContour = function (dataset) {\n    /*\n     DATASET ELEMENTS:\n        d[i] = {\n            label: string,\n            curveId: string,\n            name: string,\n            annotateColor: string,\n            annotation: string,             -----\n            x: [],                          *****\n            y: [],                          *****\n            z: [[]],                        *****\n            n: [[]],                        *****\n            text: [],\n            stats: [],\n            glob_stats: object,             -----\n            type: string,\n            autocontour: boolean,\n            ncontours: number,\n            colorbar: object,\n            colorscale: string,\n            reversescale: boolean,\n            contours: object,\n            marker: object,\n            xAxisKey: [],\n            yAxisKey: [],\n            visible: boolean,\n            xTextOutput: [],                *****\n            yTextOutput: [],                *****\n            zTextOutput: [],                *****\n            nTextOutput: [],                *****\n            maxDateTextOutput: [],          *****\n            minDateTextOutput: [],          *****\n            xmax: number,                   -----\n            xmin: number,                   -----\n            ymax: number,                   -----\n            ymin: number,                   -----\n            zmax: number,                   -----\n            zmin: number,                   -----\n            sum: number                     *****\n        };\n\n        ***** indicates calculation in loops\n        ----- indicates calculation after loops\n     */\n\n    // initialize output object\n    var diffDataset = {};\n    diffDataset['label'] = dataset[1].label + '-' + dataset[0].label;\n    diffDataset['curveId'] = dataset[1].curveId + '-' + dataset[0].curveId;\n    diffDataset['name'] = dataset[1].name + '-' + dataset[0].name;\n    diffDataset['annotateColor'] = \"rgb(255,165,0)\";\n    diffDataset['annotation'] = \"\";\n    diffDataset['text'] = [];\n    diffDataset['type'] = dataset[0].type;\n    diffDataset['marker'] = dataset[0].marker;\n    diffDataset['xAxisKey'] = dataset[0].xAxisKey;\n    diffDataset['yAxisKey'] = dataset[0].yAxisKey;\n    diffDataset['visible'] = dataset[0].visible;\n    diffDataset['x'] = [];\n    diffDataset['y'] = [];\n    diffDataset['z'] = [];\n    diffDataset['n'] = [];\n    diffDataset['xTextOutput'] = [];\n    diffDataset['yTextOutput'] = [];\n    diffDataset['zTextOutput'] = [];\n    diffDataset['nTextOutput'] = [];\n    diffDataset['maxDateTextOutput'] = [];\n    diffDataset['minDateTextOutput'] = [];\n    diffDataset['stats'] = [];\n    diffDataset['glob_stats'] = {};\n    diffDataset['xmax'] = -1 * Number.MAX_VALUE;\n    diffDataset['xmin'] = Number.MAX_VALUE;\n    diffDataset['ymax'] = -1 * Number.MAX_VALUE;\n    diffDataset['ymin'] = Number.MAX_VALUE;\n    diffDataset['zmax'] = -1 * Number.MAX_VALUE;\n    diffDataset['zmin'] = Number.MAX_VALUE;\n    diffDataset['sum'] = 0;\n\n    // initialize local variables\n    var minuendData = dataset[1];\n    var subtrahendData = dataset[0];\n\n    // get common x and y\n    diffDataset.x = _.intersection(minuendData.x, subtrahendData.x).sort(function (a, b) {\n        return a - b\n    });\n    diffDataset.y = _.intersection(minuendData.y, subtrahendData.y).sort(function (a, b) {\n        return a - b\n    });\n\n    // make we actually have matches\n    if (diffDataset.x.length === 0 || diffDataset.y.length === 0) {\n        diffDataset.x = [];\n        diffDataset.y = [];\n        return [diffDataset];\n    }\n\n    // make sure neither dataset is empty\n    if (minuendData.x.length === 0 || subtrahendData.x.length === 0 || minuendData.y.length === 0 || subtrahendData.y.length === 0) {\n        return [diffDataset];\n    }\n\n    var minuendYIndex = 0;\n    var subtrahendYIndex = 0;\n    var nPoints = 0;\n\n    // loop through common Ys\n    for (var diffDataYIndex = 0; diffDataYIndex < diffDataset.y.length; diffDataYIndex++) {\n        //make sure that we are actually on the same y value for each curve\n        var diffDataY = diffDataset.y[diffDataYIndex];\n        var minuendY = minuendData.y[minuendYIndex];\n        var subtrahendY = subtrahendData.y[subtrahendYIndex];\n\n        //increment the minuendYIndex until it reaches this iteration's diffDataY\n        while (diffDataY > minuendY && minuendYIndex < minuendData.y.length - 1) {\n            minuendY = minuendData.y[++minuendYIndex];\n        }\n\n        //increment the subtrahendYIndex until it reaches this iteration's diffDataY\n        while (diffDataY > subtrahendY && subtrahendYIndex < subtrahendData.y.length - 1) {\n            subtrahendY = subtrahendData.y[++subtrahendYIndex];\n        }\n\n        // initialize n and z arrays for this Y\n        diffDataset.z[diffDataYIndex] = [];\n        diffDataset.n[diffDataYIndex] = [];\n\n        var minuendXIndex = 0;\n        var subtrahendXIndex = 0;\n        for (var diffDataXIndex = 0; diffDataXIndex < diffDataset.x.length; diffDataXIndex++) {\n            //make sure that we are actually on the same x value for each curve\n            var diffDataX = diffDataset.x[diffDataXIndex];\n            var minuendX = minuendData.x[minuendXIndex];\n            var subtrahendX = subtrahendData.x[subtrahendXIndex];\n\n            //increment the minuendXIndex until it reaches this iteration's diffDataX\n            while (diffDataX > minuendX && minuendXIndex < minuendData.x.length - 1) {\n                minuendX = minuendData.x[++minuendXIndex];\n            }\n\n            //increment the subtrahendXIndex until it reaches this iteration's diffDataX\n            while (diffDataX > subtrahendX && subtrahendXIndex < subtrahendData.x.length - 1) {\n                subtrahendX = subtrahendData.x[++subtrahendXIndex];\n            }\n\n            var diffValue = null;\n            var diffNumber = 0;\n            var diffMinDate = null;\n            var diffMaxDate = null;\n            if ((minuendData.z[minuendYIndex][minuendXIndex] !== undefined && subtrahendData.z[subtrahendYIndex][subtrahendXIndex] !== undefined)\n                && (minuendData.z[minuendYIndex][minuendXIndex] !== null && subtrahendData.z[subtrahendYIndex][subtrahendXIndex] !== null)\n                && minuendX === subtrahendX && minuendY === subtrahendY) { // make sure both contours actually have data at these indices, data is not null at this point, and the x and y actually match\n                // calculate the difference values\n                diffValue = minuendData.z[minuendYIndex][minuendXIndex] - subtrahendData.z[subtrahendYIndex][subtrahendXIndex];\n                diffNumber = minuendData.n[minuendYIndex][minuendXIndex] <= subtrahendData.n[subtrahendYIndex][subtrahendXIndex] ? minuendData.n[minuendYIndex][minuendXIndex] : subtrahendData.n[subtrahendYIndex][subtrahendXIndex];\n                diffMinDate = minuendData.minDateTextOutput[minuendYIndex * minuendData.x.length + minuendXIndex] <= subtrahendData.minDateTextOutput[subtrahendYIndex * subtrahendData.x.length + subtrahendXIndex] ? minuendData.minDateTextOutput[minuendYIndex * minuendData.x.length + minuendXIndex] : subtrahendData.minDateTextOutput[subtrahendYIndex * subtrahendData.x.length + subtrahendXIndex];\n                diffMaxDate = minuendData.maxDateTextOutput[minuendYIndex * minuendData.x.length + minuendXIndex] >= subtrahendData.maxDateTextOutput[subtrahendYIndex * subtrahendData.x.length + subtrahendXIndex] ? minuendData.maxDateTextOutput[minuendYIndex * minuendData.x.length + minuendXIndex] : subtrahendData.maxDateTextOutput[subtrahendYIndex * subtrahendData.x.length + subtrahendXIndex];\n                diffDataset['sum'] += diffValue;\n                nPoints = nPoints + 1;\n            }\n            diffDataset.z[diffDataYIndex].push(diffValue);\n            diffDataset.n[diffDataYIndex].push(diffNumber);\n            diffDataset.xTextOutput.push(diffDataX);\n            diffDataset.yTextOutput.push(diffDataY);\n            diffDataset.zTextOutput.push(diffValue);\n            diffDataset.nTextOutput.push(diffNumber);\n            diffDataset.minDateTextOutput.push(diffMinDate);\n            diffDataset.maxDateTextOutput.push(diffMaxDate);\n        }\n    }\n\n    // calculate statistics\n    const filteredx = diffDataset.x.filter(x => x);\n    const filteredy = diffDataset.y.filter(y => y);\n    const filteredz = diffDataset.zTextOutput.filter(z => z);\n    diffDataset.xmin = Math.min(...filteredx);\n    diffDataset.xmax = Math.max(...filteredx);\n    diffDataset.ymin = Math.min(...filteredy);\n    diffDataset.ymax = Math.max(...filteredy);\n    diffDataset.zmin = Math.min(...filteredz);\n    diffDataset.zmax = Math.max(...filteredz);\n\n    if (diffDataset.xmin == \"-Infinity\" || (diffDataset.x.indexOf(0) !== -1 && 0 < diffDataset.xmin)) {\n        diffDataset.xmin = 0;\n    }\n    if (diffDataset.ymin == \"-Infinity\" || (diffDataset.y.indexOf(0) !== -1 && 0 < diffDataset.ymin)) {\n        diffDataset.ymin = 0;\n    }\n    if (diffDataset.zmin == \"-Infinity\" || (diffDataset.zTextOutput.indexOf(0) !== -1 && 0 < diffDataset.zmin)) {\n        diffDataset.zmin = 0;\n    }\n\n    if (diffDataset.xmax == \"-Infinity\") {\n        diffDataset.xmax = 0;\n    }\n    if (diffDataset.ymax == \"-Infinity\") {\n        diffDataset.ymax = 0;\n    }\n    if (diffDataset.zmax == \"-Infinity\") {\n        diffDataset.zmax = 0;\n    }\n\n    const filteredMinDate = diffDataset.minDateTextOutput.filter(t => t);\n    const filteredMaxDate = diffDataset.maxDateTextOutput.filter(t => t);\n    diffDataset.glob_stats['mean'] = diffDataset.sum / nPoints;\n    diffDataset.glob_stats['minDate'] = Math.min(...filteredMinDate);\n    diffDataset.glob_stats['maxDate'] = Math.max(...filteredMaxDate);\n    diffDataset.glob_stats['n'] = nPoints;\n    diffDataset['annotation'] = diffDataset.glob_stats.mean === undefined ? diffDataset.label + \"- mean = NaN\" : diffDataset.label + \"- mean = \" + diffDataset.glob_stats.mean.toPrecision(4);\n\n    // make contours symmetrical around 0\n    diffDataset['autocontour'] = false;\n    diffDataset['ncontours'] = 15;\n    diffDataset['colorbar'] = dataset[0].colorbar;\n    diffDataset['colorbar']['title'] = dataset[0].colorbar.title === dataset[1].colorbar.title ? dataset[0].colorbar.title : dataset[1].colorbar.title + \" - \" + dataset[0].colorbar.title;\n    diffDataset['colorscale'] = [[0,\"rgb(5,10,172)\"],[0.35,\"rgb(106,137,247)\"],[0.45,\"rgb(255,255,255)\"],[0.55,\"rgb(255,255,255)\"],[0.6,\"rgb(220,170,132)\"],[0.7,\"rgb(230,145,90)\"],[1,\"rgb(178,10,28)\"]];\n    diffDataset['reversescale'] = dataset[0].reversescale;\n    diffDataset['contours'] = dataset[0].contours;\n    const maxZ = Math.abs(diffDataset.zmax) > Math.abs(diffDataset.zmin) ? Math.abs(diffDataset.zmax) : Math.abs(diffDataset.zmin);\n    diffDataset['contours']['start'] = -1 * maxZ + (2 * maxZ) / 16;\n    diffDataset['contours']['end'] = maxZ - (2 * maxZ) / 16;\n    diffDataset['contours']['size'] = (2 * maxZ) / 16;\n\n    return [diffDataset];\n};\n\nexport default matsDataDiffUtils = {\n\n    getDataForDiffCurve: getDataForDiffCurve,\n    getDataForDiffContour: getDataForDiffContour\n\n}\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsDataUtils} from 'meteor/randyp:mats-common';\nimport {matsTypes} from 'meteor/randyp:mats-common';\n\n// function for removing unmatched data from a dataset containing multiple curves *without* levels\nconst getMatchedDataSet = function (dataset, curvesLength) {\n\n    var subSecs = [];\n    var subValues = [];\n    var newSubSecs = [];\n    var newSubValues = [];\n    var independentVarGroups = [];\n    var independentVarHasPoint = [];\n    var currIndependentVar;\n    var curveIndex;\n    var data;\n    var di;\n    var fi;\n    var si;\n\n    // matching in this function is based on a curve's independent variable. For a timeseries, the independentVar is epoch,\n    // for a profile, it's level, for a dieoff, it's forecast hour, for a threshold plot, it's threshold, and for a\n    // valid time plot, it's hour of day. This function identifies the the independentVar values common across all of\n    // the curves, and then the common sub times/levels/values for those independentVar values.\n\n    // find the matching independentVars shared across all curves\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) { // every curve\n        independentVarGroups[curveIndex] = [];  // store the independentVars for each curve that are not null\n        independentVarHasPoint[curveIndex] = [];   // store the *all* of the independentVars for each curve\n        subSecs[curveIndex] = {};  // store the individual record times (subSecs) going into each independentVar for each curve\n        data = dataset[curveIndex];\n        for (di = 0; di < data.x.length; di++) { // loop over every independentVar value in this curve\n            currIndependentVar = data.x[di];\n            if (data.y[di] !== null) {\n                subSecs[curveIndex][currIndependentVar] = data.subSecs[di];   // store raw secs for this independentVar value, since it's not a null point\n                independentVarGroups[curveIndex].push(currIndependentVar);   // store this independentVar value, since it's not a null point\n            }\n            independentVarHasPoint[curveIndex].push(currIndependentVar);    // store all the independentVar values, regardless of whether they're null\n        }\n    }\n\n    var matchingIndependentVars = _.intersection.apply(_, independentVarGroups);    // find all of the non-null independentVar values common across all the curves\n    var matchingIndependentHasPoint = _.intersection.apply(_, independentVarHasPoint);    // find all of the independentVar values common across all the curves, regardless of whether or not they're null\n    var subSecIntersection = {};       // eventually find the intersecting subSecs for each common non-null independentVar value\n\n    for (fi = 0; fi < matchingIndependentVars.length; fi++) { // loop over each common non-null independentVar value\n        currIndependentVar = matchingIndependentVars[fi];\n        var currSubSecIntersection = subSecs[0][currIndependentVar];   // fill current subSecs intersection array with subSecs from the first curve\n        for (curveIndex = 1; curveIndex < curvesLength; curveIndex++) { // loop over every curve\n            currSubSecIntersection = _.intersection(currSubSecIntersection, subSecs[curveIndex][currIndependentVar]);   // keep taking the intersection of the current subSecs intersection array with each curve's subSecs array for this independentVar value\n        }\n        subSecIntersection[currIndependentVar] = currSubSecIntersection;   // store the final intersecting subSecs array for this common non-null independentVar value\n    }\n\n    // remove non-matching independentVars and subSecs\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) { // loop over every curve\n        data = dataset[curveIndex];\n\n        // need to loop backwards through the data array so that we can splice non-matching indices\n        // while still having the remaining indices in the correct order\n        var dataLength = data.x.length;\n        for (di = dataLength - 1; di >= 0; di--) {\n\n            if (matchingIndependentVars.indexOf(data.x[di]) === -1) {  // if this is not a common non-null independentVar value, we'll have to remove some data\n                if (matchingIndependentHasPoint.indexOf(data.x[di]) === -1) {   // if at least one curve doesn't even have a null here, much less a matching value (beacause of the cadence), just drop this independentVar\n                    data.x.splice(di, 1);\n                    data.y.splice(di, 1);\n                    data.error_y.array.splice(di, 1);\n                    data.subVals.splice(di, 1);\n                    data.subSecs.splice(di, 1);\n                    data.stats.splice(di, 1);\n                    data.text.splice(di, 1);\n                } else {    // if all of the curves have either data or nulls at this independentVar, and there is at least one null, ensure all of the curves are null\n                    data.y[di] = null;\n                    data.subVals[di] = NaN;\n                    data.subSecs[di] = NaN;\n                }\n                continue;   // then move on to the next independentVar. There's no need to mess with the subSecs\n            }\n            subSecs = data.subSecs[di];\n            subValues = data.subVals[di];\n\n            if (subSecs.length > 0) {\n                currIndependentVar = data.x[di];\n                newSubValues = [];\n                newSubSecs = [];\n                for (si = 0; si < subSecs.length; si++) {  // loop over all subSecs for this independentVar\n                    if (subSecIntersection[currIndependentVar].indexOf(subSecs[si]) !== -1) { // keep the subValue only if its associated subSec is common to all curves for this independentVar\n                        var newVal = subValues[si];\n                        var newSec = subSecs[si];\n                        if (newVal !== undefined) {\n                            newSubValues.push(newVal);\n                            newSubSecs.push(newSec);\n                        }\n                    }\n                }\n                // store the filtered data\n                data.subVals[di] = newSubValues;\n                data.subSecs[di] = newSubSecs;\n            }\n        }\n        dataset[curveIndex] = data;\n    }\n\n    return dataset;\n};\n\n// function for removing unmatched data from a dataset containing multiple curves *with* levels\nconst getMatchedDataSetWithLevels = function (dataset, curvesLength, plotType) {\n\n    var subSecs = [];\n    var subLevs = [];\n    var subValues = [];\n    var newSubSecs = [];\n    var newSubLevs = [];\n    var newSubValues = [];\n    var independentVarGroups = [];\n    var independentVarHasPoint = [];\n    var currIndependentVar;\n    var curveIndex;\n    var data;\n    var di;\n    var fi;\n    var si;\n\n    // matching in this function is based on a curve's independent variable. For a timeseries, the independentVar is epoch,\n    // for a profile, it's level, for a dieoff, it's forecast hour, for a threshold plot, it's threshold, and for a\n    // valid time plot, it's hour of day. This function identifies the the independentVar values common across all of\n    // the curves, and then the common sub times/levels/values for those independentVar values.\n\n    //determine whether data.x or data.y is the independent variable, and which is the stat value\n    var independentVarName;\n    var statVarName;\n    if (plotType !== matsTypes.PlotTypes.profile) {\n        independentVarName = 'x';\n        statVarName = 'y';\n    } else {\n        independentVarName = 'y';\n        statVarName = 'x';\n    }\n\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) { // every curve\n        independentVarGroups[curveIndex] = [];  // store the independentVars for each curve that are not null\n        independentVarHasPoint[curveIndex] = [];   // store the *all* of the independentVars for each curve\n        subSecs[curveIndex] = {};  // store the individual record times (subSecs) going into each independentVar for each curve\n        subLevs[curveIndex] = {};  // store the individual record levels (subLevs) going into each independentVar for each curve\n        data = dataset[curveIndex];\n        for (di = 0; di < data[independentVarName].length; di++) { // loop over every independentVar value in this curve\n            currIndependentVar = data[independentVarName][di];\n            if (data[statVarName][di] !== null) {\n                subSecs[curveIndex][currIndependentVar] = data.subSecs[di];   // store raw secs for this independentVar value, since it's not a null point\n                subLevs[curveIndex][currIndependentVar] = data.subLevs[di];   // store raw levs for this independentVar value, since it's not a null point\n                independentVarGroups[curveIndex].push(currIndependentVar);   // store this independentVar value, since it's not a null point\n            }\n            independentVarHasPoint[curveIndex].push(currIndependentVar);    // store all the independentVar values, regardless of whether they're null\n        }\n    }\n\n    var matchingIndependentVars = _.intersection.apply(_, independentVarGroups);    // find all of the non-null independentVar values common across all the curves\n    var matchingIndependentHasPoint = _.intersection.apply(_, independentVarHasPoint);    // find all of the independentVar values common across all the curves, regardless of whether or not they're null\n    var subIntersections = [];       // eventually find the intersecting subSecs and subLevs for each common non-null independentVar value\n\n    for (fi = 0; fi < matchingIndependentVars.length; fi++) { // loop over each common non-null independentVar value\n        currIndependentVar = matchingIndependentVars[fi];\n        subIntersections[currIndependentVar] = [];\n        var currSubIntersections = [];\n        for (si = 0; si < subSecs[0][currIndependentVar].length; si++) {   // fill current intersection array with sec-lev pairs from the first curve\n            currSubIntersections.push([subSecs[0][currIndependentVar][si], subLevs[0][currIndependentVar][si]]);\n        }\n        for (curveIndex = 1; curveIndex < curvesLength; curveIndex++) { // loop over every curve after the first\n            var tempSubIntersections = [];\n            var tempPair;\n            for (si = 0; si < subSecs[curveIndex][currIndependentVar].length; si++) { // loop over every subSecs value\n                tempPair = [subSecs[curveIndex][currIndependentVar][si], subLevs[curveIndex][currIndependentVar][si]];    // create an individual sec-lev pair for each index in the subSecs and subLevs arrays\n                if (matsDataUtils.arrayContainsSubArray(currSubIntersections, tempPair)) {   // see if the individual sec-lev pair matches a pair from the current intersection array\n                    tempSubIntersections.push(tempPair);    // store matching pairs\n                }\n            }\n            currSubIntersections = tempSubIntersections;    //replace current intersection array with array of only pairs that matched from this loop through.\n        }\n        subIntersections[currIndependentVar] = currSubIntersections;   // store the final intersecting subSecs array for this common non-null independentVar value\n    }\n\n    // remove non-matching independentVars and subSecs\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) { // loop over every curve\n        data = dataset[curveIndex];\n\n        // need to loop backwards through the data array so that we can splice non-matching indices\n        // while still having the remaining indices in the correct order\n        var dataLength = data[independentVarName].length;\n        for (di = dataLength - 1; di >= 0; di--) {\n\n            if (matchingIndependentVars.indexOf(data[independentVarName][di]) === -1) {  // if this is not a common non-null independentVar value, we'll have to remove some data\n                if (matchingIndependentHasPoint.indexOf(data[independentVarName][di]) === -1) {   // if at least one curve doesn't even have a null here, much less a matching value (beacause of the cadence), just drop this independentVar\n                    data.x.splice(di, 1);\n                    data.y.splice(di, 1);\n                    data[('error_' + statVarName)].array.splice(di, 1);\n                    data.subVals.splice(di, 1);\n                    data.subSecs.splice(di, 1);\n                    data.subLevs.splice(di, 1);\n                    data.stats.splice(di, 1);\n                    data.text.splice(di, 1);\n                } else {    // if all of the curves have either data or nulls at this independentVar, and there is at least one null, ensure all of the curves are null\n                    data[statVarName][di] = null;\n                    data.subVals[di] = NaN;\n                    data.subSecs[di] = NaN;\n                    data.subLevs[di] = NaN;\n                }\n                continue;   // then move on to the next independentVar. There's no need to mess with the subSecs or subLevs\n            }\n            subSecs = data.subSecs[di];\n            subLevs = data.subLevs[di];\n            subValues = data.subVals[di];\n\n            if (subSecs.length > 0 && subLevs.length > 0) {\n                currIndependentVar = data[independentVarName][di];\n                newSubValues = [];\n                newSubSecs = [];\n                newSubLevs = [];\n                for (si = 0; si < subSecs.length; si++) {  // loop over all subSecs for this independentVar\n                    tempPair = [subSecs[si], subLevs[si]]; //create sec-lev pair for each sub value\n                    if (matsDataUtils.arrayContainsSubArray(subIntersections[currIndependentVar], tempPair)) {  // keep the subValue only if its sec-lev pair is common to all curves for this independentVar\n                        var newVal = subValues[si];\n                        var newSec = subSecs[si];\n                        var newLev = subLevs[si];\n                        if (newVal !== undefined) {\n                            newSubValues.push(newVal);\n                            newSubSecs.push(newSec);\n                            newSubLevs.push(newLev);\n                        }\n                    }\n                }\n                // store the filtered data\n                data.subVals[di] = newSubValues;\n                data.subSecs[di] = newSubSecs;\n                data.subLevs[di] = newSubLevs;\n            }\n        }\n        dataset[curveIndex] = data;\n    }\n\n    return dataset;\n};\n\n// function for removing unmatched data from a dataset containing multiple curves for a histogram *without* levels.\n// separate matching functions are needed for histograms because you have to take all of the data out of the bins, then\n// match it, then recalculate the bins. For other plot types, you can just leave the data in its already-sorted fhr, level, etc.\nconst getMatchedDataSetHistogram = function (dataset, curvesLength, binStats) {\n\n    var subStatsRaw = {};\n    var subSecsRaw = {};\n    var subStats = {};\n    var subSecs = {};\n    var newSubStats = {};\n    var newSubSecs = {};\n    var newCurveData;\n    var curveIndex;\n    var di;\n    var si;\n\n    // pull all subSecs and subStats out of their bins, and back into one master array\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) {\n        data = dataset[curveIndex];\n        subStatsRaw[curveIndex] = [];\n        subSecsRaw[curveIndex] = [];\n        subStats[curveIndex] = [];\n        subSecs[curveIndex] = [];\n        for (di = 0; di < data.x.length; di++) {\n            subStatsRaw[curveIndex].push(data.subVals[di]);\n            subSecsRaw[curveIndex].push(data.subSecs[di]);\n        }\n        subStats[curveIndex] = [].concat.apply([], subStatsRaw[curveIndex]);\n        subSecs[curveIndex] = [].concat.apply([], subSecsRaw[curveIndex]);\n    }\n\n    // determine which seconds are present in all curves\n    var subSecIntersection = subSecs[0];   // fill current subSecs intersection array with subSecs from the first curve\n    for (curveIndex = 1; curveIndex < curvesLength; curveIndex++) { // loop over every curve\n        subSecIntersection = _.intersection(subSecIntersection, subSecs[curveIndex]);   // keep taking the intersection of the current subSecs intersection array with each curve's subSecs array\n    }\n\n    // remove non-matching subSecs and subStats\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) { // loop over every curve\n        data = dataset[curveIndex];\n        if (subSecIntersection.length > 0) {\n            newSubStats[curveIndex] = [];\n            newSubSecs[curveIndex] = [];\n\n            for (si = 0; si < subSecs[curveIndex].length; si++) {  // loop over all subSecs for this curve\n                if (subSecIntersection.indexOf(subSecs[curveIndex][si]) !== -1) { // keep the subStat only if its associated subSec is common to all curves\n                    var newStat = subStats[curveIndex][si];\n                    var newSec = subSecs[curveIndex][si];\n                    if (newStat !== undefined) {\n                        newSubStats[curveIndex].push(newStat);\n                        newSubSecs[curveIndex].push(newSec);\n                    }\n                }\n            }\n            // re-sort all of the data into histogram bins\n            var d = {// d will contain the curve data\n                x: [], //placeholder\n                y: [], //placeholder\n                error_x: [], // unused\n                error_y: [], // unused\n                subVals: [],\n                subSecs: [],\n                subLevs: [],\n                glob_stats: {}, // placeholder\n                bin_stats: [], // placeholder\n                text: [], //placeholder\n                xmin: Number.MAX_VALUE,\n                xmax: Number.MIN_VALUE,\n                ymin: Number.MAX_VALUE,\n                ymax: Number.MIN_VALUE,\n            };\n            newCurveData = matsDataUtils.sortHistogramBins(newSubStats[curveIndex], newSubSecs[curveIndex], [], data.x.length, binStats, false, d);\n            var newCurveDataKeys = Object.keys(newCurveData.d);\n            for (var didx = 0; didx < newCurveDataKeys.length; didx++) {\n                dataset[curveIndex][newCurveDataKeys[didx]] = newCurveData.d[newCurveDataKeys[didx]];\n            }\n        } else {\n            // if there are no matching values, set data to an empty array\n            dataset[curveIndex] = {\n                x: [],\n                y: [],\n                error_x: [],\n                error_y: [],\n                subVals: [],\n                subSecs: [],\n                subLevs: [],\n                glob_stats: {},\n                bin_stats: [],\n                text: [],\n                xmin: Number.MAX_VALUE,\n                xmax: Number.MIN_VALUE,\n                ymin: Number.MAX_VALUE,\n                ymax: Number.MIN_VALUE,\n            };\n        }\n    }\n    return dataset;\n};\n\n// function for removing unmatched data from a dataset containing multiple curves for a histogram *with* levels.\n// separate matching functions are needed for histograms because you have to take all of the data out of the bins, then\n// match it, then recalculate the bins. For other plot types, you can just leave the data in its already-sorted fhr, level, etc.\nconst getMatchedDataSetHistogramWithLevels = function (dataset, curvesLength, binStats) {\n\n    var subStatsRaw = {};\n    var subSecsRaw = {};\n    var subLevsRaw = {};\n    var subStats = {};\n    var subSecs = {};\n    var subLevs = {};\n    var newSubStats = {};\n    var newSubSecs = {};\n    var newSubLevs = {};\n    var newCurveData;\n    var curveIndex;\n    var di;\n    var si;\n\n    // pull all subSecs and subStats out of their bins, and back into one master array\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) {\n        data = dataset[curveIndex];\n        subStatsRaw[curveIndex] = [];\n        subSecsRaw[curveIndex] = [];\n        subLevsRaw[curveIndex] = [];\n        subStats[curveIndex] = [];\n        subSecs[curveIndex] = [];\n        subLevs[curveIndex] = [];\n        for (di = 0; di < data.x.length; di++) {\n            subStatsRaw[curveIndex].push(data.subVals[di]);\n            subSecsRaw[curveIndex].push(data.subSecs[di]);\n            subLevsRaw[curveIndex].push(data.subLevs[di]);\n        }\n        subStats[curveIndex] = [].concat.apply([], subStatsRaw[curveIndex]);\n        subSecs[curveIndex] = [].concat.apply([], subSecsRaw[curveIndex]);\n        subLevs[curveIndex] = [].concat.apply([], subLevsRaw[curveIndex]);\n    }\n\n    // determine which seconds and levels are present in all curves\n    var subIntersections = [];       // eventually find the intersecting subSecs and subLevs across all curves\n    for (si = 0; si < subSecs[0].length; si++) {   // fill current intersection array with sec-lev pairs from the first curve\n        subIntersections.push([subSecs[0][si], subLevs[0][si]]);\n    }\n    for (curveIndex = 1; curveIndex < curvesLength; curveIndex++) { // loop over every curve after the first\n        var tempSubIntersections = [];\n        var tempPair;\n        for (si = 0; si < subSecs[curveIndex].length; si++) { // loop over every subSecs value\n            tempPair = [subSecs[curveIndex][si], subLevs[curveIndex][si]];    // create an individual sec-lev pair for each index in the subSecs and subLevs arrays\n            if (matsDataUtils.arrayContainsSubArray(subIntersections, tempPair)) {   // see if the individual sec-lev pair matches a pair from the current intersection array\n                tempSubIntersections.push(tempPair);    // store matching pairs\n            }\n        }\n        subIntersections = tempSubIntersections;    //replace current intersection array with array of only pairs that matched from this loop through.\n    }\n\n    // remove non-matching subSecs, subLevs, and subStats\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) { // loop over every curve\n        data = dataset[curveIndex];\n        if (subIntersections.length > 0) {\n            newSubStats[curveIndex] = [];\n            newSubSecs[curveIndex] = [];\n            newSubLevs[curveIndex] = [];\n\n            for (si = 0; si < subSecs[curveIndex].length; si++) {  // loop over all subSecs for this curve\n                tempPair = [subSecs[curveIndex][si], subLevs[curveIndex][si]]; //create sec-lev pair for each subStat\n                if (matsDataUtils.arrayContainsSubArray(subIntersections, tempPair)) {  // keep the subStat only if its sec-lev pair is common to all curves\n                    var newStat = subStats[curveIndex][si];\n                    var newSec = subSecs[curveIndex][si];\n                    var newLev = subLevs[curveIndex][si];\n                    if (newStat !== undefined) {\n                        newSubStats[curveIndex].push(newStat);\n                        newSubSecs[curveIndex].push(newSec);\n                        newSubLevs[curveIndex].push(newLev);\n                    }\n                }\n            }\n            // re-sort all of the data into histogram bins\n            var d = {// d will contain the curve data\n                x: [], //placeholder\n                y: [], //placeholder\n                error_x: [], // unused\n                error_y: [], // unused\n                subVals: [],\n                subSecs: [],\n                subLevs: [],\n                glob_stats: {}, // placeholder\n                bin_stats: [], // placeholder\n                text: [], //placeholder\n                xmin: Number.MAX_VALUE,\n                xmax: Number.MIN_VALUE,\n                ymin: Number.MAX_VALUE,\n                ymax: Number.MIN_VALUE,\n            };\n            newCurveData = matsDataUtils.sortHistogramBins(newSubStats[curveIndex], newSubSecs[curveIndex], newSubLevs[curveIndex], data.x.length, binStats, true, d);\n            var newCurveDataKeys = Object.keys(newCurveData.d);\n            for (var didx = 0; didx < newCurveDataKeys.length; didx++) {\n                dataset[curveIndex][newCurveDataKeys[didx]] = newCurveData.d[newCurveDataKeys[didx]];\n            }\n        } else {\n            // if there are no matching values, set data to an empty dataset\n            dataset[curveIndex] = {\n                x: [],\n                y: [],\n                error_x: [],\n                error_y: [],\n                subVals: [],\n                subSecs: [],\n                subLevs: [],\n                glob_stats: {},\n                bin_stats: [],\n                text: [],\n                xmin: Number.MAX_VALUE,\n                xmax: Number.MIN_VALUE,\n                ymin: Number.MAX_VALUE,\n                ymax: Number.MIN_VALUE,\n            };\n        }\n    }\n    return dataset;\n};\n\nexport default matsDataMatchUtils = {\n\n    getMatchedDataSet: getMatchedDataSet,\n    getMatchedDataSetWithLevels: getMatchedDataSetWithLevels,\n    getMatchedDataSetHistogram: getMatchedDataSetHistogram,\n    getMatchedDataSetHistogramWithLevels: getMatchedDataSetHistogramWithLevels\n\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n// adds a horizontal black line along a specific y value\nconst getHorizontalValueLine = function (xmax, xmin, yValue, cLabel) {\n\n    const valueLine = {\n        \"label\": cLabel,\n        \"curveId\": cLabel,\n        \"annotation\": \"\",\n        \"name\": \"y = \" + yValue.toString(),\n        \"mode\": \"lines\",\n        \"x\": [xmin, xmax],\n        \"x_epoch\": [xmin, xmax],\n        \"y\": [yValue, yValue],\n        \"error_x\": [null, null],\n        \"error_y\": [null, null],\n        \"subVals\": [],\n        \"subSecs\": [],\n        \"subLevs\": [],\n        \"stats\": [{\"d_mean\": 0, \"sd\": 0, \"n_good\": 0, \"lag1\": 0, \"stde\": 0}, {\n            \"d_mean\": 0,\n            \"sd\": 0,\n            \"n_good\": 0,\n            \"lag1\": 0,\n            \"stde\": 0\n        }],\n        \"tooltip\": [\"y = \" + yValue.toString(), \"y = \" + yValue.toString()],\n        \"xmin\": xmin,\n        \"xmax\": xmax,\n        \"ymin\": yValue,\n        \"ymax\": yValue,\n        \"line\": {\n            \"color\": \"rgb(0,0,0)\",\n        }\n    };\n\n    return valueLine\n};\n\n// adds a vertical black line along a specific x value\nconst getVerticalValueLine = function (ymax, ymin, xValue, cLabel) {\n\n    const valueLine = {\n        \"label\": cLabel,\n        \"curveId\": cLabel,\n        \"annotation\": \"\",\n        \"name\": \"x = \" + xValue.toString(),\n        \"mode\": \"lines\",\n        \"x\": [xValue, xValue],\n        \"y\": [ymin, ymax],\n        \"error_x\": [null, null],\n        \"error_y\": [null, null],\n        \"subVals\": [],\n        \"subSecs\": [],\n        \"subLevs\": [],\n        \"stats\": [{\"d_mean\": 0, \"sd\": 0, \"n_good\": 0, \"lag1\": 0, \"stde\": 0}, {\n            \"d_mean\": 0,\n            \"sd\": 0,\n            \"n_good\": 0,\n            \"lag1\": 0,\n            \"stde\": 0\n        }],\n        \"tooltip\": [\"x = \" + xValue.toString(), \"x = \" + xValue.toString()],\n        \"xmin\": xValue,\n        \"xmax\": xValue,\n        \"ymin\": ymin,\n        \"ymax\": ymax,\n        \"line\": {\n            \"color\": \"rgb(0,0,0)\",\n        }\n    };\n\n    return valueLine\n};\n\n// adds a linear line\nconst getLinearValueLine = function (xmax, xmin, ymax, ymin, cLabel) {\n\n    const valueLine = {\n        \"label\": cLabel,\n        \"curveId\": cLabel,\n        \"annotation\": \"\",\n        \"name\": cLabel,\n        \"mode\": \"lines\",\n        \"x\": [xmin, xmax],\n        \"x_epoch\": [xmin, xmax],\n        \"y\": [ymin, ymax],\n        \"error_x\": [null, null],\n        \"error_y\": [null, null],\n        \"subVals\": [],\n        \"subSecs\": [],\n        \"subLevs\": [],\n        \"stats\": [{\"d_mean\": 0, \"sd\": 0, \"n_good\": 0, \"lag1\": 0, \"stde\": 0}, {\n            \"d_mean\": 0,\n            \"sd\": 0,\n            \"n_good\": 0,\n            \"lag1\": 0,\n            \"stde\": 0\n        }],\n        \"tooltip\": \"\",\n        \"xmin\": xmin,\n        \"xmax\": xmax,\n        \"ymin\": ymin,\n        \"ymax\": ymax,\n        \"line\": {\n            \"color\": \"rgb(0,0,0)\",\n        }\n    };\n\n    return valueLine\n};\n\n// provides curve options for all plot types with an independent x axis and a dependent y axis\nconst generateSeriesCurveOptions = function (curve, curveIndex, axisMap, dataSeries) {\n\n    const label = curve['label'];\n    const annotation = curve['annotation'];\n\n    // adjust axes for later setting of the plot options\n    const ymin = curve['ymin'];\n    const ymax = curve['ymax'];\n    const xmin = curve['xmin'];\n    const xmax = curve['xmax'];\n    const axisKey = curve['axisKey'];\n    if (axisKey in axisMap) {\n        axisMap[axisKey].axisLabel = axisKey;\n        axisMap[axisKey].ymin = ymin < axisMap[axisKey].ymin ? ymin : axisMap[axisKey].ymin;\n        axisMap[axisKey].ymax = ymax > axisMap[axisKey].ymax ? ymax : axisMap[axisKey].ymax;\n        axisMap[axisKey].xmin = xmin < axisMap[axisKey].xmin ? xmin : axisMap[axisKey].xmin;\n        axisMap[axisKey].xmax = xmax > axisMap[axisKey].xmax ? xmax : axisMap[axisKey].xmax;\n    } else {\n        axisMap[axisKey] = {\n            index: Object.keys(axisMap).length + 1,\n            xmin: xmin,\n            xmax: xmax,\n            ymin: ymin,\n            ymax: ymax,\n            axisLabel: axisKey\n        };\n    }\n\n    const axisNumber = Object.keys(axisMap).indexOf(axisKey);\n\n    var error_y_temp = {\n        error_y: {\n            array: dataSeries.error_y,\n            thickness: 1,     // set the thickness of the error bars\n            color: curve['color'],\n            visible: false, // changed later if matching\n            // width: 0\n        }\n    };\n    var curveOptions = {\n        ...{\n            label: label,\n            curveId: label,\n            name: label,\n            xaxis: \"x1\",\n            yaxis: \"y\" + (axisNumber + 1),\n            annotation: annotation,\n            annotateColor: curve['color'],\n            mode: \"lines+markers\",\n            marker: {\n                symbol: \"circle\",\n                color: curve['color'],\n                size: 8\n            },\n            line: {\n                dash: 'solid',\n                color: curve['color'],\n                width: 2\n            },\n            visible: true\n        }, ...dataSeries\n    };\n\n    delete curveOptions.error_y;\n\n    curveOptions['error_y'] = error_y_temp.error_y;\n\n    return curveOptions;\n};\n\n// provides curve options for all plot types with an independent y axis and a dependent x axis\nconst generateProfileCurveOptions = function (curve, curveIndex, axisMap, dataProfile) {\n\n    const label = curve['label'];\n    const annotation = curve['annotation'];\n\n    // adjust axes for later setting of the plot options\n    const ymin = curve['ymin'];\n    const ymax = curve['ymax'];\n    const xmin = curve['xmin'];\n    const xmax = curve['xmax'];\n    const axisKey = curve['axisKey'];\n    if (axisKey in axisMap) {\n        axisMap[axisKey].axisLabel = axisKey;\n        axisMap[axisKey].ymin = ymin < axisMap[axisKey].ymin ? ymin : axisMap[axisKey].ymin;\n        axisMap[axisKey].ymax = ymax > axisMap[axisKey].ymax ? ymax : axisMap[axisKey].ymax;\n        axisMap[axisKey].xmin = xmin < axisMap[axisKey].xmin ? xmin : axisMap[axisKey].xmin;\n        axisMap[axisKey].xmax = xmax > axisMap[axisKey].xmax ? xmax : axisMap[axisKey].xmax;\n    } else {\n        axisMap[axisKey] = {\n            index: Object.keys(axisMap).length + 1,\n            xmin: xmin,\n            xmax: xmax,\n            ymin: ymin,\n            ymax: ymax,\n            axisLabel: axisKey\n        };\n    }\n\n    const axisNumber = Object.keys(axisMap).indexOf(axisKey);\n\n    var error_x_temp = {\n        error_x: {\n            array: dataProfile.error_x,\n            thickness: 1,     // set the thickness of the error bars\n            color: curve['color'],\n            visible: false, // changed later if matching\n            // width: 0\n        }\n    };\n    var curveOptions = {\n        ...{\n            label: label,\n            curveId: label,\n            name: label,\n            xaxis: \"x\" + (axisNumber + 1),\n            yaxis: \"y1\",\n            annotation: annotation,\n            annotateColor: curve['color'],\n            mode: \"lines+markers\",\n            marker: {\n                symbol: \"circle\",\n                color: curve['color'],\n                size: 8\n            },\n            line: {\n                dash: 'solid',\n                color: curve['color'],\n                width: 2\n            },\n            visible: true\n        }, ...dataProfile\n    };\n\n    delete curveOptions.error_x;\n\n    curveOptions['error_x'] = error_x_temp.error_x;\n\n    return curveOptions;\n};\n\n// provides curve options for reliability diagrams\nconst generateReliabilityCurveOptions = function (curve, curveIndex, axisMap, dataSeries) {\n\n    const label = curve['label'];\n    const annotation = curve['annotation'];\n\n    // adjust axes for later setting of the plot options\n    const ymin = curve['ymin'];\n    const ymax = curve['ymax'];\n    const xmin = curve['xmin'];\n    const xmax = curve['xmax'];\n    const axisKey = curve['axisKey'];\n    if (axisKey in axisMap) {\n        axisMap[axisKey].axisLabel = axisKey;\n        axisMap[axisKey].ymin = ymin < axisMap[axisKey].ymin ? ymin : axisMap[axisKey].ymin;\n        axisMap[axisKey].ymax = ymax > axisMap[axisKey].ymax ? ymax : axisMap[axisKey].ymax;\n        axisMap[axisKey].xmin = xmin < axisMap[axisKey].xmin ? xmin : axisMap[axisKey].xmin;\n        axisMap[axisKey].xmax = xmax > axisMap[axisKey].xmax ? xmax : axisMap[axisKey].xmax;\n    } else {\n        axisMap[axisKey] = {\n            index: Object.keys(axisMap).length + 1,\n            xmin: xmin,\n            xmax: xmax,\n            ymin: ymin,\n            ymax: ymax,\n            axisLabel: axisKey\n        };\n    }\n\n    const axisNumber = Object.keys(axisMap).indexOf(axisKey);\n\n    var error_y_temp = {\n        error_y: {\n            array: dataSeries.error_y,\n            thickness: 1,     // set the thickness of the error bars\n            color: curve['color'],\n            visible: false, // changed later if matching\n            // width: 0\n        }\n    };\n    var curveOptions = {\n        ...{\n            label: label,\n            curveId: label,\n            name: label,\n            xaxis: \"x1\",\n            yaxis: \"y\" + (axisNumber + 1),\n            annotation: annotation,\n            annotateColor: curve['color'],\n            mode: \"lines+markers\",\n            marker: {\n                symbol: \"circle\",\n                color: curve['color'],\n                size: 8\n            },\n            line: {\n                dash: 'solid',\n                color: curve['color'],\n                width: 2\n            },\n            visible: true\n        }, ...dataSeries\n    };\n\n    delete curveOptions.error_y;\n\n    curveOptions['error_y'] = error_y_temp.error_y;\n\n    return curveOptions;\n};\n\n// provides curve options for all plot types with an independent x axis and a dependent y axis\nconst generateBarChartCurveOptions = function (curve, curveIndex, axisMap, dataBars) {\n\n    const label = curve['label'];\n    const annotation = curve['annotation'];\n\n    // adjust axes for later setting of the plot options\n    const ymin = curve['ymin'];\n    const ymax = curve['ymax'];\n    const xmin = curve['xmin'];\n    const xmax = curve['xmax'];\n    const axisKey = curve['axisKey'];\n    if (axisKey in axisMap) {\n        axisMap[axisKey].axisLabel = axisKey;\n        axisMap[axisKey].ymin = ymin < axisMap[axisKey].ymin ? ymin : axisMap[axisKey].ymin;\n        axisMap[axisKey].ymax = ymax > axisMap[axisKey].ymax ? ymax : axisMap[axisKey].ymax;\n        axisMap[axisKey].xmin = xmin < axisMap[axisKey].xmin ? xmin : axisMap[axisKey].xmin;\n        axisMap[axisKey].xmax = xmax > axisMap[axisKey].xmax ? xmax : axisMap[axisKey].xmax;\n    } else {\n        axisMap[axisKey] = {\n            index: Object.keys(axisMap).length + 1,\n            xmin: xmin,\n            xmax: xmax,\n            ymin: ymin,\n            ymax: ymax,\n            axisLabel: axisKey\n        };\n    }\n\n    const curveOptions = {\n        ...{\n            label: label,\n            curveId: label,\n            name: label,\n            annotation: annotation,\n            annotateColor: curve['color'],\n            marker: {\n                color: curve['color'],\n                line: {\n                    color: \"rgb(0,0,0)\"\n                }\n            },\n            type: 'bar',\n            visible: true\n        }, ...dataBars\n    };\n\n    return curveOptions;\n};\n\nconst generateMapCurveOptions = function (curve, dataSeries) {\n\n    const markerSizes = dataSeries.queryVal.map(function (val) {\n        return Math.ceil(Math.abs(val * 4)) + 2;\n    });\n\n    const label = curve['label'];\n\n    const curveOptions = {\n        ...{\n            label: label,\n            curveId: label,\n            name: label,\n            type: 'scattermapbox',\n            mode: 'markers',\n            marker: {\n                color: dataSeries.color,\n                size: markerSizes,\n                opacity: 0\n            },\n        }, ...dataSeries\n    };\n\n    delete curveOptions.color;\n\n    return curveOptions;\n};\n\nconst generateMapColorTextOptions = function (label, dataSeries) {\n\n    const curveOptions = {\n        ...{\n            label: label,\n            type: 'scattermapbox',\n            mode: 'markers+text',\n            marker: {\n                opacity: 0\n            },\n            textfont: {\n                family: 'sans serif',\n                // size: 18,\n                color: dataSeries.color\n            },\n            hoverinfo: 'skip',\n            visible: true\n        }, ...dataSeries\n    };\n\n    delete curveOptions.color;\n\n    return curveOptions;\n};\n\nconst generateContourCurveOptions = function (curve, axisMap, dataset) {\n\n    const label = curve['label'];\n    const annotation = curve['annotation'];\n    const unitKey = curve['unitKey'];\n\n    const curveOptions = {\n        ...{\n            label: label,\n            curveId: label,\n            name: label,\n            annotation: annotation,\n            annotateColor: curve['color'],\n            xAxisKey: curve['xAxisKey'],\n            yAxisKey: curve['yAxisKey'],\n            marker: {\n                color: curve['color'],\n            },\n            type: 'contour',\n            autocontour: false,\n            ncontours: 15,   // apparently plotly regards this as a \"less than or equal to\" field\n            contours: {\n                // these are only used if autocontour is set to false and ncontour is disregarded\n                start: dataset.zmin + (dataset.zmax - dataset.zmin) / 16,\n                end: dataset.zmax - (dataset.zmax - dataset.zmin) / 16,\n                size:  (dataset.zmax - dataset.zmin) / 16,\n                showlabels: false\n            },\n            colorscale: 'RdBu',\n            reversescale: false,\n            colorbar:{\n                title: unitKey,\n                titleside: 'right',\n                titlefont: {\n                    size: 20,\n                    family: 'Arial, sans-serif'\n                }\n            },\n            // connectgaps: true,   // this option will interpolate to fill in nulls\n            visible: true\n        }, ...dataset\n    };\n\n    return curveOptions;\n};\n\nexport default matsDataCurveOpsUtils = {\n\n    getHorizontalValueLine: getHorizontalValueLine,\n    getVerticalValueLine: getVerticalValueLine,\n    getLinearValueLine: getLinearValueLine,\n\n    generateSeriesCurveOptions: generateSeriesCurveOptions,\n    generateReliabilityCurveOptions: generateReliabilityCurveOptions,\n    generateProfileCurveOptions: generateProfileCurveOptions,\n    generateBarChartCurveOptions: generateBarChartCurveOptions,\n    generateMapCurveOptions: generateMapCurveOptions,\n    generateMapColorTextOptions: generateMapColorTextOptions,\n    generateContourCurveOptions: generateContourCurveOptions\n\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {moment} from 'meteor/momentjs:moment'\n\n// sets plot options for timeseries graphs\nconst generateSeriesPlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var xmin = axisMap[Object.keys(axisMap)[0]].xmin;\n    var xmax = axisMap[Object.keys(axisMap)[0]].xmax;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Time',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 12}\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'left', 1: 'right', 2: 'left', 3: 'right', 4: 'left', 5: 'right', 6: 'left', 7: 'right'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.1, 3: 0.9, 4: 0.2, 5: 0.8, 6: 0.3, 7: 0.7};\n\n    const yAxisNumber = Object.keys(axisMap).length;\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var ymin = axisMap[axisKey].ymin;\n        var ymax = axisMap[axisKey].ymax;\n        ymax = ymax + errorMax;\n        ymin = ymin - errorMax;\n        const yPad = ((ymax - ymin) * 0.05) !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n        xmin = axisMap[axisKey].xmin < xmin ? axisMap[axisKey].xmin : xmin;\n        xmax = axisMap[axisKey].xmax > xmax ? axisMap[axisKey].xmax : xmax;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'yaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'y',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'y',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const xPad = ((xmax - xmin) * 0.075) !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n    xmax = moment.utc(xmax + xPad * Math.ceil(yAxisNumber / 2)).format(\"YYYY-MM-DD HH:mm\");\n    xmin = moment.utc(xmin - xPad * Math.ceil(yAxisNumber / 2)).format(\"YYYY-MM-DD HH:mm\");\n    layout['xaxis']['range'] = [xmin, xmax];\n    return layout;\n};\n\n// sets plot options for profile graphs\nconst generateProfilePlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var ymin = 10;\n    var ymax = 1075;\n    const xAxisNumber = Object.keys(axisMap).length;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: xAxisNumber > 1 ? 80 : 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n    var tickVals;\n    var tickText;\n    if (matsCollections.Settings.findOne({}).appType === matsTypes.AppTypes.metexpress) {\n        tickVals = [1000, 850, 700, 600, 500, 400, 300, 250, 200, 150, 100, 50, 10];\n        tickText = ['1000', '850', '700', '600', '500', '400', '300', '250', '200', '150', '100', '50', '10'];\n    } else {\n        tickVals = [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100];\n        tickText = ['1000', '900', '800', '700', '600', '500', '400', '300', '200', '100'];\n    }\n    layout['yaxis'] = {\n        title: 'Pressure Level',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: tickVals,\n        ticktext: tickText,\n        type: 'linear',\n        autorange: 'reversed'\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'bottom', 1: 'top', 2: 'bottom', 3: 'top', 4: 'bottom', 5: 'top', 6: 'bottom', 7: 'top'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.15, 3: 0.85, 4: 0.3, 5: 0.7, 6: 0.45, 7: 0.55};\n\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < xAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var xmin = axisMap[axisKey].xmin;\n        var xmax = axisMap[axisKey].xmax;\n        xmax = xmax + errorMax;\n        xmin = xmin - errorMax;\n        axisLabel = axisMap[axisKey].axisLabel;\n        const xPad = ((xmax - xmin) * 0.05) !== 0 ? (xmax - xmin) * 0.05 : 0.05;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'xaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [xmin - xPad, xmax + xPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'xaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [xmin - xPad, xmax + xPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'x',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'xaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [xmin - xPad, xmax + xPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'x',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const yPad = ((ymax - ymin) * 0.25) !== 0 ? (ymax - ymin) * 0.25 : 0.25;\n    ymax = ymax + (yPad * Math.ceil(xAxisNumber / 2));\n    ymin = ymin - (yPad * Math.ceil(xAxisNumber / 2));\n    layout['yaxis']['range'] = [ymin, ymax];\n    return layout;\n};\n\n// sets plot options for dieoff graphs\nconst generateDieoffPlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var xmin = axisMap[Object.keys(axisMap)[0]].xmin;\n    var xmax = axisMap[Object.keys(axisMap)[0]].xmax;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Forecast Hour',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'left', 1: 'right', 2: 'left', 3: 'right', 4: 'left', 5: 'right', 6: 'left', 7: 'right'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.1, 3: 0.9, 4: 0.2, 5: 0.8, 6: 0.3, 7: 0.7};\n\n    const yAxisNumber = Object.keys(axisMap).length;\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var ymin = axisMap[axisKey].ymin;\n        var ymax = axisMap[axisKey].ymax;\n        ymax = ymax + errorMax;\n        ymin = ymin - errorMax;\n        const yPad = ((ymax - ymin) * 0.05) !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n        xmin = axisMap[axisKey].xmin < xmin ? axisMap[axisKey].xmin : xmin;\n        xmax = axisMap[axisKey].xmax > xmax ? axisMap[axisKey].xmax : xmax;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'yaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'y',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'y',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const xPad = ((xmax - xmin) * 0.075) !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n    xmax = xmax + (xPad * Math.ceil(yAxisNumber / 2));\n    xmin = xmin - (xPad * Math.ceil(yAxisNumber / 2));\n    layout['xaxis']['range'] = [xmin, xmax];\n    return layout;\n};\n\n// sets plot options for threshold graphs\nconst generateThresholdPlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var xmin = 0;\n    var xmax = 3;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Threshold',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: [0.01, 0.1, 0.25, 0.5, 1.0, 1.5, 2.0, 3.0],\n        ticktext: [\"0.01\", \"0.10\", \"0.25\", \"0.50\", \"1.00\", \"1.50\", \"2.00\", \"3.00\"]\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'left', 1: 'right', 2: 'left', 3: 'right', 4: 'left', 5: 'right', 6: 'left', 7: 'right'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.1, 3: 0.9, 4: 0.2, 5: 0.8, 6: 0.3, 7: 0.7};\n\n    const yAxisNumber = Object.keys(axisMap).length;\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var ymin = axisMap[axisKey].ymin;\n        var ymax = axisMap[axisKey].ymax;\n        ymax = ymax + errorMax;\n        ymin = ymin - errorMax;\n        const yPad = ((ymax - ymin) * 0.05) !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'yaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'y',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'y',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const xPad = ((xmax - xmin) * 0.075) !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n    xmax = xmax + (xPad * Math.ceil(yAxisNumber / 2));\n    xmin = xmin - (xPad * Math.ceil(yAxisNumber / 2));\n    layout['xaxis']['range'] = [xmin, xmax];\n    return layout;\n};\n\n// sets plot options for valid time graphs\nconst generateValidTimePlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var xmin = 0;\n    var xmax = 23;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Hour of Day',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\n        ticktext: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"]\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'left', 1: 'right', 2: 'left', 3: 'right', 4: 'left', 5: 'right', 6: 'left', 7: 'right'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.1, 3: 0.9, 4: 0.2, 5: 0.8, 6: 0.3, 7: 0.7};\n\n    const yAxisNumber = Object.keys(axisMap).length;\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var ymin = axisMap[axisKey].ymin;\n        var ymax = axisMap[axisKey].ymax;\n        ymax = ymax + errorMax;\n        ymin = ymin - errorMax;\n        const yPad = ((ymax - ymin) * 0.05) !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'yaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'y',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'y',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const xPad = ((xmax - xmin) * 0.075) !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n    xmax = xmax + (xPad * Math.ceil(yAxisNumber / 2));\n    xmin = xmin - (xPad * Math.ceil(yAxisNumber / 2));\n    layout['xaxis']['range'] = [xmin, xmax];\n    return layout;\n};\n\n// sets plot options for reliability graphs\nconst generateReliabilityPlotOptions = function (dataset) {\n    var xmin = 0;\n    var xmax = 1;\n    var ymin = 0;\n    var ymax = 1;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: true,\n        perfectLine: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Forecast Probability',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n        ticktext: [\"0.0\", \"0.1\", \"0.2\", \"0.3\", \"0.4\", \"0.5\", \"0.6\", \"0.7\", \"0.8\", \"0.9\", \"1.0\"],\n        range: [xmin, xmax]\n    };\n\n    layout['yaxis'] = {\n        title: 'Observed Relative Frequency',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n        ticktext: [\"0.0\", \"0.1\", \"0.2\", \"0.3\", \"0.4\", \"0.5\", \"0.6\", \"0.7\", \"0.8\", \"0.9\", \"1.0\"],\n        range: [ymin, ymax]\n    };\n\n    return layout;\n};\n\n\n// sets plot options for map graphs\nconst generateMapPlotOptions = function () {\n    const options = {\n        autosize: true,\n        hovermode: 'closest',\n        mapbox: {\n            bearing: 0,\n            center: {\n                lat: 39.834,\n                lon: -98.604\n            },\n            pitch: 0,\n            zoom: 3.25,\n            accesstoken: 'pk.eyJ1IjoibWF0cy1nc2QiLCJhIjoiY2pvN2l1N2MyMG9xdTN3bWR3ODV5a2E2ZiJ9.PtgcGhxaoD43N0OwJSNVMg',\n            style: 'light'\n        },\n        margin: {\n            l: 30,\n            r: 30,\n            b: 40,\n            t: 10,\n            pad: 4\n        },\n        showlegend: false,\n    };\n    return options;\n};\n\n// sets plot options for valid time graphs\nconst generateHistogramPlotOptions = function (dataset, curves, axisMap, plotBins) {\n    const axisKey = curves[0].axisKey;\n    const axisLabel = axisMap[axisKey].axisLabel;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        bargap: 0.25,\n        barmode: 'group',\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Bin',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 12},\n        tickvals: plotBins.binMeans,\n        ticktext: plotBins.binLabels,\n    };\n\n    layout['yaxis'] = {\n        title: axisLabel,\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n    };\n\n    return layout;\n\n};\n\n// sets plot options for valid time graphs\nconst generateContourPlotOptions = function (dataset, axisMap) {\n    const xAxisKey = dataset[0]['xAxisKey'];\n    const yAxisKey = dataset[0]['yAxisKey'];\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}}\n    };\n\n    layout['xaxis'] = {\n        title: xAxisKey,\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 12},\n    };\n\n    if (yAxisKey === \"Pressure level\") {\n        layout['yaxis'] = {\n            title: yAxisKey,\n            titlefont: {color: '#000000', size: 22},\n            tickfont: {color: '#000000', size: 14},\n            tickvals: [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100],\n            ticktext: ['1000', '900', '800', '700', '600', '500', '400', '300', '200', '100'],\n            range: [1100, 0],\n            type: 'linear',\n            autorange: 'reversed'\n        };\n    } else {\n        layout['yaxis'] = {\n            title: yAxisKey,\n            titlefont: {color: '#000000', size: 22},\n            tickfont: {color: '#000000', size: 14},\n        };\n    }\n    return layout;\n\n};\n\nexport default matsDataPlotOpsUtils = {\n\n    generateSeriesPlotOptions: generateSeriesPlotOptions,\n    generateProfilePlotOptions: generateProfilePlotOptions,\n    generateDieoffPlotOptions: generateDieoffPlotOptions,\n    generateThresholdPlotOptions: generateThresholdPlotOptions,\n    generateValidTimePlotOptions: generateValidTimePlotOptions,\n    generateReliabilityPlotOptions: generateReliabilityPlotOptions,\n    generateMapPlotOptions: generateMapPlotOptions,\n    generateHistogramPlotOptions: generateHistogramPlotOptions,\n    generateContourPlotOptions: generateContourPlotOptions\n\n}\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsDataUtils} from 'meteor/randyp:mats-common';\nimport {matsDataMatchUtils} from 'meteor/randyp:mats-common';\nimport {matsDataDiffUtils} from 'meteor/randyp:mats-common';\nimport {matsDataCurveOpsUtils} from 'meteor/randyp:mats-common';\nimport {matsDataPlotOpsUtils} from 'meteor/randyp:mats-common';\nimport {moment} from 'meteor/momentjs:moment'\n\nconst processDataXYCurve = function (dataset, appParams, curveInfoParams, plotParams, bookkeepingParams) {\n    // variable to store maximum error bar length\n    var errorMax = Number.MIN_VALUE;\n    var error = \"\";\n\n    const appName = matsCollections.appName.findOne({}).app;\n\n    // if matching, pare down dataset to only matching data\n    if (curveInfoParams.curvesLength > 1 && appParams.matching) {\n        if (appParams.hasLevels) {\n            dataset = matsDataMatchUtils.getMatchedDataSetWithLevels(dataset, curveInfoParams.curvesLength, appParams.plotType);\n        } else {\n            dataset = matsDataMatchUtils.getMatchedDataSet(dataset, curveInfoParams.curvesLength);\n        }\n    }\n\n    // we may need to recalculate the axis limits after unmatched data and outliers are removed\n    var axisLimitReprocessed = {};\n\n    // calculate data statistics (including error bars) for each curve\n    for (var curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n        if (appName !== \"surfrad\") {\n            axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] = axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] !== undefined;\n        }\n        var diffFrom = curveInfoParams.curves[curveIndex].diffFrom;\n        var statisticSelect = appName.indexOf(\"anomalycor\") !== -1 ? \"ACC\" : curveInfoParams.curves[curveIndex]['statistic'];\n        var data = dataset[curveIndex];\n        const label = dataset[curveIndex].label;\n\n        var di = 0;\n        var values = [];\n        var indVars = [];\n        var means = [];\n        var rawStat;\n\n        /*\n        dataset[curveIndex] is the dataset.\n        it looks like:\n\n        d = {\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            stats: [],     //pointStats\n            text: [],\n            glob_stats: {},     //curveStats\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n        */\n\n        while (di < data.x.length) {\n\n            // errorResult holds all the calculated curve stats like mean, sd, etc.\n            var errorResult;\n            if (appParams.hasLevels) {\n                errorResult = matsDataUtils.get_err(data.subVals[di], data.subSecs[di], data.subLevs[di]);\n            } else {\n                errorResult = matsDataUtils.get_err(data.subVals[di], data.subSecs[di], []);\n            }\n\n            // store raw statistic from query before recalculating that statistic to account for data removed due to matching, QC, etc.\n            rawStat = data.y[di];\n            // this ungainly if statement is because the surfrad3 database doesn't support recalculating some stats.\n            if (appName !== \"surfrad\" ||\n                !(appName === \"surfrad\" &&\n                    (statisticSelect === 'Std deviation (do not plot matched)' || statisticSelect === 'RMS (do not plot matched)') &&\n                    !appParams.matching)) {\n                if ((diffFrom === null || diffFrom === undefined) || !appParams.matching) {\n                    // assign recalculated statistic to data[di][1], which is the value to be plotted\n                    data.y[di] = errorResult.d_mean;\n                } else {\n                    if (dataset[diffFrom[0]].y[di] !== null && dataset[diffFrom[1]].y[di] !== null) {\n                        // make sure that the diff curve actually shows the difference when matching. Otherwise outlier filtering etc. can make it slightly off.\n                        data.y[di] = dataset[diffFrom[0]].y[di] - dataset[diffFrom[1]].y[di];\n                    } else {\n                        // keep the null for no data at this point\n                        data.y[di] = null;\n                    }\n                }\n            }\n            values.push(data.y[di]);\n            indVars.push(data.x[di]);\n            means.push(errorResult.d_mean);\n\n            // store error bars if matching\n            const errorBar = errorResult.stde_betsy * 1.96;\n            if (appParams.matching) {\n                errorMax = errorMax > errorBar ? errorMax : errorBar;\n                data.error_y.array[di] = errorBar;\n            } else {\n                data.error_y.array[di] = null;\n            }\n\n            // remove sub values and times to save space\n            data.subVals[di] = [];\n            data.subSecs[di] = [];\n            data.subLevs[di] = [];\n\n            // store statistics for this di datapoint\n            data.stats[di] = {\n                raw_stat: rawStat,\n                d_mean: errorResult.d_mean,\n                sd: errorResult.sd,\n                n_good: errorResult.n_good,\n                lag1: errorResult.lag1,\n                stde_betsy: errorResult.stde_betsy\n            };\n\n            // this is the tooltip, it is the last element of each dataseries element.\n            // also change the x array from epoch to date for timeseries and DMC, as we are now done with it for calculations.\n            data.text[di] = label;\n            switch (appParams.plotType) {\n                case matsTypes.PlotTypes.timeSeries:\n                    data.text[di] = data.text[di] + \"<br>time: \" + moment.utc(data.x[di]).format(\"YYYY-MM-DD HH:mm\");\n                    break;\n                case matsTypes.PlotTypes.dailyModelCycle:\n                    var fhr = ((data.x[di] / 1000) % (24 * 3600)) / 3600 - curveInfoParams.utcCycleStarts[curveIndex];\n                    fhr = fhr < 0 ? fhr + 24 : fhr;\n                    data.text[di] = data.text[di] + \"<br>time: \" + moment.utc(data.x[di]).format(\"YYYY-MM-DD HH:mm\");\n                    data.text[di] = data.text[di] + \"<br>forecast hour: \" + fhr;\n                    break;\n                case matsTypes.PlotTypes.dieoff:\n                    data.text[di] = data.text[di] + \"<br>fhr: \" + data.x[di];\n                    break;\n                case matsTypes.PlotTypes.threshold:\n                    data.text[di] = data.text[di] + \"<br>threshold: \" + data.x[di];\n                    break;\n                case matsTypes.PlotTypes.validtime:\n                    data.text[di] = data.text[di] + \"<br>hour of day: \" + data.x[di];\n                    break;\n                default:\n                    data.text[di] = data.text[di] + \"<br>\" + data.x[di];\n                    break;\n            }\n            data.text[di] = data.text[di] +\n                \"<br>\" + statisticSelect + \": \" + (data.y[di] === null ? null : data.y[di].toPrecision(4)) +\n                \"<br>sd: \" + (errorResult.sd === null ? null : errorResult.sd.toPrecision(4)) +\n                \"<br>mean: \" + (errorResult.d_mean === null ? null : errorResult.d_mean.toPrecision(4)) +\n                \"<br>n: \" + errorResult.n_good +\n                // \"<br>lag1: \" + (errorResult.lag1 === null ? null : errorResult.lag1.toPrecision(4)) +\n                // \"<br>stde: \" + errorResult.stde_betsy +\n                \"<br>errorbars: \" + Number((data.y[di]) - (errorResult.stde_betsy * 1.96)).toPrecision(4) + \" to \" + Number((data.y[di]) + (errorResult.stde_betsy * 1.96)).toPrecision(4);\n\n            di++;\n        }\n\n        // enable error bars if matching and they aren't null\n        if (appParams.matching && data.error_y.array.filter(x => x).length > 0) {\n            data.error_y.visible = true;\n        }\n\n        // get the overall stats for the text output - this uses the means not the stats.\n        const stats = matsDataUtils.get_err(values, indVars, []);\n        const filteredMeans = means.filter(x => x);\n        var miny = Math.min(...filteredMeans);\n        var maxy = Math.max(...filteredMeans);\n        if (means.indexOf(0) !== -1 && 0 < miny) {\n            miny = 0;\n        }\n        if (means.indexOf(0) !== -1 && 0 > maxy) {\n            maxy = 0;\n        }\n        stats.miny = miny;\n        stats.maxy = maxy;\n        dataset[curveIndex]['glob_stats'] = stats;\n\n        // recalculate axis options after QC and matching\n        if (appName !== \"surfrad\") {\n            const minx = Math.min(...indVars);\n            const maxx = Math.max(...indVars);\n            curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymax'] = (curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymax'] < maxy || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey]) ? maxy : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymax'];\n            curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymin'] = (curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymin'] > miny || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey]) ? miny : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymin'];\n            curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'] = (curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'] < maxx || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey]) ? maxx : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'];\n            curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'] = (curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'] > minx || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey]) ? minx : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'];\n        }\n\n        // recalculate curve annotation after QC and matching\n        if (stats.d_mean !== undefined && stats.d_mean !== null) {\n            dataset[curveIndex]['annotation'] = label + \"- mean = \" + stats.d_mean.toPrecision(4);\n        }\n\n        if (appParams.plotType === matsTypes.PlotTypes.timeSeries || appParams.plotType === matsTypes.PlotTypes.dailyModelCycle) {\n            data['x_epoch'] = data.x;\n            data.x = data.x.map(function (val) {\n                return moment.utc(val).format(\"YYYY-MM-DD HH:mm\");\n            });\n        }\n\n    }\n\n    // add black 0 line curve\n    // need to define the minimum and maximum x value for making the zero curve\n    const zeroLine = matsDataCurveOpsUtils.getHorizontalValueLine(curveInfoParams.xmax, curveInfoParams.xmin, 0, matsTypes.ReservedWords.zero);\n    dataset.push(zeroLine);\n\n    //add ideal value lines, if any\n    var idealValueLine;\n    var idealLabel;\n    for (var ivIdx = 0; ivIdx < curveInfoParams.idealValues.length; ivIdx++) {\n        idealLabel = \"ideal\" + ivIdx.toString();\n        idealValueLine = matsDataCurveOpsUtils.getHorizontalValueLine(curveInfoParams.xmax, curveInfoParams.xmin, curveInfoParams.idealValues[ivIdx], matsTypes.ReservedWords[idealLabel]);\n        dataset.push(idealValueLine);\n    }\n\n    // generate plot options\n    var resultOptions;\n    switch (appParams.plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.dailyModelCycle:\n            resultOptions = matsDataPlotOpsUtils.generateSeriesPlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n            break;\n        case matsTypes.PlotTypes.dieoff:\n            resultOptions = matsDataPlotOpsUtils.generateDieoffPlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n            break;\n        case matsTypes.PlotTypes.validtime:\n            resultOptions = matsDataPlotOpsUtils.generateValidTimePlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n            break;\n        case matsTypes.PlotTypes.threshold:\n            resultOptions = matsDataPlotOpsUtils.generateThresholdPlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n            break;\n        default:\n            break;\n    }\n\n    var totalProcessingFinish = moment();\n    bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n        begin: bookkeepingParams.totalProcessingStart.format(),\n        finish: totalProcessingFinish.format(),\n        duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n    };\n\n    // pass result to client-side plotting functions\n    return {\n        error: error,\n        data: dataset,\n        options: resultOptions,\n        basis: {\n            plotParams: plotParams,\n            queries: bookkeepingParams.dataRequests\n        }\n    };\n};\n\nconst processDataProfile = function (dataset, appParams, curveInfoParams, plotParams, bookkeepingParams) {\n    // variable to store maximum error bar length\n    var errorMax = Number.MIN_VALUE;\n    var error = \"\";\n\n    const appName = matsCollections.appName.findOne({}).app;\n\n    // if matching, pare down dataset to only matching data\n    if (curveInfoParams.curvesLength > 1 && appParams.matching) {\n        dataset = matsDataMatchUtils.getMatchedDataSetWithLevels(dataset, curveInfoParams.curvesLength, appParams.plotType);\n    }\n\n    // we may need to recalculate the axis limits after unmatched data and outliers are removed\n    var axisLimitReprocessed = {};\n\n    // calculate data statistics (including error bars) for each curve\n    for (var curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n        axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] = axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] !== undefined;\n        var diffFrom = curveInfoParams.curves[curveIndex].diffFrom;\n        var statisticSelect = appName.indexOf(\"anomalycor\") !== -1 ? \"ACC\" : curveInfoParams.curves[curveIndex]['statistic'];\n        var data = dataset[curveIndex];\n        const label = dataset[curveIndex].label;\n\n        var di = 0;\n        var values = [];\n        var levels = [];\n        var means = [];\n        var rawStat;\n\n        /*\n        dataset[curveIndex] is the dataset.\n        it looks like:\n\n        d = {\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            stats: [],     //pointStats\n            text: [],\n            glob_stats: {},     //curveStats\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n        */\n\n        while (di < data.y.length) {\n\n            // errorResult holds all the calculated curve stats like mean, sd, etc.\n            var errorResult = matsDataUtils.get_err(data.subVals[di], data.subSecs[di], data.subLevs[di]);\n\n            // store raw statistic from query before recalculating that statistic to account for data removed due to matching, QC, etc.\n            rawStat = data.x[di];\n            if ((diffFrom === null || diffFrom === undefined) || !appParams.matching) {\n                // assign recalculated statistic to data[di][1], which is the value to be plotted\n                data.x[di] = errorResult.d_mean;\n            } else {\n                if (dataset[diffFrom[0]].x[di] !== null && dataset[diffFrom[1]].x[di] !== null) {\n                    // make sure that the diff curve actually shows the difference when matching. Otherwise outlier filtering etc. can make it slightly off.\n                    data.x[di] = dataset[diffFrom[0]].x[di] - dataset[diffFrom[1]].x[di];\n                } else {\n                    // keep the null for no data at this point\n                    data.x[di] = null;\n                }\n            }\n            values.push(data.x[di]);\n            levels.push(data.y[di]);\n            means.push(errorResult.d_mean);\n\n            // store error bars if matching\n            const errorBar = errorResult.stde_betsy * 1.96;\n            if (appParams.matching) {\n                errorMax = errorMax > errorBar ? errorMax : errorBar;\n                data.error_x.array[di] = errorBar;\n            } else {\n                data.error_x.array[di] = null;\n            }\n\n            // remove sub values and times to save space\n            data.subVals[di] = [];\n            data.subSecs[di] = [];\n            data.subLevs[di] = [];\n\n            // store statistics\n            data.stats[di] = {\n                raw_stat: rawStat,\n                d_mean: errorResult.d_mean,\n                sd: errorResult.sd,\n                n_good: errorResult.n_good,\n                lag1: errorResult.lag1,\n                stde_betsy: errorResult.stde_betsy\n            };\n\n            // this is the tooltip, it is the last element of each dataseries element\n            data.text[di] = label +\n                \"<br>\" + data.y[di] + \"mb\" +\n                \"<br>\" + statisticSelect + \": \" + (data.x[di] === null ? null : data.x[di].toPrecision(4)) +\n                \"<br>sd: \" + (errorResult.sd === null ? null : errorResult.sd.toPrecision(4)) +\n                \"<br>mean: \" + (errorResult.d_mean === null ? null : errorResult.d_mean.toPrecision(4)) +\n                \"<br>n: \" + errorResult.n_good +\n                // \"<br>lag1: \" + (errorResult.lag1 === null ? null : errorResult.lag1.toPrecision(4)) +\n                // \"<br>stde: \" + errorResult.stde_betsy +\n                \"<br>errorbars: \" + Number((data.x[di]) - (errorResult.stde_betsy * 1.96)).toPrecision(4) + \" to \" + Number((data.x[di]) + (errorResult.stde_betsy * 1.96)).toPrecision(4);\n\n            di++;\n        }\n\n        // enable error bars if matching and they aren't null\n        if (appParams.matching && data.error_x.array.filter(x => x).length > 0) {\n            data.error_x.visible = true;\n        }\n\n        // get the overall stats for the text output - this uses the means not the stats.\n        const stats = matsDataUtils.get_err(values.reverse(), levels.reverse(), []); // have to reverse because of data inversion\n        const filteredMeans = means.filter(x => x);\n        var minx = Math.min(...filteredMeans);\n        var maxx = Math.max(...filteredMeans);\n        if (means.indexOf(0) !== -1 && 0 < minx) {\n            minx = 0;\n        }\n        if (means.indexOf(0) !== -1 && 0 > maxx) {\n            maxx = 0;\n        }\n        stats.minx = minx;\n        stats.maxx = maxx;\n        dataset[curveIndex]['glob_stats'] = stats;\n\n        // recalculate axis options after QC and matching\n        curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'] = (curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'] < maxx || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey]) ? maxx : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'];\n        curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'] = (curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'] > minx || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey]) ? minx : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'];\n\n        // recalculate curve annotation after QC and matching\n        if (stats.d_mean !== undefined && stats.d_mean !== null) {\n            dataset[curveIndex]['annotation'] = label + \"- mean = \" + stats.d_mean.toPrecision(4);\n        }\n    }\n\n    // add black 0 line curve\n    // need to define the minimum and maximum x value for making the zero curve\n    const zeroLine = matsDataCurveOpsUtils.getVerticalValueLine(1100, 0, 0, matsTypes.ReservedWords.zero);\n    dataset.push(zeroLine);\n\n    //add ideal value lines, if any\n    var idealValueLine;\n    var idealLabel;\n    for (var ivIdx = 0; ivIdx < curveInfoParams.idealValues.length; ivIdx++) {\n        idealLabel = \"ideal\" + ivIdx.toString();\n        idealValueLine = matsDataCurveOpsUtils.getVerticalValueLine(1100, 0, curveInfoParams.idealValues[ivIdx], matsTypes.ReservedWords[idealLabel]);\n        dataset.push(idealValueLine);\n    }\n\n    // generate plot options\n    const resultOptions = matsDataPlotOpsUtils.generateProfilePlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n    var totalProcessingFinish = moment();\n    bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n        begin: bookkeepingParams.totalProcessingStart.format(),\n        finish: totalProcessingFinish.format(),\n        duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n    };\n\n    // pass result to client-side plotting functions\n    return {\n        error: error,\n        data: dataset,\n        options: resultOptions,\n        basis: {\n            plotParams: plotParams,\n            queries: bookkeepingParams.dataRequests\n        }\n    };\n};\n\nconst processDataReliability = function (dataset, appParams, curveInfoParams, plotParams, bookkeepingParams) {\n    var error = \"\";\n\n    // calculate data statistics (including error bars) for each curve\n    for (var curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n\n        var data = dataset[curveIndex];\n        const label = dataset[curveIndex].label;\n\n        var sample_climo = data.subVals;\n        var di = 0;\n\n        /*\n        dataset[curveIndex] is the dataset.\n        it looks like:\n\n        d = {\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            stats: [],     //pointStats\n            text: [],\n            glob_stats: {},     //curveStats\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n        */\n\n        while (di < data.x.length) {\n\n            // store statistics for this di datapoint\n            data.stats[di] = {\n                prob_bin: data.x[di],\n                hit_rate: data.y[di],\n                obs_y: data.error_x[di],\n                obs_n: data.subLevs[di]\n            };\n\n            // this is the tooltip, it is the last element of each dataseries element.\n            // also change the x array from epoch to date for timeseries and DMC, as we are now done with it for calculations.\n            data.text[di] = label;\n            data.text[di] = data.text[di] + \"<br>probability bin: \" + data.x[di];\n            data.text[di] = data.text[di] + \"<br>hit rate: \" + data.y[di];\n            data.text[di] = data.text[di] + \"<br>oy: \" + data.error_x[di];\n            data.text[di] = data.text[di] + \"<br>on: \" + data.subLevs[di];\n\n            // remove sub values and times to save space\n            data.subVals[di] = [];\n            data.subSecs[di] = [];\n            data.subLevs[di] = [];\n\n            di++;\n        }\n\n        dataset[curveIndex]['glob_stats'] = {\n            sample_climo: sample_climo\n        };\n    }\n\n    // add black perfect reliability line curve\n    const perfectLine = matsDataCurveOpsUtils.getLinearValueLine(curveInfoParams.xmax, curveInfoParams.xmin, data.ymax, data.ymin, matsTypes.ReservedWords.perfectReliability);\n    dataset.push(perfectLine);\n\n    if (sample_climo >= data.ymin) {\n        var skillmin = sample_climo - ((sample_climo - data.xmin) / 2);\n    } else {\n        var skillmin = data.xmin - ((data.xmin - sample_climo) / 2);\n    }\n    if (sample_climo >= data.ymax) {\n        var skillmax = sample_climo - ((sample_climo - data.xmax) / 2);\n    } else {\n        var skillmax = data.xmax - ((data.xmax - sample_climo) / 2);\n    }\n\n\n    // add black no skill line curve\n    const noSkillLine = matsDataCurveOpsUtils.getLinearValueLine(curveInfoParams.xmax, curveInfoParams.xmin, skillmax, skillmin, matsTypes.ReservedWords.noSkill);\n    dataset.push(noSkillLine);\n\n    // add sample climo lines\n    // need to define the minimum and maximum x value for making the curves\n    const xClimoLine = matsDataCurveOpsUtils.getHorizontalValueLine(curveInfoParams.xmax, curveInfoParams.xmin, sample_climo, matsTypes.ReservedWords.zero);\n    dataset.push(xClimoLine);\n\n    const yClimoLine = matsDataCurveOpsUtils.getVerticalValueLine(curveInfoParams.xmax, curveInfoParams.xmin, sample_climo, matsTypes.ReservedWords.zero);\n    dataset.push(yClimoLine);\n\n    // generate plot options\n    var resultOptions = matsDataPlotOpsUtils.generateReliabilityPlotOptions();\n\n    var totalProcessingFinish = moment();\n    bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n        begin: bookkeepingParams.totalProcessingStart.format(),\n        finish: totalProcessingFinish.format(),\n        duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n    };\n\n    // pass result to client-side plotting functions\n    return {\n        error: error,\n        data: dataset,\n        options: resultOptions,\n        basis: {\n            plotParams: plotParams,\n            queries: bookkeepingParams.dataRequests\n        }\n    };\n};\n\nconst processDataHistogram = function (allReturnedSubStats, allReturnedSubSecs, allReturnedSubLevs, dataset, appParams, curveInfoParams, plotParams, binParams, bookkeepingParams) {\n    var error = \"\";\n    var curvesLengthSoFar = 0;\n\n    // flatten all the returned data into one stats array and one secs array in order to calculate histogram bins over the whole range.\n    const curveSubStats = [].concat.apply([], allReturnedSubStats);\n    const curveSubSecs = [].concat.apply([], allReturnedSubSecs);\n\n    var binStats;\n    if (binParams.binBounds.length === 0) {\n        binStats = matsDataUtils.calculateHistogramBins(curveSubStats, curveSubSecs, binParams).binStats;\n    } else {\n        binStats = matsDataUtils.prescribeHistogramBins(curveSubStats, curveSubSecs, binParams).binStats;\n    }\n\n    // store bin labels and x-axis positions of those labels for later when we set up the plot options\n    var plotBins = {};\n    plotBins['binMeans'] = [];\n    plotBins['binLabels'] = [];\n    for (var b_idx = 0; b_idx < binStats.binMeans.length; b_idx++) {\n        plotBins['binMeans'].push(binStats.binMeans[b_idx]);\n        plotBins['binLabels'].push(binStats.binLabels[b_idx]);\n    }\n\n    // post process curves\n    var sortedData;\n    var curve;\n    var diffFrom;\n    var label;\n    for (var curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n        curve = curveInfoParams.curves[curveIndex];\n        diffFrom = curve.diffFrom;\n        label = curve.label;\n\n        var d = {// d will contain the curve data\n            x: [], //placeholder\n            y: [], //placeholder\n            error_x: [], // unused\n            error_y: [], // unused\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            glob_stats: {}, // placeholder\n            bin_stats: [], // placeholder\n            text: [], //placeholder\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n        };\n\n        if (diffFrom == null) {\n            var postQueryStartMoment = moment();\n            if (curveInfoParams.dataFoundForCurve[curveIndex]) {\n                // sort queried data into the full set of histogram bins\n                sortedData = matsDataUtils.sortHistogramBins(allReturnedSubStats[curveIndex], allReturnedSubSecs[curveIndex], allReturnedSubLevs[curveIndex], binParams.binNum, binStats, appParams.hasLevels, d);\n                d = sortedData.d;\n            }\n        } else {\n            // this is a difference curve, so we're done with regular curves.\n            // do any matching that needs to be done.\n            if (appParams.matching && !bookkeepingParams.alreadyMatched) {\n                if (appParams.hasLevels) {\n                    dataset = matsDataMatchUtils.getMatchedDataSetHistogramWithLevels(dataset, curvesLengthSoFar, binStats);\n                } else {\n                    dataset = matsDataMatchUtils.getMatchedDataSetHistogram(dataset, curvesLengthSoFar, binStats);\n                }\n                bookkeepingParams.alreadyMatched = true;\n            }\n\n            // then take diffs\n            const diffResult = matsDataDiffUtils.getDataForDiffCurve(dataset, diffFrom, matsTypes.PlotTypes.histogram, appParams.hasLevels);\n\n            // adjust axis stats based on new data from diff curve\n            d = diffResult.dataset;\n        }\n\n        // set curve annotation to be the curve mean -- may be recalculated later\n        // also pass previously calculated axis stats to curve options\n        curve['annotation'] = \"\";\n        curve['axisKey'] = curveInfoParams.curves[curveIndex].axisKey;\n        const cOptions = matsDataCurveOpsUtils.generateBarChartCurveOptions(curve, curveIndex, curveInfoParams.axisMap, d);  // generate plot with data, curve annotation, axis labels, etc.\n        dataset.push(cOptions);\n        curvesLengthSoFar++;\n        var postQueryFinishMoment = moment();\n        bookkeepingParams.dataRequests[\"post data retrieval (query) process time - \" + curve.label] = {\n            begin: postQueryStartMoment.format(),\n            finish: postQueryFinishMoment.format(),\n            duration: moment.duration(postQueryFinishMoment.diff(postQueryStartMoment)).asSeconds() + ' seconds'\n        }\n    }  // end for curves\n\n    // if matching, pare down dataset to only matching data. Only do this if we didn't already do it while calculating diffs.\n    if (curveInfoParams.curvesLength > 1 && (appParams.matching && !bookkeepingParams.alreadyMatched)) {\n        if (appParams.hasLevels) {\n            dataset = matsDataMatchUtils.getMatchedDataSetHistogramWithLevels(dataset, curveInfoParams.curvesLength, binStats);\n        } else {\n            dataset = matsDataMatchUtils.getMatchedDataSetHistogram(dataset, curveInfoParams.curvesLength, binStats);\n        }\n    }\n\n    // calculate data statistics (including error bars) for each curve\n    for (curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n        var statisticSelect = curveInfoParams.curves[curveIndex]['statistic'];\n        diffFrom = curveInfoParams.curves[curveIndex].diffFrom;\n        var data = dataset[curveIndex];\n        label = dataset[curveIndex].label;\n\n        var di = 0;\n\n        while (di < data.x.length) {\n\n            if (curveInfoParams.yAxisFormat === 'Relative frequency') {\n                // replace the bin number with the bin relative frequency for the plotted statistic\n                data.y[di] = data.bin_stats[di].bin_rf * 100;\n            }\n\n            // remove sub values and times to save space\n            data.subVals[di] = [];\n            data.subSecs[di] = [];\n            data.subLevs[di] = [];\n\n            // this is the tooltip, it is the last element of each dataseries element\n            data.text[di] = label +\n                \"<br>\" + \"bin: \" + di + \" (\" + statisticSelect + \" values between \" + (data.bin_stats[di].binLowBound === null ? null : data.bin_stats[di].binLowBound.toPrecision(4)) + \" and \" + (data.bin_stats[di].binUpBound === null ? null : data.bin_stats[di].binUpBound.toPrecision(4)) + \")\" +\n                \"<br>\" + \"number in bin for this curve: \" + (data.y[di] === null ? null : data.y[di]) +\n                \"<br>bin mean for this curve: \" + statisticSelect + \" = \" + (data.bin_stats[di].bin_mean === null ? null : data.bin_stats[di].bin_mean.toPrecision(4)) +\n                \"<br>bin sd  for this curve: \" + statisticSelect + \" = \" + (data.bin_stats[di].bin_sd === null ? null : data.bin_stats[di].bin_sd.toPrecision(4));\n\n            di++;\n        }\n    } // end curves\n\n    // generate plot options\n    const resultOptions = matsDataPlotOpsUtils.generateHistogramPlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, plotBins);\n    var totalProcessingFinish = moment();\n    bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n        begin: bookkeepingParams.totalProcessingStart.format(),\n        finish: totalProcessingFinish.format(),\n        duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n    };\n\n    // pass result to client-side plotting functions\n    return {\n        error: error,\n        data: dataset,\n        options: resultOptions,\n        basis: {\n            plotParams: plotParams,\n            queries: bookkeepingParams.dataRequests\n        }\n    };\n\n};\n\nconst processDataContour = function (dataset, curveInfoParams, plotParams, bookkeepingParams) {\n    var error = \"\";\n    const appName = matsCollections.appName.findOne({}).app;\n    var statisticSelect = appName.indexOf(\"anomalycor\") !== -1 ? \"ACC\" : curveInfoParams.curve[0]['statistic'];\n    var data = dataset[0];\n    const label = dataset[0].label;\n\n    if (data.xAxisKey.indexOf(\"Date\") !== -1) {\n        data.x = data.x.map(function (val) {\n            return moment.utc(val * 1000).format(\"YYYY-MM-DD HH:mm\");\n        });\n    } else if (data.yAxisKey.indexOf(\"Date\") !== -1) {\n        data.y = data.y.map(function (val) {\n            return moment.utc(val * 1000).format(\"YYYY-MM-DD HH:mm\");\n        });\n    }\n\n    var i;\n    var j;\n    var currX;\n    var currY;\n    var currText;\n    var currYTextArray;\n    for (j = 0; j < data.y.length; j++) {\n        currY = data.y[j];\n        currYTextArray = [];\n        for (i = 0; i < data.x.length; i++) {\n            currX = data.x[i];\n            currText = label +\n                \"<br>\" + data['xAxisKey'] + \": \" + data.x[i] +\n                \"<br>\" + data['yAxisKey'] + \": \" + data.y[j] +\n                \"<br>\" + statisticSelect + \": \" + (data.z[j][i] === undefined || data.z[j][i] === null || data.z[j][i] === 'null' ? null : data.z[j][i].toPrecision(4)) +\n                \"<br>n: \" + data['n'][j][i];\n            currYTextArray.push(currText);\n        }\n        data.text.push(currYTextArray);\n    }\n\n    // generate plot options\n    const resultOptions = matsDataPlotOpsUtils.generateContourPlotOptions(dataset, curveInfoParams.axisMap);\n\n    var totalProcessingFinish = moment();\n    bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n        begin: bookkeepingParams.totalProcessingStart.format(),\n        finish: totalProcessingFinish.format(),\n        duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n    };\n\n    // pass result to client-side plotting functions\n    return {\n        error: error,\n        data: dataset,\n        options: resultOptions,\n        basis: {\n            plotParams: plotParams,\n            queries: bookkeepingParams.dataRequests\n        }\n    };\n};\n\nexport default matsDataProcessUtils = {\n\n    processDataXYCurve: processDataXYCurve,\n    processDataProfile: processDataProfile,\n    processDataReliability: processDataReliability,\n    processDataHistogram: processDataHistogram,\n    processDataContour: processDataContour\n\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {Meteor} from \"meteor/meteor\";\nimport {\n    matsCollections,\n    matsDataCurveOpsUtils,\n    matsDataDiffUtils,\n    matsDataProcessUtils,\n    matsDataQueryUtils,\n    matsDataUtils,\n    matsMethods,\n    matsParamUtils,\n    matsTypes\n} from 'meteor/randyp:mats-common';\nimport {mysql} from 'meteor/pcel:mysql';\nimport {moment} from 'meteor/momentjs:moment';\n\nconst statMvTranslation = {\n    'ACC': \"ANOM_CORR\",\n    'RMS': 'RMSE',\n    'Bias (Model - Obs)': 'ME',\n    'Model average': \"FBAR\",\n    'Obs average': \"OBAR\"\n};\n\nconst xmlBuilder = require('xmlbuilder');\n\nconst _pad = function(num, size){\n    var s = num+\"\";\n    while (s.length < size) s = \"0\" + s;\n    return s;\n}\n\nconst _title = function () {\n    try {\n        if (matsCollections.Settings === undefined || matsCollections.Settings.findOne({}, {fields: {Title: 1}}) === undefined) {\n            return \"\";\n        } else {\n            return matsCollections.Settings.findOne({}, {fields: {Title: 1}}).Title;\n        }\n    } catch (someError) {\n        return \"\";\n    }\n};\n\nconst _plotText = function (plotParams) {\n    var format = plotParams.plotFormat;\n\n    if (matsCollections.PlotParams.findOne({name: 'plotFormat'}) &&\n        matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap &&\n        matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap[plotParams.plotFormat] !== undefined) {\n        format = matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap[plotParams.plotFormat];\n    }\n    if (format === undefined) {\n        format = \"Unmatched\";\n    }\n    const plotType = (_.invert(plotParams.plotTypes))[true];\n    switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n            return \"TimeSeries \" + plotParams.dates + \" : \" + format;\n            break;\n        case matsTypes.PlotTypes.profile:\n            return \"Profile: \" + format;\n            break;\n        case matsTypes.PlotTypes.dieoff:\n            return \"DieOff: \" + format;\n            break;\n        case matsTypes.PlotTypes.threshold:\n            return \"Threshold: \" + format;\n            break;\n        case matsTypes.PlotTypes.validtime:\n            return \"ValidTime: \" + format;\n            break;\n        case matsTypes.PlotTypes.dailyModelCycle:\n            return \"DailyModelCycle \" + plotParams.dates + \" : \" + format;\n            break;\n        case matsTypes.PlotTypes.reliability:\n            return \"Reliability: \" + format;\n            break;\n        case matsTypes.PlotTypes.map:\n            return \"Map \" + plotParams.dates + \" \";\n            break;\n        case matsTypes.PlotTypes.histogram:\n            return \"Histogram: \" + format;\n            break;\n        default:\n            return \"Scatter: \" + plotParams.dates + \" : \" + format;\n    }\n}\n\nconst _componentToHex = function(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n};\n\nconst _rgbToHex = function(color) {\n    const cParts = color.replace('rgb(','').replace(')','').split(',');\n    const r = Number(cParts[0]);\n    const g = Number(cParts[1]);\n    const b = Number(cParts[2]);\n    return \"#\" + _componentToHex(r) + _componentToHex(g) + _componentToHex(b);\n};\n\n\nconst _getUniqDates = function(dates, database, model, dataSource, region, variable, forecastLength, fromSecs, toSecs, validTimes ) {\n    var regionsClause = \"\";\n    if (region != null) {\n        region = Array.isArray(region) ? region : [region];\n        if (region.length > 0) {\n            const regions = region.map(function (r) {\n                return \"'\" + r + \"'\";\n            }).join(',');\n            regionsClause = \"and h.vx_mask IN(\" + regions + \")\";\n        }\n    }\n\n    // the forecast lengths appear to have sometimes been inconsistent (by format) in the varias databases\n    // so they have been sanitized for display purposes in the forecastValueMap.\n    // now we have to go get the damn ole unsanitary ones for the database.\n    var forecastLengthsClause = \"\";\n    if (forecastLength != null) {\n        forecastLength = Array.isArray(forecastLength) ? forecastLength : [forecastLength];\n        if (forecastLength.length > 0) {\n            const forecastValueMap = matsCollections.CurveParams.findOne({name: 'forecast-length'}, {valuesMap: 1})['valuesMap'][database][dataSource];\n            const forecastLengths = forecastLength.map(function (fl) {\n                return forecastValueMap[fl];\n            }).join(',');\n            forecastLengthsClause = \"and ld.fcst_lead IN (\" + forecastLengths + \")\";\n        }\n    }\n\n    var statement = \"select ld.fcst_valid_beg as avtime \" +\n        \"from \" + database + \".stat_header h, \" + database + \".line_data_sl1l2 ld \" +\n        \"where 1=1 and h.model = '\" + model + \"' \" +\n        regionsClause +\n        \"and unix_timestamp(ld.fcst_valid_beg) >= '\" + fromSecs + \"' \" +\n        \"and unix_timestamp(ld.fcst_valid_beg) <= '\" + toSecs + \"' \" +\n        forecastLengthsClause +\n        \"and h.fcst_var = '\" + variable + \"' \" +\n        \"and ld.stat_header_id = h.stat_header_id \" +\n        \"group by avtime order by avtime;\";\n\n    var rows = matsDataQueryUtils.simplePoolQueryWrapSynchronous(metadataPool, statement);\n    if (rows === undefined || rows === null || rows.length === 0) {\n        console.log(matsTypes.Messages.NO_DATA_FOUND);\n    } else {\n\n        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            const dstrMoment = moment(rows[rowIndex].avtime);\n            const dstr = dstrMoment.format('YYYY-MM-DD HH:mm:ss').trim();\n            // apply the valid-time filter here.....\n            var valid = true;\n            if (validTimes != null && validTimes.length > 0) {\n                valid = false;\n                const momentSdiHour = Number(dstrMoment.format(\"HH\"));\n                for (var vti = 0; vti < validTimes.length; vti++) {\n                    const thisvt = Number(validTimes[vti]);\n                    if (momentSdiHour === thisvt) {\n                        // it is valid\n                        valid = true;\n                        break;\n                    }\n                }\n            }\n            if (valid === true && dates.indexOf(dstr) === -1) {\n                dates.push(dstr);\n            }\n        }\n    }\n    return dates;\n}\n\n\n// adds date elements to an element of the current xml between a start and an end date, incremented by specific seconds\n// series variables can be grouped or ungrouped.\n// e.g. grouped ...    <val>2018-11-01 00:00:00,2018-11-01 06:00:00,2018-11-01 12:00:00,2018-11-01</val>\n// e.g. ungrouped ...    <val>2018-11-01 00:00:00</val>\n//                       <val>2018-11-01 06:00:00</val>\n//                       <val>2018-11-01 12:00:00</val>\n//                       <val>2018-11-01</val>\n\n// for time series valid_beg is always ungrouped.\nconst _getSortedDatesForIndepRange = function(plotParams) {\n    const dateRange = matsDataUtils.getDateRange(plotParams.dates);\n    const fromSecs = dateRange.fromSeconds;\n    const toSecs = dateRange.toSeconds;\n    const curves = plotParams.curves;\n    // have to get all the valid dates for each curve then union them\n    // to get a complete date list\n    var dates = [];\n    for (var ci = 0; ci < curves.length; ci++) {\n        if (curves[ci]['diffFrom']) {\n            // currrently we do not do mv differencing\n            continue;\n        }\n        var curve = curves[ci];\n        const validTimes = curve['valid-time'];\n        const region = curve['region'];\n        const forecastLength = curve['forecast-length'];\n        const variable = curve['variable'];\n        //example 2018-11-06 00:00:00\n        const database = curve['database'];\n        const dataSource = curve['data-source'];\n        const model = matsCollections.CurveParams.findOne({name: 'data-source'}).optionsMap[database][dataSource][0];\n        dates = _getUniqDates(dates, database, model, dataSource, region, variable, forecastLength, fromSecs, toSecs, validTimes);\n    }\n    // sort the dates\n    const sortedDates = dates.sort(\n        function (a, b) {\n            return new moment(a) - new moment(b);\n        }\n    );\n    return sortedDates;\n}\n\nconst _getSortedHoursForIndepRange = function(plotParams) {\n    const sortedDates = _getSortedDatesForIndepRange(plotParams);\n    var hours = new Set();\n    for (var di=0;di<sortedDates.length;di++) {\n        const hour = moment(sortedDates[di]).format(\"HH\");\n        hours.add(hour);\n    }\n    return Array.from(hours).sort();\n}\n\nconst _getSortedDatesForDepRange = function(curve) {\n    var dates = [];\n    const dateRange = matsDataUtils.getDateRange(curve['curve-dates']);\n    const fromSecs = dateRange.fromSeconds;\n    const toSecs = dateRange.toSeconds;\n    const validTimes = curve['valid-time'];\n    const region = curve['region'];\n    const forecastLength = curve['forecast-length'];\n    const variable = curve['variable'];\n    //example 2018-11-06 00:00:00\n    const database = curve['database'];\n    const dataSource = curve['data-source'];\n    const model = matsCollections.CurveParams.findOne({name: 'data-source'}).optionsMap[database][dataSource][0];\n    dates = _getUniqDates(dates, database, model, dataSource, region, variable, forecastLength, fromSecs, toSecs, validTimes);\n\n    // sort the dates\n    const sortedDates = dates.sort(\n        function (a, b) {\n            return new moment(a) - new moment(b);\n        }\n    );\n    return sortedDates;\n}\n\n\n// for profiles valid_beg is always grouped.\nconst addIndepUngroupedDateElementsBetween = function (element, plotParams) {\n    const sortedDates = _getSortedDatesForIndepRange(plotParams);\n    //these must be ungrouped\n    for (var sdi = 0; sdi < sortedDates.length; sdi++) {\n        element.ele('val', {\n            'label': sortedDates[sdi],\n            'plot_val': \"\"\n        }, sortedDates[sdi]);\n    }\n}\n\n// parse the databases from the curves and add a database string\nconst addDatabaseElement = function(element, curves){\n    try {\n        databases = [];\n\n        for (var ci=0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            if (!databases.includes(curves[ci].database)) {\n                databases.push(curves[ci].database);\n            }\n        }\n        databasesStr = databases.join(\"'\");\n        element.ele('database',databasesStr);\n        return element;\n    } catch (someError) {\n        return \"\";\n    }\n};\n\n// add the required metviewer folders\nconst addFolders = function(element) {\n    try {\n        element.ele('rscript', Meteor.settings.private.MV_RSCRIPT);\n        var folders = element.ele('folders');\n        folders.ele('r_tmpl', matsMethods.MV_DIRS.HOME + \"/R_tmpl\");\n        folders.ele('r_work', matsMethods.MV_DIRS.HOME + \"/R_work\");\n        folders.ele('plots', matsMethods.MV_DIRS.PLOTSDIR);\n        folders.ele('data', matsMethods.MV_DIRS.DATADIR);\n        folders.ele('scripts', matsMethods.MV_DIRS.SCRIPTSDIR);\n        return element;\n    } catch (e) {\n    }\n};\n\n// start the plotspec\nconst startPlotSpec = function(pool, plotParams) {\n    try {\n        var xml = xmlBuilder.create('plot_spec', {version: \"1.0\", encoding: \"UTF-8\", standalone: false});\n        var connection = xml.ele('connection');\n        connection.ele('host', sumPool.config.connectionConfig.host + \":\" + sumPool.config.connectionConfig.port);\n        addDatabaseElement(connection, plotParams.curves);\n        connection.ele('user', sumPool.config.connectionConfig.user);\n        connection.ele('password', sumPool.config.connectionConfig.password);\n        const management_system = Meteor.settings.private.MV_DB_MANAGEMENT_SYSTEM != null ? Meteor.settings.private.MV_DB_MANAGEMENT_SYSTEM : \"mysql\";\n        connection.ele('management_system', management_system);\n        addFolders(xml);\n        var plot = xml.ele('plot');\n        return {xml:xml,plot:plot};\n    } catch (e) {\n    }\n};\n\nconst addPlotCi = function(element,plotParams){\n    try { //example c(\"none\",\"none\")\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push('\"none\"');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('plot_ci', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addShowSignif = function(element,plotParams){\n    try { //example c(FALSE,FALSE)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push('FALSE');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('show_signif', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addPlotDisp = function(element,plotParams){\n    try { //example c(TRUE,TRUE)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            cList.push('TRUE');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('plot_disp', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addColors = function(element,plotParams){\n    try { //  example  'c(\"#ff0000FF\",\"#8000ffFF\")'\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            var ch = _rgbToHex(curves[ci].color) + \"FF\";\n            cList.push('\"' + ch + '\"');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('colors', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addPch = function(element,plotParams){\n    try { //example c(20,20)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push('20');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('pch', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addType = function(element,plotParams){\n    try { //example c(\"b\",\"b\")\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push('\"b\"');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('type', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addLty = function(element,plotParams){\n    try { // example c(1,1)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push(1);\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('lty', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addLwd = function(element,plotParams){\n    try { // example c(1,1)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push(1);\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('lwd', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addConSeries = function(element,plotParams){\n    try { // example c(1,1)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push(1);\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('con_series', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addOrderSeries = function(element,plotParams){\n    try { // example c(1,2)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push(ci + 1);\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('order_series', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addLegend = function(element,plotParams){\n    try { // example c(\"\",\"\")\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push('\"\"');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('legend', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addSeries = function(plot, dependentAxes, plotParams) {\n    /***\n     data-source(models), region(vx_mask),forecast_length (fcst_lead), and pres-level(fcst_lev)\n     are series variables. Multiple selections for a given curve are MV grouped (join'd)\n     Multiple selections associated with different curves are seperate <val> tags.\n\n     All of the non grouped combinations are added which results in possibly too many curves. The redundant ones are later hidden.\n\n     They can also go on the axis that is associated with the curve that the region parameter is on.\n     In other words force a new series.\n     i.e. Y1 Series variables or Y2 Series variables\n\n     series variables can be grouped or ungrouped.\n     e.g. grouped ...    <val>2018-11-01 00:00:00,2018-11-01 06:00:00,2018-11-01 12:00:00,2018-11-01</val>\n     e.g. ungrouped ...    <val>2018-11-01 00:00:00</val>\n     <val>2018-11-01 06:00:00</val>\n     <val>2018-11-01 12:00:00</val>\n     <val>2018-11-01</val>\n     For MATS curves they are grouped for each curve and added ase series variables. This results in redundant curves in MV and so the\n     redundant curves will be hidden.\n     Curves that were assigned to different axis were figured out and assigned in getDependents and are assigned in the dependentAxes structure.\n     ***/\n    var hiddenCurves = [];\n    var sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev'};\n    const type = (_.invert(plotParams.plotTypes))[true];\n    const seriesAxisMap = {'series1':'y1', 'series2':'y2'};\n    Object.keys(seriesAxisMap).forEach(function (series) {\n        var models = [];\n        var vx_masks = [];\n        var fcst_leads = [];\n        var fcst_levls = [];\n        var seriesElem = plot.ele(series);\n        const axis = seriesAxisMap[series];\n        var initHours = new Set();\n        switch (type) {\n            case matsTypes.PlotTypes.timeSeries:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev'};\n                break;\n            case matsTypes.PlotTypes.dailyModelCycle:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev'};\n                break;\n            case matsTypes.PlotTypes.profile:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','curve-dates':'fcst_valid_beg'};\n                break;\n            case matsTypes.PlotTypes.dieoff:\n                sVars = {'data-source': 'model', 'region': 'vx_mask', 'pres-level': 'fcst_lev', 'curve-dates': 'fcst_valid_beg'};\n                for (var ci=0; ci < plotParams.curves.length;ci++) {\n                    if (curves[ci]['diffFrom']) {\n                        // currrently we do not do mv differencing\n                        continue;\n                    }\n                    const c = plotParams.curves[ci];\n                    if (c['dieoff-type'] === 'Dieoff for a specified UTC cycle init hour') {\n                        initHours.add(c['utc-cycle-start']);\n                    } else if (c.dieoff - type === matsTypes.ForecastTypes.singleCycle) {\n                        // placeholder for if issue 60313 gets resolved\n                    }\n                }\n               if (initHours.size > 0) {\n                   sVars['utc-cycle-start'] = 'init_hour';\n               }\n                break;\n            case matsTypes.PlotTypes.threshold:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev','curve-dates':'fcst_valid_beg'};\n                break;\n            case matsTypes.PlotTypes.validtime:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev','curve-dates':'fcst_valid_beg'};\n                break;\n            case matsTypes.PlotTypes.reliability:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev','curve-dates':'fcst_valid_beg'};\n                break;\n            case matsTypes.PlotTypes.histogram:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev','curve-dates':'fcst_valid_beg'};\n                break;\n            default:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev'};\n        }\n\n        if (type === matsTypes.PlotTypes.profile) {\n            delete sVars['pres-level'];\n        } else {\n            // we only consider pressure levels when it isn't a profile\n            sVars['pres-level'] = 'fcst_lev';\n        }\n        var seriesElements = {};\n        var seriesElementValues = {};\n        for (var daci = 0; daci < dependentAxes[axis].length; daci++) {\n            const curve = dependentAxes[axis][daci];\n            const database = curve['database'];\n            const dataSource = curve['data-source'];\n                Object.keys(sVars).forEach(function(sVar) {\n                    try {\n                        // models - not multiple - ungrouped\n                        var sValues = [];\n                        switch(sVar) {\n                            case 'data-source':\n                                // convert data-source to single element array\n                                sValues = [matsParamUtils.getParameterForName(sVar).optionsMap[database][dataSource][0]];\n                                break;\n                            case 'curve-dates':\n                                sValues = _getSortedDatesForDepRange(curve);\n                                break;\n                            case 'utc-cycle-start':\n                                const v = curve['utc-cycle-start'];\n                                const paddedV = _pad(v,2);\n                                sValues = [paddedV]; // turn single selection padded value into array\n                                break;\n                            case 'forecast-length':\n                                sValues = curve[sVar];\n                                if (sValues == null || sValues.length === 0) {\n                                    sValues = matsParamUtils.getParameterForName(sVar).optionsMap[database][dataSource]; // have to assign all the fcst leads\n                                }\n                                const forecastValueMap = matsParamUtils.getParameterForName(sVar).valuesMap[database][dataSource];\n                                sValues = sValues.map(function (fl) {return forecastValueMap[fl]}).join(',');\n                                break;\n                            default:\n                                sValues = curve[sVar];\n                                if (sValues == null || sValues.length === 0) {\n                                    sValues = matsParamUtils.getParameterForName(sVar).optionsMap[database][dataSource]; // have to assign all the regions\n                                }\n                        }\n                        // check to see if this element was already added.\n                        // if not added then add the element.\n                        // if element was already added see if we need to add this value.\n                        // multiples are always grouped.\n                        if (sValues !== undefined) {\n                            sValues = Array.isArray(sValues) ? sValues : [sValues];\n                            if (sValues.length > 0) {\n                                const sValuesStr = sValues.join(',');\n                                if (sValuesStr !== undefined) {\n                                    const thisVar = sVars[sVar];\n                                    if (seriesElements[thisVar] == null) {\n                                        seriesElements[thisVar] = seriesElem.ele('field', {'name': sVars[sVar]});\n                                        seriesElementValues[thisVar] = new Set();\n                                        seriesElementValues[thisVar].add(sValuesStr);\n                                    } else {\n                                        // already exists\n                                        if (seriesElementValues[thisVar].has(sValuesStr) === false) {\n                                            seriesElementValues[thisVar].add(sValuesStr);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                } catch (error) {\n                    console.log(error)\n                    throw new Meteor.Error(error);\n                }\n            });\n        }\n        const sElementKeys = Object.keys(seriesElements);\n        for (var sei=0; sei < sElementKeys.length; sei++) {\n            const seVar = sElementKeys[sei];\n            const svars = Array.from(seriesElementValues[seVar]).sort();\n            for (var svi=0; svi < svars.length; svi++){\n                const v = svars[svi];\n                if (v !== \"undefined\") {\n                    seriesElements[seVar].ele('val', v);\n                }\n            };\n        }\n    });\n\n}\n\nconst getDependentAxis = function(plotParams) {\n    // there are two possible axis for metviewer. We want to collect all the variables\n    // into groups. We will take the two largest groups.\n    // variables and statistics go together. They are dependent variabales in MV.\n    // The variable/stat pairs always are associated with different curves, and will always be on different axis,\n    // if possible, but might be assigned an axis via an axes parameter.\n    const yaxesDefault = \"auto-by-variable\";\n    var curves = plotParams['curves'];\n    var dependentAxes = {'y1': [], 'y2': []};\n    dependentAxes['y1'].push(curves[0]);\n    var dependentAxesVariables = {'y1': [curves[0]['variable']], 'y2': []};\n    for (var ci = 1; ci < curves.length; ci++) {\n        if (curves[ci]['diffFrom']) {\n            // currrently we do not do mv differencing\n            continue;\n        }\n        if (curves[ci].yaxes != yaxesDefault) {\n            // it was assigned an axis by the axis param so sort it into its selectedYaxes\n            dependentAxes[curves[ci].yaxes].push(curves[ci]);\n        } else {\n            // sort it into an axis by its variable/stat combination\n            //     variables:\n            //     variables that share an axis are different dependent variables. Put them in dep1.\n            // unless it is a variable with multiple stats.\n            // different variable with different stats that have differing axis must go in different Y axis vars (and you can only have two of those)\n\n            const variable = curves[ci].variable;\n            if (dependentAxesVariables['y1'].includes(variable)) {\n                dependentAxes['y1'].push(curves[ci]);\n            } else {\n                dependentAxes['y2'].push(curves[ci]);\n            }\n        }\n    }\n    return dependentAxes;\n}\n\nfunction addDeps(plot, dependentAxes) {\n    var dep = plot.ele('dep');\n    const deps = {\"dep1\":\"y1\",\"dep2\":\"y2\"};\n    for (var di=0; di<Object.keys(deps).length;di++) {  // [dep1, dep2]\n        var depKey = Object.keys(deps)[di];  // dep1 or dep2\n        var depAxis = deps[depKey];\n        var subDep = dep.ele(depKey); //<dep><dep1/><dep2/>\n        var variableStatisticPairs = {};\n        for (var daci = 0; daci < dependentAxes[depAxis].length; daci++) {    //[y1,y2]\n            // record the variable-statistic pair\n            const variable = dependentAxes[depAxis][daci]['variable'];\n            const stat = statMvTranslation[dependentAxes[depAxis][daci]['statistic']];\n            if (variableStatisticPairs[variable] == null) {\n                variableStatisticPairs[variable] = [stat];\n            } else {\n                variableStatisticPairs[variable].push(stat);\n            }\n        }\n        var vars = Object.keys(variableStatisticPairs);  //['T','HGT','WIND'...]\n        for (var v = 0; v < vars.length; v++) {\n            const stats = Array.from(new Set(variableStatisticPairs[vars[v]]));\n            var depElem = subDep.ele('fcst_var', {'name': vars[v]}); //<dep><dep1><fcst_var name='T'><stat>RMS</stat></fcst_var> </dep1><dep2/>\n            for (var si=0;si<stats.length;si++) {\n                depElem.ele('stat',stats[si]);\n            }\n        }\n    }\n}\n\nfunction addAnomalycorrDeps(plot, dependentAxes) {\n    var dep = plot.ele('dep');\n    const deps = {\"dep1\":\"y1\",\"dep2\":\"y2\"};\n    for (var di=0; di<Object.keys(deps).length;di++) {  // [dep1, dep2]\n        var depKey = Object.keys(deps)[di];  // dep1 or dep2\n        var depAxis = deps[depKey];\n        var subDep = dep.ele(depKey); //<dep><dep1/><dep2/>\n        var variables = new Set();\n        for (var daci = 0; daci < dependentAxes[depAxis].length; daci++) {    //[y1,y2]\n            const variable = dependentAxes[depAxis][daci]['variable'];\n            variables.add(variable);\n        }\n        var vars = Array.from(variables);\n        for (var v = 0; v < vars.length; v++) {\n            subDep.ele('fcst_var', {'name': vars[v]}).ele('stat','ANOM_CORR');\n        }\n    }\n}\n\nconst _addSeriesLabels = function(element,dependentAxes, plotParams) {\n    const plotType = (_.invert(plotParams.plotTypes))[true];\n    var label;\n    switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n            label = \"Time\";\n            break;\n        case matsTypes.PlotTypes.dieoff:\n            label = \"Forecast Hour\";\n            break;\n        case matsTypes.PlotTypes.dailyModelCycle:\n            label = \"Time\";\n            break;\n        case matsTypes.PlotTypes.histogram:\n            label = \"Bin\";\n            break;\n        case matsTypes.PlotTypes.validtime:\n            label = \"Hour of Day\";\n            break;\n        case matsTypes.PlotTypes.reliability:\n            label = \"Reliability\";\n            break;\n        case matsTypes.PlotTypes.threshold:\n            label = \"Threshold\";\n            break;\n        case matsTypes.PlotTypes.profile:\n            var vars = new Set();\n            plotParams.curves.forEach(function(c){\n                vars.add(c.variable);\n            });\n            label = Array.from(vars).join(' - ');\n            break;\n        default:\n            label = \"Time\";\n    }\n    element.ele('x_label', label);\n\n    var y1vars = [];\n    for (var y1i=0; y1i < dependentAxes['y1'].length; y1i++) {\n        if (!y1vars.includes(dependentAxes['y1'][y1i]['variable'])) {\n            y1vars.push(dependentAxes['y1'][y1i]['variable']);\n        }\n    }\n    element.ele('y1_label', y1vars.join(','));\n    var y2vars = [];\n    for (var y2i=0; y2i < dependentAxes['y2'].length; y2i++) {\n        if (!y2vars.includes(dependentAxes['y2'][y2i]['variable'])) {\n            y2vars.push(dependentAxes['y2'][y2i]['variable']);\n        }\n    }\n    element.ele('y2_label', y2vars.join(','));\n}\n\nconst addTemplate = function(plot,templateStr)\n{\n    plot.ele('template', templateStr);\n}\n\nconst addIndepDates = function(plot, plotParams) {\n    var indep = plot.ele('indep', {'equalize': 'false', 'name': 'fcst_valid_beg'});\n    addIndepUngroupedDateElementsBetween(indep, plotParams);\n}\n\nconst addIndepLevels = function(plot, plotParams) {\n    // for profiles we use a union of all the levels available for all the data-sources\n    var indep = plot.ele('indep', {'equalize': 'false', 'name': 'fcst_lev'});\n    var curves = plotParams.curves;\n    var lvlSet = new Set(); // use a set to accumulate all the levels\n    for (var ci=0; ci<curves.length;ci++) {\n        if (curves[ci]['diffFrom']) {\n            // currrently we do not do mv differencing\n            continue;\n        }\n        const curve = curves[ci];\n        const database = curve['database'];\n        const dataSource = curve['data-source'];\n        const levelVals = matsCollections.CurveParams.findOne({name: 'data-source'})['levelsMap'][database][dataSource];\n        lvlSet.add(levelVals);\n    }\n    // only add the fcst_lev tag if there are pres-levels requested - leaving it out will get them all\n    const lvls = Array.from(lvlSet)[0];\n    for (var li=0; li<lvls.length;li++) {\n        var val = indep.ele('val',lvls[li]);\n        val.att('label',lvls[li]);\n        val.att('plot_val',\"\");\n    }\n}\n\nconst addIndepValidHours = function(plot, plotParams) {\n    // for validTimes we use a union of all the vts available for all the data-sources\n    var indep = plot.ele('indep', {'equalize': 'false', 'name': 'valid_hour'});\n    const hours = _getSortedHoursForIndepRange(plotParams);\n    for (var hi=0; hi<hours.length;hi++) {\n        var val = indep.ele('val',hours[hi]);\n        val.att('label',hours[hi]);\n        val.att('plot_val',\"\");\n    }\n}\n\nconst addIndepForecastHours = function(plot, plotParams) {\n    // for dieoffs we use a union of all the fhrs available for all the data-sources\n    var indep = plot.ele('indep', {'equalize': 'false', 'name': 'fcst_lead'});\n    var curves = plotParams.curves;\n    var leadSet = new Set(); // use a set to accumulate all the levels\n    for (var ci=0; ci<curves.length;ci++) {\n        if (curves[ci]['diffFrom']) {\n            // currrently we do not do mv differencing\n            continue;\n        }\n        const curve = curves[ci];\n        const database = curve['database'];\n        const dataSource = curve['data-source'];\n        const forecastLengths = matsCollections.CurveParams.findOne({name: 'forecast-length'})['optionsMap'][database][dataSource];\n        leadSet.add(forecastLengths);\n    }\n    const leads = Array.from(leadSet)[0];\n    for (var li=0; li<leads.length;li++) {\n        var val = indep.ele('val',leads[li]);\n        val.att('label',leads[li]);\n        val.att('plot_val',\"\");\n    }\n}\n\nconst addTmpl = function(plot, key, plotParams, dependentAxes) {\n    var tmpl = plot.ele('tmpl');\n    tmpl.ele('data_file', key + '.data');\n    tmpl.ele('plot_file', key + '.png');\n    tmpl.ele('r_file', key + '.R');\n    tmpl.ele('title', _title() + \" : \" + _plotText(plotParams) + \" \" + plotParams.plotAction);\n    _addSeriesLabels(tmpl, dependentAxes, plotParams);\n    tmpl.ele('caption');\n    tmpl.ele('job_title');\n    tmpl.ele('keep_revisions', 'false');\n    tmpl.ele('listdiffseries1', 'list()');\n    tmpl.ele('listdiffseries2', 'list()');\n}\n\nconst addPlotFix = function(plot) {\n    plot.ele('plot_fix');\n}\n\nconst addPlotCond = function(plot,plotParams)\n{\n    plot.ele('plot_cond');\n}\n\nconst addCalcStat = function(plot,statType){\n    plot.ele('calc_stat').ele(statType,true);\n} // unused for time series\n\nconst addPlotStat = function(plot,stat){\n    //Statistics --- We always do Summary with Mean - so there\n    plot.ele('plot_stat',stat);\n}\n\n\nconst addPlotCmd = function (plot){\n    plot.ele('plot_cmd');\n}\nconst addY1Lim = function(plot){\n    plot.ele('y1_lim','c()');\n}\nconst addY1Bufr = function(plot){\n    plot.ele('y1_bufr','0.04');\n}\nconst addY2Lim = function(plot) {\n    plot.ele('y2_lim','c()');\n}\n\nconst addMiscellaneous = function(plot,plotParams) {\n    plot.ele('event_equal', 'false');\n\n    const plotType = (_.invert(plotParams.plotTypes))[true];\n    switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.dailyModelCycle:\n        case matsTypes.PlotTypes.histogram:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.reliability:\n        case matsTypes.PlotTypes.threshold:\n            plot.ele('vert_plot', 'false');\n            plot.ele('x_reverse', 'false');\n            break;\n        case matsTypes.PlotTypes.profile:\n            plot.ele('vert_plot', 'true');\n            plot.ele('x_reverse', 'true');\n            break;\n        default:\n            plot.ele('vert_plot', 'false');\n            plot.ele('x_reverse', 'false');\n    }\n\n    plot.ele('num_stats', 'false');\n    plot.ele('indy1_stag', 'false');\n    plot.ele('indy2_stag', 'false');\n    plot.ele('grid_on', 'true');\n    plot.ele('sync_axes', 'false');\n    plot.ele('dump_points1', 'true');\n    plot.ele('dump_points2', 'true');\n    plot.ele('log_y1', 'false');\n    plot.ele('log_y2', 'false');\n    plot.ele('varianceinflationfactor', 'false');\n    plot.ele('plot_type', 'png16m');\n    plot.ele('plot_height', '8.5');\n    plot.ele('plot_width', '11');\n    plot.ele('plot_res', '72');\n    plot.ele('plot_units', 'in');\n    plot.ele('mar', 'c(8,4,5,4)');\n    plot.ele('mgp', 'c(1,1,0)');\n    plot.ele('cex', '1');\n    plot.ele('title_weight', '2');\n    plot.ele('title_size', '1.4');\n    plot.ele('title_offset', '-2');\n    plot.ele('title_align', '0.5');\n    plot.ele('xtlab_orient', '1');\n    plot.ele('xtlab_perp', '-0.75');\n    plot.ele('xtlab_horiz', '0.5');\n    plot.ele('xtlab_freq', '0');\n    plot.ele('xtlab_size', '1');\n    plot.ele('xlab_weight', '1');\n    plot.ele('xlab_size', '1');\n    plot.ele('xlab_offset', '2');\n    plot.ele('xlab_align', '0.5');\n    plot.ele('ytlab_orient', '1');\n    plot.ele('ytlab_perp', '0.5');\n    plot.ele('ytlab_horiz', '0.5');\n    plot.ele('ytlab_size', '1');\n    plot.ele('ylab_weight', '1');\n    plot.ele('ylab_size', '1');\n    plot.ele('ylab_offset', '-2');\n    plot.ele('ylab_align', '0.5');\n    plot.ele('grid_lty', '3');\n    plot.ele('grid_col', '#cccccc');\n    plot.ele('grid_lwd', '1');\n    plot.ele('grid_x', 'listX');\n    plot.ele('x2tlab_orient', '1');\n    plot.ele('x2tlab_perp', '1');\n    plot.ele('x2tlab_horiz', '0.5');\n    plot.ele('x2tlab_size', '0.8');\n    plot.ele('x2lab_size', '0.8');\n    plot.ele('x2lab_offset', '-0.5');\n    plot.ele('x2lab_align', '0.5');\n    plot.ele('y2tlab_orient', '1');\n    plot.ele('y2tlab_perp', '0.5');\n    plot.ele('y2tlab_horiz', '0.5');\n    plot.ele('y2tlab_size', '1');\n    plot.ele('y2lab_size', '1');\n    plot.ele('y2lab_offset', '1');\n    plot.ele('y2lab_align', '0.5');\n    plot.ele('legend_box', 'o');\n    plot.ele('legend_inset', 'c(0, -.25)');\n    plot.ele('legend_ncol', '3');\n    plot.ele('legend_size', '0.8');\n    plot.ele('caption_weight', '1');\n    plot.ele('caption_col', '#333333');\n    plot.ele('caption_size', '0.8');\n    plot.ele('caption_offset', '3');\n    plot.ele('caption_align', '0');\n    plot.ele('ci_alpha', '0.05');\n}\n\nconst endPlotSpec = function(xml) {\n    xml.end({pretty: true});\n}\n\nexport default matsPlotSpecUtils = {\n    startPlotSpec:startPlotSpec,\n    addDeps:addDeps,\n    addAnomalycorrDeps:addAnomalycorrDeps,\n    getDependentAxis:getDependentAxis,\n    addDatabaseElement:addDatabaseElement,\n    addFolders:addFolders,\n    addPlotCi:addPlotCi,\n    addShowSignif:addShowSignif,\n    addPlotDisp:addPlotDisp,\n    addColors:addColors,\n    addPch:addPch,\n    addType:addType,\n    addLty:addLty,\n    addLwd:addLwd,\n    addConSeries:addConSeries,\n    addOrderSeries:addOrderSeries,\n    addLegend:addLegend,\n    addSeries:addSeries,\n    addTemplate:addTemplate,\n    addIndepDates:addIndepDates,\n    addTmpl:addTmpl,\n    addPlotFix:addPlotFix,\n    addPlotCond:addPlotCond,\n    addCalcStat:addCalcStat,\n    addPlotStat:addPlotStat,\n    addPlotCmd:addPlotCmd,\n    addY1Lim:addY1Lim,\n    addY1Bufr:addY1Bufr,\n    addY2Lim:addY2Lim,\n    addMiscellaneous:addMiscellaneous,\n    endPlotSpec:endPlotSpec,\n    addIndepLevels:addIndepLevels,\n    addIndepForecastHours:addIndepForecastHours,\n    addIndepValidHours:addIndepValidHours\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/31/16.\n */\nimport './publications.js';\nimport './data_util.js';\nimport './data_query_util.js';\nimport './data_diff_util.js';\nimport './data_match_util.js';\nimport './data_curve_ops_util.js';\nimport './data_plot_ops_util.js';\nimport './data_process_util.js';\nimport './plot_spec_util.js';\nimport './cache.js';\nimport '../both';\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport {matsCollections} from 'meteor/randyp:mats-common';\n\nif (Meteor.isServer) {\n    Meteor.publish(\"CurveParams\", function () {\n        var data = matsCollections.CurveParams.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"CurveTextPatterns\", function () {\n        var data = matsCollections.CurveTextPatterns.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"ScatterAxisTextPattern\", function () {\n        var data = matsCollections.ScatterAxisTextPattern.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"SavedCurveParams\", function () {\n        var data = matsCollections.SavedCurveParams.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"PlotParams\", function () {\n        var data = matsCollections.PlotParams.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"Scatter2dParams\", function () {\n        var data = matsCollections.Scatter2dParams.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"PlotGraphFunctions\", function () {\n        var data = matsCollections.PlotGraphFunctions.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"RegionsPerModel\", function () {\n        var data = matsCollections.RegionsPerModel.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"SitesPerModel\", function () {\n        var data = matsCollections.SitesPerModel.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"RegionDescriptions\", function () {\n        var data = matsCollections.RegionDescriptions.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"Models\", function () {\n        var data = matsCollections.Models.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"FcstLensPerModel\", function () {\n        var data = matsCollections.FcstLensPerModel.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"ColorScheme\", function () {\n        var data = matsCollections.ColorScheme.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"Settings\", function () {\n        var data = matsCollections.Settings.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"CurveSettings\", function () {\n        var data = matsCollections.CurveSettings.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"SentAddresses\", function () {\n        var data = matsCollections.SentAddresses.find({userId: this.userId});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n// do not publish roles\n// Meteor.publish(\"Roles\", function () {\n//     var data = matsCollections.Roles.find({});\n//     if (data) {\n//         return data;\n//     }\n//     return this.ready();\n// });\n\n// do not publish Authorization\n// Meteor.publish(\"Authorization\", function () {\n//     var data = matsCollections.Authorization.find({});\n//     if (data) {\n//         return data;\n//     }\n//     return this.ready();\n// });\n\n// do not publish credentials\n// Meteor.publish(\"Credentials\", function () {\n//     var data = matsCollections.Credentials.find({});\n//     if (data) {\n//         return data;\n//     }\n//     return this.ready();\n// });\n\n//do not publish databases\n// Meteor.publish(\"Databases\", function () {\n//     var data = matsCollections.Databases.find({});\n//     if (data) {\n//         return data;\n//     }\n//     return this.ready();\n// });\n    Meteor.publish(\"SiteMap\", function () {\n        var data = matsCollections.SiteMap.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"StationMap\", function () {\n        var data = matsCollections.StationMap.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"appName\", function () {\n        var data = matsCollections.appName.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {Meteor} from \"meteor/meteor\";\nimport {matsCollections} from 'meteor/randyp:mats-common';\nif (Meteor.isServer) {\n    const Results = require('node-file-cache').create({file:'fileCache', life: 8 * 3600});\n    var getResult = function (key) {\n        //console.log('asked to get result from cache for key:', key);\n        var result = Results.get(key);\n        return result === null ? undefined : result;\n    }\n    var storeResult = function (key, result) {\n        //console.log('asked to set result in cache for app: ',process.env.PWD, ' key:', key);\n        Results.set(key, result);\n        //console.log('set result in cache for app: ', process.env.PWD, 'key:', key);\n    }\n    var clear = function () {\n        //console.log('asked to clear result cache');\n        Results.clear();\n    }\n    var expireKey = function(key) {\n        //console.log('asked to clear result cache for key ', key);\n        Results.expire(key);\n    }\n}\n\n\nexport default\n    matsCache = {\n        getResult: getResult,\n        storeResult: storeResult,\n        clear: clear,\n        expireKey: expireKey\n    }\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n    var gaussianElimination = function(a, o) {\n           var i = 0, j = 0, k = 0, maxrow = 0, tmp = 0, n = a.length - 1, x = new Array(o);\n           for (i = 0; i < n; i++) {\n              maxrow = i;\n              for (j = i + 1; j < n; j++) {\n                 if (Math.abs(a[i][j]) > Math.abs(a[i][maxrow]))\n                    maxrow = j;\n              }\n              for (k = i; k < n + 1; k++) {\n                 tmp = a[k][i];\n                 a[k][i] = a[k][maxrow];\n                 a[k][maxrow] = tmp;\n              }\n              for (j = i + 1; j < n; j++) {\n                 for (k = n; k >= i; k--) {\n                    a[k][j] -= a[k][i] * a[i][j] / a[i][i];\n                 }\n              }\n           }\n           for (j = n - 1; j >= 0; j--) {\n              tmp = 0;\n              for (k = j + 1; k < n; k++)\n                 tmp += a[k][j] * x[k];\n              x[j] = (a[n][j] - tmp) / a[j][j];\n           }\n           return (x);\n    };\n\n    var methods = {\n            linear: function(data) {\n                var sum = [0, 0, 0, 0, 0], n = 0, results = [];\n\n                for (; n < data.length; n++) {\n                  if (data[n][1] != null) {\n                    sum[0] += data[n][0];\n                    sum[1] += data[n][1];\n                    sum[2] += data[n][0] * data[n][0];\n                    sum[3] += data[n][0] * data[n][1];\n                    sum[4] += data[n][1] * data[n][1];\n                  }\n                }\n\n                var gradient = (n * sum[3] - sum[0] * sum[1]) / (n * sum[2] - sum[0] * sum[0]);\n                var intercept = (sum[1] / n) - (gradient * sum[0]) / n;\n              //  var correlation = (n * sum[3] - sum[0] * sum[1]) / Math.sqrt((n * sum[2] - sum[0] * sum[0]) * (n * sum[4] - sum[1] * sum[1]));\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], data[i][0] * gradient + intercept];\n                    results.push(coordinate);\n                }\n\n                var string = 'y = ' + Math.round(gradient*100) / 100 + 'x + ' + Math.round(intercept*100) / 100;\n\n                return {equation: [gradient, intercept], points: results, string: string};\n            },\n\n            linearThroughOrigin: function(data) {\n                var sum = [0, 0], n = 0, results = [];\n\n                for (; n < data.length; n++) {\n                    if (data[n][1] != null) {\n                        sum[0] += data[n][0] * data[n][0]; //sumSqX\n                        sum[1] += data[n][0] * data[n][1]; //sumXY\n                    }\n                }\n\n                var gradient = sum[1] / sum[0];\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], data[i][0] * gradient];\n                    results.push(coordinate);\n                }\n\n                var string = 'y = ' + Math.round(gradient*100) / 100 + 'x';\n\n                return {equation: [gradient], points: results, string: string};\n            },\n\n            exponential: function(data) {\n                var sum = [0, 0, 0, 0, 0, 0], n = 0, results = [];\n\n                for (len = data.length; n < len; n++) {\n                  if (data[n][1] != null) {\n                    sum[0] += data[n][0];\n                    sum[1] += data[n][1];\n                    sum[2] += data[n][0] * data[n][0] * data[n][1];\n                    sum[3] += data[n][1] * Math.log(data[n][1]);\n                    sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n                    sum[5] += data[n][0] * data[n][1];\n                  }\n                }\n\n                var denominator = (sum[1] * sum[2] - sum[5] * sum[5]);\n                var A = Math.pow(Math.E, (sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n                var B = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], A * Math.pow(Math.E, B * data[i][0])];\n                    results.push(coordinate);\n                }\n\n                var string = 'y = ' + Math.round(A*100) / 100 + 'e^(' + Math.round(B*100) / 100 + 'x)';\n\n                return {equation: [A, B], points: results, string: string};\n            },\n\n            logarithmic: function(data) {\n                var sum = [0, 0, 0, 0], n = 0, results = [];\n\n                for (len = data.length; n < len; n++) {\n                  if (data[n][1] != null) {\n                    sum[0] += Math.log(data[n][0]);\n                    sum[1] += data[n][1] * Math.log(data[n][0]);\n                    sum[2] += data[n][1];\n                    sum[3] += Math.pow(Math.log(data[n][0]), 2);\n                  }\n                }\n\n                var B = (n * sum[1] - sum[2] * sum[0]) / (n * sum[3] - sum[0] * sum[0]);\n                var A = (sum[2] - B * sum[0]) / n;\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], A + B * Math.log(data[i][0])];\n                    results.push(coordinate);\n                }\n\n                var string = 'y = ' + Math.round(A*100) / 100 + ' + ' + Math.round(B*100) / 100 + ' ln(x)';\n\n                return {equation: [A, B], points: results, string: string};\n            },\n\n            power: function(data) {\n                var sum = [0, 0, 0, 0], n = 0, results = [];\n\n                for (len = data.length; n < len; n++) {\n                  if (data[n][1] != null) {\n                    sum[0] += Math.log(data[n][0]);\n                    sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n                    sum[2] += Math.log(data[n][1]);\n                    sum[3] += Math.pow(Math.log(data[n][0]), 2);\n                  }\n                }\n\n                var B = (n * sum[1] - sum[2] * sum[0]) / (n * sum[3] - sum[0] * sum[0]);\n                var A = Math.pow(Math.E, (sum[2] - B * sum[0]) / n);\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], A * Math.pow(data[i][0] , B)];\n                    results.push(coordinate);\n                }\n\n                 var string = 'y = ' + Math.round(A*100) / 100 + 'x^' + Math.round(B*100) / 100;\n\n                return {equation: [A, B], points: results, string: string};\n            },\n\n            polynomial: function(data, order) {\n                if(typeof order == 'undefined'){\n                    order = 2;\n                }\n                 var lhs = [], rhs = [], results = [], a = 0, b = 0, i = 0, k = order + 1;\n\n                        for (; i < k; i++) {\n                           for (var l = 0, len = data.length; l < len; l++) {\n                              if (data[l][1] != null) {\n                               a += Math.pow(data[l][0], i) * data[l][1];\n                              }\n                            }\n                            lhs.push(a), a = 0;\n                            var c = [];\n                            for (var j = 0; j < k; j++) {\n                               for (var l = 0, len = data.length; l < len; l++) {\n                                  if (data[l][1] != null) {\n                                   b += Math.pow(data[l][0], i + j);\n                                  }\n                                }\n                                c.push(b), b = 0;\n                            }\n                            rhs.push(c);\n                        }\n                rhs.push(lhs);\n\n               var equation = gaussianElimination(rhs, k);\n\n                    for (var i = 0, len = data.length; i < len; i++) {\n                        var answer = 0;\n                        for (var w = 0; w < equation.length; w++) {\n                            answer += equation[w] * Math.pow(data[i][0], w);\n                        }\n                        results.push([data[i][0], answer]);\n                    }\n\n                    var string = 'y = ';\n\n                    for(var i = equation.length-1; i >= 0; i--){\n                      if(i > 1) string += Math.round(equation[i] * Math.pow(10, i)) / Math.pow(10, i)  + 'x^' + i + ' + ';\n                      else if (i == 1) string += Math.round(equation[i]*100) / 100 + 'x' + ' + ';\n                      else string += Math.round(equation[i]*100) / 100;\n                    }\n\n                return {equation: equation, points: results, string: string};\n            },\n\n            lastvalue: function(data) {\n              var results = [];\n              var lastvalue = null;\n              for (var i = 0; i < data.length; i++) {\n                if (data[i][1]) {\n                  lastvalue = data[i][1];\n                  results.push([data[i][0], data[i][1]]);\n                }\n                else {\n                  results.push([data[i][0], lastvalue]);\n                }\n              }\n\n              return {equation: [lastvalue], points: results, string: \"\" + lastvalue};\n            }\n        };\n\n    export default  regression = function(method, data, order) {\n       if (typeof method == 'string') {\n           return methods[method](data, order);\n       }\n    };\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsCurveUtils} from 'meteor/randyp:mats-common';\nimport {matsPlotUtils} from 'meteor/randyp:mats-common';\nimport {moment} from 'meteor/momentjs:moment'\n\n// get the document id for the control button element that corresponds to the param name\nconst getControlButtonIdForParamName = function (paramName) {\n    // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n    const pname = paramName.replace(/^.axis-/, '');\n    const param = matsCollections.CurveParams.findOne({name: pname});\n    if (param !== undefined) {\n        const id = \"controlButton-\" + param.name;\n        return id;\n    }\n};\n\n// get the control Button Element that corresponds to the param name\nconst getControlElementForParamName = function (paramName) {\n    // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n    const pname = paramName.replace(/^.axis-/, '');\n    return document.getElementById(getControlButtonIdForParamName(pname));\n};\n\n// get the document element that corresponds to the param name\nconst getValueElementForParamName = function (paramName) {\n    // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n    const pname = paramName.replace(/^.axis-/, '');\n    const val = getValueIdForParamName(pname);\n    return document.getElementById(val);\n};\n\n// get the current selected value in the document element that corresponds to the param name\n// Note that the value should be reflected in the adjoining control button value textContent.\nconst getValueForParamName = function (paramName) {\n    try {\n        const elem = getValueElementForParamName(paramName);\n        return getValueElementForParamName(paramName).textContent.trim();\n    } catch (error) {\n        return undefined;\n    }\n};\n\n// get the VALUE BOX id for the element that corresponds to the param name\nconst getValueIdForParamName = function (paramName) {\n    // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n    const pname = paramName.replace(/^.axis-/, '');\n    return \"controlButton-\" + pname + \"-value\";\n};\n\n// set the VALUE BOX text for the element that corresponds to the param name\nconst setValueTextForParamName = function (paramName, text) {\n    try {\n        var text = text;\n        var param = matsCollections.CurveParams.findOne({name: paramName});\n        if (param === undefined) {\n            param = matsCollections.PlotParams.findOne({name: paramName});\n        }\n        if (param === undefined) {\n            return;\n        }\n        if (text === undefined) {\n            if (param.multiple) {\n                // .... if multi selected  get the first .. last\n                const selection = getInputElementForParamName(paramName).selectedOptions;\n                if (selection.length == 0) {\n                    text = \"\";\n                } else if (selection.length == 1) {\n                    text = selection[0].textContent;\n                } else {\n                    text = selection[0].textContent + \" .. \" + selection[selection.length - 1].textContent;\n                }\n            }\n        }\n        const elem = getValueElementForParamName(paramName);\n        if (elem.textContent !== text) {\n            elem.textContent = text;\n        }\n    } catch (error) {\n        console.log(\"Error: could not find param: \" + paramName);\n    }\n};\n\n// get the document id for the element that corresponds to the param name\nconst getInputIdForParamName = function (paramName) {\n    // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n    const pname = paramName.replace(/^.axis-/, '');\n    var param = matsCollections.CurveParams.findOne({name: pname});\n    if (param === undefined) {\n        param = matsCollections.PlotParams.findOne({name: pname});\n    }\n    if (param === undefined) {\n        param = matsCollections.Scatter2dParams.findOne({name: pname});\n        if (param === undefined) {\n            return undefined;\n        }\n    }\n    if (param.type === matsTypes.InputTypes.dateRange) {\n        return (\"element-\" + param.name).replace(/ /g, '-');\n    } else {\n        return (param.name + \"-\" + param.type).replace(/ /g, '-');\n    }\n};\n\n\n// get the parameter for the element that corresponds to the param name\nconst getParameterForName = function (paramName) {\n    // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n    const pname = paramName.replace(/^.axis-/, '');\n\n    var param = matsCollections.CurveParams.findOne({name: pname});\n    if (param === undefined) {\n        param = matsCollections.PlotParams.findOne({name: pname});\n    }\n    if (param === undefined) {\n        param = matsCollections.Scatter2dParams.findOne({name: pname});\n        if (param === undefined) {\n            return undefined;\n        }\n    }\n    return (param);\n};\n\n// get the document element that corresponds to the param name\nconst getInputElementForParamName = function (paramName) {\n    const name = paramName.replace(/^.axis-/, '');\n    const id = getInputIdForParamName(name);\n    if (id === undefined) {\n        return undefined;\n    }\n    return document.getElementById(id);\n};\n\n// get a param disabledOptions list - if any.\nconst getDisabledOptionsForParamName = function (paramName) {\n    const name = paramName.replace(/^.axis-/, '');\n    const id = getInputIdForParamName(name);\n    if (id === undefined) {\n        return undefined;\n    }\n    const param = getParameterForName(name);\n    if (!param) {\n        return undefined;\n    }\n    return param.disabledOptions;\n};\n\n// set the input for the element that corresponds to the param name\n// also sets a data-mats-currentValue attribute\nconst setInputForParamName = function (paramName, value) {\n    const param = getParameterForName(paramName);\n    const id = getInputIdForParamName(paramName);\n    const idSelectorStr = \"#\" + id;\n    const idSelector = $(idSelectorStr);\n\n    // SHOULD DEAL WITH CHECKBOXES HERE\n    if (param.type === matsTypes.InputTypes.radioGroup) {\n        $(\"#\" + id + \"-\" + value).prop(\"checked\", true);\n    } else {\n        idSelector.val(value);\n        setValueTextForParamName(paramName, value);\n    }\n};\n\nconst getElementValues = function () {\n    const data = {\n        curveParams: {},\n        plotParams: {},\n        scatterParams: {}\n    };\n    const axis = ['xaxis-', 'yaxis-'];\n    var params = matsCollections.CurveParams.find({}).fetch();\n    params.forEach(function (param) {\n        var val = \"\";\n        if (param.type === matsTypes.InputTypes.radioGroup) {\n            var selector = \"input:radio[name='\" + param.name + \"']:checked\";\n            val = $(selector).val()\n        } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n            var selector = \"input[name='\" + param.name + \"']:checked\";\n            val = $(selector).map(function (_, el) {\n                return $(el).val();\n            }).get();\n        } else if (param.type === matsTypes.InputTypes.dateRange) {\n            val = getValueForParamName(param.name);\n        } else {\n            var idSelect = '#' + getInputIdForParamName(param.name);\n            val = $(idSelect).val();\n        }\n        data.curveParams[param.name] = val;\n        if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n            for (var a = 0; a < axis.length; a++) {\n                const axisStr = axis[a];\n                const name = axisStr + param.name;\n                var val = \"\";\n                if (param.type === matsTypes.InputTypes.radioGroup) {\n                    var selector = \"input:radio[name='\" + name + \"']:checked\";\n                    val = $(selector).val()\n                } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n                    var selector = \"input[name='\" + name + \"']:checked\";\n                    val = $(selector).map(function (_, el) {\n                        return $(el).val();\n                    }).get();\n                } else {\n                    var idSelect = '#' + getInputIdForParamName(name);\n                    val = $(idSelect).val();\n                }\n                data.curveParams[name] = val;\n            }\n        }\n    });\n\n    params = matsCollections.PlotParams.find({}).fetch();\n    params.forEach(function (param) {\n        var val = \"\";\n        if (param.type === matsTypes.InputTypes.radioGroup) {\n            var selector = \"input:radio[name='\" + param.name + \"']:checked\";\n            val = $(selector).val()\n        } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n            var selector = \"input[name='\" + param.name + \"']:checked\";\n            val = $(selector).map(function (_, el) {\n                return $(el).val();\n            }).get();\n        } else {\n            var idSelect = '#' + getInputIdForParamName(param.name);\n            val = $(idSelect).val();\n        }\n        data.plotParams[param.name] = val;\n    });\n\n    params = matsCollections.Scatter2dParams.find({}).fetch();\n    params.forEach(function (param) {\n        var val = \"\";\n        if (param.type === matsTypes.InputTypes.radioGroup) {\n            var selector = \"input:radio[name='\" + param.name + \"']:checked\";\n            val = $(selector).val()\n        } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n            var selector = \"input[name='\" + param.name + \"']:checked\";\n            val = $(selector).map(function (_, el) {\n                return $(el).val();\n            }).get();\n        } else {\n            var idSelect = '#' + getInputIdForParamName(param.name);\n            val = $(idSelect).val();\n        }\n        data.scatterParams[param.name] = val;\n        if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n            for (var a = 0; a < axis.length; a++) {\n                var axisStr = axis[a];\n                var name = axisStr + param.name;\n                var val = \"\";\n                if (param.type === matsTypes.InputTypes.radioGroup) {\n                    var selector = \"input:radio[name='\" + name + \"']:checked\";\n                    val = $(selector).val()\n                } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n                    var selector = \"input[name='\" + name + \"']:checked\";\n                    val = $(selector).map(function (_, el) {\n                        return $(el).val();\n                    }).get();\n                } else {\n                    var idSelect = '#' + getInputIdForParamName(name);\n                    val = $(idSelect).val();\n                }\n                data.scatterParams[name] = val;\n            }\n        }\n    });\n    return data;\n};\n\nconst expandParams = function () {\n    const params = matsCollections.CurveParams.find({}).fetch();\n    params.forEach(function (param) {\n        if (param.type !== matsTypes.InputTypes.selectMap) {\n            const selector = \"element\" + \"-\" + param.name;\n            const elem = document.getElementById(selector);\n            if (elem) {\n                elem.style.display = \"block\";\n                const dataElem = document.getElementById(param.name + \"-\" + param.type);\n                if (dataElem && dataElem.options && dataElem.selectedIndex >= 0) {\n                    dataElem.options[dataElem.selectedIndex].scrollIntoView();\n                }\n            }\n        }\n    });\n};\n\nconst collapseParams = function () {\n    const params = matsCollections.CurveParams.find({}).fetch();\n    params.forEach(function (param) {\n        if (param.type !== matsTypes.InputTypes.selectMap) {\n            const selector = \"element\" + \"-\" + param.name;\n            if (document.getElementById(selector)) {\n                document.getElementById(selector).style.display = \"none\";\n            }\n        }\n    });\n};\n\nconst collapseParam = function (paramName) {\n    const param = matsCollections.CurveParams.findOne({name: paramName});\n    if (param === undefined || param === null) {\n        return;\n    }\n    if (param.type !== matsTypes.InputTypes.selectMap) {\n        const selector = \"element\" + \"-\" + param.name;\n        if (document.getElementById(selector)) {\n            document.getElementById(selector).style.display = \"none\";\n        }\n    }\n};\n\nconst typeSort = function (arr) {\n    if (arr === undefined) {\n        return undefined;\n    }\n    return arr.sort(function (a, b) {\n        if (isNaN(Number(a) && isNaN(Number(b)))) { // string compare\n            const A = a.toLowerCase();\n            const B = b.toLowerCase();\n            if (A < B) {\n                return -1;\n            } else if (A > B) {\n                return 1;\n            } else {\n                return 0;\n            }\n        } else if (isNaN(Number(a) || isNaN(Number(b)))) {   // number always precedes\n            if (isNaN(Number(a))) {\n                return 1;\n            } else {\n                return -1\n            }\n        } else {\n            return a - b;  // numerical compare\n        }\n    });\n};\n\nconst setDefaultForParamName = function (param) {\n    const paramName = param.name;\n    const type = param.type;\n    const defaultValue = param.default;\n    if (paramName == 'label') {\n        setInputForParamName(paramName, Session.get('NextCurveLabel'));\n    } else {\n        if (defaultValue != \"undefined\") {\n            if (type === matsTypes.InputTypes.select && (defaultValue === -1 || defaultValue === undefined || defaultValue === matsTypes.InputTypes.unused)) {\n                setInputForParamName(paramName, matsTypes.InputTypes.unused);\n            }\n            else {\n                setInputForParamName(paramName, defaultValue);\n            }\n        }\n    }\n};\n\nconst getDefaultDateRange = function(name) {\n    var dateParam = matsCollections.CurveParams.findOne({name: name});\n    if (dateParam === undefined) {\n        dateParam = matsCollections.PlotParams.findOne({name: name});\n    }\n    const startInit = dateParam.startDate;\n    const stopInit = dateParam.stopDate;\n    const dstr = dateParam.default;\n    return {startDate:startInit,stopDate:stopInit,dstr:dstr};\n};\n\nconst getMinMaxDates = function(minDate, maxDate) {\n    var minMoment = moment(minDate,\"MM/DD/YYYY HH:mm\");\n    var maxMoment = moment(maxDate, \"MM/DD/YYYY HH:mm\");\n    if (maxMoment.diff(minMoment, 'days') > 30) {\n        minDate = moment(maxMoment.subtract(30, 'days')).format(\"MM/DD/YYYY HH:mm\");\n    }\n    return {minDate:minDate,maxDate:maxDate};\n};\n\nconst setAllParamsToDefault = function () {\n    // default the superiors and refresh them so that they cause the dependent options to refresh\n    var params = matsCollections.CurveParams.find({}).fetch();\n\n    const superiors = matsCollections.CurveParams.find({\"dependentNames\": {\"$exists\": true}}).fetch();\n    superiors.forEach(function (param) {\n        setDefaultForParamName(param);\n        // actually call the refresh directly - don't use an event, because we want this all to be synchronous\n        matsSelectUtils.refresh(null, param.name);\n        // remove from params list - actually rewrite params list NOT with this param\n        params = params.filter(function (obj) {\n            return obj.name !== param.name;\n        });\n    });\n    // refresh all the non superiors to their default values\n    const nonDependents = matsCollections.CurveParams.find({\"superiorNames\": {\"$exists\": true}}).fetch();\n    nonDependents.forEach(function (param) {\n        setDefaultForParamName(param);\n        if (param.type === matsTypes.InputTypes.dateRange) {\n            const dstr = getDefaultDateRange(param.name).dstr;\n            setValueTextForParamName(param.name, dstr);\n        } else {\n            matsSelectUtils.refresh(null, param.name);\n            // remove from params list - actually rewrite params list NOT with this param\n            params = params.filter(function (obj) {\n                return obj.name !== param.name;\n            });\n        }\n    });\n    // reset everything else\n    params.forEach(function (param) {\n        if (param.type === matsTypes.InputTypes.dateRange) {\n            const dstr = getDefaultDateRange(param.name).dstr;\n            setValueTextForParamName(param.name, dstr);\n        } else if (param.type === matsTypes.InputTypes.selectMap) {\n            const targetId = param.name + '-' + param.type;\n            const targetElem = document.getElementById(targetId);\n            const resetMapEvent = new CustomEvent(\"reset\", {\n                detail: {\n                    refElement: null\n                }\n            });\n            targetElem.dispatchEvent(resetMapEvent);\n        } else {\n            setDefaultForParamName(param);\n        }\n    });\n    matsCollections.PlotParams.find({}).fetch().forEach(function (param) {\n        if (param.type === matsTypes.InputTypes.dateRange) {\n            const dstr = getDefaultDateRange(param.name).dstr;\n            setValueTextForParamName(param.name, dstr);\n        } else {\n            setDefaultForParamName(param);\n        }\n    });\n\n};\n// is the input element displaying? used by curve_param_item_group\nconst isInputElementVisible = function (paramName) {\n    const name = paramName.replace(/^.axis-/, ''); // need to acount for scatter plots params\n    const inputElement = getInputElementForParamName(name);\n    return $(inputElement).is(':visible');\n};\n\n// is the input element displaying? used by curve_param_item_group\nconst isParamVisible = function (paramName) {\n    const name = paramName.replace(/^.axis-/, ''); // need to acount for scatter plots params\n    const paramRef = \"#\" + name + \"-item\";\n    return $(paramRef).is(':visible');\n};\n\n// is the input element displaying? used by curve_param_item_group\nconst isControlButtonVisible = function (paramName) {\n    const name = paramName.replace(/^.axis-/, ''); // need to acount for scatter plots params\n    const paramRef = \"#controlButton-\" + name;\n    return $(paramRef).is(':visible');\n};\n\nconst setInputValueForParamAndtriggerChange = function (paramName, value) {\n    const elem = getInputElementForParamName(paramName);\n    elem.value = value;\n    setValueTextForParamName(paramName, elem.value);\n    $(elem).trigger('change');\n};\n\nconst getOptionsMapForParam = function (paramName) {\n    const param = matsCollections.CurveParams.findOne({name: paramName});\n    return param.optionsMap;\n};\n\nconst getOptionsForParam = function (paramName) {\n    const param = matsCollections.CurveParams.findOne({name: paramName});\n    return param.options;\n};\n\nconst getAppName = function () {\n    const app = matsCollections.appName.findOne({}).app;\n    return app;\n};\n\nconst getCurveItemValueForParamName = function (curveNumber, paramName) {\n    //MODEL-curve-0-Item\n//    const id = paramName.toString().toUpperCase() + \"-curve-\" + curveNumber + \"-Item\"; // the id of the text span for a curveItem\n//    return text = ‌‌document.getElementById(id).innerText;\n    // const elem = $(\"#\" + id);\n    // var text = undefined;\n    // if (elem) {\n    //     text = elem.text();\n    // }\n};\nconst visibilityControllerForParam = function (paramName) {\n    /*\n    Need to iterate all the params looking for one that has this paramName as a key in its\n    hideOtherFor map.\n    If it exists, that param is returned. Otherwise return undefined.\n     */\n    var params = matsCollections.CurveParams.find({}).fetch();\n    var found = undefined;\n    params.some(function (param) {\n        if (param.hideOtherFor) {\n            const pKeys = Object.keys(param.hideOtherFor);\n            if (pKeys.indexOf(paramName) !== -1) {\n                found = param;\n                return;\n            }\n        }\n    });\n    return found;\n}\n\nexport default matsParamUtils = {\n    getDisabledOptionsForParamName: getDisabledOptionsForParamName,\n    getControlButtonIdForParamName: getControlButtonIdForParamName,\n    getControlElementForParamName: getControlElementForParamName,\n    getValueElementForParamName: getValueElementForParamName,\n    getValueForParamName: getValueForParamName,\n    setValueTextForParamName: setValueTextForParamName,\n    getValueIdForParamName: getValueIdForParamName,\n    getInputIdForParamName: getInputIdForParamName,\n    getInputElementForParamName: getInputElementForParamName,\n    getElementValues: getElementValues,\n    setInputForParamName: setInputForParamName,\n    expandParams: expandParams,\n    collapseParams: collapseParams,\n    collapseParam: collapseParam,\n    getParameterForName: getParameterForName,\n    setDefaultForParamName: setDefaultForParamName,\n    setAllParamsToDefault: setAllParamsToDefault,\n    typeSort: typeSort,\n    isInputElementVisible: isInputElementVisible,\n    isParamVisible: isParamVisible,\n    isControlButtonVisible: isControlButtonVisible,\n    setInputValueForParamAndtriggerChange: setInputValueForParamAndtriggerChange,\n    getOptionsForParam: getOptionsForParam,\n    getOptionsMapForParam: getOptionsMapForParam,\n    getCurveItemValueForParamName: getCurveItemValueForParamName,\n    visibilityControllerForParam: visibilityControllerForParam,\n    getAppName: getAppName,\n    getDefaultDateRange:getDefaultDateRange,\n    getMinMaxDates:getMinMaxDates\n};","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsParamUtils} from 'meteor/randyp:mats-common';\nimport {matsTypes} from 'meteor/randyp:mats-common';\n\n// determine the axisText (used in scatter_axis.js for example)\n// according to the Scatter Axis Text Patterns Pattern defined in\n// ScatterAxisTextPatterns according to plotType - and derived from\n// currently selected inputs in the document.\nconst getAxisText = function (plotType) {\n    var scatterAxisTextPattern = matsCollections.ScatterAxisTextPattern.findOne({plotType: getPlotType()});\n    var textPattern = scatterAxisTextPattern ? matsCollections.ScatterAxisTextPattern.findOne({plotType: getPlotType()}).textPattern : undefined;\n    if (scatterAxisTextPattern === undefined) {\n        return \"\";\n    }\n    var text = \"\";\n    for (var i = 0; i < scatterAxisTextPattern.length; i++) {\n        var pName = scatterAxisTextPattern[i][0];\n        var delimiter = scatterAxisTextPattern[i][1];\n        var value = matsParamUtils.getValueForParamName(pName);\n        text += value += delimiter;\n    }\n    return text;\n};\n\n// determine the curveText (used in curveItem for example) for a given curve (from Session.get('curves'))\n// that has already been added\nconst getCurveText = function (plotType, curve) {\n    var curveTextPattern = matsCollections.CurveTextPatterns.findOne({plotType: plotType}).textPattern;\n    var text = \"\";\n\n    for (var i = 0; i < curveTextPattern.length; i++) {\n        var a = curveTextPattern[i];\n        if (a === undefined || a === null || curve[a[1]] === undefined) {\n            continue;\n        }\n        text += a[0];\n        if (curve[a[1]] instanceof Array && (curve[a[1]].length > 2)) {\n            text += curve[a[1]][0] + \"..\" + curve[a[1]][curve[a[1]].length - 1];\n        } else {\n            text += curve[a[1]];\n        }\n        text += a[2];\n    }\n    return text;\n};\n\n// determine which plotType radio button is checked\nconst getPlotType = function () {\n    var buttons = document.getElementsByName('plot-type');\n    for (var i = 0, len = buttons.length; i < len; i++) {\n        if (buttons[i].checked) {\n            return buttons[i].value;\n        }\n    }\n    return \"\";    // error condition actually - shouldn't ever happen\n};\n\n// determine which plotFormat radio button is checked\nconst getPlotFormat = function () {\n    var buttons = document.getElementsByName('plotFormat');\n    if (buttons === undefined) {\n        return \"\"; // app may not have plotFormat?\n    }\n    var plotFormatParam = matsCollections.PlotParams.findOne({name: 'plotFormat'});\n    if (plotFormatParam === undefined) {\n        return \"\"; // app may not have plotFormat?\n    }\n    var optionsMap = plotFormatParam.optionsMap;\n    for (var i = 0, len = buttons.length; i < len; i++) {\n        if (buttons[i].checked) {\n            return buttons[i].value;\n        }\n    }\n    return \"\";  // error condition actually - shouldn't ever happen\n};\n\n// Determine which BestFit radio button is checked\nconst getBestFit = function () {\n    var buttons = document.getElementsByName('Fit Type');\n    var optionsMap = matsCollections.PlotParams.findOne({name: 'bestFit'}).optionsMap;\n    for (var i = 0, len = buttons.length; i < len; i++) {\n        if (buttons[i].checked) {\n            return buttons[i].value;\n        }\n    }\n    return \"\";  // error condition actually - shouldn't ever happen\n};\n\nconst containsPoint = function (pointArray, point) {\n    var lat = point[0];\n    var lon = point[1];\n    for (var i = 0; i < pointArray.length; i++) {\n        var pLat = pointArray[i][0];\n        var pLon = pointArray[i][1];\n        if (lat === pLat && lon === pLon) {\n            return true\n        }\n    }\n    return false;\n};\n\n// disable the action buttons while the query and plot routines are processing, then re-enable them afterwards\nconst disableActionButtons = function () {\n    document.getElementById('plotMatched').disabled = true;\n    document.getElementById('plotUnmatched').disabled = true;\n    document.getElementById('add').disabled = true;\n    document.getElementById('remove-all').disabled = true;\n};\nconst enableActionButtons = function () {\n    document.getElementById('plotMatched').disabled = false;\n    document.getElementById('plotUnmatched').disabled = false;\n    document.getElementById('add').disabled = false;\n    document.getElementById('remove-all').disabled = false;\n};\n\nexport default matsPlotUtils = {\n    getAxisText: getAxisText,\n    getCurveText: getCurveText,\n    getPlotType: getPlotType,\n    getPlotFormat: getPlotFormat,\n    getBestFit: getBestFit,\n    containsPoint: containsPoint,\n    disableActionButtons: disableActionButtons,\n    enableActionButtons: enableActionButtons\n};","\n/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/*\ngeneric Math Functions\n */\nvar isNum = function (args)\n{\n    if (args == null || args == undefined) {\n        return false;\n    }\n    args = args.toString();\n    if (args.length == 0) return false;\n\n    for (var i = 0;  i<args.length;  i++)\n    {\n        if ((args.substring(i,i+1) < \"0\" || args.substring(i, i+1) > \"9\") && args.substring(i, i+1) != \".\"&& args.substring(i, i+1) != \"-\")\n        {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nvar mean = function (arr)\n{\n    var len = 0;\n    var sum = 0;\n\n    for(var i=0;i<arr.length;i++)\n    {\n        if (arr[i] == \"\"){}\n        else if (!isNum(arr[i]))\n        {\n            //alert(arr[i] + \" is not number!\");\n            console.log(\"Error: value at position: \" + i + \" is not number! Mean Calculation failed!\" );\n            return 0;\n        }\n        else\n        {\n            len = len + 1;\n            sum = sum + parseFloat(arr[i]);\n        }\n    }\n    return sum / len;\n};\n\nvar variance = function (arr)\n{\n    var len = 0;\n    var sum=0;\n    for(var i=0;i<arr.length;i++)\n    {\n        if (arr[i] == \"\"){}\n        else if (!isNum(arr[i]))\n        {\n            //alert(arr[i] + \" is not number, Variance Calculation failed!\");\n            console.log (\"value at position \" + i + \" is not number, Variance Calculation failed!\");\n            return 0;\n        }\n        else\n        {\n            len = len + 1;\n            sum = sum + parseFloat(arr[i]);\n        }\n    }\n\n    var v = 0;\n    if (len > 1)\n    {\n        var mean = sum / len;\n        for(var i=0;i<arr.length;i++)\n        {\n            if (arr[i] == \"\"){}\n            else\n            {\n                v = v + (arr[i] - mean) * (arr[i] - mean);\n            }\n        }\n\n        return v / len;\n    }\n    else\n    {\n        return 0;\n    }\n};\n\n\nvar median = function (arr)\n{\n    arr.sort(function(a,b){return a-b});\n\n    var median = 0;\n\n    if (arr.length % 2 == 1)\n    {\n        median = arr[(arr.length+1)/2 - 1];\n    }\n    else\n    {\n        median = (1 * arr[arr.length/2 - 1] + 1 * arr[arr.length/2] )/2;\n    }\n\n    return median\n};\n\nexport default matsMathUtils = {\n    isNum:isNum,\n    mean:mean,\n    variance:variance,\n    median:median\n}","\n/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nTemplate.topNav.events({\n    'click .matshome' : function(event) {\n        event.preventDefault();\n        var homeref = document.referrer;\n        if (homeref === \"\" || homeref === undefined) {\n            var r = document.location.href;\n            var rparts = r.split(\":\");\n            if (rparts.length >= 2) {\n                // has a port - remove the port part\n                rparts.pop\n                homeref = rparts.join(\":\");\n            } else {\n                // doesn't have a port - strip the appreference\n                var appref = Session.get(\"app\").appref;\n                homeref = appref.substring(0, appref.lastIndexOf(\"/\"));\n//                homeref = r.split(\"://\")[0] + \"://\" + r.split(\"://\")[1].split(\".\").splice(1, 10).join(\".\")\n            }\n        }\n        window.location.replace(homeref);\n        return false;\n    },\n    'click .about' : function() {\n        $(\"#modal-display-about\").modal();\n        return false;\n    }\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsCurveUtils,matsPlotUtils} from 'meteor/randyp:mats-common';\n\nTemplate.spinner.helpers({\n    image: function () {\n        var img = Session.get(\"spinner_img\");\n        if (img == undefined) {\n            img = \"spinner.gif\";\n            Session.set(\"spinner_img\", \"spinner.gif\");\n        }\n        return img;\n    }\n});\n\n\nTemplate.spinner.events({\n    'click .cancel': function () {\n        matsCurveUtils.hideSpinner();\n        matsPlotUtils.enableActionButtons();\n    }\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsPlotUtils } from 'meteor/randyp:mats-common';\nimport { matsTypes } from 'meteor/randyp:mats-common';\nimport { matsCollections } from 'meteor/randyp:mats-common';\nimport { matsCurveUtils } from 'meteor/randyp:mats-common';\nimport {matsParamUtils } from 'meteor/randyp:mats-common';\n\nTemplate.Home.onCreated(function() {\n    this.subscribe(\"matsPlotUtils\").ready();\n    this.subscribe(\"matsTypes\").ready();\n    this.subscribe(\"matsCollections\").ready();\n    this.subscribe(\"matsCurveUtils\").ready();\n    this.subscribe(\"matsParamUtils\").ready();\n    this.subscribe(\"plotType\").ready();\n});\n\nTemplate.Home.helpers({\n    isUnderConstruction: function () {\n        return matsCollections.CurveParams.findOne({name:'underConstruction'}) !== undefined;\n    },\n    resetDefaults: function() {\n        matsMethods.refreshMetaData.call({}, function (error, result) {\n            if (error !== undefined) {\n                setError(new Error(error.message));\n            }\n            matsParamUtils.setAllParamsToDefault();\n        });\n    }\n});\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nTemplate.underConstruction.helpers({\n    image: function () {\n        var img = \"underConstruction.jpg\";\n        return img;\n    }\n});\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsPlotUtils } from 'meteor/randyp:mats-common';\nimport { matsTypes } from 'meteor/randyp:mats-common';\nimport { matsCollections } from 'meteor/randyp:mats-common';\nimport { matsCurveUtils } from 'meteor/randyp:mats-common';\nimport { matsParamUtils } from 'meteor/randyp:mats-common';\nimport { jqueryui } from 'jquery-ui';\nimport matsMethods from \"../imports/startup/api/matsMethods\";\n\nvar notes;\n\nTemplate.About.helpers({\n    version: function () {\n        var settings = matsCollections.Settings.findOne({});\n        var version = \"unknown\";\n        var buildDate = \"unkown\";\n        if (settings) {\n            version = settings.appVersion;\n            buildDate = settings.buildDate;\n        }\n        versionStr = \"<div class='row' style='text-align:center'>Version: \" + version + \"</div>\";\n        return versionStr + \"<div class='row' style='text-align:center'> Last Build Date: \" + buildDate + \"</div>\";\n\n    },\n    releaseNotes: function() {\n        Session.get('notesUpdated');\n        return notes;\n    }\n});\n\nTemplate.About.events({\n    'click .show-release-notes': function () {\n        matsMethods.getReleaseNotes.call({},function (error, result) {\n            if (error !== undefined) {\n                setError(error);\n                return \"<p>\" + error + \"</p>\";\n            }\n            notes = result;\n            Session.set('notesUpdated', Date.now());\n        });\n        document.getElementById('releaseNotes').style.display = \"block\";\n    },\n    'click .hide-release-notes': function () {\n        document.getElementById('releaseNotes').style.display = \"none\";\n    }\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsCollections } from 'meteor/randyp:mats-common';\n\nTemplate.version.helpers({\n    version: function() {\n        if (matsCollections.Settings.findOne()) {\n            var settings = matsCollections.Settings.findOne({});\n            var version = settings.appVersion;\n            return version;\n        } else {\n            return \"unknown\";\n        }\n    }\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsTypes } from 'meteor/randyp:mats-common'; \nimport { matsCollections } from 'meteor/randyp:mats-common';\nimport { matsCurveUtils } from 'meteor/randyp:mats-common';\nimport { matsMethods } from 'meteor/randyp:mats-common';\nimport { matsGraphUtils } from 'meteor/randyp:mats-common';\nimport { matsPlotUtils } from 'meteor/randyp:mats-common';\nimport { matsParamUtils } from 'meteor/randyp:mats-common';\nimport { matsSelectUtils } from 'meteor/randyp:mats-common';\n\nTemplate.plotList.helpers({\n    Title: function() {\n       return matsCollections.Settings.findOne({},{fields:{Title:1}}).Title;\n    } ,\n    PlotParamGroups: function () {\n        var groupNums = [];\n        var params = matsCollections.PlotParams.find({},{fields:{displayGroup:1}}).fetch();\n        for (var i = 0; i < params.length; i++) {\n            groupNums.push(params[i].displayGroup);\n        }\n        var res = _.uniq(groupNums).sort();\n        return res;\n    },\n    curves: function () {\n        return Session.get('Curves');\n    },\n    privateDisabled: function() {\n        if (!Meteor.user()) {\n            return \"disabled\";\n        } else {\n            return \"\";\n        }\n    },\n    privateRestoreNames: function() {\n        var names = [];\n        var l = matsCollections.CurveSettings.find({},{fields:{name:1,owner:1,permission:1}}).fetch();\n        for (var i = 0; i < l.length; i++) {\n            if (l[i].owner === Meteor.userId() && l[i].permission === \"private\") {\n                names.push(l[i].name);\n            }\n        }\n        return names;\n    },\n    publicRestoreNames: function() {\n        var names = [];\n        var savedSettings = matsCollections.CurveSettings.find({},{fields:{name:1,owner:1,permission:1}}).fetch();\n        for (var i = 0; i < savedSettings.length; i++) {\n            if (savedSettings[i].permission === \"public\") {\n                names.push(savedSettings[i].name);\n            }\n        }\n        return names;\n    },\n    isOwner: function() {\n        return  this.owner === Meteor.userId();\n    }\n});\n\nTemplate.plotList.events({\n    'click .cancel-restore' : function() {\n        document.getElementById('restore_from_public').value = \"\";\n        document.getElementById('restore_from_private').value = \"\";\n    },\n    'click .cancel-save' : function() {\n        document.getElementById('save_as').value = \"\";\n        document.getElementById('save_to').value = \"\";\n    },\n    'click .delete-selected' : function() {\n        var deleteThis = document.getElementById('save_to').value;\n        if (deleteThis !== undefined && deleteThis !== \"\") {\n            matsMethods.deleteSettings.call({name:deleteThis}, function(error){\n                if (error) {\n                    setError(new Error(error.message));\n                }\n            });\n        }\n    },\n\n    // catch a click on a diff plotFormat radio button.\n    'click .data-input' : function() {\n        var formats = Object.keys(matsTypes.PlotFormats);\n        if ($.inArray(this.toString(),formats) !== -1) {\n                matsCurveUtils.checkDiffs();\n        }\n    },\n    'click .restore-from-private' : function() {\n        document.getElementById('restore_from_public').value = \"\";\n    },\n    'click .restore-from-public' : function() {\n        document.getElementById('restore_from_private').value = \"\";\n    },\n    'click .submit-params': function (event, template) {\n        var plotAction = Session.get('plotParameter');\n        Session.set(\"spinner_img\", \"spinner.gif\");\n        document.getElementById(\"spinner\").style.display=\"block\";\n        event.preventDefault();\n        var action = event.currentTarget.name;\n        var p = {};\n        // get the plot-type elements checked state\n        const plotTypeElems = $('input[name=plot-type]');\n        p.plotTypes = {};\n        for (ptei = 0; ptei < plotTypeElems.length; ptei++){\n            const ptElem = plotTypeElems[ptei];\n            p.plotTypes[ptElem.value] = ptElem.checked;\n        }\n        var curves = Session.get('Curves');\n        if (curves == 0 && action !== \"restore\") {\n            //alert (\"No Curves To plot\");\n            setError(new Error(\"There are no curves to plot!\"));\n            Session.set(\"spinner_img\", \"spinner.gif\");\n            document.getElementById(\"spinner\").style.display=\"none\";\n            return false;\n        }\n        p.curves = [];\n        p.plotAction = plotAction;\n        curves.forEach(function(curve){p.curves.push(curve)});\n        matsCollections.PlotParams.find({}).fetch().forEach(function(plotParam){\n            var name = plotParam.name;\n            var type = plotParam.type;\n            var options = plotParam.options;\n\n            if (type == matsTypes.InputTypes.radioGroup) {\n                for (var i=0; i<options.length; i++) {\n                    if (document.getElementById(name+\"-\" + type + \"-\" + options[i]).checked == true) {\n                        p[name] = options[i];\n                        break;\n                    }\n                }\n            } else if (type == matsTypes.InputTypes.checkBoxGroup) {\n                p[name] = [];\n                for (var i = 0; i < options.length; i++) {\n                    if (document.getElementById(name + \"-\" + type + \"-\" + options[i]).checked) {\n                        p[name].push(options[i]);\n                    }\n                }\n            } else if (type == matsTypes.InputTypes.dateRange) {\n                p[name] = matsParamUtils.getValueForParamName(name);\n            } else if (type == matsTypes.InputTypes.numberSpinner) {\n                p[name] = document.getElementById(name + '-' + type).value;\n            } else if (type == matsTypes.InputTypes.select) {\n                p[name] = document.getElementById(name + '-' + type).value;\n            } else if (type == matsTypes.InputTypes.textInput) {\n                p[name] = document.getElementById(name + '-' + type).value;\n            }\n        });\n        p['completeness'] = document.getElementById(\"completeness\").value;\n        p['outliers'] = document.getElementById(\"outliers\").value;\n        Session.set(\"PlotParams\", p);\n\n        switch (action) {\n            case \"save\":\n                if ((document.getElementById('save_as').value === \"\" ||\n                    document.getElementById('save_as').value === undefined) &&\n                    (document.getElementById('save_to').value === \"\" ||\n                    document.getElementById('save_to').value === undefined)) {\n                    $(\"#saveModal\").modal('show');\n                    Session.set(\"spinner_img\", \"spinner.gif\");\n                    document.getElementById(\"spinner\").style.display=\"none\";\n                    return false;\n                }\n                var saveAs = \"\";\n                if (document.getElementById('save_as').value !== \"\" &&\n                    document.getElementById('save_as').value !== undefined) {\n                    saveAs = document.getElementById('save_as').value;\n                } else {\n                    saveAs = document.getElementById('save_to').value;\n                }\n                var permission = document.getElementById(\"save-public\").checked == true?\"public\":\"private\";\n                //console.log(\"saving settings to \" + saveAs);\n                Session.set('plotName', saveAs);\n                // get the settings to save out of the session\n                p = Session.get(\"PlotParams\");\n                var paramData = matsParamUtils.getElementValues();\n                p['paramData'] = paramData;\n                matsMethods.saveSettings.call( {saveAs:saveAs, p:p, permission:permission}, function(error){\n                    if (error) {\n                        setError(new Error(\"matsMethods.saveSettings from plot_list.js \" +error.message));\n                    }\n                });\n\n                document.getElementById('save_as').value = \"\";\n                document.getElementById('save_to').value = \"\";\n                $(\"#saveModal\").modal('hide');\n                Session.set(\"spinner_img\", \"spinner.gif\");\n                document.getElementById(\"spinner\").style.display=\"none\";\n                return false;\n                break;\n            case \"restore\":\n                matsCurveUtils.clearAllUsed();\n                if (((document.getElementById('restore_from_private').value === \"\" ||\n                      document.getElementById('restore_from_private').value === undefined)) &&\n                    ((document.getElementById('restore_from_public').value === \"\" ||\n                      document.getElementById('restore_from_public').value === undefined))){\n                    $(\"#restoreModal\").modal('show');\n                    Session.set(\"spinner_img\", \"spinner.gif\");\n                    document.getElementById(\"spinner\").style.display=\"none\";\n                    return false;\n                }\n                var restoreFrom = document.getElementById('restore_from_private').value;\n                if (restoreFrom === \"\" || restoreFrom === undefined) {\n                    restoreFrom = document.getElementById('restore_from_public').value;\n                }\n                //console.log(\"restore settings from \" + restoreFrom);\n                Session.set('plotName', restoreFrom);\n\n                p = matsCollections.CurveSettings.findOne({name:restoreFrom});\n                // now set all the curves.... This will refresh the curves list\n                Session.set('Curves',p.data.curves);\n                // reset the plotType - have to do this first because the event will remove all the possibly existing curves\n                // get the plot-type elements checked state\n                var plotTypeSaved = false;\n                const plotTypeElems = $('input[name=plot-type]');\n                for (var ptei = 0; ptei < plotTypeElems.length; ptei++){\n                    var ptElem = plotTypeElems[ptei];\n                    if (p.data.plotTypes && p.data.plotTypes[ptElem.value] === true) {\n                        plotTypeSaved = true;\n                        ptElem.checked = true;\n                        // We have to set up the display without using click events because that would cause\n                        // the restored curves to be removed\n                        switch (ptElem.value) {\n                            case matsTypes.PlotTypes.timeSeries:\n                                matsCurveUtils.showTimeseriesFace();\n                                break;\n                            case matsTypes.PlotTypes.profile:\n                                matsCurveUtils.showProfileFace();\n                                break;\n                            case matsTypes.PlotTypes.dieoff:\n                                matsCurveUtils.showDieOffFace();\n                                break;\n                            case matsTypes.PlotTypes.threshold:\n                                matsCurveUtils.showThresholdFace();\n                                break;\n                            case matsTypes.PlotTypes.validtime:\n                                matsCurveUtils.showValidTimeFace();\n                                break;\n                            case matsTypes.PlotTypes.dailyModelCycle:\n                                matsCurveUtils.showDailyModelCycleFace();\n                                break;\n                            case matsTypes.PlotTypes.reliability:\n                                matsCurveUtils.showReliabilityFace();\n                                break;\n                            case matsTypes.PlotTypes.map:\n                                matsCurveUtils.showMapFace();\n                                break;\n                            case matsTypes.PlotTypes.histogram:\n                                matsCurveUtils.showHistogramFace();\n                                break;\n                            case matsTypes.PlotTypes.contour:\n                            case matsTypes.PlotTypes.contourDiff:\n                                matsCurveUtils.showContourFace();\n                                break;\n                            case matsTypes.PlotTypes.scatter2d:\n                                matsCurveUtils.showScatterFace();\n                                break;\n                        }\n                    } else {\n                        ptElem.checked = false;\n                    }\n                }\n                if (plotTypeSaved !== true) {\n                    // set the default - in the case none was set in an old saved settings\n                    document.getElementById(\"plot-type-\" + matsCollections.PlotGraphFunctions.findOne({checked:true}).plotType).checked = true;\n                }\n\n                // now set the PlotParams\n                var params = matsCollections.PlotParams.find({}).fetch();\n                params.forEach(function(plotParam){\n                    const val =  p.data.paramData.plotParams[plotParam.name] === null ||\n                        p.data.paramData.plotParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : p.data.paramData.plotParams[plotParam.name];\n                    matsParamUtils.setInputForParamName(plotParam.name,val);\n                });\n                \n                // reset the form parameters for the superiors first\n                params = matsCollections.CurveParams.find({\"dependentNames\" : { \"$exists\" : true }}).fetch();\n                params.forEach(function(plotParam) {\n                    if (plotParam.type === matsTypes.InputTypes.dateRange) {\n                        if (p.data.paramData.curveParams[plotParam.name] === undefined) {\n                            return;   // just like continue\n                        }\n                        const dateArr = p.data.paramData.curveParams[plotParam.name].split(' - ');\n                        const from = dateArr[0];\n                        const to = dateArr[1];\n                        const idref = \"#\" + plotParam.name + \"-item\";\n                        $(idref).data('daterangepicker').setStartDate(moment.utc (from, 'MM-DD-YYYY HH:mm'));\n                        $(idref).data('daterangepicker').setEndDate(moment.utc (to, 'MM-DD-YYYY HH:mm'));\n                        matsParamUtils.setValueTextForParamName(plotParam.name,p.data.paramData.curveParams[plotParam.name]);\n                    } else {\n                        const val =  p.data.paramData.curveParams[plotParam.name] === null ||\n                            p.data.paramData.curveParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : p.data.paramData.curveParams[plotParam.name];\n                        matsParamUtils.setInputForParamName(plotParam.name, val);\n                    }\n                });\n\n                // now reset the form parameters for the dependents\n                params = matsCollections.CurveParams.find({\"dependentNames\" : { \"$exists\" : false }}).fetch();\n                params.forEach(function(plotParam) {\n                    if (plotParam.type === matsTypes.InputTypes.dateRange) {\n                        if (p.data.paramData.curveParams[plotParam.name] === undefined) {\n                            return;   // just like continue\n                        }\n                        const dateArr = p.data.paramData.curveParams[plotParam.name].split(' - ');\n                        const from = dateArr[0];\n                        const to = dateArr[1];\n                        const idref = \"#\" + plotParam.name + \"-item\";\n                        $(idref).data('daterangepicker').setStartDate(moment.utc (from, 'MM-DD-YYYY HH:mm'));\n                        $(idref).data('daterangepicker').setEndDate(moment.utc (to, 'MM-DD-YYYY HH:mm'));\n                        matsParamUtils.setValueTextForParamName(plotParam.name,p.data.paramData.curveParams[plotParam.name]);\n                    } else {\n                        const val =  p.data.paramData.curveParams[plotParam.name] === null ||\n                            p.data.paramData.curveParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : p.data.paramData.curveParams[plotParam.name];\n                        matsParamUtils.setInputForParamName(plotParam.name, val);\n                    }\n                });\n\n                // reset the scatter parameters\n                params = matsCollections.Scatter2dParams.find({}).fetch();\n                params.forEach(function(plotParam) {\n                    const val =  p.data.paramData.scatterParams[plotParam.name] === null ||\n                    p.data.paramData.scatterParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : p.data.paramData.scatterParams[plotParam.name];\n                    matsParamUtils.setInputForParamName(plotParam.name, val);\n                });\n\n                // reset the dates\n                if (p.data.dates !== undefined) {\n                    const dateArr = p.data.dates.split(' - ');\n                    const from = dateArr[0];\n                    const to = dateArr[1];\n                    $('#dates-item').data('daterangepicker').setStartDate(moment.utc (from, 'MM-DD-YYYY HH:mm'));\n                    $('#dates-item').data('daterangepicker').setEndDate(moment.utc (to, 'MM-DD-YYYY HH:mm'));\n                    matsParamUtils.setValueTextForParamName('dates',p.data.dates);\n                }\n\n                // reset the plotFormat\n\n                // reset the plotParams\n                Session.set(\"PlotParams\", p);\n                //set the used defaults so that subsequent adds get a core default\n                matsCurveUtils.setUsedColorsAndLabels();\n                document.getElementById('restore_from_public').value = \"\";\n                document.getElementById('restore_from_private').value = \"\";\n                $(\"#restoreModal\").modal('hide');\n                Session.set(\"spinner_img\", \"spinner.gif\");\n                document.getElementById(\"spinner\").style.display=\"none\";\n                matsParamUtils.collapseParams();\n                return false;\n                break;\n            case \"plot\":\n                var pt = matsPlotUtils.getPlotType();\n                console.log(\"resizing graph type is \", pt);\n                matsGraphUtils.resizeGraph(pt);\n                var pgf = matsCollections.PlotGraphFunctions.findOne({plotType: pt});\n                if (pgf === undefined) {\n                    setError(new Error(\"plot_list.js - plot -do not have a plotGraphFunction for this plotType: \" + pt));\n                    Session.set(\"spinner_img\", \"spinner.gif\");\n                    document.getElementById(\"spinner\").style.display=\"none\";\n                    return false;\n                }\n                Session.set('graphViewMode',matsTypes.PlotView.graph);\n                Session.set('mvResultKey',null); // disable the mv links on the graph page\n\n                var graphFunction = pgf.graphFunction;\n                console.log(\"prior to getGraphData call time:\", new Date() );\n                // the following line converts a null expireKey to false.\n                var expireKey = Session.get('expireKey') === true ? true : false;\n                matsMethods.getGraphData.call({plotParams: p, plotType: pt, expireKey: expireKey}, function (error, ret) {\n                    if (error !== undefined) {\n                        //setError(new Error(\"matsMethods.getGraphData from plot_list.js : error: \" + error ));\n                        setError(error);\n                        matsCurveUtils.resetGraphResult();\n                        //Session.set ('PlotResultsUpDated', new Date());\n                        Session.set(\"spinner_img\", \"spinner.gif\");\n                        matsCurveUtils.hideSpinner();\n                        Session.set('expireKey', false);\n                        return false;\n                    }\n                    Session.set('expireKey', false);\n                    matsCurveUtils.setGraphResult(ret.result);\n                    const plotType = Session.get('plotType');\n                    if (plotType === matsTypes.PlotTypes.contourDiff) {\n                        const oldCurves = Session.get('Curves');\n                        Session.set('oldCurves', oldCurves);\n                        Session.set('Curves', ret.result.basis.plotParams.curves);\n                    }\n                    Session.set(\"plotResultKey\", ret.key);\n                    delete ret;\n                    Session.set('graphFunction', graphFunction);\n                    Session.set ('PlotResultsUpDated', new Date());\n                    console.log(\"after successful getGraphData call time:\", new Date(), \":Session key: \",  ret.key, \" graphFunction:\", graphFunction);\n                    matsGraphUtils.setGraphView(pt);\n                });\n                if (matsCollections.Settings.findOne({}).appType === matsTypes.AppTypes.metexpress && p['metexpress-mode'] === \"matsmv\") {\n                    p['mvPlot'] = true;   // mark this as a metviewer plot so that the key is uniq wrt the mats plot\n                    Session.set('mvs', null);\n                    Session.set(\"mvResultKey\", null);\n                    matsMethods.mvBatch.call({plotParams: p, plotType: pt}, function (error, ret) {\n                        if (error !== undefined) {\n                            setError(\"matsMethods.mvBatch from plot_list.js : error: \" + error);\n                            return false;\n                        }\n                        var mvs = [];\n                            var key = ret.key;\n                            var artifacts = ret.artifacts;\n                            for (var i =0; i < Object.keys(artifacts).length; i++){\n                                const name = Object.keys(artifacts)[i];\n                                const url = location.href + artifacts[name];\n                                mvs.push({name:name,url:url});\n                            }\n                            Session.set('mvs', mvs);\n                            Session.set(\"mvResultKey\", key);\n                            Session.set('MvResultsUpDated', new Date());\n                        });\n                }\n                break;\n            default:\n                break;\n        }\n        return false;\n    }\n});\nTemplate.plotList.onRendered( function() {\n    // last bit of stuff that needs to be done when the page finally renders\n\n    // hide selectors that don't belong to timeseries\n    var elem;\n    for (var sidx = 0; sidx < matsTypes.selectorsToHide.length; sidx++) {\n        elem = document.getElementById(matsTypes.selectorsToHide[sidx] + '-item');\n        if (elem && elem.style) {\n            elem.style.display = 'none';\n        }\n    }\n\n    // need to display correct selectors on page load if default plot type is not timeseries\n    const plotType = matsPlotUtils.getPlotType();\n    switch (plotType) {\n        case matsTypes.PlotTypes.profile:\n            matsCurveUtils.showProfileFace();\n            break;\n        case matsTypes.PlotTypes.dieoff:\n            matsCurveUtils.showDieOffFace();\n            break;\n        case matsTypes.PlotTypes.threshold:\n            matsCurveUtils.showThresholdFace();\n            break;\n        case matsTypes.PlotTypes.validtime:\n            matsCurveUtils.showValidTimeFace();\n            break;\n        case matsTypes.PlotTypes.dailyModelCycle:\n            matsCurveUtils.showDailyModelCycleFace();\n            break;\n        case matsTypes.PlotTypes.reliability:\n            matsCurveUtils.showReliabilityFace();\n            break;\n        case matsTypes.PlotTypes.map:\n            matsCurveUtils.showMapFace();\n            break;\n        case matsTypes.PlotTypes.histogram:\n            matsCurveUtils.showHistogramFace();\n            break;\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n            matsCurveUtils.showContourFace();\n            break;\n        case matsTypes.PlotTypes.scatter2d:\n            matsCurveUtils.showScatterFace();\n            break;\n        case matsTypes.PlotTypes.timeSeries:\n        default:\n            break;\n    }\n\n    // make sure everything is at default\n    matsParamUtils.setAllParamsToDefault();\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsCollections } from 'meteor/randyp:mats-common';\nimport { plotParamHandler } from 'meteor/randyp:mats-common';\nTemplate.plotParamGroup.helpers({\n    PlotParams: function (num) {\n            var params = matsCollections.PlotParams.find({displayGroup:num},{sort:[\"displayOrder\", \"asc\"]}).fetch();\n            return params;\n        },\n    displayGroup: function() {\n        return \"block\";\n    },\n    log: function() {\n        console.log(this);\n    }\n});\n\nTemplate.plotParamGroup.events({\n    'click': function(event) {\n        if (plotParamHandler !== undefined) {\n            plotParamHandler (event);  // call app specific handler with event.\n        }\n    }\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsCollections } from 'meteor/randyp:mats-common';\nimport { matsParamUtils } from 'meteor/randyp:mats-common';\nimport { matsTypes } from 'meteor/randyp:mats-common';\nimport { plotParamHandler } from 'meteor/randyp:mats-common';\n\nTemplate.QCParamGroup.helpers({\n    completenessNumber: function () {\n        var appType = matsCollections.Settings.findOne({}).appType;\n        if (appType === 'anomalycor' || appType === matsTypes.AppTypes.metexpress) {\n            return '0';\n        } else {\n            return '75';\n        }\n    },\n    noQC: function () {\n        var appType = matsCollections.Settings.findOne({}).appType;\n        return appType === 'anomalycor' || appType === matsTypes.AppTypes.metexpress\n    }\n});\n\nTemplate.QCParamGroup.events({\n\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsPlotUtils} from 'meteor/randyp:mats-common';\n\nTemplate.error.helpers({\n   errorMessage: function() {\n       return getError();\n   },\n    stackTrace: function() {\n       return getStack();\n    }\n});\n\nTemplate.error.events({\n    'click .clear-error': function() {\n        clearError();\n        document.getElementById('stack').style.display = \"none\";\n        matsPlotUtils.enableActionButtons();\n        return false;\n    },\n    'click .show-stack': function() {\n        document.getElementById('stack').style.display = \"block\";\n    },\n    'click .hide-stack': function() {\n        document.getElementById('stack').style.display = \"none\";\n    }\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsPlotUtils} from 'meteor/randyp:mats-common';\n\nTemplate.info.helpers({\n   infoMessage: function() {\n       return getInfo();\n   }\n});\n\nTemplate.info.events({\n    'click .clear-info': function() {\n        clearInfo();\n        matsPlotUtils.enableActionButtons();\n        return false;\n    }\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsParamUtils,matsCurveUtils} from 'meteor/randyp:mats-common';\n\n// moved here from plotType.html and plotType.js\nTemplate.changePlotType.events({\n    'click .confirm-remove-all': function (event) {\n        event.preventDefault();\n        matsCurveUtils.clearAllUsed();\n        matsParamUtils.setAllParamsToDefault();\n        Session.set(\"editMode\", \"\");\n        Session.set(\"paramWellColor\", \"#f5f5f5\");  // default grey\n        Session.set(\"lastUpdate\", Date.now());\n\n        Session.set(\"confirmPlotChange\", Date.now());\n        const plotChangeType = Session.get('plotChangeType');\n        const ref = \"#plot-type-\" + plotChangeType;   //NOTE: this assumes that the id of the associated plotType is following a convention defined by matsTypes.PlotTypes\n        $(ref).trigger('click');\n        //return false;\n    },\n    'click .confirm-keep-all': function (event) {\n        event.preventDefault();\n        Session.set(\"confirmPlotChange\", Date.now());\n        const plotChangeType = Session.get('plotChangeType');\n        const ref = \"#plot-type-\" + plotChangeType;   //NOTE: this assumes that the id of the associated plotType is following a convention defined by matsTypes.PlotTypes\n        $(ref).trigger('click');\n        //return false;\n    },\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {Meteor} from 'meteor/meteor';\nimport {Hooks} from 'meteor/differential:event-hooks';\nimport {\n    matsCollections,\n    matsCurveUtils,\n    matsGraphUtils,\n    matsMethods,\n    matsParamUtils,\n    matsPlotUtils,\n    matsTypes\n} from 'meteor/randyp:mats-common';\n\nvar pageIndex = 0;\nvar annotation = \"\";\nvar openWindows = [];\nvar xAxes = [];\nvar yAxes = [];\nvar curveOpsUpdate = [];\n\nTemplate.graph.onCreated(function () {\n    // the window resize event needs to also resize the graph\n    $(window).resize(function () {\n        matsGraphUtils.resizeGraph(matsPlotUtils.getPlotType());\n        var dataset = matsCurveUtils.getGraphResult().data;\n        var options = matsCurveUtils.getGraphResult().options;\n        if (dataset !== undefined && options !== undefined) {\n            Plotly.newPlot($(\"#placeholder\")[0], dataset, options, {showLink: true});\n        }\n    });\n});\n\nTemplate.graph.helpers({\n    /**\n     * @return {string}\n     * @return {string}\n     */\n    graphFunction: function () {\n        // causes graph display routine to be processed\n        Session.get('PlotResultsUpDated');\n        var graphFunction = Session.get('graphFunction');\n        if (graphFunction) {\n            eval(graphFunction)(Session.get('plotResultKey'));\n            var plotType = Session.get('plotType');\n            var dataset = matsCurveUtils.getGraphResult().data;\n            var options = matsCurveUtils.getGraphResult().options;\n            Session.set('options', options);\n\n            // need to save some curve options so that the reset button can undo Plotly.restyle\n            switch (plotType) {\n                case matsTypes.PlotTypes.contour:\n                case matsTypes.PlotTypes.contourDiff:\n                    //saved curve options for contours\n                    Session.set('colorbarResetOpts', {\n                        'colorbar.title': dataset[0].colorbar.title,\n                        'autocontour': dataset[0].autocontour,\n                        'ncontours': dataset[0].ncontours,\n                        'contours.start': dataset[0].contours.start,\n                        'contours.end': dataset[0].contours.end,\n                        'contours.size': dataset[0].contours.size,\n                        'reversescale': false,\n                        'colorscale': JSON.stringify(dataset[0].colorscale)\n                    });\n                    break;\n                case matsTypes.PlotTypes.timeSeries:\n                case matsTypes.PlotTypes.profile:\n                case matsTypes.PlotTypes.dieoff:\n                case matsTypes.PlotTypes.threshold:\n                case matsTypes.PlotTypes.validtime:\n                case matsTypes.PlotTypes.dailyModelCycle:\n                case matsTypes.PlotTypes.reliability:\n                    // saved curve options for line graphs\n                    var lineTypeResetOpts = [];\n                    for (var lidx = 0; lidx < dataset.length; lidx++) {\n                        if (Object.values(matsTypes.ReservedWords).indexOf(dataset[lidx].label) === -1) {\n                            lineTypeResetOpts.push({\n                                'visible': dataset[lidx].visible,\n                                'mode': dataset[lidx].mode,\n                                'error_y': dataset[lidx].error_y,\n                                'error_x': dataset[lidx].error_x,\n                                'line.dash': dataset[lidx].line.dash,\n                                'line.width': dataset[lidx].line.width,\n                                'marker.symbol': dataset[lidx].marker.symbol,\n                            });\n                        } else {\n                            break;\n                        }\n                    }\n                    Session.set('lineTypeResetOpts', lineTypeResetOpts);\n                    break;\n                case matsTypes.PlotTypes.histogram:\n                    // saved curve options for maps\n                    var barTypeResetOpts = [];\n                    for (var bidx = 0; bidx < dataset.length; bidx++) {\n                        if (Object.values(matsTypes.ReservedWords).indexOf(dataset[bidx].label) === -1) {\n                            barTypeResetOpts.push({\n                                'visible': dataset[bidx].visible,\n                            });\n                        } else {\n                            break;\n                        }\n                    }\n                    Session.set('barTypeResetOpts', barTypeResetOpts);\n                    break;\n                case matsTypes.PlotTypes.map:\n                    // saved curve options for maps\n                    var mapResetOpts = [];\n                    mapResetOpts[0] = {\n                        'marker.opacity': dataset[0].marker.opacity,\n                    };\n                    for (var midx = 1; midx < dataset.length; midx++) {\n                        mapResetOpts.push({\n                            'visible': dataset[midx].visible,\n                        });\n                    }\n                    Session.set('mapResetOpts', mapResetOpts);\n                    break;\n                case matsTypes.PlotTypes.scatter2d:\n                default:\n                    break;\n            }\n\n            // initial plot\n            $(\"#legendContainer\").empty();\n            $(\"#placeholder\").empty();\n            if (!dataset || !options) {\n                return false;\n            }\n            Plotly.newPlot($(\"#placeholder\")[0], dataset, options, {showLink: true});\n\n            // append annotations\n            if (plotType !== matsTypes.PlotTypes.map) {\n                annotation = \"\";\n                for (var i = 0; i < dataset.length; i++) {\n                    if (plotType !== matsTypes.PlotTypes.histogram && dataset[i].curveId !== undefined) {\n                        annotation = annotation + \"<div id='\" + dataset[i].curveId + \"-annotation' style='color:\" + dataset[i].annotateColor + \"'>\" + dataset[i].annotation + \" </div>\";\n                    }\n                }\n                $(\"#legendContainer\").append(\"<div id='annotationContainer' style='font-size:smaller'>\" + annotation + \"</div>\");\n\n                // store the existing axes.\n                Object.keys($(\"#placeholder\")[0].layout).filter(function (k) {\n                    if (k.startsWith('xaxis')) {\n                        xAxes.push(k);\n                    }\n                    if (k.startsWith('yaxis')) {\n                        yAxes.push(k);\n                    }\n                });\n            }\n            matsCurveUtils.hideSpinner();\n        }\n        return graphFunction;\n    },\n    Title: function () {\n        if (matsCollections.Settings === undefined || matsCollections.Settings.findOne({}, {fields: {Title: 1}}) === undefined) {\n            return \"\";\n        } else {\n            return matsCollections.Settings.findOne({}, {fields: {Title: 1}}).Title;\n        }\n    },\n    width: function () {\n        return matsGraphUtils.width(matsPlotUtils.getPlotType());\n    },\n    height: function () {\n        return matsGraphUtils.height(matsPlotUtils.getPlotType());\n    },\n    curves: function () {\n        return Session.get('Curves');\n    },\n    plotName: function () {\n        return (Session.get('PlotParams') === [] || Session.get('PlotParams').plotAction === undefined) || Session.get('plotType') === matsTypes.PlotTypes.map ? \"\" : Session.get('PlotParams').plotAction.toUpperCase();\n    },\n    curveText: function () {\n        if (this.diffFrom === undefined) {\n            var plotType = Session.get('plotType');\n            if (plotType === undefined) {\n                pfuncs = matsCollections.PlotGraphFunctions.find({}).fetch();\n                for (var i = 0; i < pfuncs.length; i++) {\n                    if (pfuncs[i].checked === true) {\n                        Session.set('plotType', pfuncs[i].plotType);\n                    }\n                }\n                plotType = Session.get('plotType');\n            }\n            return matsPlotUtils.getCurveText(plotType, this);\n        } else {\n            return this.label + \":  Difference\";\n        }\n    },\n    confidenceDisplay: function () {\n        if (Session.get('plotParameter') === \"matched\") {\n            var plotType = Session.get('plotType');\n            switch (plotType) {\n                case matsTypes.PlotTypes.timeSeries:\n                case matsTypes.PlotTypes.profile:\n                case matsTypes.PlotTypes.dieoff:\n                case matsTypes.PlotTypes.threshold:\n                case matsTypes.PlotTypes.validtime:\n                case matsTypes.PlotTypes.dailyModelCycle:\n                    return \"block\";\n                case matsTypes.PlotTypes.reliability:\n                case matsTypes.PlotTypes.map:\n                case matsTypes.PlotTypes.histogram:\n                case matsTypes.PlotTypes.scatter2d:\n                case matsTypes.PlotTypes.contour:\n                case matsTypes.PlotTypes.contourDiff:\n                default:\n                    return \"none\";\n            }\n        } else {\n            return \"none\";\n        }\n    },\n    mvSpanDisplay: function () {\n        var updated = Session.get(\"MvResultsUpDated\");\n        if (Session.get(\"mvResultKey\") != null || Session.get('plotParams')['metexpress-mode'] == \"matsmv\") {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n\n    plotText: function () {\n        var p = Session.get('PlotParams');\n        if (p !== undefined) {\n            var format = p.plotFormat;\n            if (matsCollections.PlotParams.findOne({name: 'plotFormat'}) &&\n                matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap &&\n                matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap[p.plotFormat] !== undefined) {\n                format = matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap[p.plotFormat];\n            }\n            if (format === undefined) {\n                format = \"Unmatched\";\n            }\n            var plotType = Session.get('plotType');\n            switch (plotType) {\n                case matsTypes.PlotTypes.timeSeries:\n                    return \"TimeSeries \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.profile:\n                    return \"Profile: \" + format;\n                case matsTypes.PlotTypes.dieoff:\n                    return \"DieOff: \" + format;\n                case matsTypes.PlotTypes.threshold:\n                    return \"Threshold: \" + format;\n                case matsTypes.PlotTypes.validtime:\n                    return \"ValidTime: \" + format;\n                case matsTypes.PlotTypes.dailyModelCycle:\n                    return \"DailyModelCycle \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.reliability:\n                    return \"Reliability: \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.map:\n                    return \"Map \" + p.dates + \" \";\n                case matsTypes.PlotTypes.histogram:\n                    return \"Histogram: \" + format;\n                case matsTypes.PlotTypes.contour:\n                    return \"Contour \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.contourDiff:\n                    return \"ContourDiff \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.scatter2d:\n                    break;\n                default:\n                    return \"Scatter: \" + p.dates + \" : \" + format;\n            }\n        } else {\n            return \"no plot params\";\n        }\n    },\n    color: function () {\n        return this.color;\n    },\n    xAxes: function () {\n        Session.get('PlotResultsUpDated');\n        var plotType = Session.get('plotType');\n        // create an array like [0,1,2...] for each unique xaxis\n        // by getting the xaxis keys - filtering them to be unique, then using an Array.apply on the resulting array\n        // to assign a number to each value\n        var xaxis = {};\n        if ($(\"#placeholder\")[0] === undefined || $(\"#placeholder\")[0].layout === undefined || plotType === matsTypes.PlotTypes.map) {\n            return;\n        }\n        Object.keys($(\"#placeholder\")[0].layout).filter(function (k) {\n            if (k.startsWith('xaxis')) {\n                xaxis[k] = $(\"#placeholder\")[0].layout[k];\n            }\n        });\n        return Array.apply(null, {length: Object.keys(xaxis).length}).map(Number.call, Number);\n    },\n    yAxes: function () {\n        Session.get('PlotResultsUpDated');\n        var plotType = Session.get('plotType');\n        // create an array like [0,1,2...] for each unique yaxis\n        // by getting the yaxis keys - filtering them to be unique, then using an Array.apply on the resulting array\n        // to assign a number to each value\n        var yaxis = {};\n        if ($(\"#placeholder\")[0] === undefined || $(\"#placeholder\")[0].layout === undefined || plotType === matsTypes.PlotTypes.map) {\n            return;\n        }\n        Object.keys($(\"#placeholder\")[0].layout).filter(function (k) {\n            if (k.startsWith('yaxis')) {\n                yaxis[k] = $(\"#placeholder\")[0].layout[k];\n            }\n        });\n        return Array.apply(null, {length: Object.keys(yaxis).length}).map(Number.call, Number);\n    },\n    isProfile: function () {\n        return (Session.get('plotType') === matsTypes.PlotTypes.profile)\n    },\n    isLinePlot: function () {\n        var plotType = Session.get('plotType');\n        switch (plotType) {\n            case matsTypes.PlotTypes.timeSeries:\n            case matsTypes.PlotTypes.profile:\n            case matsTypes.PlotTypes.dieoff:\n            case matsTypes.PlotTypes.threshold:\n            case matsTypes.PlotTypes.validtime:\n            case matsTypes.PlotTypes.dailyModelCycle:\n            case matsTypes.PlotTypes.reliability:\n                return true;\n            case matsTypes.PlotTypes.map:\n            case matsTypes.PlotTypes.histogram:\n            case matsTypes.PlotTypes.scatter2d:\n            case matsTypes.PlotTypes.contour:\n            case matsTypes.PlotTypes.contourDiff:\n            default:\n                return false;\n        }\n    },\n    isContour: function () {\n        return (Session.get('plotType') === matsTypes.PlotTypes.contour || Session.get('plotType') === matsTypes.PlotTypes.contourDiff)\n    },\n    isContourDiff: function () {\n        return (Session.get('plotType') === matsTypes.PlotTypes.contourDiff)\n    },\n    isNotMap: function () {\n        return (Session.get('plotType') !== matsTypes.PlotTypes.map)\n    },\n    sentAddresses: function () {\n        var addresses = [];\n        var a = matsCollections.SentAddresses.find({}, {fields: {address: 1}}).fetch();\n        for (var i = 0; i < a.length; i++) {\n            addresses.push(a[i].address);\n        }\n        return addresses;\n    },\n    hideButtonText: function () {\n        var sval = this.label + \"hideButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'hide curve');\n        }\n        return Session.get(sval);\n    },\n    pointsButtonText: function () {\n        var sval = this.label + \"pointsButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'hide points');\n        }\n        return Session.get(sval);\n    },\n    errorBarButtonText: function () {\n        var sval = this.label + \"errorBarButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'hide error bars');\n        }\n        return Session.get(sval);\n    },\n    barChartButtonText: function () {\n        var sval = this.label + \"barChartButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'hide bars');\n        }\n        return Session.get(sval);\n    },\n    annotateButtonText: function () {\n        var sval = this.label + \"annotateButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'hide annotation');\n        }\n        return Session.get(sval);\n    },\n    heatMapButtonText: function () {\n        var sval = this.label + \"heatMapButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'show heat map');\n        }\n        return Session.get(sval);\n    },\n    curveShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        switch (plotType) {\n            case matsTypes.PlotTypes.timeSeries:\n            case matsTypes.PlotTypes.profile:\n            case matsTypes.PlotTypes.dieoff:\n            case matsTypes.PlotTypes.threshold:\n            case matsTypes.PlotTypes.validtime:\n            case matsTypes.PlotTypes.dailyModelCycle:\n            case matsTypes.PlotTypes.reliability:\n            case matsTypes.PlotTypes.scatter2d:\n                return \"block\";\n            case matsTypes.PlotTypes.map:\n            case matsTypes.PlotTypes.histogram:\n            case matsTypes.PlotTypes.contour:\n            case matsTypes.PlotTypes.contourDiff:\n            default:\n                return \"none\";\n        }\n    },\n    pointsShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        switch (plotType) {\n            case matsTypes.PlotTypes.timeSeries:\n            case matsTypes.PlotTypes.profile:\n            case matsTypes.PlotTypes.dieoff:\n            case matsTypes.PlotTypes.threshold:\n            case matsTypes.PlotTypes.validtime:\n            case matsTypes.PlotTypes.dailyModelCycle:\n            case matsTypes.PlotTypes.reliability:\n            case matsTypes.PlotTypes.scatter2d:\n                return \"block\";\n            case matsTypes.PlotTypes.map:\n            case matsTypes.PlotTypes.histogram:\n            case matsTypes.PlotTypes.contour:\n            case matsTypes.PlotTypes.contourDiff:\n            default:\n                return \"none\";\n        }\n    },\n    errorbarsShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        var isMatched = Session.get('plotParameter') === \"matched\";\n        if (isMatched) {\n            switch (plotType) {\n                case matsTypes.PlotTypes.timeSeries:\n                case matsTypes.PlotTypes.profile:\n                case matsTypes.PlotTypes.dieoff:\n                case matsTypes.PlotTypes.threshold:\n                case matsTypes.PlotTypes.validtime:\n                case matsTypes.PlotTypes.dailyModelCycle:\n                    return \"block\";\n                case matsTypes.PlotTypes.reliability:\n                case matsTypes.PlotTypes.map:\n                case matsTypes.PlotTypes.histogram:\n                case matsTypes.PlotTypes.scatter2d:\n                case matsTypes.PlotTypes.contour:\n                case matsTypes.PlotTypes.contourDiff:\n                default:\n                    return \"none\";\n            }\n        } else {\n            return \"none\";\n        }\n    },\n    barsShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.histogram) {\n            return 'block';\n        } else {\n            return 'none';\n        }\n    },\n    annotateShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.map || plotType === matsTypes.PlotTypes.histogram) {\n            return 'none';\n        } else {\n            return 'block';\n        }\n    },\n    heatMapShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        if (plotType !== matsTypes.PlotTypes.map) {\n            return 'none';\n        } else {\n            return 'block';\n        }\n    },\n    xAxisControlsNumberVisibility: function () {\n        Session.get('PlotResultsUpDated');\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle ||\n            ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && ($(\"#placeholder\")[0].layout.xaxis.title.text).indexOf(\"Date\") > -1)) {\n            return \"none\";\n        } else {\n            return \"block\";\n        }\n    },\n    xAxisControlsTextVisibility: function () {\n        Session.get('PlotResultsUpDated');\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle ||\n            ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && ($(\"#placeholder\")[0].layout.xaxis.title.text).indexOf(\"Date\") > -1)) {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    yAxisControlsNumberVisibility: function () {\n        Session.get('PlotResultsUpDated');\n        if ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && ($(\"#placeholder\")[0].layout.yaxis.title.text).indexOf(\"Date\") > -1) {\n            return \"none\";\n        } else {\n            return \"block\";\n        }\n    },\n    yAxisControlsTextVisibility: function () {\n        Session.get('PlotResultsUpDated');\n        if ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && ($(\"#placeholder\")[0].layout.yaxis.title.text).indexOf(\"Date\") > -1) {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    displayReplotZoom: function () {\n        // the replot to zoom function is only really appropriate for downsampled graphs which are\n        // only possible in timeseries or dailymodelcycle plots\n        Session.get(\"PlotParams\");\n        Session.get('PlotResultsUpDated');\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle) {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    metApp: function () {\n        Session.get(\"PlotParams\");\n        Session.get('PlotResultsUpDated');\n        if (matsCollections.Settings.findOne({}).appType && matsCollections.Settings.findOne({}).appType === matsTypes.AppTypes.metexpress && Session.get('PlotParams')['metexpress-mode'] == \"matsmv\") {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    mvFiles: function () {\n        var updated = Session.get('MvResultsUpDated');\n        var key = Session.get('mvResultKey');\n        var mvs = Session.get('mvs');\n        if (mvs != null) {\n            return mvs;\n        } else {\n            return [];\n        }\n    },\n    mvDisabled: function () {\n        var updated = Session.get('MvResultsUpDated');\n        if (Session.get('mvs') == null || Session.get('PlotParams')['metexpress-mode'] == \"mats\") {\n            return \"none\";\n        } else {\n            return \"block\";\n        }\n    },\n    mvLoading: function () {\n        var updated = Session.get('MvResultsUpDated');\n        if (Session.get('mvs') == null && Session.get('PlotParams')['metexpress-mode'] == \"matsmv\") {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    }\n});\n\nTemplate.graph.events({\n    'click .mvCtrlButton': function () {\n        var mvWindow = window.open(this.url, \"mv\", \"height=200,width=200\");\n        setTimeout(function () {\n            mvWindow.reload();\n        }, 500);\n\n    },\n    'click .back': function () {\n        const plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.contourDiff) {\n            const oldCurves = Session.get('oldCurves');\n            Session.set('Curves', oldCurves);\n        }\n        matsPlotUtils.enableActionButtons();\n        matsGraphUtils.setDefaultView();\n        matsCurveUtils.resetPlotResultData();\n        return false;\n    },\n\n    'click .header': function (event) {\n        document.getElementById('graph-control').style.display = 'block';\n        // document.getElementById('showAdministration').style.display = 'block';\n        document.getElementById('navbar').style.display = 'block';\n        document.getElementById('footnav').style.display = 'block';\n\n        var ctbgElems = $('*[id^=\"curve-text-buttons-grp\"]');\n        for (var i = 0; i < ctbgElems.length; i++) {\n            ctbgElems[i].style.display = 'block';\n        }\n    },\n    'click .preview': function () {\n        // capture the layout\n        const layout = $(\"#placeholder\")[0].layout;\n        var key = Session.get('plotResultKey');\n        matsMethods.saveLayout.call({\n            resultKey: key,\n            layout: layout,\n            curveOpsUpdate: {curveOpsUpdate: curveOpsUpdate}\n        }, function (error) {\n            if (error !== undefined) {\n                setError(error);\n            }\n        });\n        // open a new window with a standAlone graph of the current graph\n        var h = Math.max(document.documentElement.clientHeight, window.innerWidth || 0) * .5;\n        var w = h * 1.3;\n        var wind = window.open(window.location + \"/preview/\" + Session.get(\"graphFunction\") + \"/\" + Session.get(\"plotResultKey\") + \"/\" + Session.get('plotParameter') + \"/\" + matsCollections.Settings.findOne({}, {fields: {Title: 1}}).Title, \"_blank\", \"status=no,titlebar=no,toolbar=no,scrollbars=no,menubar=no,resizable=yes\", \"height=\" + h + \",width=\" + w);\n        setTimeout(function () {\n            wind.resizeTo(w, h);\n        }, 500);\n        openWindows.push(wind);\n    },\n    'click .closeapp': function () {\n        for (var widx = 0; widx < openWindows.length; widx++) {\n            openWindows[widx].close();\n        }\n        openWindows = [];\n    },\n    'click .reload': function () {\n        var dataset = matsCurveUtils.getGraphResult().data;\n        var options = matsCurveUtils.getGraphResult().options;\n        var graphFunction = Session.get('graphFunction');\n        window[graphFunction](dataset, options);\n    },\n    'click .plotButton': function () {\n        matsGraphUtils.setGraphView(Session.get('plotType'));\n        var graphView = document.getElementById('graphView');\n        Session.set('graphViewMode', matsTypes.PlotView.graph);\n        matsCurveUtils.hideSpinner();\n    },\n    'click .textButton': function () {\n        matsGraphUtils.setTextView(Session.get('plotType'));\n        Session.set('graphViewMode', matsTypes.PlotView.text);\n        Session.set(\"pageIndex\", 0);\n        Session.set(\"newPageIndex\", 1);\n        Session.set('textRefreshNeeded', true);\n    },\n    'click .export': function () {\n        document.getElementById('text_export').click();\n    },\n    'click .sentAddresses': function (event) {\n        var address = event.currentTarget.options[event.currentTarget.selectedIndex].value;\n        document.getElementById(\"sendAddress\").value = address;\n    },\n    'click .share': function () {\n        // show address modal\n        if (!Meteor.user()) {\n            setError(new Error(\"You must be logged in to use the 'share' feature\"));\n            return false;\n        }\n        $(\"#sendModal\").modal('show');\n    },\n    'click .basis': function () {\n        window.open(window.location + \"/JSON/\" + Session.get(\"graphFunction\") + \"/\" + Session.get(\"plotResultKey\") + \"/\" + Session.get('plotParameter') + \"/\" + matsCollections.Settings.findOne({}, {fields: {Title: 1}}).Title, \"_blank\", \"resizable=yes\");\n    },\n    'click .axisLimitButton': function () {\n        $(\"#axisLimitModal\").modal('show');\n    },\n    'click .lineTypeButton': function () {\n        $(\"#lineTypeModal\").modal('show');\n    },\n    'click .colorbarButton': function () {\n        $(\"#colorbarModal\").modal('show');\n    },\n    'click .axisYScale': function () {\n        // get all yaxes and change their scales\n        var newOpts = {};\n        var yAxis;\n        for (var k = 0; k < yAxes.length; k++) {\n            yAxis = yAxes[k];\n            newOpts[yAxis + '.type'] = $(\"#placeholder\")[0].layout[yAxis].type === 'linear' ? 'log' : 'linear';\n        }\n        Plotly.relayout($(\"#placeholder\")[0], newOpts);\n    },\n    'click .firstPageButton': function () {\n        var pageIndex = Session.get(\"pageIndex\");\n        // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n        if (!Number.isNaN(pageIndex)) {\n            Session.set(\"pageIndex\", 0);\n            Session.set(\"newPageIndex\", 1);\n            Session.set('textRefreshNeeded', true);\n        }\n    },\n    'click .previousTenPageButton': function () {\n        var pageIndex = Session.get(\"pageIndex\");\n        // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n        if (!Number.isNaN(pageIndex)) {\n            var pageTextDirection = Session.get(\"pageTextDirection\");\n            // if the navigation direction is changing, you have to increment the page index an additional time,\n            // or you just move to the other end of the current page, and nothing appears to change.\n            if (pageTextDirection !== undefined && pageTextDirection === -1) {\n                Session.set(\"newPageIndex\", pageIndex - 10);\n            } else {\n                Session.set(\"newPageIndex\", pageIndex - 11);\n            }\n            Session.set('textRefreshNeeded', true);\n        }\n    },\n    'click .previousPageButton': function () {\n        var pageIndex = Session.get(\"pageIndex\");\n        // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n        if (!Number.isNaN(pageIndex)) {\n            var pageTextDirection = Session.get(\"pageTextDirection\");\n            // if the navigation direction is changing, you have to increment the page index an additional time,\n            // or you just move to the other end of the current page, and nothing appears to change.\n            if (pageTextDirection !== undefined && pageTextDirection === -1) {\n                Session.set(\"newPageIndex\", pageIndex - 1);\n            } else {\n                Session.set(\"newPageIndex\", pageIndex - 2);\n            }\n            Session.set('textRefreshNeeded', true);\n        }\n    },\n    'click .nextPageButton': function () {\n        var pageIndex = Session.get(\"pageIndex\");\n        // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n        if (!Number.isNaN(pageIndex)) {\n            var pageTextDirection = Session.get(\"pageTextDirection\");\n            // if the navigation direction is changing, you have to increment the page index an additional time,\n            // or you just move to the other end of the current page, and nothing appears to change.\n            if (pageTextDirection !== undefined && pageTextDirection === 1) {\n                Session.set(\"newPageIndex\", pageIndex + 1);\n            } else {\n                Session.set(\"newPageIndex\", pageIndex + 2);\n            }\n            Session.set('textRefreshNeeded', true);\n        }\n    },\n    'click .nextTenPageButton': function () {\n        var pageIndex = Session.get(\"pageIndex\");\n        // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n        if (!Number.isNaN(pageIndex)) {\n            var pageTextDirection = Session.get(\"pageTextDirection\");\n            // if the navigation direction is changing, you have to increment the page index an additional time,\n            // or you just move to the other end of the current page, and nothing appears to change.\n            if (pageTextDirection !== undefined && pageTextDirection === 1) {\n                Session.set(\"newPageIndex\", pageIndex + 10);\n            } else {\n                Session.set(\"newPageIndex\", pageIndex + 11);\n            }\n            Session.set('textRefreshNeeded', true);\n        }\n    },\n    'click .lastPageButton': function () {\n        var pageIndex = Session.get(\"pageIndex\");\n        // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n        if (!Number.isNaN(pageIndex)) {\n            Session.set(\"newPageIndex\", -2000);\n            Session.set('textRefreshNeeded', true);\n        }\n    },\n    'click .replotZoomButton': function () {\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle) {\n            var newDateRange = moment.utc($(\"#placeholder\")[0].layout['xaxis'].range[0]).format('M/DD/YYYY HH:mm') + \" - \" + moment.utc($(\"#placeholder\")[0].layout['xaxis'].range[1]).format('M/DD/YYYY HH:mm');\n            console.log(newDateRange);\n            document.getElementById('controlButton-dates-value').innerHTML = newDateRange;\n            var params = Session.get('params');\n            var actionId = \"plotUnmatched\";\n            if (params.plotAction === \"matched\") {\n                actionId = plotMatched;\n            }\n            document.getElementById(\"plot-curves\").click();\n        }\n    },\n    'click .reCacheButton': function () {\n        var plotType = Session.get('plotType');\n        var params = Session.get('params');\n        var actionId = \"plotUnmatched\";\n        if (params.plotAction === \"matched\") {\n            actionId = plotMatched;\n        }\n        Session.set('expireCache', true);\n        document.getElementById(\"plot-curves\").click();\n    },\n    'click .curveVisibility': function (event) {\n        event.preventDefault();\n        var dataset = matsCurveUtils.getGraphResult().data;\n        const id = event.target.id;\n        const label = id.replace('-curve-show-hide', '');\n        const myDataIdx = dataset.findIndex(function (d) {\n            return d.curveId === label;\n        });\n        if (dataset[myDataIdx].x.length > 0) {\n            var update;\n            if (dataset[myDataIdx].visible) {\n                if (dataset[myDataIdx].mode === \"lines\") {                  // in line mode, lines are visible, so make nothing visible\n                    update = {\n                        visible: !dataset[myDataIdx].visible\n                    };\n                    $('#' + label + \"-curve-show-hide\")[0].value = \"show curve\";\n                } else if (dataset[myDataIdx].mode === \"lines+markers\") {   // in line and point mode, lines and points are visible, so make nothing visible\n                    update = {\n                        visible: !dataset[myDataIdx].visible\n                    };\n                    $('#' + label + \"-curve-show-hide\")[0].value = \"show curve\";\n                    $('#' + label + \"-curve-show-hide-points\")[0].value = \"show points\";\n                } else if (dataset[myDataIdx].mode === \"markers\") {         // in point mode, points are visible, so make lines and points visible\n                    update = {\n                        mode: \"lines+markers\"\n                    };\n                    $('#' + label + \"-curve-show-hide\")[0].value = \"hide curve\";\n                }\n            } else {\n                if (dataset[myDataIdx].mode === \"lines\") {                  // in line mode, nothing is visible, so make lines visible\n                    update = {\n                        visible: !dataset[myDataIdx].visible\n                    };\n                    $('#' + label + \"-curve-show-hide\")[0].value = \"hide curve\";\n                } else if (dataset[myDataIdx].mode === \"lines+markers\") {   // in line and point mode, nothing is visible, so make lines and points visible\n                    update = {\n                        visible: !dataset[myDataIdx].visible\n                    };\n                    $('#' + label + \"-curve-show-hide\")[0].value = \"hide curve\";\n                    $('#' + label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n                }\n            }\n        }\n        Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx);\n        // save the updates in case we want to pass them to a pop-out window.\n        curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n        var updatedKeys = Object.keys(update);\n        for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n            var updatedKey = updatedKeys[kidx];\n            // json doesn't like . to be in keys, so replace it with a placeholder\n            var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n            curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n        }\n    },\n    'click .pointsVisibility': function (event) {\n        event.preventDefault();\n        var dataset = matsCurveUtils.getGraphResult().data;\n        const id = event.target.id;\n        const label = id.replace('-curve-show-hide-points', '');\n        const myDataIdx = dataset.findIndex(function (d) {\n            return d.curveId === label;\n        });\n        if (dataset[myDataIdx].x.length > 0) {\n            var update;\n            if (dataset[myDataIdx].visible) {\n                if (dataset[myDataIdx].mode === \"lines\") {                  // lines are visible, so make lines and points visible\n                    update = {\n                        mode: \"lines+markers\"\n                    };\n                    $('#' + label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n                } else if (dataset[myDataIdx].mode === \"lines+markers\") {   // lines and points are visible, so make only lines visible\n                    update = {\n                        mode: \"lines\"\n                    };\n                    $('#' + label + \"-curve-show-hide-points\")[0].value = \"show points\";\n                } else if (dataset[myDataIdx].mode === \"markers\") {         // points are visible, so make nothing visible\n                    update = {\n                        visible: !dataset[myDataIdx].visible,\n                        mode: \"lines\"\n                    };\n                    $('#' + label + \"-curve-show-hide-points\")[0].value = \"show points\";\n                }\n            } else {                                                        // nothing is visible, so make points visible\n                update = {\n                    visible: !dataset[myDataIdx].visible,\n                    mode: \"markers\"\n                };\n                $('#' + label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n            }\n        }\n        Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx);\n        // save the updates in case we want to pass them to a pop-out window.\n        curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n        var updatedKeys = Object.keys(update);\n        for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n            var updatedKey = updatedKeys[kidx];\n            // json doesn't like . to be in keys, so replace it with a placeholder\n            var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n            curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n        }\n    },\n    'click .errorBarVisibility': function (event) {\n        event.preventDefault();\n        var plotType = Session.get('plotType');\n        var dataset = matsCurveUtils.getGraphResult().data;\n        const id = event.target.id;\n        const label = id.replace('-curve-show-hide-errorbars', '');\n        const myDataIdx = dataset.findIndex(function (d) {\n            return d.curveId === label;\n        });\n        if (dataset[myDataIdx].x.length > 0) {\n            var update;\n            if (plotType !== matsTypes.PlotTypes.profile) {\n                update = {\n                    error_y: dataset[myDataIdx].error_y\n                };\n                update.error_y.visible = !update.error_y.visible;\n                if (update.error_y.visible) {\n                    $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"hide error bars\";\n                } else {\n                    $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"show error bars\";\n                }\n            } else {\n                update = {\n                    error_x: dataset[myDataIdx].error_x\n                };\n                update.error_x.visible = !update.error_x.visible;\n                if (update.error_x.visible) {\n                    $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"hide error bars\";\n                } else {\n                    $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"show error bars\";\n                }\n            }\n        }\n        Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx);\n        // save the updates in case we want to pass them to a pop-out window.\n        curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n        var updatedKeys = Object.keys(update);\n        for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n            var updatedKey = updatedKeys[kidx];\n            // json doesn't like . to be in keys, so replace it with a placeholder\n            var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n            curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n        }\n    },\n    'click .barVisibility': function (event) {\n        event.preventDefault();\n        var dataset = matsCurveUtils.getGraphResult().data;\n        const id = event.target.id;\n        const label = id.replace('-curve-show-hide-bars', '');\n        const myDataIdx = dataset.findIndex(function (d) {\n            return d.curveId === label;\n        });\n        if (dataset[myDataIdx].x.length > 0) {\n            var update = {\n                visible: !dataset[myDataIdx].visible\n            };\n            if (update.visible) {\n                $('#' + label + \"-curve-show-hide-bars\")[0].value = \"hide bars\";\n            } else {\n                $('#' + label + \"-curve-show-hide-bars\")[0].value = \"show bars\";\n            }\n        }\n        Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx);\n        // save the updates in case we want to pass them to a pop-out window.\n        curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n        var updatedKeys = Object.keys(update);\n        for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n            var updatedKey = updatedKeys[kidx];\n            // json doesn't like . to be in keys, so replace it with a placeholder\n            var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n            curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n        }\n    },\n    'click .annotateVisibility': function (event) {\n        event.preventDefault();\n        const id = event.target.id;\n        const label = id.replace('-curve-show-hide-annotate', '');\n        if ($('#' + label + \"-annotation\")[0].hidden) {\n            $('#' + label + \"-annotation\")[0].style.display = \"block\";\n            $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"hide annotation\";\n            $('#' + label + \"-annotation\")[0].hidden = false;\n        } else {\n            $('#' + label + \"-annotation\")[0].style.display = \"none\";\n            $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"show annotation\";\n            $('#' + label + \"-annotation\")[0].hidden = true;\n        }\n        annotation = $('#annotationContainer')[0].innerHTML;\n    },\n    'click .heatMapVisibility': function (event) {\n        event.preventDefault();\n        var dataset = matsCurveUtils.getGraphResult().data;\n        if (dataset[0].lat.length > 0) {\n            var update;\n            var didx;\n            if (dataset[0].marker.opacity === 0) {\n                update = {\n                    'marker.opacity': 1\n                };\n                Plotly.restyle($(\"#placeholder\")[0], update, 0);\n                // save the updates in case we want to pass them to a pop-out window.\n                curveOpsUpdate[0] = curveOpsUpdate[0] === undefined ? {} : curveOpsUpdate[0];\n                curveOpsUpdate[0]['marker____opacity'] = update['marker.opacity'];\n                update = {\n                    'visible': false\n                };\n                for (didx = 1; didx < dataset.length; didx++) {\n                    Plotly.restyle($(\"#placeholder\")[0], update, didx);\n                    // save the updates in case we want to pass them to a pop-out window.\n                    curveOpsUpdate[didx] = curveOpsUpdate[didx] === undefined ? {} : curveOpsUpdate[didx];\n                    curveOpsUpdate[didx]['visible'] = update['visible'];\n                }\n                $('#' + label + \"-curve-show-hide-heatmap\")[0].value = \"hide heat map\";\n            } else {\n                update = {\n                    'marker.opacity': 0\n                };\n                Plotly.restyle($(\"#placeholder\")[0], update, 0);\n                // save the updates in case we want to pass them to a pop-out window.\n                curveOpsUpdate[0] = curveOpsUpdate[0] === undefined ? {} : curveOpsUpdate[0];\n                curveOpsUpdate[0]['marker____opacity'] = update['marker.opacity'];\n                update = {\n                    'visible': true\n                };\n                for (didx = 1; didx < dataset.length; didx++) {\n                    Plotly.restyle($(\"#placeholder\")[0], update, didx);\n                    // save the updates in case we want to pass them to a pop-out window.\n                    curveOpsUpdate[didx] = curveOpsUpdate[didx] === undefined ? {} : curveOpsUpdate[didx];\n                    curveOpsUpdate[didx]['visible'] = update['visible'];\n                }\n                $('#' + label + \"-curve-show-hide-heatmap\")[0].value = \"show heat map\";\n\n            }\n        }\n    },\n    // add refresh button\n    'click #refresh-plot': function (event) {\n        event.preventDefault();\n        var plotType = Session.get('plotType');\n        var dataset = matsCurveUtils.getGraphResult().data;\n        var options = Session.get('options');\n        if (curveOpsUpdate.length === 0) {\n            // we just need a relayout\n            Plotly.relayout($(\"#placeholder\")[0], options);\n        } else {\n            // we need both a relayout and a restyle\n            curveOpsUpdate = [];\n            switch (plotType) {\n                case matsTypes.PlotTypes.contour:\n                case matsTypes.PlotTypes.contourDiff:\n                    // restyle for contour plots\n                    Plotly.restyle($(\"#placeholder\")[0], Session.get('colorbarResetOpts'), 0);\n                    break;\n                case matsTypes.PlotTypes.timeSeries:\n                case matsTypes.PlotTypes.profile:\n                case matsTypes.PlotTypes.dieoff:\n                case matsTypes.PlotTypes.threshold:\n                case matsTypes.PlotTypes.validtime:\n                case matsTypes.PlotTypes.dailyModelCycle:\n                case matsTypes.PlotTypes.reliability:\n                    // restyle for line plots\n                    const lineTypeResetOpts = Session.get('lineTypeResetOpts');\n                    for (var lidx = 0; lidx < lineTypeResetOpts.length; lidx++) {\n                        Plotly.restyle($(\"#placeholder\")[0], lineTypeResetOpts[lidx], lidx);\n                        $('#' + dataset[lidx].label + \"-curve-show-hide\")[0].value = \"hide curve\";\n                        $('#' + dataset[lidx].label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n                        $('#' + dataset[lidx].label + \"-curve-show-hide-errorbars\")[0].value = \"hide error bars\";\n                    }\n                    break;\n                case matsTypes.PlotTypes.histogram:\n                    // restyle for bar plots\n                    const barTypeResetOpts = Session.get('barTypeResetOpts');\n                    for (var bidx = 0; bidx < barTypeResetOpts.length; bidx++) {\n                        Plotly.restyle($(\"#placeholder\")[0], barTypeResetOpts[bidx], bidx);\n                        $('#' + dataset[bidx].label + \"-curve-show-hide-bars\")[0].value = \"hide bars\";\n                    }\n                    break;\n                case matsTypes.PlotTypes.map:\n                    // restyle for maps\n                    const mapResetOpts = Session.get('mapResetOpts');\n                    for (var midx = 0; midx < mapResetOpts.length; midx++) {\n                        Plotly.restyle($(\"#placeholder\")[0], mapResetOpts[midx], midx);\n                    }\n                    $('#' + dataset[0].label + \"-curve-show-hide-heatmap\")[0].value = \"show heat map\";\n                    break;\n                case matsTypes.PlotTypes.scatter2d:\n                default:\n                    break;\n            }\n            Plotly.relayout($(\"#placeholder\")[0], options);\n        }\n    },\n    // add axis customization modal submit button\n    'click #axisSubmit': function (event) {\n        event.preventDefault();\n        var plotType = Session.get('plotType');\n        var changeYScaleBack = false;\n        var newOpts = {};\n        // get input axis limits and labels\n        $(\"input[id^=x][id$=AxisLabel]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.title'] = elem.value;\n            }\n        });\n        if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle ||\n            ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && ($(\"#placeholder\")[0].layout.xaxis.title.text).indexOf(\"Date\") > -1)) {\n            $(\"input[id^=x][id$=AxisMinText]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n                }\n            });\n            $(\"input[id^=x][id$=AxisMaxText]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n                }\n            });\n        } else {\n            $(\"input[id^=x][id$=AxisMin]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n                }\n            });\n            $(\"input[id^=x][id$=AxisMax]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n                }\n            });\n        }\n        $(\"input[id^=y][id$=AxisLabel]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.title'] = elem.value;\n            }\n        });\n        if ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && ($(\"#placeholder\")[0].layout.xaxis.title.text).indexOf(\"Date\") > -1) {\n            $(\"input[id^=y][id$=AxisMinText]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n                }\n            });\n            $(\"input[id^=y][id$=AxisMaxText]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n                }\n            });\n        } else {\n            $(\"input[id^=y][id$=AxisMin]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    if (plotType === matsTypes.PlotTypes.profile) {\n                        newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n                        // plotly can't seem to set axis limits on a log axis, so this needs to be changed to linear\n                        if ($(\"#placeholder\")[0].layout['yaxis' + (index === 0 ? \"\" : index + 1)].type === 'log') {\n                            $(\"#axisYScale\").click();\n                            changeYScaleBack = true;\n                        }\n                    } else {\n                        newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n                    }\n                }\n            });\n            $(\"input[id^=y][id$=AxisMax]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    if (plotType === matsTypes.PlotTypes.profile) {\n                        newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n                        // plotly can't seem to set axis limits on a log axis, so this needs to be changed to linear\n                        if ($(\"#placeholder\")[0].layout['yaxis' + (index === 0 ? \"\" : index + 1)].type === 'log') {\n                            $(\"#axisYScale\").click();\n                            changeYScaleBack = true;\n                        }\n                    } else {\n                        newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n                    }\n                }\n            });\n        }\n        Plotly.relayout($(\"#placeholder\")[0], newOpts);\n        // if needed, restore the log axis\n        if (changeYScaleBack) {\n            $(\"#axisYScale\").click();\n        }\n        $(\"#axisLimitModal\").modal('hide');\n    },\n    // add line style modal submit button\n    'click #lineTypeSubmit': function (event) {\n        event.preventDefault();\n        var plotType = Session.get('plotType');\n        var updates = [];\n        // get input line style change\n        $(\"[id$=LineStyle]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                updates[index] = updates[index] === undefined ? {} : updates[index];\n                updates[index]['line.dash'] = elem.value;\n            }\n        });\n        $(\"input[id$=LineWeight]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                updates[index] = updates[index] === undefined ? {} : updates[index];\n                updates[index]['line.width'] = elem.value;\n            }\n        });\n        $(\"[id$=LineMarker]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                updates[index] = updates[index] === undefined ? {} : updates[index];\n                updates[index]['marker.symbol'] = elem.value;\n            }\n        });\n        for (var uidx = 0; uidx < updates.length; uidx++) {\n            // apply new settings\n            Plotly.restyle($(\"#placeholder\")[0], updates[uidx], uidx);\n        }\n        $(\"#lineTypeModal\").modal('hide');\n        // save the updates in case we want to pass them to a pop-out window.\n        for (uidx = 0; uidx < updates.length; uidx++) {\n            curveOpsUpdate[uidx] = curveOpsUpdate[uidx] === undefined ? {} : curveOpsUpdate[uidx];\n            var updatedKeys = Object.keys(updates[uidx]);\n            for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n                var updatedKey = updatedKeys[kidx];\n                // json doesn't like . to be in keys, so replace it with a placeholder\n                var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n                curveOpsUpdate[uidx][jsonHappyKey] = updates[uidx][updatedKey];\n            }\n        }\n    },\n    // add colorbar customization modal submit button\n    'click #colorbarSubmit': function (event) {\n        event.preventDefault();\n        var dataset = matsCurveUtils.getGraphResult().data;\n        var update = {};\n        // get new formatting\n        $(\"input[id=colorbarLabel]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                update['colorbar.title'] = elem.value;\n                update['colorbar.titleside'] = 'right';\n                update['colorbar.titlefont'] = {size: 16, family: 'Arial, sans-serif'};\n            }\n        });\n        $(\"input[id=colorbarMin]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                update['autocontour'] = false;\n                update['contours.start'] = elem.value;\n            }\n        });\n        $(\"input[id=colorbarMax]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                update['autocontour'] = false;\n                update['contours.end'] = elem.value;\n            }\n        });\n        $(\"input[id=colorbarNumber]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                update['autocontour'] = false;\n                update['ncontours'] = elem.value;   // sadly plotly regards this as a \"less than or equal to\" value, so we have to manually set contour size\n                const isStartDefined = update['contours.start'] !== undefined;\n                const isEndDefined = update['contours.end'] !== undefined;\n                const startVal = isStartDefined ? update['contours.start'] : dataset[0].zmin+(dataset[0].zmax-dataset[0].zmin)/16;\n                const endVal = isEndDefined ? update['contours.end'] : dataset[0].zmax-(dataset[0].zmax-dataset[0].zmin)/16;\n                update['contours.size'] = (endVal - startVal) / (Number(update['ncontours']) - 1);\n            }\n        });\n        $(\"input[id=colorbarStep]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                if (update['ncontours'] === undefined) {\n                    update['autocontour'] = false;\n                    update['contours.size'] = elem.value;\n                }\n            }\n        });\n        $(\"input[id=colorbarReverse]\").get().forEach(function (elem, index) {\n            if (elem && elem.checked) {\n                update['reversescale'] = true;\n            } else {\n                update['reversescale'] = false;\n            }\n        });\n        var elem = document.getElementById(\"colormapSelect\");\n        if (elem !== undefined && elem.value !== undefined) {\n            update['colorscale'] = elem.value;\n        }\n        // apply new settings\n        Plotly.restyle($(\"#placeholder\")[0], update, 0);\n        $(\"#colorbarModal\").modal('hide');\n        // save the updates in case we want to pass them to a pop-out window.\n        curveOpsUpdate[0] = curveOpsUpdate[0] === undefined ? {} : curveOpsUpdate[0];\n        const updatedKeys = Object.keys(update);\n        for (var uidx = 0; uidx < updatedKeys.length; uidx++) {\n            var updatedKey = updatedKeys[uidx];\n            // json doesn't like . to be in keys, so replace it with a placeholder\n            var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n            curveOpsUpdate[0][jsonHappyKey] = update[updatedKey];\n        }\n    }\n});\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {moment} from 'meteor/momentjs:moment'\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {matsCurveUtils} from 'meteor/randyp:mats-common';\nimport {matsGraphUtils} from 'meteor/randyp:mats-common';\n\ngraphPlotly = function (key) {\n    // get plot info\n    var route = Session.get('route');\n\n    // get dataset info and options\n    var resultSet = matsCurveUtils.getGraphResult();\n    if (resultSet === null || resultSet === undefined || resultSet.data === undefined) {\n        return false;\n    }\n\n    //set options\n    var options = resultSet.options;\n    if (route !== undefined && route !== \"\") {\n        options.selection = [];\n    }\n\n    // initialize show/hide button labels\n    var dataset = resultSet.data;\n    if (Session.get('plotType') !== matsTypes.PlotTypes.map) {\n        matsGraphUtils.setNoDataLabels(dataset);\n    } else {\n        matsGraphUtils.setNoDataLabelsMap(dataset);\n    }\n};","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsCollections, matsCurveUtils, matsPlotUtils, matsTypes} from 'meteor/randyp:mats-common';\nimport {moment} from 'meteor/momentjs:moment';\n/*\nReferring to the Session variable plotResultKey here causes the html template to get re-rendered with the current graph data\n(which is in the Results collection).\n */\nvar fillStr = \"---\";\n\nvar times = [];\n\n// I don't think this is used anymore, but I'm not certain, so I'm leaving it here for now.\nconst getDataForTime = function (data, time) {\n    if (data === undefined) {\n        return undefined;\n    }\n    for (var i = 0; i < data.length; i++) {\n        if (data[i][0] == Number(time)) {\n            return data[i] === null ? undefined : data[i];\n        }\n    }\n    return undefined;\n};\n\n// fetches the data back from where the query routine stored it.\nconst getDataForCurve = function (curve) {\n    if (Session.get(\"plotResultKey\") == undefined || matsCurveUtils.getPlotResultData() === undefined) {\n        return undefined;\n    }\n    if (matsCurveUtils.getPlotResultData() === null) {\n        return [];\n    }\n    if (Session.get(\"plotType\") === matsTypes.PlotTypes.scatter2d) {\n        return matsCurveUtils.getPlotResultData()[curve.label];\n    } else {\n        return matsCurveUtils.getPlotResultData().data[curve.label];\n    }\n};\n\nTemplate.textOutput.onRendered(function () {\n    const settings = matsCollections.Settings.findOne({}, {fields: {NullFillString: 1}});\n    if (settings === undefined) {\n        fillStr = \"---\";\n    } else {\n        fillStr = settings.NullFillString;\n    }\n});\n\nTemplate.textOutput.helpers({\n    notScatter: function () {\n        return Session.get(\"plotType\") !== matsTypes.PlotTypes.scatter2d;\n    },\n\n    // get the table header for the summary stats at the top of the text page\n    statHeaders: function () {\n        var header = \"\";\n        switch (Session.get('plotType')) {\n            case matsTypes.PlotTypes.timeSeries:\n            case matsTypes.PlotTypes.dailyModelCycle:\n            case matsTypes.PlotTypes.profile:\n                header += \"<th>label</th>\\\n                    <th>mean</th>\\\n                    <th>standard deviation</th>\\\n                    <th>n</th>\\\n                    <th>standard error</th>\\\n                    <th>lag1</th>\\\n                    <th>minimum</th>\\\n                    <th>maximum</th>\";\n                break;\n            case matsTypes.PlotTypes.dieoff:\n            case matsTypes.PlotTypes.threshold:\n            case matsTypes.PlotTypes.validtime:\n                header += \"<th>label</th>\\\n                    <th>mean</th>\\\n                    <th>standard deviation</th>\\\n                    <th>n</th>\\\n                    <th>minimum</th>\\\n                    <th>maximum</th>\";\n                break;\n            case matsTypes.PlotTypes.reliability:\n                header += \"<th>label</th>\\\n                    <th>sample climatology</th>\";\n                break;\n            case matsTypes.PlotTypes.map:\n                header += \"<th>label</th>\\\n                    <th>mean</th>\\\n                    <th>standard deviation</th>\\\n                    <th>n</th>\\\n                    <th>minimum time</th>\\\n                    <th>maximum time</th>\";\n                break;\n            case matsTypes.PlotTypes.histogram:\n                header += \"<th>label</th>\\\n                    <th>mean</th>\\\n                    <th>standard deviation</th>\\\n                    <th>n</th>\\\n                    <th>minimum</th>\\\n                    <th>maximum</th>\";\n                break;\n            case matsTypes.PlotTypes.contour:\n            case matsTypes.PlotTypes.contourDiff:\n                header += \"<th>label</th>\\\n                    <th>mean stat</th>\\\n                    <th>n</th>\\\n                    <th>minimum time</th>\\\n                    <th>maximum time</th>\";\n                break;\n            case matsTypes.PlotTypes.scatter2d:\n                // no stat for scatter\n                break;\n            default:\n                break;\n        }\n        return header;\n    },\n\n    // get the table header for each curve's data\n    elementHeaders: function (curve) {\n        var header = \"\";\n        switch (Session.get('plotType')) {\n            case matsTypes.PlotTypes.timeSeries:\n                header += \"<th>\" + curve.label + \" time</th>\\\n                        <th>raw stat from query</th>\\\n                        <th>plotted stat</th>\\\n                        <th>std dev</th>\\\n                        <th>std error</th>\\\n                        <th>lag1</th>\\\n                        <th>n</th>\";\n                break;\n            case matsTypes.PlotTypes.dailyModelCycle:\n                header += \"<th>\" + curve.label + \" time</th>\\\n                        <th>raw stat from query</th>\\\n                        <th>plotted stat</th>\\\n                        <th>std dev</th>\\\n                        <th>n</th>\";\n                break;\n            case matsTypes.PlotTypes.profile:\n                header += \"<th>\" + curve.label + \" level</th>\\\n                        <th>raw stat from query</th>\\\n                        <th>plotted stat</th>\\\n                        <th>std dev</th>\\\n                        <th>std error</th>\\\n                        <th>lag1</th>\\\n                        <th>n</th>\";\n                break;\n            case matsTypes.PlotTypes.dieoff:\n                header += \"<th>\" + curve.label + \" forecast lead time</th>\\\n                        <th>raw stat from query</th>\\\n                        <th>plotted stat</th>\\\n                        <th>std dev</th>\\\n                        <th>n</th>\";\n                break;\n            case matsTypes.PlotTypes.threshold:\n                header += \"<th>\" + curve.label + \" threshold (in)</th>\\\n                        <th>raw stat from query</th>\\\n                        <th>plotted stat</th>\\\n                        <th>std dev</th>\\\n                        <th>n</th>\";\n                break;\n            case matsTypes.PlotTypes.validtime:\n                header += \"<th>\" + curve.label + \" hour of day</th>\\\n                        <th>raw stat from query</th>\\\n                        <th>plotted stat</th>\\\n                        <th>std dev</th>\\\n                        <th>n</th>\";\n                break;\n            case matsTypes.PlotTypes.reliability:\n                header += \"<th>\" + curve.label + \" probability bin</th>\\\n                        <th>hit rate</th>\\\n                        <th>oy</th>\\\n                        <th>on</th>\";\n                break;\n            case matsTypes.PlotTypes.map:\n                header += \"<th>Site Name</th>\\\n                        <th>Number of Times</th>\\\n                        <th>Start Date</th>\\\n                        <th>End Date</th>\\\n                        <th>Average Difference</th>\";\n                break;\n            case matsTypes.PlotTypes.histogram:\n                header += \"<th>\" + curve.label + \"  bin range</th>\\\n                        <th>bin n</th>\\\n                        <th>bin rel freq</th>\\\n                        <th>bin lower bound</th>\\\n                        <th>bin upper bound</th>\\\n                        <th>bin mean</th>\\\n                        <th>bin std dev</th>\";\n                break;\n            case matsTypes.PlotTypes.contour:\n            case matsTypes.PlotTypes.contourDiff:\n                header += \"<th>X Value</th>\\\n                        <th>Y Value</th>\\\n                        <th>Stat</th>\\\n                        <th>Number</th>\\\n                        <th>Start Date</th>\\\n                        <th>End Date</th>\";\n                break;\n            case matsTypes.PlotTypes.scatter2d:\n                header += \"<th>\" + curve.label + \" x axis</th>\\\n                        <th>\" + curve.label + \" y axis</th>\\\n                        <th>best fit</th>\";\n                break;\n            default:\n                break;\n        }\n        return header;\n    },\n    elements: function (curve) {\n        Session.get('textLoaded'); // monitor for data changres like previous / next\n        return getDataForCurve(curve);\n    },\n    curves: function () {\n        Session.get('textLoaded');\n        Session.get(\"plotResultKey\"); // make sure we re-render when data changes\n        return Session.get('Curves');\n    },\n    curveLabel: function (curve) {\n        switch (Session.get('plotType')) {\n            case matsTypes.PlotTypes.timeSeries:\n                return curve.label + \" time\";\n                break;\n            case matsTypes.PlotTypes.profile:\n                return curve.label + \" level\";\n                break;\n            case matsTypes.PlotTypes.dieoff:\n                return curve.label + \" forecast lead time\";\n            default:\n                return curve.label;\n                break;\n        }\n    },\n    curveText: function () {\n        const text = matsPlotUtils.getCurveText(matsPlotUtils.getPlotType(), this);\n        return text;\n    },\n\n    // get the table row values for each curve's data\n    elementHtml: function (element) {\n        var labelKey = Template.parentData().label;\n        var elementLabel = \"\";\n        var line = \"\";\n        switch (Session.get('plotType')) {\n            case matsTypes.PlotTypes.timeSeries:\n                line += \"<td>\" + element[labelKey += \" time\"] + \"</td>\" +\n                    \"<td>\" + (element['raw stat from query'] != undefined && element['raw stat from query'] !== null ? element['raw stat from query'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['plotted stat'] != undefined && element['plotted stat'] !== null ? element['plotted stat'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['std dev'] != undefined && element['std dev'] !== null ? element['std dev'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['std error'] != undefined && element['std error'] !== null ? element['std error'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['lag1'] != undefined && element['lag1'] !== null ? element['lag1'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (('n' in element) && element['n'] ? element['n'] : fillStr) + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.profile:\n                line += \"<td>\" + element[labelKey += \" level\"] + \"</td>\" +\n                    \"<td>\" + (element['raw stat from query'] != undefined && element['raw stat from query'] !== null ? element['raw stat from query'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['plotted stat'] != undefined && element['plotted stat'] !== null ? element['plotted stat'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['std dev'] != undefined && element['std dev'] !== null ? element['std dev'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['std error'] != undefined && element['std error'] !== null ? element['std error'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['lag1'] != undefined && element['lag1'] !== null ? element['lag1'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (('n' in element) ? element['n'] : fillStr) + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.dieoff:\n                line += \"<td>\" + element[labelKey += \" forecast lead time\"] + \"</td>\" +\n                    \"<td>\" + (element['raw stat from query'] != undefined && element['raw stat from query'] !== null ? element['raw stat from query'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['plotted stat'] != undefined && element['plotted stat'] !== null ? element['plotted stat'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['std dev'] != undefined && element['std dev'] !== null ? element['std dev'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (('n' in element) ? element['n'] : fillStr) + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.threshold:\n                line += \"<td>\" + element[labelKey += \" threshold (in)\"] + \"</td>\" +\n                    \"<td>\" + (element['raw stat from query'] != undefined && element['raw stat from query'] !== null ? element['raw stat from query'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['plotted stat'] != undefined && element['plotted stat'] !== null ? element['plotted stat'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['std dev'] != undefined && element['std dev'] !== null ? element['std dev'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (('n' in element) ? element['n'] : fillStr) + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.validtime:\n                line += \"<td>\" + element[labelKey += \" hour of day\"] + \"</td>\" +\n                    \"<td>\" + (element['raw stat from query'] != undefined && element['raw stat from query'] !== null ? element['raw stat from query'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['plotted stat'] != undefined && element['plotted stat'] !== null ? element['plotted stat'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['std dev'] != undefined && element['std dev'] !== null ? element['std dev'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (('n' in element) ? element['n'] : fillStr) + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.dailyModelCycle:\n                line += \"<td>\" + element[labelKey += \" time\"] + \"</td>\" +\n                    \"<td>\" + (element['raw stat from query'] != undefined && element['raw stat from query'] !== null ? element['raw stat from query'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['plotted stat'] != undefined && element['plotted stat'] !== null ? element['plotted stat'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['std dev'] != undefined && element['std dev'] !== null ? element['std dev'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (('n' in element) ? element['n'] : fillStr) + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.reliability:\n                line += \"<td>\" + element[labelKey += \" probability bin\"] + \"</td>\" +\n                    \"<td>\" + (element['hit rate'] != undefined && element['hit rate'] !== null ? element['hit rate'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['oy'] != undefined && element['oy'] !== null ? element['oy'] : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['on'] != undefined && element['on'] !== null ? element['on'] : fillStr) + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.map:\n                line += \"<td>\" + element[\"Site Name\"] + \"</td>\" +\n                    \"<td>\" + (element['Number of Times'] != undefined && element['Number of Times'] !== null ? element['Number of Times'] : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['Start Date'] != undefined && element['Start Date'] !== null ? element['Start Date'] : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['End Date'] != undefined && element['End Date'] !== null ? element['End Date'] : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['Average Difference'] != undefined && element['Average Difference'] !== null ? element['Average Difference'] : fillStr) + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.histogram:\n                line += \"<td>\" + element[labelKey += \" bin range\"] + \"</td>\" +\n                    \"<td>\" + (('n' in element) ? element['n'] : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['bin rel freq'] != undefined && element['bin rel freq'] !== null ? element['bin rel freq'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['bin lower bound'] != undefined && element['bin lower bound'] !== null ? element['bin lower bound'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['bin upper bound'] != undefined && element['bin upper bound'] !== null ? element['bin upper bound'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['bin mean'] != undefined && element['bin mean'] !== null ? element['bin mean'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['bin std dev'] != undefined && element['bin std dev'] !== null ? element['bin std dev'].toPrecision(4) : fillStr) + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.contour:\n            case matsTypes.PlotTypes.contourDiff:\n                line += \"<td>\" + element[\"xVal\"] + \"</td>\" +\n                    \"<td>\" + element[\"yVal\"] + \"</td>\" +\n                    \"<td>\" + (element['stat'] != undefined && element['stat'] !== null ? element['stat'] : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['N'] != undefined && element['N'] !== null ? element['N'] : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['Start Date'] != undefined && element['Start Date'] !== null ? element['Start Date'] : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['End Date'] != undefined && element['End Date'] !== null ? element['End Date'] : fillStr) + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.scatter2d:\n                line += \"<td>\" + (element['xAxis'] != undefined && element['xAxis'] !== null ? element['xAxis'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['yAxis'] != undefined && element['yAxis'] !== null ? element['yAxis'].toPrecision(4) : fillStr) + \"</td>\" +\n                    \"<td>\" + (element['best fit'] != undefined && element['best fit'] !== null ? element['best fit'] : fillStr) + \"</td>\";\n                break;\n            default:\n                break;\n        }\n        return line;\n    },\n\n    // get the table row values for the summary stats at the top of the text page\n    stats: function (curve) {\n        if (Session.get(\"plotResultKey\") === undefined) {\n            return [];\n        }\n        var curves = Session.get('Curves');\n        if (curves === undefined || curves.length == 0) {\n            return [];\n        }\n        var cindex;\n        for (cindex = 0; cindex < curves.length; cindex++) {\n            if (curves[cindex].label == curve.label) {\n                break;\n            }\n        }\n        if (matsCurveUtils.getPlotResultData() === null ||\n            matsCurveUtils.getPlotResultData() === undefined ||\n            matsCurveUtils.getPlotResultData().stats === undefined ||\n            matsCurveUtils.getPlotResultData().stats[curves[cindex].label] === undefined) {\n            return \"\";\n        }\n        const stats = matsCurveUtils.getPlotResultData().stats[curves[cindex].label];\n\n        var line = \"\";\n        switch (Session.get('plotType')) {\n            case matsTypes.PlotTypes.timeSeries:\n            case matsTypes.PlotTypes.profile:\n            case matsTypes.PlotTypes.dailyModelCycle:\n                line += \"<td>\" + curve['label'] + \"</td>\" +\n                    \"<td>\" + (stats['mean'] != undefined && stats['mean'] !== null ? stats['mean'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['standard deviation'] != undefined && stats['standard deviation'] !== null ? stats['standard deviation'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['n']).toString() + \"</td>\" +\n                    \"<td>\" + (stats['standard error'] != undefined && stats['standard error'] != null ? stats['standard error'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['lag1'] != undefined && stats['lag1'] != null ? stats['lag1'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['minimum'] != undefined && stats['minimum'] != null ? stats['minimum'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['maximum'] != undefined && stats['maximum'] != null ? stats['maximum'].toPrecision(4) : \"undefined\").toString() + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.dieoff:\n            case matsTypes.PlotTypes.threshold:\n            case matsTypes.PlotTypes.validtime:\n                line += \"<td>\" + curve['label'] + \"</td>\" +\n                    \"<td>\" + (stats['mean'] != undefined && stats['mean'] !== null ? stats['mean'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['standard deviation'] != undefined && stats['standard deviation'] !== null ? stats['standard deviation'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['n']).toString() + \"</td>\" +\n                    \"<td>\" + (stats['minimum'] != undefined && stats['minimum'] != null ? stats['minimum'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['maximum'] != undefined && stats['maximum'] != null ? stats['maximum'].toPrecision(4) : \"undefined\").toString() + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.reliability:\n                line += \"<td>\" + curve['label'] + \"</td>\" +\n                    \"<td>\" + (stats['sample climo'] != undefined && stats['sample climo'] !== null ? stats['sample climo'].toPrecision(4) : \"undefined\").toString() + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.map:\n                line += \"<td>\" + curve['label'] + \"</td>\" +\n                    \"<td>\" + (stats['mean difference'] != undefined && stats['mean difference'] !== null ? stats['mean difference'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['standard deviation'] != undefined && stats['standard deviation'] !== null ? stats['standard deviation'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['total number of obs'] != undefined && stats['total number of obs'] !== null ? stats['total number of obs'] : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['minimum time'] != undefined && stats['minimum time'] != null ? stats['minimum time'] : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['maximum time'] != undefined && stats['maximum time'] != null ? stats['maximum time'] : \"undefined\").toString() + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.histogram:\n                line += \"<td>\" + curve['label'] + \"</td>\" +\n                    \"<td>\" + (stats['mean'] != undefined && stats['mean'] !== null ? stats['mean'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['standard deviation'] != undefined && stats['standard deviation'] != null ? stats['standard deviation'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['n']).toString() + \"</td>\" +\n                    \"<td>\" + (stats['minimum'] != undefined && stats['minimum'] != null ? stats['minimum'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['maximum'] != undefined && stats['maximum'] != null ? stats['maximum'].toPrecision(4) : \"undefined\").toString() + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.contour:\n            case matsTypes.PlotTypes.contourDiff:\n                line += \"<td>\" + curve['label'] + \"</td>\" +\n                    \"<td>\" + (stats['mean stat'] != undefined && stats['mean stat'] !== null ? stats['mean stat'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['total number of points'] != undefined && stats['total number of points'] !== null ? stats['total number of points'] : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['minimum time'] != undefined && stats['minimum time'] != null ? stats['minimum time'] : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['maximum time'] != undefined && stats['maximum time'] != null ? stats['maximum time'] : \"undefined\").toString() + \"</td>\";\n                break;\n            case matsTypes.PlotTypes.scatter2d:\n                line += \"<td>\" + curve['label'] + \"</td>\" +\n                    \"<td>\" + (stats['mean'] != undefined && stats['mean'] !== null ? stats['mean'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['standard deviation'] != undefined && stats['standard deviation'] !== null ? stats['standard deviation'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['n']).toString() + \"</td>\" +\n                    \"<td>\" + (stats['standard error'] != undefined && stats['standard error'] != null ? stats['standard error'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['lag1'] != undefined && stats['lag1'] != null ? stats['lag1'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['minimum'] != undefined && stats['minimum'] != null ? stats['minimum'].toPrecision(4) : \"undefined\").toString() + \"</td>\" +\n                    \"<td>\" + (stats['maximum'] != undefined && stats['maximum'] != null ? stats['maximum'].toPrecision(4) : \"undefined\").toString() + \"</td>\";\n                break;\n            default:\n                break;\n        }\n        return line;\n    }\n});\n\nTemplate.textOutput.events({\n    'click .export': function () {\n        var plotType = Session.get('plotType');\n        var key = Session.get('plotResultKey');\n        // open a new window with\n        window.open(window.location + \"/CSV/\" + Session.get(\"graphFunction\") + \"/\" + Session.get(\"plotResultKey\") + \"/\" + Session.get('plotParameter') + \"/\" + matsCollections.Settings.findOne({}, {fields: {Title: 1}}).Title);\n    }\n});\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {Meteor} from 'meteor/meteor';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport {\n    matsCollections,\n    matsCurveUtils,\n    matsGraphUtils,\n    matsMethods,\n    matsParamUtils,\n    matsPlotUtils,\n    matsTypes\n} from 'meteor/randyp:mats-common';\nimport {Template} from 'meteor/templating';\nimport {FlowRouter} from 'meteor/ostrio:flow-router-extra';\nimport './graphStandAlone.html';\n\nvar annotation = \"\";\nvar resizeOptions;\n\nTemplate.GraphStandAlone.onCreated(function () {\n    // get the params for what this window will contain from the route\n    console.log(\"GraphStandAlone.onCreated\");\n    Session.set('route', FlowRouter.getRouteName());\n    Session.set(\"graphFunction\", FlowRouter.getParam('graphFunction'));\n    Session.set(\"plotResultKey\", FlowRouter.getParam('key'));\n    Session.set(\"plotParameter\", FlowRouter.getParam('matching'));\n    Session.set(\"appName\", FlowRouter.getParam('appName'));\n});\n\nTemplate.GraphStandAlone.onRendered(function () {\n    // the window resize event needs to also resize the graph\n    $(window).resize(function () {\n        document.getElementById('placeholder').style.width = matsGraphUtils.standAloneWidth();\n        document.getElementById('placeholder').style.height = matsGraphUtils.standAloneHeight();\n        var dataset = matsCurveUtils.getGraphResult().data;\n        Plotly.newPlot($(\"#placeholder\")[0], dataset, resizeOptions, {showLink: true});\n    });\n    document.getElementById('graph-container').style.backgroundColor = 'white';\n});\n\nTemplate.GraphStandAlone.helpers({\n    /**\n     * @return {string}\n     * @return {string}\n     */\n    graphFunction: function (params) {\n        // causes graph display routine to be processed\n        var graphFunction = FlowRouter.getParam('graphFunction');\n        var key = FlowRouter.getParam('key');\n        matsMethods.getGraphDataByKey.call({resultKey: key,}, function (error, ret) {\n            if (error !== undefined) {\n                setError(error);\n                matsCurveUtils.resetGraphResult();\n                return false;\n            }\n            matsCurveUtils.setGraphResult(ret.result);\n            Session.set(\"plotResultKey\", ret.key);\n            Session.set('Curves', ret.result.basis.plotParams.curves);\n            Session.set('graphFunction', graphFunction);\n            Session.set('PlotResultsUpDated', new Date());\n            Session.set('PlotParams', ret.result.basis.plotParams);\n            var ptypes = Object.keys(ret.result.basis.plotParams.plotTypes);\n            for (var i = 0; i < ptypes.length; i++) {\n                if (ret.result.basis.plotParams.plotTypes[ptypes[i]] === true) {\n                    Session.set('plotType', ptypes[i]);\n                    break;\n                }\n            }\n            delete ret;\n            if (graphFunction) {\n                eval(graphFunction)(key);\n                var plotType = Session.get('plotType');\n                var dataset = matsCurveUtils.getGraphResult().data;\n                var options = matsCurveUtils.getGraphResult().options;\n                if (dataset === undefined) {\n                    return false;\n                }\n                // make sure to capture the options (layout) from the old graph - which were stored in graph.js\n                matsMethods.getLayout.call({resultKey: key,}, function (error, ret) {\n                    if (error !== undefined) {\n                        setError(error);\n                        return false;\n                    }\n                    var mapLoadPause = 0;\n                    options = ret.layout;\n                    if (plotType === matsTypes.PlotTypes.map) {\n                        options.mapbox.zoom = 2.75;\n                        mapLoadPause = 1000;\n                    }\n                    resizeOptions = options;\n\n                    // initial plot\n                    $(\"#legendContainer\").empty();\n                    $(\"#placeholder\").empty();\n\n                    // need a slight delay for plotly to load\n                    setTimeout(function () {\n                        Plotly.newPlot($(\"#placeholder\")[0], dataset, options, {showLink: false});\n                        // update changes to the curve ops -- need to pause if we're doing a map so the map can finish loading before we try to edit it\n                        setTimeout(function() {\n                            const updates = ret.curveOpsUpdate.curveOpsUpdate;\n                            for (var uidx = 0; uidx < updates.length; uidx++) {\n                                var curveOpsUpdate = {};\n                                var updatedKeys = Object.keys(updates[uidx]);\n                                for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n                                    var jsonHappyKey = updatedKeys[kidx];\n                                    // turn the json placeholder back into .\n                                    var updatedKey = jsonHappyKey.split(\"____\").join(\".\");\n                                    curveOpsUpdate[updatedKey] = updates[uidx][jsonHappyKey];\n                                }\n                                Plotly.restyle($(\"#placeholder\")[0], curveOpsUpdate, uidx);\n                            }\n                        }, mapLoadPause);\n                    }, 100);\n\n                    // append annotations\n                    if (plotType !== matsTypes.PlotTypes.map) {\n                        annotation = \"\";\n                        for (var i = 0; i < dataset.length; i++) {\n                            if (plotType !== matsTypes.PlotTypes.histogram && dataset[i].curveId !== undefined) {\n                                annotation = annotation + \"<div id='\" + dataset[i].curveId + \"-annotation' style='color:\" + dataset[i].annotateColor + \"'>\" + dataset[i].annotation + \" </div>\";\n                            }\n                        }\n                        $(\"#legendContainer\").append(\"<div id='annotationContainer' style='font-size:smaller'>\" + annotation + \"</div>\");\n                    }\n                    document.getElementById(\"gsaSpinner\").style.display = \"none\";\n                });\n            }\n        });\n    },\n    graphFunctionDispay: function () {\n        return \"block\";\n    },\n    Title: function () {\n        return Session.get('appName');\n    },\n    width: function () {\n        return matsGraphUtils.standAloneWidth();\n    },\n    height: function () {\n        return matsGraphUtils.standAloneHeight();\n    },\n    curves: function () {\n        return Session.get('Curves');\n    },\n    plotName: function () {\n        return (Session.get('PlotParams') === [] || Session.get('PlotParams').plotAction === undefined) || Session.get('plotType') === matsTypes.PlotTypes.map ? \"\" : Session.get('PlotParams').plotAction.toUpperCase();\n    },\n    curveText: function () {\n        if (this.diffFrom === undefined) {\n            var plotType = Session.get('plotType');\n            if (plotType === undefined) {\n                pfuncs = matsCollections.PlotGraphFunctions.find({}).fetch();\n                for (var i = 0; i < pfuncs.length; i++) {\n                    if (pfuncs[i].checked === true) {\n                        Session.set('plotType', pfuncs[i].plotType);\n                    }\n                }\n                plotType = Session.get('plotType');\n            }\n            return matsPlotUtils.getCurveText(plotType, this);\n        } else {\n            return this.label + \":  Difference\";\n        }\n    },\n    plotText: function () {\n        var p = Session.get('PlotParams');\n        if (p !== undefined) {\n            var format = p.plotFormat;\n            if (matsCollections.PlotParams.findOne({name: 'plotFormat'}) &&\n                matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap &&\n                matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap[p.plotFormat] !== undefined) {\n                format = matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap[p.plotFormat];\n            }\n            if (format === undefined) {\n                format = \"Unmatched\";\n            }\n            var plotType = Session.get('plotType');\n            switch (plotType) {\n                case matsTypes.PlotTypes.timeSeries:\n                    return \"TimeSeries \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.profile:\n                    return \"Profile: \" + format;\n                case matsTypes.PlotTypes.dieoff:\n                    return \"DieOff: \" + format;\n                case matsTypes.PlotTypes.threshold:\n                    return \"Threshold: \" + format;\n                case matsTypes.PlotTypes.validtime:\n                    return \"ValidTime: \" + format;\n                case matsTypes.PlotTypes.dailyModelCycle:\n                    return \"DailyModelCycle \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.reliability:\n                    return \"Reliability: \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.map:\n                    return \"Map \" + p.dates + \" \";\n                case matsTypes.PlotTypes.histogram:\n                    return \"Histogram: \" + format;\n                case matsTypes.PlotTypes.contour:\n                    return \"Contour \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.contourDiff:\n                    return \"ContourDiff \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.scatter2d:\n                    break;\n                default:\n                    return \"Scatter: \" + p.dates + \" : \" + format;\n            }\n        } else {\n            return \"no plot params\";\n        }\n    },\n    color: function () {\n        return this.color;\n    },\n    annotateButtonText: function () {\n        var sval = this.label + \"annotateButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'hide annotation');\n        }\n        return Session.get(sval);\n    },\n    annotateShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.map || plotType === matsTypes.PlotTypes.histogram) {\n            return 'none';\n        } else {\n            return 'block';\n        }\n    },\n    matsplotFilemname: function () {\n        return \"matsplot-\" + moment(new Date()).format(\"DD-MM-YYYY-hh:mm:ss\")\n    },\n    image: function () {\n        var img = Session.get(\"spinner_img\");\n        if (img == undefined) {\n            img = \"spinner.gif\";\n            Session.set(\"spinner_img\", \"../../../../../image/spinner.gif\");\n        }\n        return img;\n    }\n});\n\nTemplate.GraphStandAlone.events({\n    'click .annotateVisibility': function (event) {\n        event.preventDefault();\n        const id = event.target.id;\n        const label = id.replace('-curve-show-hide-annotate', '');\n        if ($('#' + label + \"-annotation\")[0].hidden) {\n            $('#' + label + \"-annotation\")[0].style.display = \"block\";\n            $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"hide annotation\";\n            $('#' + label + \"-annotation\")[0].hidden = false;\n        } else {\n            $('#' + label + \"-annotation\")[0].style.display = \"none\";\n            $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"show annotation\";\n            $('#' + label + \"-annotation\")[0].hidden = true;\n        }\n        annotation = $('#annotationContainer')[0].innerHTML;\n    },\n    'click .exportpdf': function (e) {\n        $(\".previewCurveButtons\").each(function (i, obj) {\n            obj.style.display = \"none\";\n        });\n        //const filename  = 'MATSPlot' + moment(new Date()).format(\"DD-MM-YYYY-hh:mm:ss\") + '.pdf';\n        html2canvas(document.querySelector('#graph-container'), {scale: 3.0}).then(canvas => {\n            var h = 419.53;\n            var w = 595.28;\n            var filename = document.getElementById(\"exportFileName\").value;\n            let pdf = new jsPDF('letter', 'pt', 'a5');\n            pdf.addImage(canvas.toDataURL('image/jpeg'), 'JPEG', 0, 0, w, h);\n            pdf.save(filename);\n            $(\".previewCurveButtons\").each(function (i, obj) {\n                obj.style.display = \"block\";\n            });\n        });\n    },\n    'click .exportpng': function (e) {\n        $(\".previewCurveButtons\").each(function (i, obj) {\n            obj.style.display = \"none\";\n        });\n        html2canvas(document.querySelector('#graph-container'), {scale: 3.0}).then(canvas => {\n            var h = 419.53;\n            var w = 595.28;\n            var filename = document.getElementById(\"exportFileName\").value;\n            saveAs(canvas.toDataURL(), filename + '.png');\n            $(\".previewCurveButtons\").each(function (i, obj) {\n                obj.style.display = \"block\";\n            });\n        });\n\n        function saveAs(uri, filename) {\n            var link = document.createElement('a');\n            if (typeof link.download === 'string') {\n                link.href = uri;\n                link.download = filename;\n\n                //Firefox requires the link to be in the body\n                document.body.appendChild(link);\n\n                //simulate click\n                link.click();\n\n                //remove the link when done\n                document.body.removeChild(link);\n            } else {\n                window.open(uri);\n            }\n        }\n    }\n});\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsCurveUtils } from 'meteor/randyp:mats-common';\nimport { matsParamUtils } from 'meteor/randyp:mats-common'\nimport { matsTypes } from 'meteor/randyp:mats-common'\nTemplate.textInput.helpers({\n    defaultTextInput: function() {\n        if (this.name == 'label') {   // labels are handled specially\n            var label;\n            var input = document.getElementById('label-textInput');\n            var value = document.getElementById('controlButton-label-value');\n            if (input && value) {\n                if (label !== input.value || label != value.textContent) {\n                    if (!Session.get('NextCurveLabel')) {\n                        label = matsCurveUtils.getNextCurveLabel();\n                    } else {\n                        label = Session.get('NextCurveLabel');\n                    }\n                    input.value = label;\n                    value.textContent = label;\n                    return label;\n                }\n            } else {\n                // must be initialization\n                label = matsCurveUtils.getNextCurveLabel();\n                return label;\n            }\n        } else {\n            return this.default;\n        }\n    }\n});\n\nTemplate.textInput.events({\n    'click, blur': function (event) {\n        try {\n            // label is handled differently - special case because of NextCurveLabel stored in Session\n            const text = event.currentTarget.value;\n            if (event.target.name == \"label\" && Session.get('NextCurveLabel') == text) {\n            } else {\n                matsParamUtils.setValueTextForParamName(event.target.name, text);\n            }\n        } catch (error){\n            matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n        }\n    },\n    'change': function (event) {\n        try {\n            // label is handled differently - special case because of NextCurveLabel stored in Session\n            const text = event.currentTarget.value;\n            if (Object.values(matsTypes.ReservedWords).indexOf(text) === -1) {\n                matsParamUtils.setValueTextForParamName(event.target.name, text);\n                Session.set(\"NextCurveLabel\", text);\n            } else {\n                console.log(\"that curve label is not allowed\");\n                setTimeout(function (){\n                    matsParamUtils.setValueTextForParamName(event.target.name, \"LabelNotAllowed\");\n                }, 10);\n            }\n        } catch (error){\n            matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n        }\n    }\n});\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsTypes } from 'meteor/randyp:mats-common';\nimport { matsCollections } from 'meteor/randyp:mats-common';\nimport { matsParamUtils } from 'meteor/randyp:mats-common';\nimport { matsSelectUtils } from 'meteor/randyp:mats-common';\n\n/*\n    Much of the work for select widgets happens in mats-common->imports->client->select_util.js. Especially the refresh\n    routine which sets all the options. Don't forget to look there for much of the handling.\n */\nTemplate.select.onRendered( function () {\n    const ref = this.data.name + '-' + this.data.type;\n    $(\"#\" + ref).select2({minimumResultsForSearch: 20,closeOnSelect: false});\n\n    const elem = document.getElementById(ref);\n    try {\n        // register refresh event for axis change to use to enforce a refresh\n\n        elem && elem.addEventListener('axisRefresh', function (event) {\n            // Don't know why I have to do this, I expected the parameter data to be in the context....\n            const paramData = matsCollections.CurveParams.findOne({name: this.name}, {dependentNames: 1, peerName: 1});\n            matsSelectUtils.refreshPeer(event,paramData);\n        });\n\n        // register refresh event for any superior to use to enforce a refresh of the options list\n        if (ref.search('axis') === 1) {\n            // this is a \"brother\" (hidden) scatterplot param. There is no need to refresh it or add event listeners etc.\n            return;\n        }\n        elem.options = [];\n        elem && elem.addEventListener('refresh', function (event) {\n            matsSelectUtils.refresh(event,this.name);\n        });\n    } catch (e) {\n        e.message = \"Error in select.js rendered: \" + e.message;\n        setError(e);\n    }\n    try {\n        matsSelectUtils.checkHideOther(this.data,true); // calls checkDisable\n        matsSelectUtils.refresh(null,this.data.name);\n    } catch (e) {\n        e.message = \"Error in select.js rendered function checking to hide or disable other elements: \" + e.message;\n        setError(e);\n    }\n});\n\nTemplate.select.helpers({\n    optionMaxLength: function() {\n        var sOptions = [];\n        if (!this.options) {\n            return 10;\n        }\n        const longest = (this.options).reduce(function (a, b) {\n            if (a === null && b === null) {\n                return  null;\n            }\n            if (a === null) {\n                return b;\n            }\n            if (b === null) {\n                return a;\n            }\n            return a.length > b.length ? a : b;\n        });\n        if (!longest) {\n            return 10;\n        }\n        const ret = longest.length <= 10 ? 10 : Math.round(longest.length * 0.8);\n\n        return ret;\n    },\n\n    isSelectedByDefault: function (p) {\n        if (p.default == this) {\n            return \"selected\";   // the selected option\n        } else {\n            return \"\"; // not the selected option\n        }\n    },\n    options: function () {\n        var sOptions = [];\n        //process options as an option list\n        if (this.options === matsTypes.InputTypes.unused) {\n            return [];\n        } else if (this.optionsGroups) {\n            // options have optionGroups\n            this.optionsGroups.foreach(function(value) {\n                Soptions.concat(value);\n            });\n        } else {\n            sOptions = matsParamUtils.typeSort(this.options);\n        }\n        return sOptions;\n    },\n    multiple: function () {\n        if (this.multiple === true) {\n            return \"multiple\";\n        }\n    },\n    isMultiple: function () {\n        return this.multiple === true;\n    },\n    selectionIsOptional: function () {\n        return this.selectionOptional === true;\n    }\n});\n\nconst setValue = function(pName) {\n    const elem = matsParamUtils.getInputElementForParamName(pName);\n    const selectedOptions = elem.selectedOptions;\n    const options = elem.options;\n\n    if (selectedOptions === undefined || selectedOptions.length === 0 || elem.selectedIndex === -1) {\n        // set to the default - the 0th one\n        matsParamUtils.setValueTextForParamName(pName, matsTypes.InputTypes.unused);\n    } else {\n        if (selectedOptions.length === 1) {\n            matsParamUtils.setValueTextForParamName(pName, selectedOptions[0].text);\n        } else {\n            // selected options is greater than 1 - must be a multiple\n            const firstOption = selectedOptions[0];\n            const lastOption = selectedOptions[selectedOptions.length -1];\n            const text = firstOption.text + \" .. \" + lastOption.text;\n            matsParamUtils.setValueTextForParamName(pName, text);\n        }\n    }\n}\n\n\nTemplate.select.events({\n    'change .data-input': function (event) {\n        Session.set(\"elementChanged\", Date.now());\n        const paramName =  event.target.name;\n        if (paramName === undefined) {\n            return false;\n        }\n        // These need to be done in the right order!\n        // always check to see if an \"other\" needs to be hidden or disabled before refreshing\n        matsSelectUtils.checkHideOther(this, false);\n        matsSelectUtils.refreshPeer(event, this);\n        document.getElementById(\"element-\" + this.name).style.display = \"none\"; // be sure to hide the element div\n        const curveItem = document.getElementById(\"curveItem-\" + Session.get(\"editMode\"));\n        curveItem && curveItem.scrollIntoView(false);\n        setValue(paramName);\n        if (this.multiple) {\n            return true; // prevents the select 2 from closing on multiple selectors\n        }\n        $('#' + this.name + \"-\" + this.type).select2('close');\n        matsSelectUtils.refreshDependents(event, this);\n        Session.set('lastUpdate', Date.now());\n        return false;\n    },\n    'click .doneSelecting': function (event) {\n        Session.set(\"elementChanged\", Date.now());\n        const controlElem = matsParamUtils.getControlElementForParamName(this.name);\n        $('#' + this.name + \"-\" + this.type).select2(\"close\").trigger('change'); // apply the selection choices to the select2\n        const editMode = Session.get(\"editMode\");\n        const curveItem = (editMode === undefined && editMode === \"\") ? undefined : document.getElementById(\"curveItem-\" + editMode);\n        if (curveItem) {\n            $('#save').trigger('click');\n        }\n        if (editMode) {\n            $('#' + this.name + \"-\" + this.type).select2(\"close\"); // use the close on the selector when editing\n        } else {\n            $(controlElem).trigger('click');  // clicking the control element hides the selector when not editing\n            $('#' + this.name + \"-\" + this.type).select2(\"close\");\n        }\n        return false;\n    },\n    'click .selectAll': function (event) {\n        const elem = matsParamUtils.getInputElementForParamName(this.name);\n        var values = [];\n        for (var i=0; i<elem.options.length; i++) {\n             values.push(elem.options[i].text);\n         }\n        $('#' + this.name + \"-\" + this.type).select2().val(values).trigger('change');\n        return false;\n    },\n    'click .clearSelections': function (event) {\n        const elem = matsParamUtils.getInputElementForParamName(this.name);\n        $('#' + this.name + \"-\" + this.type).select2().val(null).trigger('change');\n        return false;\n    },\n    'click .doNotUse': function (event) {\n        const elem = matsParamUtils.getInputElementForParamName(this.name);\n        $('#' + this.name + \"-\" + this.type).select2().val(null).trigger('change');\n        return false;\n    },\n    'change, blur .item' : function (event) {\n        try {\n            var text = \"\";\n            if (this.type == matsTypes.InputTypes.selectOrderEnforced) {\n                /* check the validity of the order enforcement.\n                   The requirement for order enforced selectors is that\n                   some curve must have previously selected the earlier (lower ordered)\n                   options in the options array, not counting the default option to make this a valid selection.\n                   For example if my options are... ['auto by variable','y1','y2',y3'] and 'auto by variable'\n                   is the selectors default then choosing 'y2' or 'y3' prior to choosing 'y1' is not valid and\n                   choosing 'y3' prior to choosing 'y1' and 'y2' is not valid.\n                 */\n                // what is the default?\n                var defaultOption = this.default;\n                var selection = $(event.target).val();\n                var curves = Session.get('Curves');\n                var options = this.options;\n                var priorSelected = [defaultOption];\n                for (var ci = 0; ci < curves.length; ci++) {\n                    var curve = curves[ci];\n                    var curveOption = curve[this.name];\n                    priorSelected.push(curveOption);\n                }\n                var unusedOption = \"\";\n                if (!priorSelected.includes(selection)) {\n                    // this option has not been selected prior\n                    // check to see if all the prior options to this one are selected\n                    for (var oi = 0; oi < options.length; oi++) {\n                        var option = options[oi];\n                        // We reached the selected option\n                        if (option == selection) {\n                            break;\n                        }\n                        if (!priorSelected.includes(option)) {\n                            unusedOption = option;\n                            break;\n                        }\n                    }\n                    if (unusedOption === \"\") {\n                        // is valid all prior options were selected\n                        event.target.setCustomValidity(this.name,\"\");\n                    } else {\n                        // HACK ALERT! the customValidity stuff seems to have been overridden in the invalid event event handler of item.js\n                        Session.set('errorMessage',\"The prior option: \" + unusedOption + \" was not selected for this selector, you must use that first.\")\n                        event.target.setCustomValidity(this.name,\"The prior option: \" + unusedOption + \" was not selected for this selector, you must use that first.\");\n                        event.target.checkValidity();\n//                        matsParamUtils.setInputForParamName(this.name,this.default);\n                    }\n                }\n            }\n            if (event.target.multiple) {\n                const values = $(event.target).val();\n                if (values === null) { // happens if unused or empty\n                    text = matsTypes.InputTypes.unused;\n                } else {\n                    const firstOption = values[0];\n                    const lastOption = values[values.length - 1];\n                    text = firstOption + \" .. \" + lastOption;\n                }\n            } else {\n                text = $(event.target).val();\n            }\n            if (this.type === matsTypes.InputTypes.select && (text === \"\" || text === undefined || text === null) &&\n                (this.default === -1 || this.default === undefined || this.default === null || event.currentTarget.selectedIndex == -1)) {\n                text = matsTypes.InputTypes.unused;\n                //$('#' + this.name + \"-\" + this.type).select2().val(null).trigger('change');\n            }\n            matsParamUtils.setValueTextForParamName(event.target.name, text);\n        } catch (error){\n            matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n        }\n        const editMode = Session.get(\"editMode\");\n        const curveItem = (editMode === undefined && editMode === \"\") ? undefined : document.getElementById(\"curveItem-\" + editMode);\n        if (curveItem) {\n            $('#save').trigger('click');\n        }\n        if (event.target.multiple) {\n            Session.set('editMode', editMode); // restore the editing of the curve item for muli selects\n            const controlElem = matsParamUtils.getControlElementForParamName(this.name);\n            $(controlElem).trigger('click');  // reopen the select2 - the regular open is not located properly so do it by clicking the control element button\n        }\n        return false;\n    }\n});\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsParamUtils} from 'meteor/randyp:mats-common';\n\nTemplate.map.onRendered(function () {\n\n    var defaultAttrs = this;    // save for when we need to reset to defaults\n\n    $.getScript(\"https://cdn.plot.ly/plotly-latest.min.js\", function () {\n        var targetId = '';\n        var peerName = '';\n        var markers = [];\n        var thisMarkers = [];\n        var peerOptions = [];\n        var selectedValues = [];\n        var divElement = '';\n        var divId = '';\n        var layout = {};\n        var dataset = {};\n\n        // method to initialize the map selector\n        var initializeSelectorMap = function (item) {\n            var defaultPoint = item.data.defaultMapView.point;\n            var defaultZoomLevel = item.data.defaultMapView.zoomLevel;\n            peerName = item.data.peerName;\n\n            var targetElement = document.getElementsByName(peerName)[0];\n            if (!targetElement) {\n                return;\n            }\n            targetId = '#' + targetElement.id;\n\n            markers = item.data.optionsMap;   // from app startup\n            thisMarkers = [];       // markers valid for this data source\n\n            // find out what peer options are available for this data source\n            peerOptions = [];\n            if (targetElement.options) {\n                for (var i = 0; i < targetElement.options.length; i++) {\n                    peerOptions.push(targetElement.options[i].text);\n                }\n            }\n            selectedValues = $(targetId).val() ? $(targetId).val() : [];\n\n            divElement = item.data.name + '-' + item.data.type;\n            divId = '#' + divElement;\n\n            layout = {\n                autosize: true,\n                // height: 500,\n                // width: 840,\n                hovermode: 'closest',\n                mapbox: {\n                    bearing: 0,\n                    center: {\n                        lat: defaultPoint[0],\n                        lon: defaultPoint[1]\n                    },\n                    pitch: 0,\n                    zoom: defaultZoomLevel,\n                    accesstoken: 'pk.eyJ1IjoibWF0cy1nc2QiLCJhIjoiY2pvN2l1N2MyMG9xdTN3bWR3ODV5a2E2ZiJ9.PtgcGhxaoD43N0OwJSNVMg',\n                    style: 'light'\n                },\n                margin: {\n                    l: 10,\n                    r: 10,\n                    b: 10,\n                    t: 10,\n                    pad: 4\n                },\n                showlegend: false,\n            };\n\n            dataset = {\n                label: 'sitesMap',\n                siteName: [],\n                lat: [],\n                lon: [],\n                text: [],\n                type: 'scattermapbox',\n                mode: 'markers',\n                marker: {\n                    color: [],\n                    opacity: 1\n                }\n            };\n\n            // set the initial site marker locations and colors\n            var marker;\n            for (var sidx = 0; sidx < peerOptions.length; sidx++) {\n                marker = markers.find(obj => {\n                    return obj.name === peerOptions[sidx];\n                });\n                thisMarkers[sidx] = marker;\n                dataset.siteName[sidx] = marker.name;\n                dataset.text[sidx] = marker.name;\n                dataset.lat[sidx] = marker.point[0];\n                dataset.lon[sidx] = marker.point[1];\n                if (selectedValues.indexOf(marker.name) === -1) {\n                    dataset.marker.color[sidx] = marker.options.color;\n                } else {\n                    dataset.marker.color[sidx] = marker.options.highLightColor;\n                }\n            }\n        };\n\n        // call the above initialization for the first time\n        initializeSelectorMap(defaultAttrs);\n\n        // draw the map for the first time\n        Plotly.newPlot($(divId)[0], [dataset], layout);\n\n        /*\n\n        The following lines of code are event handlers for if a user clicks on a single station, or uses the area select\n        tools to highlight a group of stations. For now, the logic is such that individual stations can toggle between\n        chosen and unchosen by clicking them, but the area select tools will just choose everything that is outlined.\n        This is so that if a user has been manually choosing stations and then gives up and uses the area select, all of\n        their intended stations will be chosen (the ones they had already manually selected won't be unchosen). There will\n        be some sort of 'deselect all' button on this modal to unchoose everything.\n\n        NOTE: We are using plotly's event handlers here, but we are not using its native chosen/unchosen capabilities.\n        Instead, we are getting the chosen values back from the area select and adding them into out own arrays. We then\n        finish by telling plotly to deselect everything in its own internal accounting. There are two reasons for this:\n            1) plotly's ways of handling chosen/unchosen values are way more complicated than is needed here\n            2) under plotly's system, if we use the area select once, we then can't go back and add other areas or\n            individual stations without losing the original selection.\n\n        However, we may want to explore plotly's native chosen/unchosen capabilities in the future for our process-oriented\n        verification.\n\n        --MBS, 11/13/18\n\n         */\n\n        // event handler for clicking individual stations\n        $(divId)[0].on('plotly_click', function (eventdata) {\n            //get index of current station\n            const currPoint = eventdata.points[0].pointNumber;\n            if (dataset.marker.color[currPoint] === thisMarkers[currPoint].options.color) {\n                // switch to selected color and add this station to our selected values array\n                dataset.marker.color[currPoint] = thisMarkers[currPoint].options.highLightColor;\n                selectedValues.push(eventdata.points[0].text);\n            } else {\n                // switch to deselected color and remove this station from our selected values array\n                dataset.marker.color[currPoint] = thisMarkers[currPoint].options.color;\n                var tidx = selectedValues.indexOf(eventdata.points[0].text);\n                if (tidx > -1) {\n                    selectedValues.splice(tidx, 1);\n                }\n            }\n            // update the marker color on the plot and the values in the site selector\n            var update = {'marker': {color: dataset.marker.color, opacity: 1}};\n            Plotly.restyle($(divId)[0], update, eventdata.points[0].curveNumber);\n            $(targetId).val(selectedValues).trigger(\"change\");\n            matsParamUtils.collapseParam(peerName);\n            $(targetId).select2(\"close\");\n        });\n\n        // event handler for outlining multiple stations\n        $(divId)[0].on('plotly_selected', function (eventdata) {\n            if (eventdata === undefined || (eventdata.points.length < 1)) {\n                // the user has clicked outside of the select area, so make sure plotly's area select is disabled.\n                // otherwise the user won't be able to choose individual stations after choosing an area select\n                $(divId + \" .select-outline\").remove();\n                Plotly.restyle($(divId)[0], {selectedpoints: [null]});\n            } else {\n                // the user has selected all the points in an area. Iterate through them and select any that are not already selected.\n                var currPoint;\n                eventdata.points.forEach(function (pt) {\n                    currPoint = pt.pointNumber;\n                    if (dataset.marker.color[currPoint] === thisMarkers[currPoint].options.color) {\n                        // switch to selected color and add this station to our selected values array\n                        dataset.marker.color[currPoint] = thisMarkers[currPoint].options.highLightColor;\n                        selectedValues.push(pt.text);\n                    }\n                });\n                // update the marker color on the plot and the values in the site selector\n                var update = {'marker': {color: dataset.marker.color, opacity: 1}};\n                Plotly.restyle($(divId)[0], update, eventdata.points[0].curveNumber);\n                $(targetId).val(selectedValues).trigger(\"change\");\n                matsParamUtils.collapseParam(peerName);\n                $(targetId).select2(\"close\");\n\n                // As per the comment block above, we're done here, so make sure plotly's area select is disabled.\n                // otherwise the user won't be able to choose individual stations after choosing an area select.\n                $(divId + \" .select-outline\").remove();\n                Plotly.restyle($(divId)[0], {selectedpoints: [null]});\n            }\n        });\n\n        // event handler for selecting all stations\n        $('.selectSites').on('click', function () {\n            event.preventDefault();\n            // fill the selected values array with all available options and change the marker to its highlight color\n            $(targetId).val(peerOptions).trigger(\"change\");\n            matsParamUtils.collapseParam(peerName);\n            $(targetId).select2(\"close\");\n            for (var sidx = 0; sidx < thisMarkers.length; sidx++) {\n                dataset.marker.color[sidx] = thisMarkers[sidx].options.highLightColor;\n            }\n            var update = {'marker': {color: dataset.marker.color, opacity: 1}};\n            Plotly.restyle($(divId)[0], update, [0]);\n        });\n\n        // event handler for deselecting all stations\n        $('.deselectSites').on('click', function () {\n            event.preventDefault();\n            // empty the selected values array and return the marker to its original color\n            $(targetId).val([]).trigger(\"change\");\n            matsParamUtils.collapseParam(peerName);\n            $(targetId).select2(\"close\");\n            for (var sidx = 0; sidx < thisMarkers.length; sidx++) {\n                dataset.marker.color[sidx] = thisMarkers[sidx].options.color;\n            }\n            var update = {'marker': {color: dataset.marker.color, opacity: 1}};\n            Plotly.restyle($(divId)[0], update, [0]);\n        });\n\n        // method to see if the available sites have changed for this data source\n        var refreshOptionsForPeer = function (peerElement) {\n            // find out what peer options are available\n            peerOptions = [];\n            if (peerElement.options) {\n                for (var i = 0; i < peerElement.options.length; i++) {\n                    peerOptions.push(peerElement.options[i].text);\n                }\n            }\n        };\n\n        // method to sync the map up with the sites selector\n        var refresh = function (peerElement) {\n            if (!peerElement) {\n                return;\n            }\n            var peerId = peerElement.id;\n            refreshOptionsForPeer(peerElement);\n            selectedValues = $('#' + peerId).val() ? $('#' + peerId).val() : [];\n\n            // need to redo these in case the available sites have changed for this data source\n            thisMarkers = [];\n            dataset.siteName = [];\n            dataset.text = [];\n            dataset.lat = [];\n            dataset.lon = [];\n            dataset.marker.color = [];\n            var marker;\n            for (var sidx = 0; sidx < peerOptions.length; sidx++) {\n                marker = markers.find(obj => {\n                    return obj.name === peerOptions[sidx];\n                });\n                thisMarkers[sidx] = marker;\n                dataset.siteName[sidx] = marker.name;\n                dataset.text[sidx] = marker.name;\n                dataset.lat[sidx] = marker.point[0];\n                dataset.lon[sidx] = marker.point[1];\n                if (selectedValues.indexOf(marker.name) === -1) {\n                    dataset.marker.color[sidx] = marker.options.color;\n                } else {\n                    dataset.marker.color[sidx] = marker.options.highLightColor;\n                }\n            }\n            $(divId)[0].data[0] = dataset;\n            Plotly.redraw($(divId)[0]);\n        };\n\n        // method to reset the map to defaults\n        var resetMap = function (item) {\n            initializeSelectorMap(item);\n            $(divId)[0].data[0] = dataset;\n            $(divId)[0].layout = layout;\n            Plotly.redraw($(divId)[0]);\n        };\n\n        // register an event listener so that the select.js can ask the map div to refresh after a selection\n        var elem = document.getElementById(divElement);\n        elem.addEventListener('refresh', function (e) {\n            refresh(e.detail.refElement);\n        });\n\n        // register an event listener so that the param_util.js can ask the map div to reset when someone clicks 'reset to defaults'\n        elem = document.getElementById(divElement);\n        elem.addEventListener('reset', function (e) {\n            resetMap(defaultAttrs);\n        });\n\n    });\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsCollections, matsCurveUtils, matsParamUtils, matsTypes} from 'meteor/randyp:mats-common';\n\nTemplate.dateRange.onRendered(function () {\n    //NOTE: Date fields are special in that they are qualified by plotType.\n    //TimeSeries and Scatter plots have a common date range\n    // but profile plots have a date range for each curve.\n    // The decision to hide or show a dataRange is made here in the dateRange template\n\n    // it seems that when the page is first rendered the checkbox might be yet defined (especially in safari).\n    // in that event we test for undefined and block the curve-dates-item anyway\n    if ((document.getElementById('plot-type-' + matsTypes.PlotTypes.timeSeries) == undefined || document.getElementById('plot-type-' + matsTypes.PlotTypes.timeSeries).checked === true) ||\n        (document.getElementById('plot-type-' + matsTypes.PlotTypes.dailyModelCycle) == undefined || document.getElementById('plot-type-' + matsTypes.PlotTypes.dailyModelCycle).checked === true) ||\n        (document.getElementById('plot-type-' + matsTypes.PlotTypes.scatter2d) == undefined || document.getElementById('plot-type-' + matsTypes.PlotTypes.scatter2d).checked === true)) {\n        if (document.getElementById('curve-dates-item')) {\n            document.getElementById('curve-dates-item').style.display = \"none\";\n        }\n        if (document.getElementById('dates-item')) {\n            document.getElementById('dates-item').style.display = \"block\";\n        }\n    } else {\n        if (document.getElementById('curve-dates-item')) {\n            document.getElementById('curve-dates-item').style.display = \"block\";\n        }\n        if (document.getElementById('dates-item')) {\n            document.getElementById('dates-item').style.display = \"none\";\n        }\n    }\n\n    const name = this.data.name;\n    const idref = name + \"-item\";\n    const elem = document.getElementById('element-' + name);\n    const superiorNames = this.data.superiorNames;\n    const defaultDateRange = matsParamUtils.getDefaultDateRange(name);\n    const startInit = defaultDateRange.startDate;\n    const stopInit = defaultDateRange.stopDate;\n    const dstr = defaultDateRange.dstr;\n\n        $(function () {\n        $('#' + idref).daterangepicker({\n            \"autoApply\": true,\n            \"parentEL\": $('#' + idref),\n            \"timePicker\": true,\n            \"timePicker24Hour\": true,\n            \"timePickerIncrement\": 1,\n            \"startDate\": startInit,\n            \"endDate\": stopInit,\n            \"showDropdowns\": true,\n            \"drops\": \"up\",\n\n            locale: {\n                format: 'MM/DD/YYYY HH:mm'\n            },\n            ranges: {\n                'Today': [moment().startOf('day'), moment().endOf('day')],\n                'Yesterday': [moment().subtract(1, 'days').startOf('day'), moment().subtract(1, 'days').endOf('day')],\n                'Last 7 Full Days': [moment().subtract(7, 'days').startOf('day'), moment().startOf('day')],\n                'Last 30 Full Days': [moment().subtract(30, 'days').startOf('day'), moment().startOf('day')],\n                'Last 60 Full Days': [moment().subtract(60, 'days').startOf('day'), moment().startOf('day')],\n                'Last 90 Full Days': [moment().subtract(90, 'days').startOf('day'), moment().startOf('day')],\n                'Last 180 Full Days': [moment().subtract(180, 'days').startOf('day'), moment().startOf('day')],\n            }, \"alwaysShowCalendars\": true,\n        });\n        matsParamUtils.setValueTextForParamName(name, dstr);\n    });\n\n    $('#' + idref).on('apply.daterangepicker', function (ev, picker) {\n        if (picker.startDate.toString() == picker.endDate.toString()) {\n            setError(new Error(\"date_range error:  Your start and end dates coincide, you must select a range! This is \" +\n                \"because METARs and other obs can come in at slightly different times, so selecting only one time might \" +\n                \"leave you with very few (or no) valid obs. Instead, try using a small range. For example, if you're \" +\n                \"targeting the top-of-the-hour METARs at 2:00 am, set your time range from 1:45 am to 2:00 am, because \" +\n                \"METARs often come in early.\"));\n            return false;\n        }\n        const valStr = picker.startDate.format('MM/DD/YYYY H:mm') + ' - ' + picker.endDate.format('MM/DD/YYYY H:mm');\n        matsParamUtils.setValueTextForParamName(name, valStr);\n        elem.style.display = \"none\";\n        const curveItem = (Session.get(\"editMode\") === undefined && Session.get(\"editMode\") === \"\") ? undefined : document.getElementById(\"curveItem-\" + Session.get(\"editMode\"));\n        if (curveItem) {\n            $('#save').trigger('click');\n        }\n    });\n    $('#' + idref).on('cancel.daterangepicker', function () {\n        elem.style.display = \"none\";\n    });\n\n    const refresh = function () {\n        try {\n            // get the current values from the element and check for invalid\n            const curVals = matsParamUtils.getValueForParamName(name).split(\" - \"); // it is a date object values are \"someFromDate - someToDate\"\n            var startDsr = moment(curVals[0], \"MM/DD/YYYY HH:mm\");\n            var endDsr = moment(curVals[1], \"MM/DD/YYYY HH:mm\");\n            if (!startDsr.isValid()) {\n                // error\n                setError(\"date_range refresh error: Your date range selector has an invalid start date-time: \" + curVals[0]);\n                return false;\n            }\n            if (!endDsr.isValid()) {\n                // error\n                setError(\"date_range refresh error: Your date range selector has an invalid end date-time:\" + curVals[1]);\n                return false;\n            }\n            if (startDsr.isAfter(endDsr)) {\n                // error\n                setError(\"date_range refresh error: Your date range selector has a start date/time that is later than the end date-time \" + startDsr.toString() + \" is not prior to \" + endDsr.toString());\n                return false;\n            }\n            // get superior values and check for errors\n            var superiorVals = [];\n            if (superiorNames !== undefined) {\n                const superiorDimensionality = superiorNames !== null && superiorNames.length > 0 && Array.isArray(superiorNames[0]) ? superiorNames.length : 1;\n                for (var si = 0; si < superiorDimensionality; si++) {\n                    var superiors = [];\n                    if (superiorDimensionality === 1) {\n                        superiors = superiorNames;\n                    } else {\n                        superiors = superiorNames[si];\n                    }\n                    var datesMap = undefined;\n                    for (var si2 = 0; si2 < superiors.length; si2++) {\n                        const thisSuperior = superiors[si2];\n                        datesMap = datesMap === undefined ? matsCollections.CurveParams.findOne({name: thisSuperior}).dates : datesMap;\n                        const sval = matsParamUtils.getInputElementForParamName(thisSuperior).options[matsParamUtils.getInputElementForParamName(thisSuperior).selectedIndex].text;\n                        if (sval === matsTypes.InputTypes.unused ||\n                            sval === null ||\n                            datesMap === undefined ||\n                            matsParamUtils.getInputElementForParamName(thisSuperior) === undefined ||\n                            isNaN(matsParamUtils.getInputElementForParamName(thisSuperior).selectedIndex) ||\n                            matsParamUtils.getInputElementForParamName(thisSuperior).selectedIndex === -1) {\n                            // skip this superior - it isn't being used right now\n                            continue;\n                        }\n                        datesMap = datesMap[sval];\n                    }\n                    const superiorMinimumDateStr = datesMap.minDate;\n                    const superiorMinimumMoment = moment(superiorMinimumDateStr, \"MM/DD/YYYY HH:mm\");\n                    if (superiorMinimumMoment.isValid()) {\n                        superiorVals[si] = superiorVals[si] === undefined ? {} : superiorVals[si];\n                        superiorVals[si].min = superiorMinimumMoment;\n                    } else {\n                        setError(\"date_range refresh error: The end date for the superiors: \" + superiors + \" is invalid: \" + superiorMinimumDateStr);\n                        return false;\n                    }\n                    const superiorMaximumDateStr = datesMap.maxDate;\n                    const superiorMaximumMoment = moment(superiorMaximumDateStr, \"MM/DD/YYYY HH:mm\");\n                    if (superiorMaximumMoment.isValid()) {\n                        superiorVals[si] = superiorVals[si] === undefined ? {} : superiorVals[si];\n                        superiorVals[si].max = superiorMaximumMoment;\n                    } else {\n                        setError(\"date_range refresh error: The end date for the superiors: \" + superiors + \" is invalid: \" + superiorMaximumDateStr);\n                        return false;\n                    }\n                    if ((superiorVals[si].min).isAfter(superiorVals[si].max)) {\n                        // error\n                        setError(\"date_range refresh error: The date range for the superiors: \" + superiors + \" is invalid. It has a start date/time that is later than the end date/time - \" + superiorVals[si].min.toString() + \" is after \" + superiorVals[si].max.toString());\n                        return false;\n                    }\n                }\n            }\n            // get data range from superiors\n            if (superiorVals.length === 0) {\n                // no superiors involved - just leave the DSR alone\n                return false;\n            }\n\n            // these need to be the values for the superiors as they will be not as they are\n            var dataStart = superiorVals[0].min;\n            var dataEnd = superiorVals[0].max;\n\n            if (superiorVals.length > 1) {\n                for (si = 1; si < superiorVals.length; si++) {\n                    const tStart = superiorVals[si].min;\n                    const tEnd = superiorVals[si].max;\n                    if (dataEnd.isBefore(tStart)) {\n                        // NCD not coincindebtal data?\n                        setInfo(\"You do not have any coincidental data with these two selections: The valid date ranges do not overlap - \" +\n                            dataStart.toString() + \" to \" + dataEnd.toString() + \" and \" + tStart.toString() + \" to \" + tEnd.toString());\n                        return false;\n                    } else if (tEnd.isBefore(dataStart)) {\n                        // NCD not coincindebtal data?\n                        setInfo(\"You do not have any coincidental data with these two selections: The valid date ranges do not overlap - \" +\n                            dataStart.toString() + \" to \" + dataEnd.toString() + \" and \" + tStart.toString() + \" to \" + tEnd.toString());\n                        return false;\n                    } else {\n                        // overlapping data\n                        if (tStart.isAfter(dataStart)) {\n                            dataStart = tStart;\n                        }\n                        if (tEnd.isBefore(dataEnd)) {\n                            dataEnd = tEnd;\n                        }\n                    }\n                }\n            }\n            // now we have a normalized date range for the selected superiors.\n            // evaluate DRS\n            if ((dataEnd.isBefore(startDsr) || (dataStart.isAfter(endDsr)))) {\n                // the current user setting and the valid range do not overlap so just set the DSR to the most recent 30 days of the valid range\n                endDsr = dataEnd;\n                // set startDsr to the endDsr less 30 days or less the startDsr whichever is later\n                var endDsrLess30 = moment(endDsr).subtract(30, \"days\");\n                if (endDsrLess30.isAfter(dataStart)) {\n                    startDsr = endDsrLess30;\n                } else {\n                    startDsr = dataStart;\n                }\n            } else {\n                // the current user setting and the valid range overlap\n                if (startDsr.isBefore(dataStart)) {\n                    startDsr = dataStart;\n                }\n                if (endDsr.isAfter(dataEnd)) {\n                    endDsr = dataEnd;\n                }\n            }\n            // now reset the DSR with the evaluated date range\n            const jqIdRef = \"#\" + idref;\n            $(jqIdRef).data('daterangepicker').setStartDate(startDsr);\n            $(jqIdRef).data('daterangepicker').setStartDate(endDsr);\n            const newDateStr = startDsr.format('MM/DD/YYYY HH:mm') + ' - ' + endDsr.format('MM/DD/YYYY HH:mm');\n            matsParamUtils.setValueTextForParamName(name, newDateStr);\n        } catch (error) {\n            console.log(\"Error in date_range.js.refresh : \" + error.message);\n        }\n    };\n\n// register refresh event for superior to use to enforce a refresh of the options list\n    elem.addEventListener('refresh', function (e) {\n        refresh();\n    });\n    refresh();   // initial value based on what is in the superior\n});\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsTypes } from 'meteor/randyp:mats-common'; \nTemplate.checkboxGroup.helpers({\n    checkedByDefault: function (def) {\n        if (def == this) {\n            return \"checked\";\n        } else {\n           return \"\";\n        }\n    },\n    labelValue: function (optionsMap) {\n        return optionsMap[this];\n    }\n});\n\n// Currently have no checkboxGroup params - this is undoubtedly broken - FIX ME\nTemplate.checkboxGroup.events({\n    'change, blur': function (event) {\n        try {\n            var text = event.currentTarget.value;\n            matsParamUtils.setValueTextForParamName(event.target.name, text);\n        } catch (error) {\n            matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n        }\n    }\n});\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsParamUtils } from 'meteor/randyp:mats-common';\nimport { matsCollections } from 'meteor/randyp:mats-common';\nvar refresh = function(name) {\n    const paramData = matsCollections.CurveParams.findOne({name: name}, {dependentNames: 1, peerName: 1});\n    const optionsMap = paramData.optionsMap;\n    var superiorNames = paramData.superiorNames;\n    var ref = paramData.name + '-' + paramData.type;\n    var refValueDisplay = \"controlButton-\" + paramData.name + \"-value\";\n    var dispElem = document.getElementById(refValueDisplay);\n    var elem = document.getElementById(ref);\n    var dispDefault = paramData.default;\n    var min = paramData.min;\n    var step = paramData.step === undefined ? \"any\" : paramData.step;\n    var max = paramData.max;\n    for (var si =0; si < superiorNames.length; si++) {\n        var superiorElement = matsParamUtils.getInputElementForParamName(superiorNames[si]);\n        var selectedSuperiorValue = superiorElement.options[superiorElement.selectedIndex] && superiorElement.options[superiorElement.selectedIndex].text;\n        const options = optionsMap[selectedSuperiorValue];\n        if (options === undefined) {\n            continue;\n        }\n        min = Number(options.min) < Number(min) ? options.min : min;\n        max = Number(options.max) > Number(max) ? options.max : max;\n        if (step !== \"any\" && options.step !== \"any\") {\n            step = Number(options.step) < Number(step) ? options.step : step;\n        }\n        dispDefault = options.default !== undefined ? options.default : dispDefault;\n    }\n    elem.setAttribute(\"min\", min);\n    elem.setAttribute(\"max\",max);\n    elem.setAttribute(\"step\",step);\n    elem.value = dispDefault;\n};\n\nTemplate.numberSpinner.helpers({\n    defaultValue: function() {\n        return this.default;\n    },\n    min: function() {\n        //default\n        return this.min;\n    },\n    max: function() {\n        //default\n        return this.max;\n    },\n    step: function() {\n        //default\n        return this.step;\n    }\n});\n\nTemplate.numberSpinner.onRendered(function () {\n// register an event listener so that the select.js can ask the map div to refresh after a selection\n    const ref = this.data.name + '-' + this.data.type;\n    const elem = document.getElementById(ref);\n    if (ref.search('axis') === 1) {\n        // this is a \"brother\" (hidden) scatterplot param. There is no need to refresh it or add event listeners etc.\n        return;\n    }\n    elem.addEventListener('refresh', function (e) {\n        refresh(this.name);\n    });\n});\n\n\nTemplate.numberSpinner.events({\n    'change, blur': function (event) {\n        try {\n            event.target.checkValidity();\n            var text = event.currentTarget.value;\n            matsParamUtils.setValueTextForParamName(event.target.name,text);\n        } catch (error){\n            matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n        }\n    }\n});\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsTypes } from 'meteor/randyp:mats-common'; \nTemplate.radioGroup.helpers({\n    checkedByDefault: function (def) {\n        if (def == this) {\n            return \"checked\";\n        } else {\n            return \"\";\n        }\n    },\n    labelValue: function (optionsMap) {\n        return optionsMap[this];\n    }\n});\n\n\n// Currently have no radioGroup params - this is undoubtedly broken - FIX ME\nTemplate.radioGroup.events({\n    'change, blur': function (event) {\n        try {\n            var text = event.currentTarget.value;\n            matsParamUtils.setValueTextForParamName(event.target.name,text);\n        } catch (error){\n            matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n        }\n    }\n});\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsTypes } from 'meteor/randyp:mats-common';\nimport { matsCurveUtils } from  'meteor/randyp:mats-common';\nimport {matsParamUtils } from 'meteor/randyp:mats-common';\nimport {matsCollections } from 'meteor/randyp:mats-common';\n\nTemplate.item.helpers({\n    cbname: function() {\n        if (this.controlButtonText !== undefined) {\n            return this.controlButtonText.toUpperCase();\n        }\n        return this.name.toUpperCase();\n    },\n    textValue: function() {\n        Session.get('lastUpdate');\n        if (this.name === \"label\") {  // label is handled specially\n            return;\n        }\n        if (matsParamUtils.getInputElementForParamName(this.name)) {\n            return this.default;\n        }\n        if (this.value) {\n            return this.value;\n        } else {\n            if (this.type === matsTypes.InputTypes.select && (this.default === -1 || this.default === undefined || this.default === matsTypes.InputTypes.unused)) {\n                return matsTypes.InputTypes.unused;\n            } else {\n                return this.default;\n            }\n        }\n    },\n    hasHelp: function() {\n      return this.help !== undefined;\n    },\n    isSelect: function () {\n        /* A selectOrderEnforced differs from a select\n            only in that the options - other than the default first option -\n            must be chosen in order. In other words if the user attempts to select\n            the second option prior to selecting the first option a validation error occurs.\n         */\n        return ((typeof this.type !== 'undefined') &&\n            ((this.type == matsTypes.InputTypes.select) ||(this.type == matsTypes.InputTypes.selectOrderEnforced)));\n    },\n    isSelectMap: function () {\n        return ((typeof this.type !== 'undefined') && (this.type == matsTypes.InputTypes.selectMap));\n    },\n    isInput: function () {\n        return ((typeof this.type !== 'undefined')  && (this.type == matsTypes.InputTypes.textInput));\n    },\n    isSpinner: function () {\n        return ((typeof this.type !== 'undefined') && (this.type == matsTypes.InputTypes.numberSpinner));\n    },\n    isDateRange: function () {\n        return ((typeof this.type !== 'undefined') && (this.type == matsTypes.InputTypes.dateRange));\n    },\n    isCheckBoxGroup: function () {\n        return ((typeof this.type !== 'undefined') && (this.type == matsTypes.InputTypes.checkBoxGroup));\n    },\n    isRadioGroup: function () {\n        return ((typeof this.type !== 'undefined') && (this.type == matsTypes.InputTypes.radioGroup));\n    },\n    controlButton: function() {\n        return matsTypes.InputTypes.controlButton + \"-\" + this.name;\n    },\n    resetButton: function() {\n        return matsTypes.InputTypes.resetButton + \"-\" + this.type;\n    },\n    element: function() {\n        return matsTypes.InputTypes.element + \"-\" + this.name;\n    },\n    display: function() {\n        if (this.hidden) {\n            return \"none;margin-top: 1.5em;\";\n        }\n        if (this.displayPriority !== undefined && this.displayPriority > Session.get('displayPriority')){\n            return \"none;margin-top: 1.5em;\";\n        }\n        else {\n            return \"block;margin-top: 1.5em;\";\n        }\n    },\n    controlButtonVisibility: function() {\n        if (this.controlButtonCovered) {\n            return \"block;\";\n        } else {\n            return \"none\";\n        }\n    },\n    elementHidden: function() {\n        if (this.controlButtonCovered) {\n            return \"none\";\n        } else {\n            return \"block\";\n        }\n    }\n});\n\nTemplate.item.events({\n    'click .control-button': function (event) {\n        Session.set(\"elementChanged\", Date.now());\n        var elem = document.getElementById(matsTypes.InputTypes.element + \"-\" + this.name);\n        if (elem === undefined) {\n            return false;\n        }\n        if (elem !== null && elem.style.display === \"block\") {\n            elem.style.display = \"none\";\n        } else {\n            matsParamUtils.collapseParams();\n            if (elem !== null) {\n                elem.style.display = \"block\";\n                if (this.type == matsTypes.InputTypes.select) {\n                    var s = document.getElementById(this.name + '-' + this.type);\n                    const ref = \"#\" + this.name + \"-\" + this.type;\n                    $(ref).select2(\"open\");   // need to foricibly open the selector for the select2\n                }\n                if (this.type == matsTypes.InputTypes.selectMap) {\n                    $(\"#mapModal\").modal('show');\n                    window.dispatchEvent(new Event('resize'));\n                }\n            }\n        }\n    },\n    'click .data-input': function (event) {\n        Session.set(\"elementChanged\", Date.now());\n        if (this.displayPriority !== undefined) {\n            Session.set('displayPriority', this.displayPriority + 1);\n        }\n        var formats = Object.keys(matsTypes.PlotFormats);\n        if ($.inArray(this,formats) !== -1){\n            Session.set('diffStatus',this);\n        }\n        if (this.multiple !== true && this.type !== matsTypes.InputTypes.numberSpinner && this.type !== matsTypes.InputTypes.textInput) {\n            // not too cool to collapse when trying to do a multi-select, a textInput, or a numberspinner\n                matsParamUtils.collapseParam(this.name);\n        }\n    },\n    'change .data-input': function (event) {\n        Session.set(\"elementChanged\", Date.now());\n        event.target.checkValidity();\n        if (this.type !== matsTypes.InputTypes.numberSpinner) {\n            event.target.checkValidity();\n            var elem = document.getElementById(matsTypes.InputTypes.element + \"-\" + this.name);\n            if (elem === undefined) {\n                return false;\n            }\n            if (elem !== null && elem.style.display === \"block\" && this.multiple !== true) {\n                elem.style.display = \"none\";\n            } else {\n                if (elem !== null) {\n                    elem.style.display = \"block\";\n                }\n            }\n         }\n        const curveItem = (Session.get(\"editMode\") === undefined && Session.get(\"editMode\") === \"\") ? undefined : document.getElementById(\"curveItem-\" + Session.get(\"editMode\"));\n        if (curveItem) {\n            $('#save').trigger('click');\n        }\n\n    },\n\n    'click .help' : function() {\n        var helpref = Session.get(\"app\").helpref;\n        $(\"#matshelp\").load(helpref + \"/\" + this.help + \" #matshelp\");\n        $(\"#helpModal\").modal('show');\n    },\n    'invalid' : function(event) {\n        if (this.type === matsTypes.InputTypes.numberSpinner) {\n            const param = matsCollections.CurveParams.findOne( {name: event.currentTarget.name} );\n            if (param === undefined) {\n                return;\n            }\n            setError(new Error('invalid value (' + event.currentTarget.value + ') for ' + event.currentTarget.name + \" it must be between \" + event.currentTarget.min + \" and \" + event.currentTarget.max + \" -- resetting to default value: \" + default_value));\n        } else {\n            var errMsg = Session.get('errorMessage');\n            if (errMsg === \"\") {\n                errMsg = 'invalid value (' + event.currentTarget.value + ') for ' + event.currentTarget.name;\n            }\n            setError(new Error(errMsg));\n        }\n        const default_value = matsCollections.CurveParams.findOne( {name: event.currentTarget.name} ).default;\n        event.currentTarget.value = default_value;\n    }\n});\n\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsTypes } from \"meteor/randyp:mats-common\";\nimport { matsCollections } from 'meteor/randyp:mats-common';\nimport { matsCurveUtils } from 'meteor/randyp:mats-common';\nimport { matsPlotUtils } from 'meteor/randyp:mats-common';\nimport { matsParamUtils } from 'meteor/randyp:mats-common';\nlabel;\nTemplate.curveItem.onRendered(function() {\n    // the value used for the colorpicker (l) MUST match the returned value in the colorpick helper\n    label = this.data.label;\n    $(function () {\n        var l = '.' + label + '-colorpick';\n        $(l).colorpicker({format: \"rgb\", align:\"left\"});\n    });\n});\n\nTemplate.curveItem.helpers({\n    removeCurve: function() {\n      var confirmRemoveCurve = Session.get(\"confirmRemoveCurve\");\n      return confirmRemoveCurve ? confirmRemoveCurve.label : null;\n    },\n    displayEditXaxis: function() {\n        if (Session.get('plotType') === matsTypes.PlotTypes.scatter2d) {\n            return \"block\";\n        }\n        return \"none\";\n    },\n    displayEditYaxis: function() {\n        if (Session.get('plotType') === matsTypes.PlotTypes.scatter2d) {\n            return \"block\";\n        }\n        return \"none\";\n    },\n    displayEdit: function() {\n        if (Session.get('plotType') === matsTypes.PlotTypes.scatter2d) {\n            return \"none\";\n        }\n        return \"block\";\n    },\n    colorpick: function() {\n        var l = this.label + '-colorpick';\n        return l;\n    },\n    text: function () {\n        if (this.diffFrom === undefined) {\n            var plotType = Session.get('plotType');\n            if (plotType === undefined) {\n                var pfuncs = matsCollections.PlotGraphFunctions.find({}).fetch();\n                for (var i = 0; i < pfuncs.length; i++) {\n                    if (pfuncs[i].checked === true) {\n                        Session.set('plotType', pfuncs[i].plotType);\n                    }\n                }\n                plotType = Session.get('plotType');\n            }\n            if (this.region) {\n                this.regionName = this.region.split(' ')[0];\n            }\n            return matsPlotUtils.getCurveText(plotType, this);\n        } else {\n            return this.label + \":  Difference\";\n        }\n    },\n    color: function() {\n      return this.color;\n    },\n    label: function() {\n        return this.label;\n    },\n    defaultColor: function() {\n        var curves = Session.get('Curves');\n        var label = this.label;\n        for (var i = 0; i < curves.length; i++) {\n            if (curves[i].label === label) {\n                return curves[i].color;\n            }\n        }\n    },\n    curveNumber: function() {\n        const label = this.label;\n        const curves = Session.get(\"Curves\");\n        const index = curves.findIndex(\n            function(obj){\n                return obj.label === label;\n            }\n        );\n        return index;\n    },\n    log: function() {\n        console.log(this);\n    },\n    DBcurve: function() {\n        return (this.diffFrom === undefined);\n    },\n    editingThis: function() {\n        return (Session.get('editMode') === this.label);\n    },\n    editCurve: function() {\n        return Session.get('editMode');\n    },\n    editTarget: function() {\n        return Session.get(\"eventTargetCurve\");\n    }\n});\n\nconst setParamsToAxis = function(newAxis, currentParams) {\n    // reset scatter plot apply stuff\n    matsCurveUtils.resetScatterApply();\n    // set param values to this curve\n    // reset the form parameters for the superiors first\n    var currentParamName;\n    var params = matsCollections.CurveParams.find({\"dependentNames\" : { \"$exists\" : true }}).fetch();\n    for (var p  = 0; p < params.length; p++) {\n        var plotParam = params[p];\n        // do any date parameters - there are no axis date params in a scatter plot\n        if (plotParam.type === matsTypes.InputTypes.dateRange) {\n            if (currentParams[plotParam.name] === undefined) {\n                continue;   // just like continue\n            }\n            const dateArr = currentParams[plotParam.name].split(' - ');\n            const from = dateArr[0];\n            const to = dateArr[1];\n            const idref = \"#\" + plotParam.name + \"-item\";\n            $(idref).data('daterangepicker').setStartDate(moment (from, 'MM-DD-YYYY HH:mm'));\n            $(idref).data('daterangepicker').setEndDate(moment (to, 'MM-DD-YYYY HH:mm'));\n            matsParamUtils.setValueTextForParamName(plotParam.name,currentParams[plotParam.name]);\n        } else {\n            currentParamName = currentParams[newAxis + \"-\" + plotParam.name] === undefined ?  plotParam.name : newAxis + \"-\" + plotParam.name;\n            const val =  currentParams[currentParamName] === null ||\n            currentParams[currentParamName] === undefined ? matsTypes.InputTypes.unused : currentParams[currentParamName];\n            matsParamUtils.setInputForParamName(plotParam.name, val);\n        }\n    }\n    // now reset the form parameters for the dependents\n    params = matsCollections.CurveParams.find({\"dependentNames\" : { \"$exists\" : false }}).fetch();\n    for (var p  = 0; p < params.length; p++) {\n        var plotParam = params[p];\n        // do any plot date parameters\n        currentParamName = currentParams[newAxis + \"-\" + plotParam.name] === undefined ?  plotParam.name : newAxis + \"-\" + plotParam.name;\n        if (plotParam.type === matsTypes.InputTypes.dateRange) {\n            if (currentParams[currentParamName] === undefined) {\n                continue;   // just like continue\n            }\n            const dateArr = currentParams[currentParamName].split(' - ');\n            const from = dateArr[0];\n            const to = dateArr[1];\n            const idref = \"#\" + plotParam.name + \"-item\";\n            $(idref).data('daterangepicker').setStartDate(moment (from, 'MM-DD-YYYY HH:mm'));\n            $(idref).data('daterangepicker').setEndDate(moment (to, 'MM-DD-YYYY HH:mm'));\n            matsParamUtils.setValueTextForParamName(plotParam.name,currentParams[currentParamName]);\n        } else {\n            const val =  currentParams[currentParamName] === null ||\n            currentParams[currentParamName] === undefined ? matsTypes.InputTypes.unused : currentParams[currentParamName];\n            matsParamUtils.setInputForParamName(plotParam.name, val);\n        }\n    }\n    // reset the scatter parameters\n    params = matsCollections.Scatter2dParams.find({}).fetch();\n    for (var p  = 0; p < params.length; p++) {\n        var plotParam = params[p];\n        currentParamName = currentParams[newAxis + \"-\" + plotParam.name] === undefined ?  plotParam.name : newAxis + \"-\" + plotParam.name;\n        const val =  currentParams[currentParamName] === null ||\n        currentParams[currentParamName] === undefined ? matsTypes.InputTypes.unused : currentParams[currentParamName];\n        matsParamUtils.setInputForParamName(plotParam.name, val);\n    }\n    matsParamUtils.collapseParams();\n    return false;\n\n\n};\n\nvar curveListEditNode;  // used to pass the edit button to the modal continue\nTemplate.curveItem.events({\n    'click .save-changes' : function() {\n        $(\".displayBtn\").css({border:\"\"}); // clear any borders from any display buttons\n        document.getElementById('save').click();\n        Session.set(\"paramWellColor\",\"#f5f5f5\");\n    },\n    'click .cancel' : function() {\n        $(\".displayBtn\").css({border: \"\"}); // clear any borders from any display buttons\n        document.getElementById('cancel').click();\n        Session.set(\"paramWellColor\",\"#f5f5f5\");\n    },\n    'click .remove-curve': function (event) {\n        var removeCurve = Session.get(\"confirmRemoveCurve\");\n        if (removeCurve && removeCurve.confirm) {\n            var label = removeCurve.label;\n            var color = removeCurve.color;\n            var Curves = _.reject(Session.get('Curves'), function (item) {\n                return item.label === label\n            });\n            Session.set('Curves', Curves);\n            matsCurveUtils.clearUsedLabel(label);\n            matsCurveUtils.clearUsedColor(color);\n            matsCurveUtils.checkDiffs();\n            Session.set(\"confirmRemoveCurve\",\"\");\n            Session.set(\"lastUpdate\", Date.now());\n            if (Curves.length === 0) {\n                location.reload(true);\n            }\n            return false;\n        } else{\n            Session.set(\"confirmRemoveCurve\",{label:this.label,color:this.color});\n            $(\"#modal-confirm-remove-curve\").modal();\n        }\n    },\n    'click .confirm-remove-curve': function () {\n        var confirmCurve = Session.get(\"confirmRemoveCurve\");\n        Session.set(\"confirmRemoveCurve\", {label:confirmCurve.label,color:confirmCurve.color,confirm:true});\n        $(\"#curve-list-remove\").trigger('click');\n    },\n    'click .edit-curve-xaxis': function(event) {\n        Session.set('axis','xaxis');\n        Session.set('editMode', this.label);\n        var currentParams = jQuery.extend({}, this);\n        setParamsToAxis('xaxis', currentParams);\n    },\n    'click .edit-curve-yaxis': function(event) {\n        Session.set('axis','yaxis');\n        Session.set('editMode', this.label);\n        var currentParams = jQuery.extend({}, this);\n        setParamsToAxis('yaxis',currentParams);\n    },\n    'click .edit-curve': function (event) {\n        const srcEditButton = event.currentTarget;\n        const name = srcEditButton.name;\n        const editingCurve = Session.get('editMode');\n        curveListEditNode = $(event.currentTarget.parentNode.parentNode.parentNode.parentNode).find(\"#curve-list-edit\");\n        const eventTargetCurve = $(event.currentTarget.parentNode.parentNode.parentNode).find(\".displayItemLabelSpan\").text().trim();\n        Session.set(\"eventTargetCurve\",eventTargetCurve);\n        Session.set(\"intendedActiveDisplayButton\",name);\n        Session.set(\"activeDisplayButton\",name);\n        if(editingCurve !== undefined && editingCurve !== \"\" && editingCurve !== eventTargetCurve) {\n            // editing a different curve // have to do the modal for confirmation\n            $(\"#confirm-lost-edits\").modal();\n            return;\n        }\n        Session.set('editMode', this.label);\n        // reset scatter plot apply stuff\n        matsCurveUtils.resetScatterApply();\n        // capture the current parameters from the curveItem\n        var currentParams = jQuery.extend({}, this);\n        // set param values to this curve\n        // reset the form parameters for the superiors first\n        var params = matsCollections.CurveParams.find({\"dependentNames\" : { \"$exists\" : true }}).fetch();\n        for (var p  = 0; p < params.length; p++) {\n            var plotParam = params[p];\n            // do any curve date parameters\n            if (plotParam.type === matsTypes.InputTypes.dateRange) {\n                if (currentParams[plotParam.name] === undefined) {\n                    continue;   // just like continue\n                }\n                const dateArr = currentParams[plotParam.name].split(' - ');\n                const from = dateArr[0];\n                const to = dateArr[1];\n                const idref = \"#\" + plotParam.name + \"-item\";\n                $(idref).data('daterangepicker').setStartDate(moment (from, 'MM-DD-YYYY HH:mm'));\n                $(idref).data('daterangepicker').setEndDate(moment (to, 'MM-DD-YYYY HH:mm'));\n                matsParamUtils.setValueTextForParamName(plotParam.name,currentParams[plotParam.name]);\n            } else {\n                var val =  currentParams[plotParam.name] === null ||\n                currentParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : currentParams[plotParam.name];\n                matsParamUtils.setInputForParamName(plotParam.name, val);\n                // refresh its dependents\n                matsSelectUtils.refreshDependents(null,plotParam);\n            }\n        }\n        // now reset the form parameters for anything with hide/disable controls\n        params = matsCollections.CurveParams.find({\"$and\" : [{ \"dependentNames\" : { \"$exists\" : false }}, {\"$or\" : [{ \"hideOtherFor\" : { \"$exists\" : true }}, { \"disableOtherFor\" : { \"$exists\" : true }}]}]}).fetch();\n        for (var p  = 0; p < params.length; p++) {\n            var plotParam = params[p];\n            // do any plot date parameters\n            if (plotParam.type === matsTypes.InputTypes.dateRange) {\n                if (currentParams[plotParam.name] === undefined) {\n                    continue;   // just like continue\n                }\n                const dateArr = currentParams[plotParam.name].split(' - ');\n                const from = dateArr[0];\n                const to = dateArr[1];\n                const idref = \"#\" + plotParam.name + \"-item\";\n                $(idref).data('daterangepicker').setStartDate(moment (from, 'MM-DD-YYYY HH:mm'));\n                $(idref).data('daterangepicker').setEndDate(moment (to, 'MM-DD-YYYY HH:mm'));\n                matsParamUtils.setValueTextForParamName(plotParam.name,currentParams[plotParam.name]);\n            } else {\n                var val =  currentParams[plotParam.name] === null ||\n                currentParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : currentParams[plotParam.name];\n                matsParamUtils.setInputForParamName(plotParam.name, val);\n            }\n        }\n        // now reset the form parameters for everything else\n        params = matsCollections.CurveParams.find({\"$and\" : [{ \"dependentNames\" : { \"$exists\" : false }}, {\"$and\" : [{ \"hideOtherFor\" : { \"$exists\" : false }}, { \"disableOtherFor\" : { \"$exists\" : false }}]}]}).fetch();\n        for (var p  = 0; p < params.length; p++) {\n            var plotParam = params[p];\n            // do any plot date parameters\n            if (plotParam.type === matsTypes.InputTypes.dateRange) {\n                if (currentParams[plotParam.name] === undefined) {\n                    continue;   // just like continue\n                }\n                const dateArr = currentParams[plotParam.name].split(' - ');\n                const from = dateArr[0];\n                const to = dateArr[1];\n                const idref = \"#\" + plotParam.name + \"-item\";\n                $(idref).data('daterangepicker').setStartDate(moment (from, 'MM-DD-YYYY HH:mm'));\n                $(idref).data('daterangepicker').setEndDate(moment (to, 'MM-DD-YYYY HH:mm'));\n                matsParamUtils.setValueTextForParamName(plotParam.name,currentParams[plotParam.name]);\n            } else {\n                var val =  currentParams[plotParam.name] === null ||\n                currentParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : currentParams[plotParam.name];\n                matsParamUtils.setInputForParamName(plotParam.name, val);\n            }\n        }\n        // reset the scatter parameters\n        params = matsCollections.Scatter2dParams.find({}).fetch();\n        for (var p  = 0; p < params.length; p++) {\n            var plotParam = params[p];\n            const val =  currentParams[plotParam.name] === null ||\n            currentParams[plotParam.name] === undefined ? matsTypes.InputTypes.unused : currentParams[plotParam.name];\n            matsParamUtils.setInputForParamName(plotParam.name, val);\n        }\n        matsParamUtils.collapseParams();\n        return false;\n    },\n    'hidePicker': function() {\n        var Curves = Session.get('Curves');\n        var label = this.label;\n        for (var i = 0; i < Curves.length; i++) {\n            if (label === Curves[i].label) {\n                Curves[i].color = document.getElementById(label + \"-color-value\").value;\n            }\n        }\n        Session.set('Curves',Curves);\n        return false;\n    },\n    'click .displayBtn': function (event) {\n        const srcDisplayButton = event.currentTarget;\n        const name = srcDisplayButton.name;\n        const inputElem = matsParamUtils.getInputElementForParamName(name);\n        const controlElem = matsParamUtils.getControlElementForParamName(name);\n        const editingCurve = Session.get('editMode');\n        if (name.startsWith('xaxis')) {\n            curveListEditNode = $(event.currentTarget.parentNode.parentNode.parentNode.parentNode).find(\"#curve-list-edit-xaxis\");\n        } else if (name.startsWith('yaxis')) {\n            curveListEditNode = $(event.currentTarget.parentNode.parentNode.parentNode.parentNode).find(\"#curve-list-edit-yaxis\");\n        } else {\n            if (matsPlotUtils.getPlotType() === matsTypes.PlotTypes.scatter2d) {\n                // for a scatter param that is not axis specific we still have to choos an axis - just choose x\n                curveListEditNode = $(event.currentTarget.parentNode.parentNode.parentNode.parentNode).find(\"#curve-list-edit-xaxis\");\n            } else {\n                curveListEditNode = $(event.currentTarget.parentNode.parentNode.parentNode.parentNode).find(\"#curve-list-edit\");\n            }\n        }\n        const eventTargetCurve = $(event.currentTarget.parentNode.parentNode.parentNode).find(\".displayItemLabelSpan\").text().trim();\n        Session.set(\"eventTargetCurve\",eventTargetCurve);\n        Session.set(\"intendedActiveDisplayButton\",name);\n        Session.set(\"activeDisplayButton\",name);\n        if(editingCurve !== undefined && editingCurve !== \"\" && editingCurve !== eventTargetCurve) {\n            // editing a different curve // have to do the modal for confirmation\n            $(\"#confirm-lost-edits\").modal();\n            return;\n        }\n        inputElem && inputElem.focus();\n        curveListEditNode.click();\n        controlElem && controlElem.click();\n        Session.set(\"elementChanged\", Date.now());\n    },\n    'click .continue-lose-edits': function() {\n        const intendedName = Session.get(\"intendedActiveDisplayButton\");\n        var activeDisplayButton = Session.set(\"activeDisplayButton\", intendedName);\n        document.getElementById('cancel').click();\n        Session.set(\"paramWellColor\", \"#f5f5f5\");\n        const controlElem = matsParamUtils.getControlElementForParamName(intendedName);\n        const inputElem = matsParamUtils.getInputElementForParamName(intendedName);\n        inputElem && inputElem.focus();\n        curveListEditNode.click();\n        controlElem && controlElem.click();\n        Session.set(\"elementChanged\", Date.now());\n    },\n    'click .cancle-lose-edits': function() {\n        // don't change the active button\n        const name = Session.get(\"activeDisplayButton\");\n        const controlElem = matsParamUtils.getControlElementForParamName(name);\n        const inputElem = matsParamUtils.getInputElementForParamName(name);\n        inputElem && inputElem.focus();\n        controlElem && controlElem.click();\n        Session.set(\"elementChanged\", Date.now());\n    },\n    'click .fa-paint-brush': function() {\n        $(\"#\" + this.label + \"-color-value\").trigger('click');\n    }\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsTypes } from 'meteor/randyp:mats-common';\n import { matsCollections } from 'meteor/randyp:mats-common';\nimport { matsPlotUtils } from 'meteor/randyp:mats-common';\nimport { matsParamUtils } from 'meteor/randyp:mats-common';\nvar allGroups = {};\nTemplate.curveParamItemGroup.helpers({\n    curveParamGroups: function (c) {\n        const label = c.label;\n        const curves = Session.get(\"Curves\");\n        const index = curves.findIndex(\n           function(obj){\n               return obj.label === label;\n           }\n        );\n\n        // create a set of groups each with an array of 6 params for display\n        const lastUpdate = Session.get('lastUpdate');\n        const plotType = matsPlotUtils.getPlotType();\n        var elmementValues = matsParamUtils.getElementValues().curveParams;\n        // derive the sorted pValues, xpValues, and ypValues from the sorted params and the elementValues\n        var pValues = [];\n        var pattern;\n        switch (plotType) {\n            case matsTypes.PlotTypes.profile:\n                pattern = matsCollections.CurveTextPatterns.findOne({plotType: matsTypes.PlotTypes.profile});\n                break;\n            case matsTypes.PlotTypes.dieoff:\n                pattern = matsCollections.CurveTextPatterns.findOne({plotType: matsTypes.PlotTypes.dieoff});\n                break;\n            case matsTypes.PlotTypes.threshold:\n                pattern = matsCollections.CurveTextPatterns.findOne({plotType: matsTypes.PlotTypes.threshold});\n                break;\n            case matsTypes.PlotTypes.validtime:\n                pattern = matsCollections.CurveTextPatterns.findOne({plotType: matsTypes.PlotTypes.validtime});\n                break;\n            case matsTypes.PlotTypes.dailyModelCycle:\n                pattern = matsCollections.CurveTextPatterns.findOne({plotType: matsTypes.PlotTypes.dailyModelCycle});\n                break;\n            case matsTypes.PlotTypes.reliability:\n                pattern = matsCollections.CurveTextPatterns.findOne({plotType: matsTypes.PlotTypes.reliability});\n                break;\n            case matsTypes.PlotTypes.map:\n                pattern = matsCollections.CurveTextPatterns.findOne({plotType: matsTypes.PlotTypes.map});\n                break;\n            case matsTypes.PlotTypes.histogram:\n                pattern = matsCollections.CurveTextPatterns.findOne({plotType: matsTypes.PlotTypes.histogram});\n                break;\n            case matsTypes.PlotTypes.contour:\n                pattern = matsCollections.CurveTextPatterns.findOne({plotType: matsTypes.PlotTypes.contour});\n                break;\n            case matsTypes.PlotTypes.contourDiff:\n                pattern = matsCollections.CurveTextPatterns.findOne({plotType: matsTypes.PlotTypes.contourDiff});\n                break;\n            case matsTypes.PlotTypes.scatter2d:\n                pattern = matsCollections.CurveTextPatterns.findOne({plotType: matsTypes.PlotTypes.scatter2d});\n                break;\n            case matsTypes.PlotTypes.timeSeries:\n            default:\n                pattern = matsCollections.CurveTextPatterns.findOne({plotType: matsTypes.PlotTypes.timeSeries});\n                break;\n        }\n        const groupSize = pattern.groupSize;\n        const displayParams = pattern.displayParams;\n        for (var di=0; di < displayParams.length;di++) {\n            pValues.push({name: displayParams[di], value: c[displayParams[di]], color:c.color, curve:c.label, index:index});\n        }\n\n        // create array of parameter value display groups each of groupSize\n        var pGroups = [];\n        var groupParams = [];\n        var pvi = 0;\n        while (pvi < pValues.length) {\n            if (pValues[pvi] && (pValues[pvi].name == 'xaxis' || pValues[pvi].name == 'yaxis')) {\n                if (groupParams.length > 0) {\n                    // finish the old group and make a new group for 'xaxis' or 'yaxis'\n                    pGroups.push(groupParams);\n                }\n                groupParams = [];\n            }\n            pValues[pvi] && groupParams.push(pValues[pvi]);\n            if (groupParams.length >= groupSize) {\n                pGroups.push(groupParams);\n                groupParams = [];\n            }\n            pvi++;\n        }\n        // check for a partial last group\n        if (groupParams.length > 0) {\n            pGroups.push(groupParams);\n        }\n        allGroups[c.label] = pGroups;\n        return pGroups;\n    },\n    curveNumber: function(elem) {\n        return elem.index;\n    },\n    curveParams: function(paramGroup) {\n      return paramGroup;\n    },\n    label: function(elem) {\n        if (matsPlotUtils.getPlotType() === matsTypes.PlotTypes.scatter2d) {\n            const pNameArr = elem.name.match(/([xy]axis-)(.*)/);\n            if (pNameArr === null) {\n                return elem.name.toUpperCase();\n            }\n            const prefix = pNameArr[1];\n            const pName = pNameArr[2];\n            const p = matsCollections.CurveParams.findOne({name:pName});\n            if (p.controlButtonText) {\n                return (prefix + p.controlButtonText).toUpperCase();\n            } else {\n                return elem.name.toUpperCase();\n            }\n        } else {\n            const p = matsCollections.CurveParams.findOne({name:elem.name});\n            if (p.controlButtonText) {\n                return p.controlButtonText.toUpperCase();\n            } else {\n                return elem.name.toUpperCase();\n            }\n        }\n        // should never get here\n        return elem.name.toUpperCase();\n    },\n    name: function(elem){\n        return elem.name;\n    },\n    id: function(elem){\n        return elem.name;\n    },\n    buttonId: function(elem) {\n        const name = new String(elem.name);\n        const upperName = name.toUpperCase();\n        const curveNumber = elem.index;\n        const spanId = upperName + \"-curve-\" + curveNumber + \"-Button\";\n        return spanId;\n    },\n    spanId: function(elem) {\n        const name = new String(elem.name);\n        const upperName = name.toUpperCase();\n        const curveNumber = elem.index;\n        const spanId = upperName + \"-curve-\" + curveNumber + \"-Item\";\n        return spanId;\n    },\n    value: function(elem){\n        // have to get this from the session\n        const curve = Session.get(\"Curves\")[elem.index];\n        if (curve === undefined) {\n            return \"\";\n        }\n        var value = curve[elem.name];\n        var text = \"\";\n        if ( Object.prototype.toString.call( value ) === '[object Array]' ) {\n            if (value.length === 1) {\n                text = value[0];\n            } else if (value.length > 1){\n                text = value[0] + \" .. \" + value[value.length -1];\n            }\n        } else {\n            text = value;\n        }\n        return text;\n    },\n    defaultColor: function(elem){\n        return elem.color;\n    },\n    border: function(elem) {\n        var elementChanged = Session.get(\"elementChanged\");\n        const name = elem.name; // for xaxis params\n        const curve = elem.curve;\n        const adb = (name === Session.get(\"activeDisplayButton\"));\n        const isEditMode = (curve === Session.get(\"editMode\"));\n        const inputElemIsVisible = matsParamUtils.isInputElementVisible(name);\n        if (adb && isEditMode &&  inputElemIsVisible) {\n            return \"solid\";\n        }\n        return \"\";\n    },\n    editCurve: function() {\n        return Session.get('editMode');\n    },\n    editTarget: function() {\n        return Session.get(\"eventTargetCurve\");\n    },\n    displayParam: function(elem) {\n        if (elem.name === \"label\") {\n            return \"none\";\n        }\n        // it isn't good enough to just check the item control button. Need to evaluate the hideOtherFor functionality with\n        // respect to this particular curve item\n        // First - determine if my visibility is controlled by another\n        const visibilityControllingParam = matsParamUtils.visibilityControllerForParam(elem.name);\n        // Second - Check the hide/show state based on the parameter hideOtherFor map in the parameter nad the state of this particular curve\n        if (visibilityControllingParam !== undefined) {\n            const curve = Session.get(\"Curves\")[elem.index];\n            const hideOtherFor = visibilityControllingParam.hideOtherFor[elem.name][0];\n            if (curve!== undefined && visibilityControllingParam !== undefined && curve[visibilityControllingParam.name] !== undefined && curve[visibilityControllingParam.name] === hideOtherFor) {\n                return \"none\";\n            }\n        }\n        return \"block\";\n    }\n});\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from \"meteor/randyp:mats-common\";\nimport {matsCollections} from \"meteor/randyp:mats-common\";\nimport {matsMethods} from \"meteor/randyp:mats-common\";\nimport {matsCurveUtils} from 'meteor/randyp:mats-common';\nimport {matsPlotUtils} from 'meteor/randyp:mats-common';\nimport {matsParamUtils} from 'meteor/randyp:mats-common';\n\nTemplate.curveList.helpers({\n    displayPlotUnMatched: function() {\n        // scatter plots can't match\n        if (Session.get('plotType') === matsTypes.PlotTypes.scatter2d) {\n            return \"none\";\n        }\n        // don't allow plotting when editing\n        const mode = Session.get(\"editMode\");\n        if (mode === undefined || mode === \"\") {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    displayPlotMatched: function() {\n        // don't allow plotting when editing\n        const mode = Session.get(\"editMode\");\n        if (mode === undefined || mode === \"\") {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    displaySaveSettings: function() {\n        // don't allow saving settings when editing\n        const mode = Session.get(\"editMode\");\n        if (mode === undefined || mode === \"\") {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    curves: function () {\n        return Session.get('Curves');\n    },\n    displayCurves: function () {\n        if (Session.get('Curves') === undefined || Session.get('Curves').length === 0) {\n            return \"none\";\n        } else {\n            return \"block\";\n        }\n    },\n    log: function () {\n        console.log(this);\n    },\n    averagesDisabled: function () {\n        var curves = Session.get('Curves');\n        if (curves === undefined || curves.length == 0 || (Session.get('plotType') !== matsTypes.PlotTypes.timeSeries)) {\n            return \"\";\n        }\n        var average = curves[0].average;\n        for (var i = 0; i < curves.length; i++) {\n            if (average != curves[i].average) {\n                return \"disabled\";\n            }\n        }\n    },\n    disabledPlotsHidden: function () {\n        var curves = Session.get('Curves');\n        if (curves === undefined || curves.length == 0 || (Session.get('plotType') !== matsTypes.PlotTypes.timeSeries)) {\n            return \"none\";\n        }\n        var average = curves[0].average;\n        for (var i = 0; i < curves.length; i++) {\n            if (average != curves[i].average) {\n                return \"block\";\n            }\n        }\n        return \"none\"\n    },\n    identicalContourDisabled: function () {\n        var curves = Session.get('Curves');\n        if (curves === undefined || curves.length == 0 || (Session.get('plotType') !== matsTypes.PlotTypes.contour)) {\n            return \"\";\n        }\n        var xAxis = curves[0]['x-axis-parameter'];\n        var yAxis = curves[0]['y-axis-parameter'];\n        if (xAxis === yAxis) {\n            return \"disabled\";\n        }\n        return \"\";\n    },\n    identicalContourHidden: function () {\n        var curves = Session.get('Curves');\n        if (curves === undefined || curves.length == 0 || (Session.get('plotType') !== matsTypes.PlotTypes.contour)) {\n            return \"none\";\n        }\n        var xAxis = curves[0]['x-axis-parameter'];\n        var yAxis = curves[0]['y-axis-parameter'];\n        if (xAxis === yAxis) {\n            return \"block\";\n        }\n        return \"none\"\n    },\n    mismatchContourDiffDisabled: function () {\n        var curves = Session.get('Curves');\n        if (curves === undefined || curves.length < 2 || (Session.get('plotType') !== matsTypes.PlotTypes.contourDiff)) {\n            return \"\";\n        }\n        var xAxis0 = curves[0]['x-axis-parameter'];\n        var yAxis0 = curves[0]['y-axis-parameter'];\n        var xAxis1 = curves[1]['x-axis-parameter'];\n        var yAxis1 = curves[1]['y-axis-parameter'];\n        if (xAxis0 !== xAxis1 || yAxis0 !== yAxis1) {\n            return \"disabled\";\n        }\n        return \"\";\n    },\n    mismatchContourDiffHidden: function () {\n        var curves = Session.get('Curves');\n        if (curves === undefined || curves.length < 2 || (Session.get('plotType') !== matsTypes.PlotTypes.contourDiff)) {\n            return \"none\";\n        }\n        var xAxis0 = curves[0]['x-axis-parameter'];\n        var yAxis0 = curves[0]['y-axis-parameter'];\n        var xAxis1 = curves[1]['x-axis-parameter'];\n        var yAxis1 = curves[1]['y-axis-parameter'];\n        if (xAxis0 !== xAxis1 || yAxis0 !== yAxis1) {\n            return \"block\";\n        }\n        return \"none\"\n    },\n    editMode: function() {\n        if (Session.get('editMode') === '') {\n            return '';\n        } else {\n            return \"Changing \" + Session.get('editMode');\n        }\n    },\n    matchedLabel: function() {\n        if (Session.get('matchName'  === undefined)) {\n            if (setMatchName) {\n                setMatchName();\n            } else {\n                Session.set('matchName','plot matched');\n            }\n        } else {\n            Session.set('matchName','plot matched');\n        }\n        return Session.get('matchName');\n    }\n});\n\nTemplate.curveList.events({\n    'click .remove-all': function () {\n        if (Session.get(\"confirmRemoveAll\")) {\n            matsCurveUtils.clearAllUsed();\n            matsParamUtils.setAllParamsToDefault();\n            Session.set(\"editMode\", \"\");\n            Session.set(\"paramWellColor\", \"#f5f5f5\");  // default grey\n            Session.set(\"lastUpdate\", Date.now());\n            Session.set(\"confirmRemoveAll\",\"\");\n            return false;\n        } else {\n            if (Session.get(\"Curves\").length > 0 ) {\n                $(\"#modal-confirm-remove-all\").modal();\n            }\n        }\n    },\n    'click .confirm-remove-all': function () {\n        Session.set(\"confirmRemoveAll\", Date.now());\n        $(\"#remove-all\").trigger('click');\n    },\n    'click .plot-curves-unmatched': function (event) {\n        document.getElementById(\"spinner\").style.display = \"block\";\n        matsPlotUtils.disableActionButtons();\n        event.preventDefault();\n        // trigger the submit on the plot_list plot_list.js - click .submit-params\n        Session.set('plotParameter', matsTypes.PlotActions.unmatched);\n        document.getElementById(\"plot-curves\").click();\n        return false;\n    },\n    'click .plot-curves-matched': function (event) {\n        document.getElementById(\"spinner\").style.display = \"block\";\n        matsPlotUtils.disableActionButtons();\n        event.preventDefault();\n        // trigger the submit on the plot_list plot_list.js - click .submit-params\n        Session.set('plotParameter', matsTypes.PlotActions.matched);\n        document.getElementById(\"plot-curves\").click();\n        return false;\n    },\n    'click .save-settings': function (event) {\n        event.preventDefault();\n        document.getElementById(\"save-settings\").click();\n        return false;\n    }\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsCurveUtils} from 'meteor/randyp:mats-common';\nimport {matsPlotUtils} from 'meteor/randyp:mats-common';\nimport {matsParamUtils} from 'meteor/randyp:mats-common';\nimport {matsMethods} from 'meteor/randyp:mats-common';\n\nfunction shadeRGBColor(color, percent) {\n    var f = color.split(\",\"), t = percent < 0 ? 0 : 255, p = percent < 0 ? percent * -1 : percent,\n        R = parseInt(f[0].slice(4)), G = parseInt(f[1]), B = parseInt(f[2]);\n    return \"rgb(\" + (Math.round((t - R) * p) + R) + \",\" + (Math.round((t - G) * p) + G) + \",\" + (Math.round((t - B) * p) + B) + \")\";\n}\n\nTemplate.paramList.helpers({\n    CurveParamGroups: function () {\n        var lastUpdate = Session.get('lastUpdate');\n        var groupNums = [];\n        var params = matsCollections.CurveParams.find({}).fetch();\n        for (var i = 0; i < params.length; i++) {\n            groupNums.push(params[i].displayGroup);\n        }\n        var res = _.uniq(groupNums).sort();\n        return res;\n    },\n    isEdit: function () {\n        return Session.get('editMode') != '';\n    },\n    log: function () {\n        console.log(this);\n    },\n    paramWellColor: function () {\n        if (Session.get(\"paramWellColor\") === undefined) {\n            Session.set(\"paramWellColor\", \"rgb(245,245,245)\");\n        }\n        if (Session.get(\"editMode\") !== \"\") {\n            const curveBeingEdited = $.grep(Session.get(\"Curves\"), function (c) {\n                return c.label == Session.get(\"editMode\");\n            });\n            if (curveBeingEdited === undefined || curveBeingEdited[0] === undefined) {\n                Session.set(\"paramWellColor\", \"rgb(245,245,245)\");\n                return \"rgb(245,245,245)\";\n            }\n            const color = curveBeingEdited[0].color;\n            const lighterShadeOfColor = shadeRGBColor(color, 0.2);\n            Session.set(\"paramWellColor\", lighterShadeOfColor);\n        }\n\n        return Session.get(\"paramWellColor\");\n    }\n});\n\nTemplate.paramList.events({\n    'click .edit-cancel': function () {\n        Session.set('editMode', '');\n        Session.set(\"paramWellColor\", \"rgb(245,245,245)\");\n        var labelId = 'label-' + matsTypes.InputTypes.textInput;\n        var label = document.getElementById(labelId);\n        label.disabled = false;\n        // reset parameters to match edited curve.....\n        matsParamUtils.setInputForParamName('label', matsCurveUtils.getNextCurveLabel());\n        matsParamUtils.collapseParams();\n    },\n    'click .reset': function (event, template) {\n        const plotType = $('input[name=plot-type]:checked').val();\n        event.preventDefault();\n        Session.set(\"paramWellColor\", \"rgb(245,245,245)\");\n        var paramView = document.getElementById('paramList');\n        var plotView = document.getElementById('plotList');\n        document.getElementById('plot-type-' + plotType).checked = true;\n        matsMethods.refreshMetaData.call({}, function (error, result) {\n            if (error !== undefined) {\n                setError(new Error(error.message));\n            }\n            matsParamUtils.setAllParamsToDefault();\n        });\n    },\n    'click .expand': function () {\n        matsParamUtils.expandParams();\n    },\n    'click .collapse': function () {\n        matsParamUtils.collapseParams();\n    },\n    // restore settings\n    'click .restore-settings': function (event) {\n        Session.set(\"paramWellColor\", \"rgb(245,245,245)\");\n        event.preventDefault();\n        document.getElementById(\"restore-settings\").click();\n        return false;\n    },\n    // add curve\n    // save changes\n    /*\n        Note: when adding a curve or saving changes after editing a curve there is a special\n        case for scatter plots. Each hidden axis parameter must get set with the value from the regular parameter.\n     */\n    'submit form': function (event, template) {\n        event.preventDefault();\n        if (!matsParamUtils.getValueForParamName('label')) {\n            setError('Label cannot be blank');\n            return;\n        }\n        var isScatter = matsPlotUtils.getPlotType() === matsTypes.PlotTypes.scatter2d;\n        var isMap = matsPlotUtils.getPlotType() === matsTypes.PlotTypes.map;\n        var isReliability = matsPlotUtils.getPlotType() === matsTypes.PlotTypes.reliability;\n        var isContour = matsPlotUtils.getPlotType() === matsTypes.PlotTypes.contour;\n        var isContourDiff = matsPlotUtils.getPlotType() === matsTypes.PlotTypes.contourDiff;\n        var curves = Session.get('Curves');\n        var p = {};\n        var elems = event.target.valueOf().elements;\n        var curveParams = matsCollections.CurveParams.find({}, {fields: {name: 1}}).fetch();\n        var curveNames = _.pluck(curveParams, \"name\");\n        // remove any hidden params or unused ones\n        // iterate backwards so that we can splice to remove\n        for (var cindex = curveNames.length - 1; cindex >= 0; cindex--) {\n            var cname = curveNames[cindex];\n            var ctlElem = document.getElementById(cname + \"-item\");\n            var isHidden = (matsParamUtils.getInputElementForParamName(cname) &&\n                matsParamUtils.getInputElementForParamName(cname).style &&\n                matsParamUtils.getInputElementForParamName(cname).style.display === 'none') ||\n                (ctlElem && ctlElem.style && ctlElem.style.display === 'none');\n            var isUnused = matsParamUtils.getInputElementForParamName(cname) !== undefined &&\n                matsParamUtils.getValueForParamName(cname) == matsTypes.InputTypes.unused;\n            if (isHidden || isUnused) {\n                //if (isHidden) {\n                curveNames.splice(cindex, 1);\n            }\n        }\n\n        var dateParams = matsCollections.CurveParams.find({type: matsTypes.InputTypes.dateRange}, {fields: {name: 1}}).fetch();\n        var dateParamNames = _.pluck(dateParams, \"name\");\n        // remove any hidden date params or unused ones\n        // iterate backwards so that we can splice to remove\n        // dates are a little different - there is no element named paramName-paramtype because of the way daterange widgets are attached\n        // Instead we have to look for a document element with an id element-paramName\n        for (var dindex = dateParamNames.length - 1; dindex >= 0; dindex--) {\n            var dElem = document.getElementById(dateParamNames[dindex] + \"-item\");\n            if (dElem && dElem.style && dElem.style.display === 'none') {\n                dateParamNames.splice(dindex, 1);\n            }\n        }\n        if (isScatter) {\n            var scatterCurveNames = [];\n            for (var i = 0; i < curveNames.length; i++) {\n                scatterCurveNames.push(curveNames[i]);\n                scatterCurveNames.push(\"xaxis-\" + curveNames[i]);\n                scatterCurveNames.push(\"yaxis-\" + curveNames[i]);\n            }\n            curveNames = scatterCurveNames;\n        }\n        var paramElems = _.filter(elems, function (elem) {\n            return _.contains(curveNames, elem.name);\n        });\n        // add in any date params (they aren't technically elements)\n        paramElems.push.apply(paramElems, dateParamNames);\n        // add in the scatter2d parameters if it is a scatter plot.\n        if (isScatter) {\n            $(\":input[id^='Fit-Type']:input[name*='Fit-Type']\").each(function () {\n                paramElems.push(this);\n            });\n        }\n        var l = paramElems.length;\n        if (Session.get('editMode')) {\n            var changingCurveLabel = Session.get('editMode');\n            Session.set('editMode', '');\n            Session.set(\"paramWellColor\", \"rgb(245,245,245)\");\n            var labelId = 'label-' + matsTypes.InputTypes.textInput;\n            var label = document.getElementById(labelId);\n            label.disabled = false;\n\n            for (var i = 0; i < l; i++) {\n                if (paramElems[i].name == \"label\") {\n                    p[paramElems[i].name] = changingCurveLabel;  // don't change the label when editing a curve\n                    continue;\n                }\n                if ((paramElems[i] instanceof Element) === false) { // isn't really an element - must be a date field - these are only strings\n                    p[paramElems[i]] = matsParamUtils.getValueForParamName(paramElems[i]);\n                } else if (paramElems[i].type === \"select-multiple\") {\n                    // define a p value if it doesn't exist (necessary for adding truth values)\n                    p[paramElems[i].name] = (p[paramElems[i].name] === undefined) ? \"\" : p[paramElems[i].name];\n                    p[paramElems[i].name] = $(paramElems[i].selectedOptions).map(function () {\n                        return (this.value)\n                    }).get();\n                } else {\n                    if (paramElems[i].type === \"radio\") {\n                        if (paramElems[i].checked) {\n                            p[paramElems[i].name] = paramElems[i].value;\n                        }\n                    } else if (paramElems[i].type === \"checkbox\") {\n                        if (paramElems[i].checked) {\n                            p[paramElems[i].name].push(paramElems[i].value);\n                        }\n                    } else if (paramElems[i].type === \"button\") {\n                        p[paramElems[i].id] = paramElems[i].value;\n                    } else {\n                        p[paramElems[i].name] = (paramElems[i]).value;\n                    }\n                }\n            }\n            var index = -1;\n            for (var i = 0; i < curves.length; i++) {\n                if (curves[i].label === p.label) {\n                    index = i;\n                    p.color = curves[i].color;\n                }\n            }\n            if (index != -1) {\n                if (isScatter) {\n                    // copy the params to the current axis paremeters\n                    var axis = Session.get('axis');\n                    var axisParams = (Object.keys(p)).filter(function (key) {\n                        return key.startsWith(axis)\n                    });\n                    for (var api = 0; api < axisParams.length; api++) {\n                        var ap = axisParams[api];\n                        var pp = ap.replace(axis + '-', '');\n                        p[ap] = p[pp];\n                        curves[index][ap] = p[pp];\n                    }\n                    curves[index]['Fit-Type'] = p['Fit-Type'];\n                } else {\n                    curves[index] = p;\n                }\n            }\n        } else {\n            if (isMap && curves.length >= 1) {\n                setError(new Error('ERROR: Map plot-type can only have one curve!'));\n                return false;\n            } else if (isContour && curves.length >= 1) {\n                setError(new Error('ERROR: Contour plot-type can only have one curve!'));\n                return false;\n            } else if (isContourDiff && curves.length >= 2) {\n                setError(new Error('ERROR: Contour Diff plot-type can only have two curves!'));\n                return false;\n            } else if (isReliability && curves.length >= 1) {\n                setError(new Error('ERROR: Reliability plot-type can only have one curve right now!'));\n                return false;\n            } else {\n                for (var i = 0; i < l; i++) {\n                    if ((paramElems[i] instanceof Element) === false) { // isn't really an element - must be a date field - these are only strings\n                        p[paramElems[i]] = matsParamUtils.getValueForParamName(paramElems[i]);\n                    } else if (paramElems[i].type === \"select-multiple\") {\n                        p[paramElems[i].name] = $(paramElems[i].selectedOptions).map(function () {\n                            return (this.value)\n                        }).get();\n                    } else {\n                        if (paramElems[i].type === \"radio\") {\n                            if (paramElems[i].checked) {\n                                p[paramElems[i].name] = paramElems[i].value;\n                            }\n                        } else if (paramElems[i].type === \"checkbox\") {\n                            if (paramElems[i].checked) {\n                                if (p[paramElems[i].name] === undefined) {\n                                    p[paramElems[i].name] = [];\n                                }\n                                p[paramElems[i].name].push(paramElems[i].value);\n                            }\n                        } else if (paramElems[i].type === \"button\") {\n                            p[paramElems[i].id] = paramElems[i].value;\n                        } else {\n                            if (isScatter) {\n                                p[paramElems[i].name] = (paramElems[i]).value;\n                            } else {\n                                p[paramElems[i].name] = matsParamUtils.getValueForParamName(paramElems[i].name)\n                            }\n                        }\n                    }\n                    if (paramElems[i].name && paramElems[i].name === 'label') {\n                        if (_.indexOf(matsCurveUtils.getUsedLabels(), (paramElems[i]).value) != -1) {\n                            setError(new Error('labels need to be unique - change ' + (paramElems[i]).value + \" to something else\"));\n                            return false;\n                        }\n                    }\n                }\n            }\n            p.color = matsCurveUtils.getNextCurveColor();\n            curves.push(p);\n            var elem = document.getElementById(\"curveList\");\n            elem.style.display = \"block\";\n        }\n\n        Session.set('Curves', curves);\n        matsCurveUtils.setUsedColorsAndLabels(); // we have used a color and label so we have to set the next one\n        matsCurveUtils.checkDiffs();\n        matsParamUtils.collapseParams();\n        matsParamUtils.setInputForParamName('label', matsCurveUtils.getNextCurveLabel());\n        return false;\n    }\n});\n\nTemplate.paramList.onRendered(function () {\n    Session.set('displayPriority', 1);\n    Session.set('editMode', '');\n\n    //hide sites and sitesMap selectors for anything that isn't a map plot or wfip2\n    var elem;\n    var ptype = matsPlotUtils.getPlotType();\n    elem = document.getElementById('sites-item');\n    var sitesParamHidden;\n    if (elem && elem.style) {\n        sitesParamHidden = matsCollections.CurveParams.findOne({name: 'sites'}).hiddenForPlotTypes;\n        if (sitesParamHidden) {\n            if (sitesParamHidden.indexOf(ptype) === -1) {\n                elem.style.display = \"block\";\n            } else {\n                elem.style.display = \"none\";\n            }\n        }\n    }\n    elem = document.getElementById('sitesMap-item');\n    if (elem && elem.style) {\n        sitesParamHidden = matsCollections.CurveParams.findOne({name: 'sitesMap'}).hiddenForPlotTypes;\n        if (sitesParamHidden) {\n            if (sitesParamHidden.indexOf(ptype) === -1) {\n                elem.style.display = \"block\";\n            } else {\n                elem.style.display = \"none\";\n            }\n        }\n    }\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsTypes } from 'meteor/randyp:mats-common';\n import { matsCollections } from 'meteor/randyp:mats-common';\nimport { matsPlotUtils } from 'meteor/randyp:mats-common';\n\nvar duplicate = function(param) {\n    var obj = {};\n    var keys = Object.keys(param);\n    for (var i=0; i<keys.length;i++){\n        if (keys[i] !== \"_id\") {\n            obj[keys[i]] = param[keys[i]];\n        }\n    }\n    return obj;\n};\n\nfilterParams = function(params) {\n/*\nIf the plottype is a 2d scatter plot we need to basically create a new set of parameters (except for the label)\nfor each axis. The double set of parameters will get sent back to the backend.\n */\n    if (matsPlotUtils.getPlotType() === matsTypes.PlotTypes.scatter2d) {\n        var xparams = [];\n        var yparams = [];\n        var newParams = [];\n        for (var i = 0; i < params.length;i++) {\n            var xp = duplicate(params[i]);\n            xp.name = \"xaxis-\" + params[i].name;\n            xp.hidden = true;\n            xparams.push(xp);\n            var yp = duplicate(params[i]);\n            yp.name = \"yaxis-\" + params[i].name;\n            yp.hidden = true;\n            yparams.push(yp);\n        }\n        newParams = newParams.concat(params);\n        newParams = newParams.concat(xparams);\n        newParams = newParams.concat(yparams);\n        return newParams;\n    } else {\n        return params;\n    }\n};\n\nTemplate.curveParamGroup.helpers({\n    CurveParams: function (num) {\n        var restoreSettingsTime = Session.get(\"restoreSettingsTime\"); // used to force re-render\n        var lastUpdate = Session.get('lastUpdate');\n        var params = matsCollections.CurveParams.find({displayGroup:num},{sort:[\"displayOrder\", \"asc\"]}).fetch();\n        params = filterParams(params);\n        return params;\n    },\n    displayGroup: function() {\n        return \"block\";\n    },\n    log: function() {\n        console.log(this);\n    }\n});","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsTypes } from 'meteor/randyp:mats-common'; \nimport { matsCollections } from 'meteor/randyp:mats-common';\nimport { matsPlotUtils } from 'meteor/randyp:mats-common';\n\nconst isEditing = function() {\n    const mode = Session.get('editMode');\n    return !( mode === \"\" || mode === undefined || mode === null);\n};\nconst setAxisText = function(axis) {\n    Session.set(axis + 'CurveText', axis + \" \" + matsPlotUtils.getAxisText(matsPlotUtils.getPlotType()));\n    Session.set(axis + 'CurveColor', 'green');\n    Session.set('axisCurveIcon', \"fa-check\");\n};\n\nTemplate.scatter2d.helpers({\n    modeText: function() {\n        return isEditing() ? \"Editing the curve \" + Session.get('editMode') + \" (\" + Session.get('axis') + \")\": \"Creating a new curve\";\n    },\n    creating: function() {\n        if (isEditing()) {\n            return \"none\";\n        } else {\n            return \"block\";\n        }\n    },\n    editing: function() {\n        if (isEditing()) {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    xaxisCurveText: function() {\n        if (isEditing()) {\n            setAxisText(\"xaxis\");\n        }\n        const t = Session.get('xaxisCurveText');\n        if (t){\n            return t;\n        } else {\n            Session.set('xaxisCurveText', 'XAXIS NOT YET APPLIED');\n            return 'XAXIS NOT YET APPLIED';\n        }\n    },\n    yaxisCurveText: function() {\n        if (isEditing()) {\n            setAxisText(\"yaxis\");\n        }\n        const t = Session.get('yaxisCurveText');\n        if (t || isEditing()){\n            return t;\n        } else {\n            Session.set('yaxisCurveText', 'YAXIS NOT YET APPLIED');\n            return 'YAXIS NOT YET APPLIED';\n        }\n    },\n    yApplyEnabled: function() {\n        const c = Session.get('xaxisCurveColor');\n        if (c === 'red' && !isEditing()){\n            return \"disabled\";\n        } else {\n            return\"\";\n        }\n    },\n\n    xaxisCurveColor: function() {\n        const t = Session.get('xaxisCurveColor');\n        if (t){\n            return t;\n        } else {\n            Session.set('xaxisCurveColor', 'red');\n            return 'red';\n        }\n    },\n    yaxisCurveColor: function() {\n        const t = Session.get('yaxisCurveColor');\n        if (t){\n            return t;\n        } else {\n            Session.set('yaxisCurveColor', 'red');\n            return 'red';\n        }\n    },\n    curveIcon: function() {\n        const t = Session.get('axisCurveIcon');\n        if (t){\n            return t;\n        } else {\n            Session.set('axisCurveIcon', 'fa-asterisk');\n            return 'fa-asterisk';\n        }\n    },\n    title: function() {\n        return \"Scatter Plot parameters\"\n    },\n    scatter2dParams: function () {\n        const params = matsCollections.Scatter2dParams.find({}).fetch();\n        return params;\n    },\n    scatter2dOptions: function() {\n        const options = this.options;\n        return options;\n    },\n    name: function(param) {\n        //console.log(\"name: \" + param.name);\n        const name = param.name.replace(/ /g,'-');\n        return name;\n    },\n    className: function(param) {\n        //console.log(\"name: \" + param.name);\n        const cname = param.name.replace(/ /g,'-') + \"-\" + param.type;\n        return cname;\n    },\n    \n    type: function(param) {\n        switch (param.type) {\n            case matsTypes.InputTypes.checkBoxGroup:\n                return \"checkbox\";\n                break;\n            case matsTypes.InputTypes.radioGroup:\n                return \"radio\";\n                break;\n            case matsTypes.InputTypes.select:\n                return \"select\";\n                break;\n            case matsTypes.InputTypes.numberSpinner:\n                return \"number\";\n                break;\n            default:\n                return \"text\";\n        }\n    },\n    default: function() {\n        return this.default;\n    },\n    idOption: function(param) {\n        var id = param.name + \"-\" + param.type + \"-\" + this;\n        id = id.replace(/ /g,'-');\n        return id;\n    },\n    idParam: function() {\n        var id = this.name + \"-\" + this.type;\n        id = id.replace(/ /g,'-');\n        return id;\n    },\n    plotType : function() {\n      return matsTypes.PlotTypes.scatter2d;  \n    },\n    isDefault: function (param) {\n        const def = param.default;\n        if (def == this) {\n            return \"checked\";\n        } else {\n            return \"\";\n        }\n    },\n    displayScatter2d: function() {\n        if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    label: function(param, parent) {\n        if (parent.name === \"Fit Type\") {\n            return parent.optionsMap[this];\n        } else {\n            return this;\n        }\n    },\n    labelParam: function() {\n            return this.name;\n    },\n    log: function() {\n        console.log(this);\n    },\n    axis: function(param) {\n        var axis = Session.get('axis');\n        if (axis === undefined) {\n            if (param) {\n                return param.default;\n            } else {\n                return 'xaxis';\n            }\n        }\n        return axis;\n    },\n    isNumberSpinner: function(param) {\n        return param.type === matsTypes.InputTypes.numberSpinner;\n    },\n    hasHelp: function() {\n        return this.help !== undefined;\n    }\n});\n\nconst apply = function(axis) {\n    const elems = document.getElementsByClassName(\"data-input\");\n    const curveParams = matsCollections.CurveParams.find({}, {fields: {name: 1}}).fetch();\n    const curveNames = _.pluck(curveParams, \"name\");\n    const param_elems = _.filter(elems, function (elem) {\n        return _.contains(curveNames, elem.name);\n    });\n    var l = param_elems.length;\n    for (var i = 0; i < l; i++) {\n        var pelem = param_elems[i];\n        //console.log(\"pelem.type is \" + pelem.type);\n        var elem_id = pelem.id;\n        var target_id = axis + \"-\" + elem_id;\n        var telem = document.getElementById(target_id);\n        // Notice that these types are not matsTypes these are javascript types\n        if (pelem.type === \"select-multiple\") {\n            var $options = $(\"#\" + elem_id + \" > option\").clone();\n            $(\"#\" + target_id).empty().append($options);\n            var selectedOptions = $(pelem.selectedOptions).map(function(){return(this.value)}).get();\n            for (var x =0; x < telem.options.length; x++) {\n                if ($.inArray(telem.options[x].value, selectedOptions) !== -1) {\n                    telem.options[x].selected = true;\n                } else {\n                    telem.options[x].selected = false;\n                }\n            }\n        } else if (pelem.type === \"select-one\") {\n            var $options = $(\"#\" + elem_id + \" > option\").clone();\n            $(\"#\" + target_id).empty().append($options);\n            telem.selectedIndex = pelem.selectedIndex;\n        } else if (pelem.type === \"radio\") {\n            // NOT SURE THIS IS RIGHT\n            //console.log(pelem.name + \" is \" + $('input[name=\"' + pelem.name + '\"]:checked').val());\n            $('input[name=\"' + telem.name + '\"]:checked');\n        } else if (pelem.type === \"button\") {\n            telem.value = pelem.value;\n        } else {\n            telem.value = pelem.value;\n        }\n    }\n    setAxisText(axis);\n};\n\nTemplate.scatter2d.events({\n    'click .apply-params-to-xaxis': function(event) {\n        apply('xaxis');\n    },\n    'click .apply-params-to-yaxis': function(event) {\n        apply('yaxis');\n    },\n    'change .axis-selector-radioGroup' : function(event) {\n        var newAxis = event.currentTarget.value;\n        Session.set('axis',newAxis);\n        var elems = document.getElementsByClassName(\"data-input\");\n        var axis_elems = _.filter(elems, function (elem) {\n            return elem.name.indexOf(newAxis) > -1;\n        });\n        var l = axis_elems.length;\n        for (var i = 0; i < l; i++) {\n            var aelem = axis_elems[i];\n            var aelem_id = aelem.id;\n            // remove the axis part at the front\n            var target_id = aelem_id.substring(newAxis.length+1,aelem_id.length);\n            var telem = document.getElementById(target_id);\n            if (aelem.type === \"select-multiple\") {\n                $(telem).val($(aelem.selectedOptions).map(function(){return(this.value)}).get());\n            } else if (aelem.type === \"radio\") {\n                // NOT SURE THIS IS RIGHT\n                //console.log(pelem.name + \" is \" + $('input[name=\"' + pelem.name + '\"]:checked').val());\n                $('input[name=\"' + telem.name + '\"]:checked');\n            } else if (aelem.type === \"button\") {\n                telem.value = aelem.value;\n            } else {\n                telem.value = aelem.value;\n            }\n            telem.dispatchEvent(new CustomEvent(\"axisRefresh\"));\n        }\n    },\n    'click .axishelp' : function() {\n        $(\"#matshelp\").load(\"/help/scatter-help.html #matshelp\");\n        $(\"#helpModal\").modal('show');\n    },\n    'click .help' : function() {\n        $(\"#matshelp\").load(\"/help/\" + this.help + \" #matshelp\");\n        $(\"#helpModal\").modal('show');\n    }\n});\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsCurveUtils} from 'meteor/randyp:mats-common';\nimport {matsParamUtils} from 'meteor/randyp:mats-common';\n\n\nTemplate.plotType.helpers({\n    plotTypes: function () {\n        return matsCollections.PlotGraphFunctions.find({}).fetch();\n    },\n    title: function () {\n        if (matsCollections.Settings === undefined || matsCollections.Settings.findOne({}, {fields: {Title: 1}}) === undefined) {\n            return \"\";\n        } else {\n            return matsCollections.Settings.findOne({}, {fields: {Title: 1}}).Title;\n        }\n    },\n    display: function () {    // don't display the choice if there is only one choice\n        if (matsCollections.PlotGraphFunctions.find({}).fetch().length === 1) {\n            return \"hidden\";\n        } else {\n            return \"\";\n        }\n    }\n});\n\n\nTemplate.plotType.events({\n    'click .plot-type-TimeSeries': function (event) {\n        if (Session.get(\"confirmPlotChange\")) {\n            // change has been confirmed\n            // see if the previous plot type also used the 'dates' parameter\n            const oldDatesExist = matsParamUtils.isParamVisible('dates');\n            matsCurveUtils.showTimeseriesFace();\n            var curves = Session.get('Curves');\n            // if a 'dates' parameter was already in use, we want to keep that value.\n            // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n            if (!oldDatesExist) {\n                const curveDate = $('#controlButton-curve-dates-value').text();\n                matsParamUtils.setValueTextForParamName('dates', curveDate)\n            }\n            if (curves.length > 0) {\n                // initialize parameters that may not have been used yet\n                for (var ci = 0; ci < curves.length; ci++) {\n                    // the average may not have been carried over from other curve types so let it default\n                    if (!curves[ci]['average'] && matsCollections.CurveParams.findOne({name: 'average'}) && matsCollections.CurveParams.findOne({name: 'average'}).default) {\n                        curves[ci]['average'] = matsCollections.CurveParams.findOne({name: 'average'}).default;\n                    }\n                    if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({name: 'valid-time'}) && matsCollections.CurveParams.findOne({name: 'valid-time'}).default) {\n                        curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({name: 'valid-time'}).default;\n                    }\n                    if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({name: 'threshold'}) && matsCollections.CurveParams.findOne({name: 'threshold'}).default) {\n                        curves[ci]['threshold'] = matsCollections.CurveParams.findOne({name: 'threshold'}).default;\n                    }\n                    if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({name: 'forecast-length'}) && matsCollections.CurveParams.findOne({name: 'forecast-length'}).default) {\n                        curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({name: 'forecast-length'}).default;\n                    }\n                    if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({name: 'region'}) && matsCollections.CurveParams.findOne({name: 'region'}).default) {\n                        curves[ci]['region'] = matsCollections.CurveParams.findOne({name: 'region'}).default;\n                    }\n                    if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({name: 'statistic'}) && matsCollections.CurveParams.findOne({name: 'statistic'}).default) {\n                        curves[ci]['statistic'] = matsCollections.CurveParams.findOne({name: 'statistic'}).default;\n                    }\n                    if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({name: 'truth'}) && matsCollections.CurveParams.findOne({name: 'truth'}).default) {\n                        curves[ci]['truth'] = matsCollections.CurveParams.findOne({name: 'truth'}).default;\n                    }\n                }\n                Session.set('Curves', curves);\n            }\n            Session.set(\"confirmPlotChange\", \"\");\n            Session.set('plotChangeType', \"\");\n        } else {\n            // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n            if (Session.get(\"Curves\").length > 0) {\n                Session.set('plotChangeType', matsTypes.PlotTypes.timeSeries);\n                $(\"#modal-change-plot-type\").modal();\n            } else {\n                // no curves - just set the timeseries face\n                // see if the previous plot type also used the 'dates' parameter\n                const oldDatesExist = matsParamUtils.isParamVisible('dates');\n                matsCurveUtils.showTimeseriesFace();\n                // if a 'dates' parameter was already in use, we want to keep that value.\n                // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n                if (!oldDatesExist) {\n                    const curveDate = $('#controlButton-curve-dates-value').text();\n                    matsParamUtils.setValueTextForParamName('dates', curveDate)\n                }\n            }\n        }\n    },\n    'click .plot-type-Profile': function (event) {\n        if (Session.get(\"confirmPlotChange\")) {\n            // change has been confirmed\n            // see if the previous plot type also used the 'curve-dates' parameter\n            const oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n            matsCurveUtils.showProfileFace();\n            var curves = Session.get('Curves');\n            // if a 'curve-dates' parameter was already in use, we want to keep that value.\n            // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n            const tsDate = $('#controlButton-dates-value').text();\n            if (!oldCurveDatesExist) {\n                matsParamUtils.setValueTextForParamName('curve-dates', tsDate)\n            }\n            if (curves.length > 0) {\n                // initialize parameters that may not have been used yet\n                for (var ci = 0; ci < curves.length; ci++) {\n                    if (tsDate !== undefined && tsDate !== \"\" && !oldCurveDatesExist) {\n                        curves[ci]['curve-dates'] = tsDate;\n                    }\n                    if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({name: 'valid-time'}) && matsCollections.CurveParams.findOne({name: 'valid-time'}).default) {\n                        curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({name: 'valid-time'}).default;\n                    }\n                    if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({name: 'threshold'}) && matsCollections.CurveParams.findOne({name: 'threshold'}).default) {\n                        curves[ci]['threshold'] = matsCollections.CurveParams.findOne({name: 'threshold'}).default;\n                    }\n                    if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({name: 'forecast-length'}) && matsCollections.CurveParams.findOne({name: 'forecast-length'}).default) {\n                        curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({name: 'forecast-length'}).default;\n                    }\n                    if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({name: 'region'}) && matsCollections.CurveParams.findOne({name: 'region'}).default) {\n                        curves[ci]['region'] = matsCollections.CurveParams.findOne({name: 'region'}).default;\n                    }\n                    if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({name: 'statistic'}) && matsCollections.CurveParams.findOne({name: 'statistic'}).default) {\n                        curves[ci]['statistic'] = matsCollections.CurveParams.findOne({name: 'statistic'}).default;\n                    }\n                    if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({name: 'truth'}) && matsCollections.CurveParams.findOne({name: 'truth'}).default) {\n                        curves[ci]['truth'] = matsCollections.CurveParams.findOne({name: 'truth'}).default;\n                    }\n                }\n                Session.set('Curves', curves);\n            }\n            Session.set(\"confirmPlotChange\", \"\");\n            Session.set('plotChangeType', \"\");\n        } else {\n            // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n            if (Session.get(\"Curves\").length > 0) {\n                Session.set('plotChangeType', matsTypes.PlotTypes.profile);\n                $(\"#modal-change-plot-type\").modal();\n            } else {\n                // no curves - just set the profile face\n                // see if the previous plot type also used the 'curve-dates' parameter\n                const oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n                matsCurveUtils.showProfileFace();\n                // if a 'curve-dates' parameter was already in use, we want to keep that value.\n                // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n                if (!oldCurveDatesExist) {\n                    const tsDate = $('#controlButton-dates-value').text();\n                    matsParamUtils.setValueTextForParamName('curve-dates', tsDate)\n                }\n            }\n        }\n    },\n    'click .plot-type-DieOff': function (event) {\n        if (Session.get(\"confirmPlotChange\")) {\n            // change has been confirmed\n            // see if the previous plot type also used the 'curve-dates' parameter\n            const oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n            matsCurveUtils.showDieOffFace();\n            var curves = Session.get('Curves');\n            // if a 'curve-dates' parameter was already in use, we want to keep that value.\n            // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n            const tsDate = $('#controlButton-dates-value').text();\n            if (!oldCurveDatesExist) {\n                matsParamUtils.setValueTextForParamName('curve-dates', tsDate)\n            }\n            if (curves.length > 0) {\n                // initialize parameters that may not have been used yet\n                for (var ci = 0; ci < curves.length; ci++) {\n                    if (tsDate !== undefined && tsDate !== \"\" && !oldCurveDatesExist) {\n                        curves[ci]['curve-dates'] = tsDate;\n                    }\n                    if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({name: 'valid-time'}) && matsCollections.CurveParams.findOne({name: 'valid-time'}).default) {\n                        curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({name: 'valid-time'}).default;\n                    }\n                    if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({name: 'threshold'}) && matsCollections.CurveParams.findOne({name: 'threshold'}).default) {\n                        curves[ci]['threshold'] = matsCollections.CurveParams.findOne({name: 'threshold'}).default;\n                    }\n                    if (!curves[ci]['dieoff-type'] && matsCollections.CurveParams.findOne({name: 'dieoff-type'}) && matsCollections.CurveParams.findOne({name: 'dieoff-type'}).default) {\n                        curves[ci]['dieoff-type'] = matsCollections.CurveParams.findOne({name: 'dieoff-type'}).default;\n                    }\n                    if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({name: 'region'}) && matsCollections.CurveParams.findOne({name: 'region'}).default) {\n                        curves[ci]['region'] = matsCollections.CurveParams.findOne({name: 'region'}).default;\n                    }\n                    if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({name: 'statistic'}) && matsCollections.CurveParams.findOne({name: 'statistic'}).default) {\n                        curves[ci]['statistic'] = matsCollections.CurveParams.findOne({name: 'statistic'}).default;\n                    }\n                    if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({name: 'truth'}) && matsCollections.CurveParams.findOne({name: 'truth'}).default) {\n                        curves[ci]['truth'] = matsCollections.CurveParams.findOne({name: 'truth'}).default;\n                    }\n                }\n                Session.set('Curves', curves);\n            }\n            Session.set(\"confirmPlotChange\", \"\");\n            Session.set('plotChangeType', \"\");\n        } else {\n            // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n            if (Session.get(\"Curves\").length > 0) {\n                Session.set('plotChangeType', matsTypes.PlotTypes.dieoff);\n                $(\"#modal-change-plot-type\").modal();\n            } else {\n                // no curves - just set the dieoff face\n                // see if the previous plot type also used the 'curve-dates' parameter\n                const oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n                matsCurveUtils.showDieOffFace();\n                // if a 'curve-dates' parameter was already in use, we want to keep that value.\n                // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n                if (!oldCurveDatesExist) {\n                    const tsDate = $('#controlButton-dates-value').text();\n                    matsParamUtils.setValueTextForParamName('curve-dates', tsDate)\n                }\n            }\n        }\n    },\n    'click .plot-type-Threshold': function (event) {\n        if (Session.get(\"confirmPlotChange\")) {\n            // change has been confirmed\n            // see if the previous plot type also used the 'curve-dates' parameter\n            const oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n            matsCurveUtils.showThresholdFace();\n            var curves = Session.get('Curves');\n            // if a 'curve-dates' parameter was already in use, we want to keep that value.\n            // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n            const tsDate = $('#controlButton-dates-value').text();\n            if (!oldCurveDatesExist) {\n                matsParamUtils.setValueTextForParamName('curve-dates', tsDate)\n            }\n            if (curves.length > 0) {\n                // initialize parameters that may not have been used yet\n                for (var ci = 0; ci < curves.length; ci++) {\n                    if (tsDate !== undefined && tsDate !== \"\" && !oldCurveDatesExist) {\n                        curves[ci]['curve-dates'] = tsDate;\n                    }\n                    if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({name: 'valid-time'}) && matsCollections.CurveParams.findOne({name: 'valid-time'}).default) {\n                        curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({name: 'valid-time'}).default;\n                    }\n                    if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({name: 'forecast-length'}) && matsCollections.CurveParams.findOne({name: 'forecast-length'}).default) {\n                        curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({name: 'forecast-length'}).default;\n                    }\n                    if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({name: 'region'}) && matsCollections.CurveParams.findOne({name: 'region'}).default) {\n                        curves[ci]['region'] = matsCollections.CurveParams.findOne({name: 'region'}).default;\n                    }\n                    if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({name: 'statistic'}) && matsCollections.CurveParams.findOne({name: 'statistic'}).default) {\n                        curves[ci]['statistic'] = matsCollections.CurveParams.findOne({name: 'statistic'}).default;\n                    }\n                    if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({name: 'truth'}) && matsCollections.CurveParams.findOne({name: 'truth'}).default) {\n                        curves[ci]['truth'] = matsCollections.CurveParams.findOne({name: 'truth'}).default;\n                    }\n                }\n                Session.set('Curves', curves);\n            }\n            Session.set(\"confirmPlotChange\", \"\");\n            Session.set('plotChangeType', \"\");\n        } else {\n            // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n            if (Session.get(\"Curves\").length > 0) {\n                Session.set('plotChangeType', matsTypes.PlotTypes.threshold);\n                $(\"#modal-change-plot-type\").modal();\n            } else {\n                // no curves - just set the threshold face\n                // see if the previous plot type also used the 'curve-dates' parameter\n                const oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n                matsCurveUtils.showThresholdFace();\n                // if a 'curve-dates' parameter was already in use, we want to keep that value.\n                // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n                if (!oldCurveDatesExist) {\n                    const tsDate = $('#controlButton-dates-value').text();\n                    matsParamUtils.setValueTextForParamName('curve-dates', tsDate)\n                }\n            }\n        }\n    },\n    'click .plot-type-ValidTime': function (event) {\n        if (Session.get(\"confirmPlotChange\")) {\n            // change has been confirmed\n            // see if the previous plot type also used the 'curve-dates' parameter\n            const oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n            matsCurveUtils.showValidTimeFace();\n            var curves = Session.get('Curves');\n            // if a 'curve-dates' parameter was already in use, we want to keep that value.\n            // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n            const tsDate = $('#controlButton-dates-value').text();\n            if (!oldCurveDatesExist) {\n                matsParamUtils.setValueTextForParamName('curve-dates', tsDate)\n            }\n            if (curves.length > 0) {\n                // initialize parameters that may not have been used yet\n                for (var ci = 0; ci < curves.length; ci++) {\n                    if (tsDate !== undefined && tsDate !== \"\" && !oldCurveDatesExist) {\n                        curves[ci]['curve-dates'] = tsDate;\n                    }\n                    if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({name: 'threshold'}) && matsCollections.CurveParams.findOne({name: 'threshold'}).default) {\n                        curves[ci]['threshold'] = matsCollections.CurveParams.findOne({name: 'threshold'}).default;\n                    }\n                    if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({name: 'forecast-length'}) && matsCollections.CurveParams.findOne({name: 'forecast-length'}).default) {\n                        curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({name: 'forecast-length'}).default;\n                    }\n                    if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({name: 'region'}) && matsCollections.CurveParams.findOne({name: 'region'}).default) {\n                        curves[ci]['region'] = matsCollections.CurveParams.findOne({name: 'region'}).default;\n                    }\n                    if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({name: 'statistic'}) && matsCollections.CurveParams.findOne({name: 'statistic'}).default) {\n                        curves[ci]['statistic'] = matsCollections.CurveParams.findOne({name: 'statistic'}).default;\n                    }\n                    if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({name: 'truth'}) && matsCollections.CurveParams.findOne({name: 'truth'}).default) {\n                        curves[ci]['truth'] = matsCollections.CurveParams.findOne({name: 'truth'}).default;\n                    }\n                }\n                Session.set('Curves', curves);\n            }\n            Session.set(\"confirmPlotChange\", \"\");\n            Session.set('plotChangeType', \"\");\n        } else {\n            // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n            if (Session.get(\"Curves\").length > 0) {\n                Session.set('plotChangeType', matsTypes.PlotTypes.validtime);\n                $(\"#modal-change-plot-type\").modal();\n            } else {\n                // no curves - just set the valid time face\n                // see if the previous plot type also used the 'curve-dates' parameter\n                const oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n                matsCurveUtils.showValidTimeFace();\n                // if a 'curve-dates' parameter was already in use, we want to keep that value.\n                // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n                if (!oldCurveDatesExist) {\n                    const tsDate = $('#controlButton-dates-value').text();\n                    matsParamUtils.setValueTextForParamName('curve-dates', tsDate)\n                }\n            }\n        }\n    },\n    'click .plot-type-DailyModelCycle': function (event) {\n        if (Session.get(\"confirmPlotChange\")) {\n            // change has been confirmed\n            // see if the previous plot type also used the 'dates' parameter\n            const oldDatesExist = matsParamUtils.isParamVisible('dates');\n            matsCurveUtils.showDailyModelCycleFace();\n            var curves = Session.get('Curves');\n            // if a 'dates' parameter was already in use, we want to keep that value.\n            // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n            if (!oldDatesExist) {\n                const curveDate = $('#controlButton-curve-dates-value').text();\n                matsParamUtils.setValueTextForParamName('dates', curveDate)\n            }\n            if (curves.length > 0) {\n                // initialize parameters that may not have been used yet\n                for (var ci = 0; ci < curves.length; ci++) {\n                    if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({name: 'threshold'}) && matsCollections.CurveParams.findOne({name: 'threshold'}).default) {\n                        curves[ci]['threshold'] = matsCollections.CurveParams.findOne({name: 'threshold'}).default;\n                    }\n                    if (!curves[ci]['utc-cycle-start'] && matsCollections.CurveParams.findOne({name: 'utc-cycle-start'}) && matsCollections.CurveParams.findOne({name: 'utc-cycle-start'}).default) {\n                        curves[ci]['utc-cycle-start'] = matsCollections.CurveParams.findOne({name: 'utc-cycle-start'}).default;\n                    }\n                    if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({name: 'region'}) && matsCollections.CurveParams.findOne({name: 'region'}).default) {\n                        curves[ci]['region'] = matsCollections.CurveParams.findOne({name: 'region'}).default;\n                    }\n                    if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({name: 'statistic'}) && matsCollections.CurveParams.findOne({name: 'statistic'}).default) {\n                        curves[ci]['statistic'] = matsCollections.CurveParams.findOne({name: 'statistic'}).default;\n                    }\n                    if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({name: 'truth'}) && matsCollections.CurveParams.findOne({name: 'truth'}).default) {\n                        curves[ci]['truth'] = matsCollections.CurveParams.findOne({name: 'truth'}).default;\n                    }\n                }\n                Session.set('Curves', curves);\n            }\n            Session.set(\"confirmPlotChange\", \"\");\n            Session.set('plotChangeType', \"\");\n        } else {\n            // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n            if (Session.get(\"Curves\").length > 0) {\n                Session.set('plotChangeType', matsTypes.PlotTypes.dailyModelCycle);\n                $(\"#modal-change-plot-type\").modal();\n            } else {\n                // no curves - just set the daily model cycle face\n                // see if the previous plot type also used the 'dates' parameter\n                const oldDatesExist = matsParamUtils.isParamVisible('dates');\n                matsCurveUtils.showDailyModelCycleFace();\n                // if a 'dates' parameter was already in use, we want to keep that value.\n                // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n                if (!oldDatesExist) {\n                    const curveDate = $('#controlButton-curve-dates-value').text();\n                    matsParamUtils.setValueTextForParamName('dates', curveDate)\n                }\n            }\n        }\n    },\n    'click .plot-type-Reliability': function (event) {\n        if (Session.get(\"confirmPlotChange\")) {\n            // change has been confirmed\n            // see if the previous plot type also used the 'dates' parameter\n            const oldDatesExist = matsParamUtils.isParamVisible('dates');\n            matsCurveUtils.showReliabilityFace();\n            var curves = Session.get('Curves');\n            // if a 'dates' parameter was already in use, we want to keep that value.\n            // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n            if (!oldDatesExist) {\n                const curveDate = $('#controlButton-curve-dates-value').text();\n                matsParamUtils.setValueTextForParamName('dates', curveDate)\n            }\n            if (curves.length > 0) {\n                // initialize parameters that may not have been used yet\n                for (var ci = 0; ci < curves.length; ci++) {\n                    // the average may not have been carried over from other curve types so let it default\n                    if (!curves[ci]['average'] && matsCollections.CurveParams.findOne({name: 'average'}) && matsCollections.CurveParams.findOne({name: 'average'}).default) {\n                        curves[ci]['average'] = matsCollections.CurveParams.findOne({name: 'average'}).default;\n                    }\n                    if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({name: 'valid-time'}) && matsCollections.CurveParams.findOne({name: 'valid-time'}).default) {\n                        curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({name: 'valid-time'}).default;\n                    }\n                    if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({name: 'threshold'}) && matsCollections.CurveParams.findOne({name: 'threshold'}).default) {\n                        curves[ci]['threshold'] = matsCollections.CurveParams.findOne({name: 'threshold'}).default;\n                    }\n                    if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({name: 'forecast-length'}) && matsCollections.CurveParams.findOne({name: 'forecast-length'}).default) {\n                        curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({name: 'forecast-length'}).default;\n                    }\n                    if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({name: 'region'}) && matsCollections.CurveParams.findOne({name: 'region'}).default) {\n                        curves[ci]['region'] = matsCollections.CurveParams.findOne({name: 'region'}).default;\n                    }\n                    if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({name: 'statistic'}) && matsCollections.CurveParams.findOne({name: 'statistic'}).default) {\n                        curves[ci]['statistic'] = matsCollections.CurveParams.findOne({name: 'statistic'}).default;\n                    }\n                    if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({name: 'truth'}) && matsCollections.CurveParams.findOne({name: 'truth'}).default) {\n                        curves[ci]['truth'] = matsCollections.CurveParams.findOne({name: 'truth'}).default;\n                    }\n                }\n                Session.set('Curves', curves);\n            }\n            Session.set(\"confirmPlotChange\", \"\");\n            Session.set('plotChangeType', \"\");\n        } else {\n            // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n            if (Session.get(\"Curves\").length > 0) {\n                Session.set('plotChangeType', matsTypes.PlotTypes.reliability);\n                $(\"#modal-change-plot-type\").modal();\n            } else {\n                // no curves - just set the reliability face\n                // see if the previous plot type also used the 'dates' parameter\n                const oldDatesExist = matsParamUtils.isParamVisible('dates');\n                matsCurveUtils.showReliabilityFace();\n                // if a 'dates' parameter was already in use, we want to keep that value.\n                // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n                if (!oldDatesExist) {\n                    const curveDate = $('#controlButton-curve-dates-value').text();\n                    matsParamUtils.setValueTextForParamName('dates', curveDate)\n                }\n            }\n        }\n    },\n    'click .plot-type-Map': function (event) {\n        if (Session.get(\"confirmPlotChange\")) {\n            // change has been confirmed\n            // see if the previous plot type also used the 'dates' parameter\n            const oldDatesExist = matsParamUtils.isParamVisible('dates');\n            matsCurveUtils.showMapFace();\n            var curves = Session.get('Curves');\n            // if a 'dates' parameter was already in use, we want to keep that value.\n            // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n            if (!oldDatesExist) {\n                const curveDate = $('#controlButton-curve-dates-value').text();\n                matsParamUtils.setValueTextForParamName('dates', curveDate)\n            }\n            if (curves.length > 0) {\n                // initialize parameters that may not have been used yet\n                for (var ci = 0; ci < curves.length; ci++) {\n                    if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({name: 'valid-time'}) && matsCollections.CurveParams.findOne({name: 'valid-time'}).default) {\n                        curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({name: 'valid-time'}).default;\n                    }\n                    if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({name: 'forecast-length'}) && matsCollections.CurveParams.findOne({name: 'forecast-length'}).default) {\n                        curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({name: 'forecast-length'}).default;\n                    }\n                }\n                Session.set('Curves', curves);\n            }\n            Session.set(\"confirmPlotChange\", \"\");\n            Session.set('plotChangeType', \"\");\n        } else {\n            // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n            if (Session.get(\"Curves\").length > 0) {\n                Session.set('plotChangeType', matsTypes.PlotTypes.map);\n                $(\"#modal-change-plot-type\").modal();\n            } else {\n                // no curves - just set the map face\n                // see if the previous plot type also used the 'dates' parameter\n                const oldDatesExist = matsParamUtils.isParamVisible('dates');\n                matsCurveUtils.showMapFace();\n                // if a 'dates' parameter was already in use, we want to keep that value.\n                // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n                if (!oldDatesExist) {\n                    const curveDate = $('#controlButton-curve-dates-value').text();\n                    matsParamUtils.setValueTextForParamName('dates', curveDate)\n                }\n            }\n        }\n    },\n    'click .plot-type-Histogram': function (event) {\n        if (Session.get(\"confirmPlotChange\")) {\n            // change has been confirmed\n            // see if the previous plot type also used the 'curve-dates' parameter\n            const oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n            matsCurveUtils.showHistogramFace();\n            var curves = Session.get('Curves');\n            // if a 'curve-dates' parameter was already in use, we want to keep that value.\n            // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n            const tsDate = $('#controlButton-dates-value').text();\n            if (!oldCurveDatesExist) {\n                matsParamUtils.setValueTextForParamName('curve-dates', tsDate)\n            }\n            if (curves.length > 0) {\n                // initialize parameters that may not have been used yet\n                for (var ci = 0; ci < curves.length; ci++) {\n                    if (tsDate !== undefined && tsDate !== \"\" && !oldCurveDatesExist) {\n                        curves[ci]['curve-dates'] = tsDate;\n                    }\n                    if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({name: 'valid-time'}) && matsCollections.CurveParams.findOne({name: 'valid-time'}).default) {\n                        curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({name: 'valid-time'}).default;\n                    }\n                    if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({name: 'threshold'}) && matsCollections.CurveParams.findOne({name: 'threshold'}).default) {\n                        curves[ci]['threshold'] = matsCollections.CurveParams.findOne({name: 'threshold'}).default;\n                    }\n                    if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({name: 'forecast-length'}) && matsCollections.CurveParams.findOne({name: 'forecast-length'}).default) {\n                        curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({name: 'forecast-length'}).default;\n                    }\n                    if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({name: 'region'}) && matsCollections.CurveParams.findOne({name: 'region'}).default) {\n                        curves[ci]['region'] = matsCollections.CurveParams.findOne({name: 'region'}).default;\n                    }\n                    if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({name: 'statistic'}) && matsCollections.CurveParams.findOne({name: 'statistic'}).default) {\n                        curves[ci]['statistic'] = matsCollections.CurveParams.findOne({name: 'statistic'}).default;\n                    }\n                    if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({name: 'truth'}) && matsCollections.CurveParams.findOne({name: 'truth'}).default) {\n                        curves[ci]['truth'] = matsCollections.CurveParams.findOne({name: 'truth'}).default;\n                    }\n                    if (!curves[ci]['histogram-bin-controls'] && matsCollections.CurveParams.findOne({name: 'histogram-bin-controls'}) && matsCollections.CurveParams.findOne({name: 'histogram-bin-controls'}).default) {\n                        curves[ci]['histogram-bin-controls'] = matsCollections.CurveParams.findOne({name: 'histogram-bin-controls'}).default;\n                    }\n                    if (!curves[ci]['histogram-yaxis-controls'] && matsCollections.CurveParams.findOne({name: 'histogram-yaxis-controls'}) && matsCollections.CurveParams.findOne({name: 'histogram-yaxis-controls'}).default) {\n                        curves[ci]['histogram-yaxis-controls'] = matsCollections.CurveParams.findOne({name: 'histogram-yaxis-controls'}).default;\n                    }\n                }\n                Session.set('Curves', curves);\n            }\n            Session.set(\"confirmPlotChange\", \"\");\n            Session.set('plotChangeType', \"\");\n        } else {\n            // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n            if (Session.get(\"Curves\").length > 0) {\n                Session.set('plotChangeType', matsTypes.PlotTypes.histogram);\n                $(\"#modal-change-plot-type\").modal();\n            } else {\n                // no curves - just set the histogram face\n                // see if the previous plot type also used the 'curve-dates' parameter\n                const oldCurveDatesExist = matsParamUtils.isParamVisible('curve-dates');\n                matsCurveUtils.showHistogramFace();\n                // if a 'curve-dates' parameter was already in use, we want to keep that value.\n                // otherwise, set the 'curve-dates' parameter to whatever 'dates' was set to.\n                if (!oldCurveDatesExist) {\n                    const tsDate = $('#controlButton-dates-value').text();\n                    matsParamUtils.setValueTextForParamName('curve-dates', tsDate)\n                }\n            }\n        }\n    },\n    'click .plot-type-Contour': function (event) {\n        if (Session.get(\"confirmPlotChange\")) {\n            // change has been confirmed\n            // see if the previous plot type also used the 'dates' parameter\n            const oldDatesExist = matsParamUtils.isParamVisible('dates');\n            matsCurveUtils.showContourFace();\n            var curves = Session.get('Curves');\n            // if a 'dates' parameter was already in use, we want to keep that value.\n            // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n            if (!oldDatesExist) {\n                const curveDate = $('#controlButton-curve-dates-value').text();\n                matsParamUtils.setValueTextForParamName('dates', curveDate)\n            }\n            if (curves.length > 0) {\n                // initialize parameters that may not have been used yet\n                for (var ci = 0; ci < curves.length; ci++) {\n                    // the average may not have been carried over from other curve types so let it default\n                    if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({name: 'valid-time'}) && matsCollections.CurveParams.findOne({name: 'valid-time'}).default) {\n                        curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({name: 'valid-time'}).default;\n                    }\n                    if (!curves[ci]['utc-cycle-start'] && matsCollections.CurveParams.findOne({name: 'utc-cycle-start'}) && matsCollections.CurveParams.findOne({name: 'utc-cycle-start'}).default) {\n                        curves[ci]['utc-cycle-start'] = matsCollections.CurveParams.findOne({name: 'utc-cycle-start'}).default;\n                    }\n                    if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({name: 'threshold'}) && matsCollections.CurveParams.findOne({name: 'threshold'}).default) {\n                        curves[ci]['threshold'] = matsCollections.CurveParams.findOne({name: 'threshold'}).default;\n                    }\n                    if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({name: 'forecast-length'}) && matsCollections.CurveParams.findOne({name: 'forecast-length'}).default) {\n                        curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({name: 'forecast-length'}).default;\n                    }\n                    if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({name: 'region'}) && matsCollections.CurveParams.findOne({name: 'region'}).default) {\n                        curves[ci]['region'] = matsCollections.CurveParams.findOne({name: 'region'}).default;\n                    }\n                    if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({name: 'statistic'}) && matsCollections.CurveParams.findOne({name: 'statistic'}).default) {\n                        curves[ci]['statistic'] = matsCollections.CurveParams.findOne({name: 'statistic'}).default;\n                    }\n                    if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({name: 'truth'}) && matsCollections.CurveParams.findOne({name: 'truth'}).default) {\n                        curves[ci]['truth'] = matsCollections.CurveParams.findOne({name: 'truth'}).default;\n                    }\n                    if (!curves[ci]['x-axis-parameter'] && matsCollections.CurveParams.findOne({name: 'x-axis-parameter'}) && matsCollections.CurveParams.findOne({name: 'x-axis-parameter'}).default) {\n                        curves[ci]['x-axis-parameter'] = matsCollections.CurveParams.findOne({name: 'x-axis-parameter'}).default;\n                    }\n                    if (!curves[ci]['y-axis-parameter'] && matsCollections.CurveParams.findOne({name: 'y-axis-parameter'}) && matsCollections.CurveParams.findOne({name: 'y-axis-parameter'}).default) {\n                        curves[ci]['y-axis-parameter'] = matsCollections.CurveParams.findOne({name: 'y-axis-parameter'}).default;\n                    }\n                }\n                Session.set('Curves', curves);\n            }\n            Session.set(\"confirmPlotChange\", \"\");\n            Session.set('plotChangeType', \"\");\n        } else {\n            // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n            if (Session.get(\"Curves\").length > 0) {\n                Session.set('plotChangeType', matsTypes.PlotTypes.contour);\n                $(\"#modal-change-plot-type\").modal();\n            } else {\n                // no curves - just set the contour face\n                // see if the previous plot type also used the 'dates' parameter\n                const oldDatesExist = matsParamUtils.isParamVisible('dates');\n                matsCurveUtils.showContourFace();\n                // if a 'dates' parameter was already in use, we want to keep that value.\n                // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n                if (!oldDatesExist) {\n                    const curveDate = $('#controlButton-curve-dates-value').text();\n                    matsParamUtils.setValueTextForParamName('dates', curveDate)\n                }\n            }\n        }\n    },\n    'click .plot-type-ContourDiff': function (event) {\n        if (Session.get(\"confirmPlotChange\")) {\n            // change has been confirmed\n            // see if the previous plot type also used the 'dates' parameter\n            const oldDatesExist = matsParamUtils.isParamVisible('dates');\n            matsCurveUtils.showContourFace();\n            var curves = Session.get('Curves');\n            // if a 'dates' parameter was already in use, we want to keep that value.\n            // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n            if (!oldDatesExist) {\n                const curveDate = $('#controlButton-curve-dates-value').text();\n                matsParamUtils.setValueTextForParamName('dates', curveDate)\n            }\n            if (curves.length > 0) {\n                // initialize parameters that may not have been used yet\n                for (var ci = 0; ci < curves.length; ci++) {\n                    // the average may not have been carried over from other curve types so let it default\n                    if (!curves[ci]['valid-time'] && matsCollections.CurveParams.findOne({name: 'valid-time'}) && matsCollections.CurveParams.findOne({name: 'valid-time'}).default) {\n                        curves[ci]['valid-time'] = matsCollections.CurveParams.findOne({name: 'valid-time'}).default;\n                    }\n                    if (!curves[ci]['utc-cycle-start'] && matsCollections.CurveParams.findOne({name: 'utc-cycle-start'}) && matsCollections.CurveParams.findOne({name: 'utc-cycle-start'}).default) {\n                        curves[ci]['utc-cycle-start'] = matsCollections.CurveParams.findOne({name: 'utc-cycle-start'}).default;\n                    }\n                    if (!curves[ci]['threshold'] && matsCollections.CurveParams.findOne({name: 'threshold'}) && matsCollections.CurveParams.findOne({name: 'threshold'}).default) {\n                        curves[ci]['threshold'] = matsCollections.CurveParams.findOne({name: 'threshold'}).default;\n                    }\n                    if (!curves[ci]['forecast-length'] && matsCollections.CurveParams.findOne({name: 'forecast-length'}) && matsCollections.CurveParams.findOne({name: 'forecast-length'}).default) {\n                        curves[ci]['forecast-length'] = matsCollections.CurveParams.findOne({name: 'forecast-length'}).default;\n                    }\n                    if (!curves[ci]['region'] && matsCollections.CurveParams.findOne({name: 'region'}) && matsCollections.CurveParams.findOne({name: 'region'}).default) {\n                        curves[ci]['region'] = matsCollections.CurveParams.findOne({name: 'region'}).default;\n                    }\n                    if (!curves[ci]['statistic'] && matsCollections.CurveParams.findOne({name: 'statistic'}) && matsCollections.CurveParams.findOne({name: 'statistic'}).default) {\n                        curves[ci]['statistic'] = matsCollections.CurveParams.findOne({name: 'statistic'}).default;\n                    }\n                    if (!curves[ci]['truth'] && matsCollections.CurveParams.findOne({name: 'truth'}) && matsCollections.CurveParams.findOne({name: 'truth'}).default) {\n                        curves[ci]['truth'] = matsCollections.CurveParams.findOne({name: 'truth'}).default;\n                    }\n                    if (!curves[ci]['x-axis-parameter'] && matsCollections.CurveParams.findOne({name: 'x-axis-parameter'}) && matsCollections.CurveParams.findOne({name: 'x-axis-parameter'}).default) {\n                        curves[ci]['x-axis-parameter'] = matsCollections.CurveParams.findOne({name: 'x-axis-parameter'}).default;\n                    }\n                    if (!curves[ci]['y-axis-parameter'] && matsCollections.CurveParams.findOne({name: 'y-axis-parameter'}) && matsCollections.CurveParams.findOne({name: 'y-axis-parameter'}).default) {\n                        curves[ci]['y-axis-parameter'] = matsCollections.CurveParams.findOne({name: 'y-axis-parameter'}).default;\n                    }\n                }\n                Session.set('Curves', curves);\n            }\n            Session.set(\"confirmPlotChange\", \"\");\n            Session.set('plotChangeType', \"\");\n        } else {\n            // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n            if (Session.get(\"Curves\").length > 0) {\n                Session.set('plotChangeType', matsTypes.PlotTypes.contourDiff);\n                $(\"#modal-change-plot-type\").modal();\n            } else {\n                // no curves - just set the contour face\n                // see if the previous plot type also used the 'dates' parameter\n                const oldDatesExist = matsParamUtils.isParamVisible('dates');\n                matsCurveUtils.showContourFace();\n                // if a 'dates' parameter was already in use, we want to keep that value.\n                // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n                if (!oldDatesExist) {\n                    const curveDate = $('#controlButton-curve-dates-value').text();\n                    matsParamUtils.setValueTextForParamName('dates', curveDate)\n                }\n            }\n        }\n    },\n    'click .plot-type-Scatter2d': function (event) {\n        if (Session.get(\"confirmPlotChange\")) {\n            // change has been confirmed\n            // see if the previous plot type also used the 'dates' parameter\n            const oldDatesExist = matsParamUtils.isParamVisible('dates');\n            matsCurveUtils.showScatterFace();\n            // if a 'dates' parameter was already in use, we want to keep that value.\n            // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n            if (!oldDatesExist) {\n                const curveDate = $('#controlButton-curve-dates-value').text();\n                matsParamUtils.setValueTextForParamName('dates', curveDate)\n            }\n            Session.set(\"confirmPlotChange\", \"\");\n            Session.set('plotChangeType', \"\");\n        } else {\n            // no confirmation yet so check to see if we have any curves and if so then show the confirm dialog\n            if (Session.get(\"Curves\").length > 0) {\n                Session.set('plotChangeType', matsTypes.PlotTypes.scatter2d);\n                $(\"#modal-change-plot-type\").modal();\n            } else {\n                // no curves - just set the scatter face\n                // see if the previous plot type also used the 'dates' parameter\n                const oldDatesExist = matsParamUtils.isParamVisible('dates');\n                matsCurveUtils.showScatterFace();\n                // if a 'dates' parameter was already in use, we want to keep that value.\n                // otherwise, set the 'dates' parameter to whatever 'curve-dates' was set to.\n                if (!oldDatesExist) {\n                    const curveDate = $('#controlButton-curve-dates-value').text();\n                    matsParamUtils.setValueTextForParamName('dates', curveDate)\n                }\n            }\n        }\n    }\n});\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsMethods } from 'meteor/randyp:mats-common';\n\nTemplate.reset.events({\n    'click .apply_reset': function () {\n        const settings = matsCollections.Settings.findOne({});\n        if (settings === undefined) {\n            setError(new Error(\"reset failed - cannot readsettings\"));\n            return;\n        }\n        const appName = settings.Title;\n        const appVersion = settings.version;\n        matsMethods.reset.call({appName:appName, appVersion:appVersion},function(error){\n            if (error) {\n                setError(new Error(\"matsMethods.reset from reset.js \" +error.message));\n            }\n        });\n        $(\"#resetModal\").modal('hide');\n        return false;\n    }\n});\n\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsMethods} from 'meteor/randyp:mats-common';\n\n\nTemplate.export.onRendered( function() {\n       matsMethods.getDataFunctionFileList.call( function (error, result) {\n           //    //console.log ('result is : ' + JSON.stringify(result, null, '\\t'));\n           if (error !== undefined) {\n               setError(new Error(\"matsMethods.getDataFunctionFileList from template export error: \" + error.toLocaleString()));\n               return false;\n           }\n           Session.set('dataFunctionFileList',result);\n       });\n       matsMethods.getGraphFunctionFileList.call(function (error, result) {\n           //    //console.log ('result is : ' + JSON.stringify(result, null, '\\t'));\n           if (error !== undefined) {\n               setError(new Error)(\"matsMethods.graphFunctionFileList from export.js error: \" + error.toLocaleString());\n               return false;\n           }\n           Session.set('graphFunctionFileList',result);\n       });\n\n    });\n\n    Template.export.helpers({\n        dataFiles: function() {\n            return Session.get('dataFunctionFileList');\n        },\n        graphFiles: function() {\n            return Session.get('graphFunctionFileList');\n        }\n    });\n\n    Template.export.events({\n    'click .apply_export': function (event) {\n        event.preventDefault();\n        var parameterOut = document.getElementById('parameterFile').checked;\n        var dataFiles = [];\n        var graphFiles = [];\n        $(\"input:checkbox[name=dataFiles]:checked\").each(function(){\n            dataFiles.push($(this).val());\n        });\n        $(\"input:checkbox[name=graphFiles]:checked\").each(function(){\n            graphFiles.push($(this).val());\n        });\n        if(parameterOut) {\n            var data = {};\n            data.CurveParams = matsCollections.CurveParams.find({}).fetch();\n            data.PlotParams = matsCollections.PlotParams.find({}).fetch();\n            data.PlotGraphFunctions = matsCollections.PlotGraphFunctions.find({}).fetch();\n            data.Settings = matsCollections.Settings.find({}).fetch();\n            data.ColorScheme = matsCollections.ColorScheme.find({}).fetch();\n            data.Authorization = matsCollections.Authorization.find({}).fetch();\n            data.Roles = matsCollections.Roles.find({}).fetch();\n            data.Databases = matsCollections.Databases.find({}).fetch();\n            data.Credentials = matsCollections.Credentials.find({}).fetch();\n            var json = JSON.stringify(data, null, 2);\n            var blob = new Blob([json], {type: \"application/json\"});\n            var url = URL.createObjectURL(blob);\n            var a = document.createElement('a');\n            a.download = \"export.json\";\n            a.href = url;\n            a.target = '_blank';\n            a.textContent = \"export.json\";\n            document.body.appendChild(a);\n            a.click();\n        }\n\n        if (dataFiles.length > 0) {\n            dataFiles.forEach(function(file){\n                matsMethods.readFunctionFile('data',file, function (error, result) {\n                    if (error !== undefined) {\n                        setError(new Error(error.toLocaleString()));\n                        return false;\n                    }\n                    data = result;\n                    var blob = new Blob([result], {type: \"application/javascript\"});\n                    var url = URL.createObjectURL(blob);\n                    var a = document.createElement('a');\n                    a.download = file;\n                    a.href = url;\n                    a.target = '_blank';\n                    a.textContent = file;\n                    document.body.appendChild(a);\n                    a.click();\n                });\n            });\n        }\n\n        if (graphFiles.length > 0) {\n            graphFiles.forEach(function(file){\n                matsMethods.readFunctionFile('graph', file, function (error, result) {\n                    if (error !== undefined) {\n                        setError(new Error(error.toLocaleString()));\n                        return false;\n                    }\n                    data = result;\n                    var blob = new Blob([result], {type: \"application/javascript\"});\n                    var url = URL.createObjectURL(blob);\n                    var a = document.createElement('a');\n                    a.download = file;\n                    a.href = url;\n                    a.target = '_blank';\n                    a.textContent = file;\n                    document.body.appendChild(a);\n                    a.click();\n                });\n            });\n        }\n\n        $(\"#exportModal\").modal('hide');\n        return false;\n    }\n});\n\n","\n/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsMethods} from 'meteor/randyp:mats-common';\n\n\nTemplate.import.events({\n    'change .data_file_import': function (event, template) {\n        event.preventDefault();\n        if (window.File && window.FileReader && window.FileList && window.Blob) {\n            // Great success! All the File APIs are supported.\n        } else {\n            alert('The File APIs are not fully supported in this browser.');\n        }\n        var files = event.target.files;\n        for (var i = 0, f; f = files[i]; i++) {\n            var reader = new FileReader();\n            reader.fileName = f.name;\n            reader.onload = (function(f) {\n                return function(e) {\n                    var name = e.target.fileName;\n                    try {\n                        matsMethods.restoreFromFile({type:\"graph\", name:name, data:e.target.result}, function (error) {\n                            if (error) {\n                                setError(new Error(error.message));\n                            }\n                        });\n                    } catch(exc) {\n                        setError(new Error(\"Error reading file: \" + name + \" - \"+ exc.toLocaleString()));\n                    }\n                };\n            })(f);\n            reader.readAsText(f);\n        }\n        document.getElementById(\"dataFileImport\").value = \"\";\n        $(\"#importModal\").modal('hide');\n        return false;\n    },\n    'change .graph_file_import': function (event, template) {\n        event.preventDefault();\n        if (window.File && window.FileReader && window.FileList && window.Blob) {\n            // Great success! All the File APIs are supported.\n        } else {\n            alert('The File APIs are not fully supported in this browser.');\n        }\n        var files = event.target.files;\n        for (var i = 0, f; f = files[i]; i++) {\n            var reader = new FileReader();\n            reader.fileName = f.name;\n            reader.onload = (function(f) {\n                return function(e) {\n                    var name = e.target.fileName;\n                    try {\n                        matsMethods.restoreFromFile({type:\"graph\", name:name, data:e.target.result}, function (error) {\n                            if (error) {\n                                setError(new Error(error.message));\n                            }\n                        });\n                    } catch(exc) {\n                        setError(new Error(\"Error reading file: \" + name + \" - \"+ exc.toLocaleString()));\n                    }\n                };\n            })(f);\n            reader.readAsText(f);\n        }\n        document.getElementById(\"graphFileImport\").value = \"\";\n        $(\"#importModal\").modal('hide');\n        return false;\n    },\n    'change .parameter_file_import': function (event, template) {\n        event.preventDefault();\n        if (window.File && window.FileReader && window.FileList && window.Blob) {\n            // Great success! All the File APIs are supported.\n        } else {\n            alert('The File APIs are not fully supported in this browser.');\n        }\n        var files = event.target.files;\n        for (var i = 0, f; f = files[i]; i++) {\n            var reader = new FileReader();\n            reader.fileName = f.name;\n            reader.onload = (function (f) {\n                return function (e) {\n                    var name = e.target.fileName;\n                    try {\n                        var data = JSON.parse(e.target.result);\n                       matsMethods.restoreFromParameterFile( {name:name, data:data}, function (error) {\n                            if (error) {\n                                setError(new Error(error.message));\n                            }\n                        });\n                    } catch (exc) {\n                        setError(new Error(\"Error reading file: \" + name + \" - \" + exc.toLocaleString()));\n                    }\n                };\n            })(f);\n            reader.readAsText(f);\n        }\n        document.getElementById(\"parameterFileImport\").value = \"\";\n        $(\"#importModal\").modal('hide');\n        return false;\n    }\n});\n\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsMethods} from 'meteor/randyp:mats-common';\nTemplate.settings.helpers({\n    LabelPrefix: function(){\n        var settings = matsCollections.Settings.findOne({});\n        return settings === undefined ? \"\" : settings.LabelPrefix;\n    },\n    Title: function(){\n        var settings = matsCollections.Settings.findOne({});\n        return settings === undefined ? \"\" : settings.Title;\n    },\n    LineWidth: function(){\n        var settings = matsCollections.Settings.findOne({});\n        return settings === undefined ? \"\" : settings.LineWidth;\n    },\n    NullFillString: function(){\n        var settings = matsCollections.Settings.findOne({});\n        return settings === undefined ? \"\" : settings.NullFillString;\n    },\n    ResetFromCodeChecked: function(){\n        var settings = matsCollections.Settings.findOne({});\n        if (settings && settings.resetFromCode == true) {\n            return \"checked\";\n        } else {\n            return \"\";\n        }\n    }\n});\nTemplate.settings.events({\n    'click .apply_settings': function () {\n        // var labelPrefix = document.getElementById(\"LabelPrefix\").value;\n        // var title = document.getElementById(\"Title\").value;\n        // var lineWidth = document.getElementById(\"LineWidth\").value;\n        // var nullFillString = document.getElementById(\"NullFillString\").value;\n        // var resetFromCode = document.getElementById(\"ResetFromCode\").checked;\n\n        // var settings = {};\n        // settings.labelPrefix = labelPrefix;\n        // settings.title = title;\n        // settings.lineWidth = lineWidth;\n        // settings.nullFillString = nullFillString;\n        // settings.resetFromCode = resetFromCode;\n        // matsMethods.setSettings.call({'settings':settings}, function (error) {\n        //     if (error) {\n        //         setError(new Error(error.message));\n        //     }\n        // });\n        //// reset modal\n        //document.getElementById(\"LabelPrefix\").value = \"\";\n        //document.getElementById(\"Title\").value = \"\";\n        //document.getElementById(\"LineWidth\").value = \"\";\n        //document.getElementById(\"NullFillString\").value = \"\";\n        //document.getElementById(\"ResetFromCode\").checked = false;\n        $(\"#settingsModal\").modal('hide');\n        Session.set(\"adminChanged\", new Date());\n        return false;\n    },\n    'click .cancel-settings': function() {\n        // reset the form\n        document.getElementById(\"LabelPrefix\").value = \"\";\n        document.getElementById(\"Title\").value = \"\";\n        document.getElementById(\"LineWidth\").value = \"\";\n        document.getElementById(\"NullFillString\").value = \"\";\n        document.getElementById(\"ResetFromCode\").checked = false;\n    }\n});\n\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport { matsMethods } from 'meteor/randyp:mats-common';\n\nTemplate.databases.onRendered(function () {\n    reset();\n});\nTemplate.databases.helpers({\n    databases : function() {\n        dbs = matsCollections.Databases.find({}).fetch();\n        dbs.unshift({name:\"New Database\"});\n        return dbs;\n    },\n    errorMessage: function() {\n        return Session.get(\"databaseErrorMessage\");\n    },\n    errorTypeIs: function(type) {\n        return Session.get(\"databaseErrorType\") === type;\n    }\n\n\n});\nvar reset = function(){\n    document.getElementById(\"database-selection\").value = \"\";\n    document.getElementById(\"database-name\").value = \"\";\n    document.getElementById(\"database-role-model\").checked = false;\n    document.getElementById(\"database-role-ua\").checked = false;\n    document.getElementById(\"database-status-standby\").checked = false;\n    document.getElementById(\"database-status-active\").checked = false;\n    document.getElementById(\"database-host\").value = \"\";\n    document.getElementById(\"database-database\").value = \"\";\n    document.getElementById(\"database-user\").value = \"\";\n    document.getElementById(\"database-password\").value = \"\";\n    document.getElementById(\"database-verify\").value = \"\";\n    resetError();\n};\nvar resetError = function() {\n    errorMessage = \"\";\n    Session.set(\"databaseErrorMessage\",\"\");\n    Session.set(\"databaseErrorType\",\"\");\n    if (document.getElementById(\"errorMessage\")) {\n        document.getElementById(\"errorMessage\").style.display = \"none\";\n    }\n};\nvar setError = function(type,message) {\n    Session.set(\"databaseErrorMessage\", message);\n    Session.set(\"databaseErrorType\", type);\n\n    document.getElementById(\"errorMessage\").style.display = \"block\";\n};\n\nTemplate.databases.events({\n    'click .database': function() {\n        resetError();\n        var dbName = document.getElementById(\"database-selection\").value;\n        if (dbName == \"New Database\") {\n            reset();\n            return false;\n        }\n        var db = matsCollections.Databases.findOne({name:dbName});\n        document.getElementById(\"database-selection\").value = \"\";\n        document.getElementById(\"database-name\").value = db.name;\n        document.getElementById(\"database-role-model\").checked = db.role == \"model\";\n        document.getElementById(\"database-role-ua\").checked = db.role == \"ua\";\n        document.getElementById(\"database-status-standby\").checked = db.status == \"standby\";\n        document.getElementById(\"database-status-active\").checked = db.status == \"active\";\n        document.getElementById(\"database-host\").value = db.host;\n        document.getElementById(\"database-database\").value = db.database;\n        document.getElementById(\"database-user\").value = db.user;\n        document.getElementById(\"database-password\").value = db.password;\n        document.getElementById(\"database-verify\").value = db.password;\n    },\n    'click .apply-database': function () {\n        var settings = {};\n        resetError();\n        settings.name = document.getElementById(\"database-name\").value;\n        if (document.getElementById(\"database-role-model\").checked === true) {\n            settings.role = \"model\";\n        } else if (document.getElementById(\"database-role-ua\").checked === true) {\n            settings.role = \"ua\";\n        }\n        if (document.getElementById(\"database-status-standby\").checked === true) {\n            settings.status = \"standby\";\n        } else if (document.getElementById(\"database-status-active\").checked === true) {\n            // set any other database with this role to standby\n            matsCollections.Databases.upsert({});\n            settings.status = \"active\";\n        }\n        settings.host = document.getElementById(\"database-host\").value;\n        settings.database = document.getElementById(\"database-database\").value;\n        settings.user = document.getElementById(\"database-user\").value;\n        settings.password = document.getElementById(\"database-password\").value;\n        var verify = document.getElementById(\"database-verify\").value;\n        if (settings.password != verify) {\n            setError('password',\"Password and Verify do not match!\");\n            return false;\n        }\n        if (settings.name === \"\") {\n            setError(\"name\",\"you have to set a name\");\n            return false;\n        }\n        // ONLY ONE CAN BE ACTIVE FOR A GIVEN ROLE\n        //if (settings.role === \"\") {\n        //    setError(role,\"you have to set a role\");\n        //    return false;\n        //}\n        if (settings.host === \"\"){\n            setError('host',\"you have to set a host\");\n            return false;\n        }\n        if (settings.database === \"\"){\n            setError('database',\"you have to set a database\");\n            return false;\n        }\n        if (settings.user === \"\"){\n            setError('user',\"you have to set a user\");\n            return false;\n        }\n\n        matsMethods.applyDatabaseSettings.call( settings, function (error) {\n            if (error) {\n                setError(new error('matsMethods.applyDatabaseSettings from Template.databases.events: 121 error:' + error.message));\n                return false;\n            }\n        });\n        reset();\n        $(\"#databasesModal\").modal('hide');\n        return false;\n    },\n    'click .remove-database': function() {\n        var dbName = document.getElementById(\"database-name\").value;\n        matsMethods.removeDatabase.call( dbName, function (error) {\n            if (error) {\n                setError(new Error('matsMethods.removeDatabase from Template.databases.events: 121 error:' + error.message));\n            }\n        });\n        reset();\n        $(\"#databasesModal\").modal('hide');\n        return false;\n    },\n    'click .cancel-database': function() {\n        reset();\n    }\n});\n\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/13/15.\n */\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsMethods} from 'meteor/randyp:mats-common';\n\nTemplate.colorScheme.helpers({\n    colorOptions : function() {\n        var colorScheme = matsCollections.ColorScheme.findOne({});\n        if (colorScheme === undefined) {return false;}\n        var colors = colorScheme.colors;\n        var colorOptions = [];\n        for (var i = 0; i < colors.length; i++) {\n            colorOptions.push({color:colors[i]});\n        }\n        return colorOptions;\n    }\n});\n\nTemplate.colorScheme.events({\n    'click .apply-color-scheme': function () {\n        var removeColor = document.getElementById(\"removeColor\").value;\n        var insertAfterColor = document.getElementById(\"insertAfterColor\").value;\n        var newColor = document.getElementById(\"colorSchemePicker\").value;\n        var colors = matsCollections.ColorScheme.findOne({}).colors;\n        if (newColor) {\n            var insertAfterIndex = 0;\n            if (insertAfterColor) {\n                insertAfterIndex = colors.indexOf(insertAfterColor);\n            }\n            matsMethods.insertColor({newColor:newColor,insertAfterIndex:insertAfterIndex}, function (error) {\n                if (error) {\n                    setError(new Error(error.message));\n                }\n            });\n        }\n        if (removeColor) {\n            Meteor.call('removeColor', removeColor, function (error) {\n                if (error) {\n                    setError(new Error(error.message));\n                }\n            });\n        }\n        // reset modal\n        document.getElementById(\"removeColor\").value = \"\";\n        document.getElementById(\"insertAfterColor\").value = \"\";\n        document.getElementById(\"colorSchemePicker\").color=\"rgb(255,255,255)\";\n        document.getElementById(\"colorSchemePicker\").value=\"rgb(255,255,255)\";\n        document.getElementById(\"colorSchemePickerIndicator\").style.backgroundColor=\"rgb(255,255,255)\";\n        $(\"#colorSchemeModal\").modal('hide');\n        return false;\n    },\n    'click .cancel-color-scheme': function() {\n        // reset the form\n        document.getElementById(\"removeColor\").value = null;\n        document.getElementById(\"removeColor\").value = \"\";\n        document.getElementById(\"insertAfterColor\").value = \"\";\n        document.getElementById(\"colorSchemePicker\").color=\"rgb(255,255,255)\";\n        document.getElementById(\"colorSchemePicker\").value=\"rgb(255,255,255)\";\n        document.getElementById(\"colorSchemePickerIndicator\").style.backgroundColor=\"rgb(255,255,255)\";\n    }\n});\n\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsTypes} from 'meteor/randyp:mats-common';\n/**\n * Created by pierce on 8/13/15.\n */\nTemplate.curveParams.onRendered(function () {\n    reset();\n});\n\nTemplate.curveParams.helpers({\n    curveParams : function() {\n        if (Session.get('params') === undefined) {\n            var params = matsCollections.CurveParams.find({}, {sort: {displayOrder:1}}).fetch();\n            Session.set('params',params);\n        }\n        return Session.get('params');\n    },\n    optionRows: function() {\n        var rows = \"\";\n        // find the object in the session that is associated with the currently selected name\n        var params = Session.get('params');\n        if (params == undefined) {\n            return \"\";\n        }\n        if (!document.getElementById('curveParams-selection') || document.getElementById('curveParams-selection') == \"\") {\n            return \"\";\n        }\n        var paramSelectedName = document.getElementById('curveParams-selection').value;\n        var param = params.filter(function ( obj ) {\n            return obj.name === paramSelectedName;\n        })[0];\n        if (param == undefined) {\n            return;\n        }\n        var optionsMap = param.optionsMap;\n        if (optionsMap == undefined) {\n            return \"\";\n        }\n\n        // create the options table rows\n        var optionKeys = Object.keys(optionsMap);\n        param.options = optionKeys;\n        for (var i=0; i< optionKeys.length;i++){\n            var optionList = optionsMap[optionKeys[i]];\n            rows += '<tr><td contentEditable width=\"10%\" style=\"min-width:3em;\"><input data-field=\"optionsMap.' + optionKeys[i] + \"_\" + i + '\" id=\"curveParams-option-' + i + '\" class=\"form-control data-input textInput\" type=\"text\" value=\"' + optionKeys[i] + '\"/></td>';\n            for (var oli=0; oli<optionList.length;oli++) {\n                rows += '<td contentEditable><textarea data-field=\"optionsMap.' + optionKeys[i]  + '_' + i + '['+ oli +']' + '\" id=\"curveParams-optionList-' + i + '-' + oli + '\" class=\"form-control data-input optionsTable\"' + '<span style=\"font-size:x-small\">' + optionList[oli] + '</textarea></td>';\n            }\n            rows += '<td><span><button id=\"curveParams-option-field-add-' + optionKeys[i] + '\" class=\"option-field-add btn btn-xs btn-success fa fa-plus\"/>';\n            rows += '<button id=\"curveParams-option-field-del-' + optionKeys[i] + '\" class=\"option-field-del btn btn-xs btn-danger fa fa-minus\"/></span></td>';\n            rows += \"</tr>\";\n        }\n        Session.set('params',params);\n        return rows;\n    },\n    default: function() {\n        try {\n            var cname = document.getElementById(\"curveParams-selection\").value;\n\n            var c = Session.get('params').filter(function (obj) {\n                return obj.name == cname;\n            });\n            if (c) {\n                return c.default;\n            }\n            else {\n                return \"\";\n            }\n        } catch(Exception) {\n            return \"\";\n        }\n    },\n    displayOrder: function() {\n        try {\n            var cname = document.getElementById(\"curveParams-selection\").value;\n            var c = Session.get('params').filter(function (obj) {\n                return obj.name == cname;\n            });\n\n            if (c) {\n                return c.displayOrder;\n            }\n            else {\n                return 1;\n            }\n        } catch (Exception) {\n            return 1;\n        }\n    },\n    displayPriority:function() {\n        try {\n            var cname = document.getElementById(\"curveParams-selection\").value;\n            var c = Session.get('params').filter(function( obj ) {\n                return obj.name == cname;\n            });\n\n            if (c) { return c.displayPriority; }\n            else { return 1;}\n        } catch (Exception) {\n            return 1;\n        }\n\n    },\n    displayGroup:function() {\n    try {\n        var cname = document.getElementById(\"curveParams-selection\").value;\n\n        var c = Session.get('params').filter(function( obj ) {\n            return obj.name == cname;\n        });\n\n        if (c) { return c.displayGroup; }\n        else { return 1;}\n    } catch (Exception) {\n        return 1;\n    }\n\n    },\n    types: function() {\n        return Object.keys(matsTypes.InputTypes);\n    },\n    errorMessage: function() {\n        return Session.get(\"curveParamsErrorMessage\");\n    },\n    errorTypeIs: function(errType) {\n        return Session.get(\"curveParamsErrorType\") === errType;\n    },\n    restoreDates: function() {\n        try {\n            var scp = matsCollections.SavedCurveParams.findOne({'clName': 'changeList'});\n            var cl = scp.changeList;\n            var dates = [];\n            for (var i = 0; i < cl.length; i++) {\n                var utcSeconds = cl[i].savedAt;\n                var comment = \"<textarea id='ta-\" + utcSeconds + \"' style='display:none'>\" + cl[i].comment + \"</textarea>\";\n                var userName = cl[i].user.split('@')[0].replace('.',' ');\n                var user = \"<button id='btnUser-\" + utcSeconds + \"' class='btnUser btn  btn-info'>\"+ userName + \"</button>\";\n                var d = new Date(0);\n                d.setUTCSeconds(utcSeconds);\n                var mo = d.getMonth();\n                var day = d.getDate();\n                var yr = d.getFullYear();\n                var hr = d.getHours();\n                var mn = d.getMinutes();\n                var sec = d.getSeconds();\n                var dStr = mo + \"-\" + day + \"-\" + yr + \"-\" + hr + \":\" + mn + \":\" + sec;\n                dates.push({second:utcSeconds, date:dStr, user:user, userName:userName, commentStr:cl[i].comment, comment:comment});\n            }\n            return dates;\n        } catch (e) {\n            return [];\n        }\n    },\n    restoreDate: function() {\n        try {\n            var scp = matsCollections.SavedCurveParams.findOne({'clName': 'changeList'});\n            var cl = scp.changeList;\n            var utcSeconds = cl[cl.length - 1].savedAt;\n            var user = cl[cl.length - 1].user.split('@')[0].replace('.', ' ');\n            var comment = cl[cl.length - 1].comment;\n            var d = new Date(0);\n            d.setUTCSeconds(utcSeconds);\n            var mo = d.getMonth();\n            var day = d.getDate();\n            var yr = d.getFullYear();\n            var hr = d.getHours();\n            var mn = d.getMinutes();\n            var sec = d.getSeconds();\n            return mo + \"-\" + day + \"-\" + yr + \"-\" + hr + \":\" + mn + \":\" + sec + \" \" + user + \" ... \" + comment;\n        } catch (e){\n            return \"\";\n        }\n    }\n});\n\nvar reset = function(){\n    document.getElementById(\"curveParams-name\").value = \"\";\n    document.getElementById(\"curveParams-type\").value = \"\";\n    document.getElementById(\"curveParams-controlButtonCovered-true\").checked=true;\n    document.getElementById(\"curveParams-controlButtonCovered-false\").checked=false;\n    document.getElementById(\"curveParams-controlButtonVisibility-block\").checked=true;\n    document.getElementById(\"curveParams-controlButtonVisibility-none\").checked=false;\n    document.getElementById(\"curveParams-unique-true\").checked=false;\n    document.getElementById(\"curveParams-unique-false\").checked=true;\n    document.getElementById(\"curveParams-default\").value = \"\";\n    document.getElementById(\"curveParams-displayOrder\").value = 1;\n    document.getElementById(\"curveParams-displayPriority\").value = 1;\n    document.getElementById(\"curveParams-displayGroup\").value = 1;\n    resetError();\n};\nvar resetError = function() {\n    errorMessage = \"\";\n    Session.set(\"curveParamsErrorMessage\",\"\");\n    Session.set(\"curveParamsErrorType\",\"\");\n    if (document.getElementById(\"errorMessage\")) {\n        document.getElementById(\"errorMessage\").style.display = \"none\";\n    }\n};\nvar setError = function(type,message) {\n    Session.set(\"curveParamsErrorMessage\", message);\n    Session.set(\"curveParamsErrorType\", type);\n    document.getElementById(\"errorMessage\").style.display = \"block\";\n};\n\nTemplate.curveParams.events({\n    'click .curveParams-selection': function () {\n        event.preventDefault();\n        try {\n            resetError();\n            var cname = document.getElementById(\"curveParams-selection\").value;\n            reset();\n            var params = Session.get('params');\n            var c = params.filter(function (obj) {\n                return obj.name == cname;\n            })[0];  // want the first one - like collection.findOne({name:cname})\n            if (!c) {\n                return false;\n            }\n            document.getElementById(\"curveParams-name\").value = c.name;\n            document.getElementById(\"curveParams-type\").value = c.type;\n            if (c.controlButtonCovered) {\n                document.getElementById(\"curveParams-controlButtonCovered-true\").checked = true;\n                document.getElementById(\"curveParams-controlButtonCovered-false\").checked = false;\n            } else {\n                document.getElementById(\"curveParams-controlButtonCovered-true\").checked = false;\n                document.getElementById(\"curveParams-controlButtonCovered-false\").checked = true;\n            }\n            if (c.controlButtonVisibility == \"block\") {\n                document.getElementById(\"curveParams-controlButtonVisibility-block\").checked = true;\n                document.getElementById(\"curveParams-controlButtonVisibility-none\").checked = false;\n            } else {\n                document.getElementById(\"curveParams-controlButtonVisibility-block\").checked = false;\n                document.getElementById(\"curveParams-controlButtonVisibility-none\").checked = true;\n            }\n            document.getElementById(\"curveParams-default\").value = c.default;\n            document.getElementById(\"curveParams-displayOrder\").value = c.displayOrder;\n            document.getElementById(\"curveParams-displayPriority\").value = c.displayPriority;\n            document.getElementById(\"curveParams-displayGroup\").value = c.displayGroup;\n            Session.set('lastUpdate', Date.now());// force re-render to get the optionMap\n        } catch (Exception) {console.log(Exception);}\n        return false;\n    },\n    'click .curveParams-selection-add': function () {\n        event.preventDefault();\n        var dispOrder = 1;\n        var dispPri = 1;\n        var dispGroup = 1;\n        var seconds = new Date() / 1000 | 0;\n        var params = Session.get('params');\n        var optionsMap = {};\n        params.push({\n            name: 'New-' + seconds,\n            type: matsTypes.InputTypes.textInput,\n            optionsMap: optionsMap,\n            options: Object.keys(optionsMap),   // convenience\n            controlButtonCovered: true,\n            default: '',\n            unique: false,\n            controlButtonVisibility: 'block',\n            displayOrder: dispOrder,\n            displayPriority: dispPri,\n            displayGroup: dispGroup\n        });\n        Session.set('params', params);\n        return false;\n    },\n    'click .curveParams-selection-remove': function () {\n        event.preventDefault();\n        var removeName = document.getElementById(\"curveParams-selection\").value;\n        var params = Session.get('params');\n        var newParams = params.filter(function (value) {\n            return value.name != removeName\n        });\n        Session.set('params', newParams);\n        reset();\n        return false;\n    },\n    'click .curveParams-option-add': function (event) {\n        event.preventDefault();\n        try {\n            var params = Session.get('params');\n            // find the object in the session that is associated with the currently selected name\n            var paramSelectedName = document.getElementById('curveParams-selection').value;\n            var param = params.filter(function ( obj ) {\n                return obj.name === paramSelectedName;\n            })[0];\n            var optionsMap = param.optionsMap;\n            var seconds = new Date() / 1000 | 0;\n            optionsMap['new-' + seconds] = [];\n            param.optionsMap = optionsMap;\n            param.options = Object.keys(optionsMap);\n            params[paramSelectedName] = param;\n            Session.set('params',params);\n        } catch (Exception){console.log(Exception);}\n        return false;\n    },\n    'click .curveParams-option-remove': function (event) {\n        event.preventDefault();\n        try {\n            var params = Session.get('params');\n            // find the object in the session that is associated with the currently selected name\n            var paramSelectedName = document.getElementById('curveParams-selection').value;\n            var param = params.filter(function ( obj ) {\n                return obj.name === paramSelectedName;\n            })[0];\n            var optionsMap = param.optionsMap;\n            var optionSelected = Session.get('optionSelected');\n            var selectedKey = \"\";\n            if (optionSelected) {\n                selectedKey = optionSelected.key;\n            } else {\n                var keys = Object.keys(optionsMap);\n                selectedKey = keys[keys.length -1];\n            }\n            param.optionsMap = _.omit(optionsMap, selectedKey);\n            param.options = Object.keys(optionsMap);\n            params[paramSelectedName] = param;\n            Session.set('params',params);\n            Session.set('optionSelected',\"\");\n        } catch (Exception){console.log(Exception);}\n        return false;\n    },\n    'click .option-field-add': function (event) {\n        event.preventDefault();\n        try {\n            var params = Session.get('params');\n            // find the object in the session that is associated with the currently selected name\n            var paramSelectedName = document.getElementById('curveParams-selection').value;\n            var param = params.filter(function ( obj ) {\n                return obj.name === paramSelectedName;\n            })[0];\n            var options = param.optionsMap;\n            var optionSelected = Session.get('optionSelected');\n            var selectedKey = undefined;\n            if (optionSelected) {\n                selectedKey = Session.get('optionSelected').key;\n            }\n\n            if (selectedKey === undefined || selectedKey === \"\") {\n                selectedKey = event.target.id.replace('curveParams-option-field-add-','');\n            }\n            options[selectedKey].push('');\n            param.optionsMap = options;\n            params[paramSelectedName] = param;\n            Session.set('params',params);\n        } catch (Exception){console.log(Exception);}\n        return false;\n    },\n    'click .option-field-del': function () {\n        event.preventDefault();\n        var params = Session.get('params');\n        // find the object in the session that is associated with the currently selected name\n        var paramSelectedName = document.getElementById('curveParams-selection').value;\n        var param = params.filter(function ( obj ) {\n            return obj.name === paramSelectedName;\n        })[0];\n        var options = param.optionsMap;\n        var optionSelected = Session.get('optionSelected');\n        var selectedKey = \"\";\n        var listIndex = -1;\n        if (optionSelected) {\n            selectedKey = optionSelected.key;\n            listIndex = optionSelected.listIndex;\n        } else {\n            var targetId = event.target.id;\n            selectedKey = targetId.replace('curveParams-option-field-del-','');\n        }\n        if (options[selectedKey] && options[selectedKey].length > 0) {\n            if (listIndex == -1) {\n                options[selectedKey] = [];\n            } else {\n                options[selectedKey].splice(listIndex, 1);\n            }\n        }\n        param.optionsMap = options;\n        params[paramSelectedName] = param;\n        Session.set('params',params);\n        Session.set('optionSelected',\"\");\n        return false;\n    },\n    'click .optionsTable' : function(event) {\n      event.preventDefault();\n      var targetId = event.target.id;\n      if (targetId.indexOf('curveParams-option-') === 0) {\n          var key = document.getElementById(event.target.id).value;\n          var rowIndex = targetId.replace('curveParams-option-','');\n          Session.set('optionSelected',{key:key,rowIndex:rowIndex,listIndex:-1});\n      } else if (targetId.indexOf('curveParams-optionList-') === 0) {\n          var indexStr = targetId.replace('curveParams-optionList-','');\n          var indexes = indexStr.split('-');\n          var rowIndex = indexes[0];\n          var listIndex = indexes[1];\n          var key = document.getElementById('curveParams-option-' + rowIndex).value;\n          Session.set('optionSelected',{key:key,rowIndex:rowIndex,listIndex:listIndex});\n        }\n        return false;\n    },\n    'click .applyCurveParamsWithComment': function () {\n        // actually do the apply\n        event.preventDefault();\n        // first backup the existing parameters\n        Meteor.call('getUserAddress', function (error, result) {\n            if (error !== undefined) {\n                setError(new Error(error.message));\n                return false;\n            }\n\n            var emailAddress = result;\n            // save the current settings and mark comment as prior to\n            var saveSecond = new Date() / 1000 | 0;\n            var comment = document.getElementById('applyCurveParamsComment').value;\n            var paramsCursor = matsCollections.CurveParams.find({});\n            var cl = matsCollections.SavedCurveParams.findOne({'clName':'changeList'},{_id:1});\n            if (cl === undefined) {\n                matsCollections.SavedCurveParams.insert({clName: 'changeList', changeList:[]});\n                cl = matsCollections.SavedCurveParams.findOne({'clName':'changeList'},{_id:1});\n            }\n            var id = cl._id;\n            matsCollections.SavedCurveParams.update({_id:id},{$push:{changeList:{user: emailAddress, comment: \"prior to ...\" + comment, savedAt: saveSecond}} });\n            paramsCursor.forEach(function(doc) {\n                delete doc._id;\n                doc.savedSecond = saveSecond;\n                matsCollections.SavedCurveParams.insert(doc);\n            });\n\n            // now reconcile the session values and the CurveParams collection\n            resetError();\n            var params = Session.get('params');\n            var curveParams = matsCollections.CurveParams.find({}).fetch();\n            var paramNames = _.pluck(params,'name');\n            var curveParamNames =  _.pluck(curveParams,'name');\n\n            // find any superfluous params in CurveParams (this is a remove) and remove them from collection\n            var namesToRemoveFromCollection =  paramNames.filter( function( el ) {\n                return curveParamNames.indexOf( el ) < 0;\n            });\n            for (var i=0; i < namesToRemoveFromCollection.length; i++) {\n                var rName = namesToRemoveFromCollection[i];\n                var cParam = matsCollections.CurveParams.findOne({name:rName});\n                var cid = cParam._id;\n                matsCollections.CurveParams.remove({_id:cid});\n            }\n\n            // iterate all the params in the session and overwrite/insert them\n            for (var pi=0; pi < paramNames.length; pi++) {\n                var paramName = paramNames[pi];\n                var param = params.filter(function ( obj ) {\n                    return obj.name === paramName;\n                })[0];\n\n                var curveParam = matsCollections.CurveParams.findOne({name:paramName});\n                if (curveParam) {\n                    // update\n                    var cid = curveParam._id;\n                    delete param._id;\n                    matsCollections.CurveParams.update({_id:cid},{$set:param});\n                } else {\n                    //insert\n                    matsCollections.CurveParams.insert(param);\n                }\n            }\n\n            // now save the settings after modification\n            saveSecond = saveSecond + 1;\n            paramsCursor = matsCollections.CurveParams.find({});\n            cl = matsCollections.SavedCurveParams.findOne({'clName':'changeList'},{_id:1});\n            id = cl._id;\n            matsCollections.SavedCurveParams.update({_id:id},{$push:{changeList:{user: emailAddress, comment: \"post ...\" + comment, savedAt: saveSecond}} });\n            paramsCursor.forEach(function(doc) {\n                delete doc._id;\n                doc.savedSecond = saveSecond;\n                matsCollections.SavedCurveParams.insert(doc);\n            });\n\n            reset();\n            // read the params back out from the DB and set them into the Session (resets the form)\n            params = matsCollections.CurveParams.find({}, {sort: {displayOrder:1}}).fetch();\n            Session.set('params',params);\n            Session.set('lastUpdate', Date.now());// force re-render to get the optionMap\n            $(\"#applyCurveParamsModal\").modal('hide');\n        });\n        return false;\n    },\n    'click .cancel-curveParams': function() {\n        event.preventDefault();\n        reset();\n        var params = matsCollections.CurveParams.find({}, {sort: {displayOrder:1}}).fetch();\n        Session.set('params',params);\n        document.getElementById(\"curveParams-selection\").value = \"\";\n        Session.set('lastUpdate', Date.now());// force re-render to get the optionMap\n        return false;\n    },\n    'click .applyCurveParams': function() {\n        // show the apply modal dialogue\n        event.preventDefault();\n\n        $(\"#applyCurveParamsModal\").modal('show');\n        return false;\n    },\n    'click .restoreCurveParams': function() {\n        event.preventDefault();\n        $(\"#restoreCurveParamsModal\").modal('show');\n        return false;\n    },\n    'click .btnUser': function(event) {\n        event.preventDefault();\n        var targetId = event.target.id;\n        var taId = targetId.replace('btnUser-','ta-');\n        if (document.getElementById(taId).style.display=='block'){\n            document.getElementById(taId).style.display='none'\n        }else{\n            document.getElementById(taId).style.display='block'\n        }\n        return false;\n    },\n    'click .restoreCurveParamsDate': function(event) {\n        //populate input restoreFromSeconds input box with selected value and data attributes\n        event.preventDefault();\n        var targetId = event.target.id;\n        var elem = document.getElementById(targetId);\n        var second = elem.getAttribute('data-second');\n        var date = elem.getAttribute('data-date');\n        var user = elem.getAttribute('data-user');\n        var comment = elem.getAttribute('data-comment');\n\n        var rfd = document.getElementById('restoreFromSeconds');\n        rfd.setAttribute('data-second',second);\n        rfd.setAttribute('data-date',date);\n        rfd.setAttribute('data-user',user);\n        rfd.setAttribute('data-comment',comment);\n        rfd.value = date + \" \" + user + \" ... \" + comment;\n        document.getElementById(\"restore-choose-date-toggle\").click();\n        return false;\n    },\n    'click .restoreCurveParamsFromDate': function(event) {\n        // copy all dated elements with the selected savedSecond back to curveParams\n        event.preventDefault();\n        var restoreFromSeconds = document.getElementById(\"restoreFromSeconds\");\n        var savedSecond = restoreFromSeconds.getAttribute('data-second');\n        var savedParams = matsCollections.SavedCurveParams.find({'savedSecond':Number(savedSecond)});\n        savedParams.forEach(function(doc) {\n            delete doc._id;\n            delete doc.savedSecond;\n            var name = doc.name;\n            var curveParam = matsCollections.CurveParams.findOne({name:name});\n            var id = curveParam._id;\n            matsCollections.CurveParams.update({_id:id},{$set:doc});\n        });\n        Session.set('lastUpdate', Date.now());// force re-render\n        $(\"#restoreCurveParamsModal\").modal('hide');\n        return false;\n    },\n    'click .cancel-restoreCurveParamsFromDate': function(event) {\n        // copy all dated elements with the selected savedSecond back to curveParams\n        event.preventDefault();\n        $(\"#restoreCurveParamsModal\").modal('hide');\n        return false;\n    },\n    'change': function(event) {\n        // should catch all the widgets whenever a change happens.\n        // This is where we capture changes and move them to the session.\n        // When the apply is hit a different event listener will migrate the modified\n        // session settings to the collection.\n        event.preventDefault();\n        var params = Session.get('params');\n        var targetId = event.target.id;\n        if (targetId == \"curveParams-selection\") {\n            // ignore changes to the main selector\n            return false;\n        }\n\n        var elem = document.getElementById(targetId);\n        var value = elem.value;\n\n        // find the object in the session that is associated with the currently selected name\n        var paramSelectedName = document.getElementById('curveParams-selection').value;\n        var param = params.filter(function ( obj ) {\n            return obj.name === paramSelectedName;\n        })[0];\n\n        // each curveParameter is made up of several fields...\n        // the name, type, optionsMap, options (is derived from optionsMap), controlButtonCovered, unique, default, controlButtonVisibility, displayOrder, displayPriority, and displayGroup\n        // Which of these is captured by an element is set in the data-field attribute.\n        var dataField = elem.getAttribute('data-field');\n        if (!dataField) { return false;}\n        if (dataField.indexOf('optionsMap') == 0) {\n            // For an optionsMap the dataField is a cell in the optionsMap table.\n            // If it is the first column it is something like optionsMap.RH_n   i.e. RH is the value of the leftmost cell\n            // and RH is also a key of the params.optionsMap object. n is the row that the key is in.\n            // If it is the second column it is something like optionsMap.RH_n[0].\n            // That is because the in memory representation (params.optionsMap object) uses the value of the first column to\n            // denote a hashmap key, and the rest of the columns are contained in a list starting\n            // with index 0 at the left of the table.\n            // like .. key:[col2,col3,....coln], so it might be...\n            // optionsMap.RH:[0,1..n] to denote the rest of a row.\n            //NOTE: we trim the keys but not the other cell values - they might contain necessary white space.\n            var keyParts = dataField.replace('optionsMap.','').split('_');\n            var key = keyParts[0];\n\n            var optionsMap = param.optionsMap;\n            if (keyParts[1].indexOf('[') !== -1) {\n                // this is a key and list index\n                var index = keyParts[1].split('[')[1].replace(']','');\n                optionsMap[key][index] = value;\n            } else {\n                //  we are essentially renaming the key to new value and deleting the old key\n                value = value.trim();   // trim the whitespace from both ends\n                if (key != value) { // don't do it if it is somehow the same.\n                    Object.defineProperty(optionsMap, value, Object.getOwnPropertyDescriptor(optionsMap, key));\n                    delete optionsMap[key];\n                }\n            }\n            // optionsMap has been changed...\n            param.optionsMap = optionsMap;\n            param.options = Object.keys(optionsMap);\n        } else {\n            // regular field - just set the value\n            param.field = value;\n        }\n        //console.log (\"change:  value:\" + value + \"\\n  field: \" + dataField + \"\\n  paramSelectedName \" + paramSelectedName + \"  \\n param: \\n\" + JSON.stringify(param));\n        Session.set('params',params);\n        Session.set('lastUpdate', Date.now());// force re-render to get the optionMap\n        return false;\n    }\n});\n\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport {matsCollections} from 'meteor/randyp:mats-common';\n\nTemplate.authorization.helpers({\n    roleOptions : function() {\n        return matsCollections.Roles.find({}).fetch();\n    },\n    emailOptions: function(){\n        return matsCollections.Authorization.find({}).fetch();\n    }\n});\n\nTemplate.authorization.events({\n    'click .apply_authorization': function () {\n        var userRoleName = document.getElementById(\"userRoleName\").value;\n        var userRoleDescription = document.getElementById(\"userRoleDescription\").value;\n        var authorizationRole = document.getElementById(\"authorizationRole\").value;\n        var newUserEmail = document.getElementById(\"newUserEmail\").value;\n        var existingUserEmail = document.getElementById(\"existingUserEmail\").value;\n        var settings = {};\n        settings.userRoleName=userRoleName;\n        settings.userRoleDescription=userRoleDescription;\n        settings.authorizationRole=authorizationRole;\n        settings.newUserEmail=newUserEmail;\n        settings.existingUserEmail=existingUserEmail;\n\n        Meteor.call('applyAuthorization', settings, function (error) {\n            if (error) {\n                setError(new Error(error.message));\n            }\n        });\n        // reset modal\n        document.getElementById(\"userRoleName\").value = \"\";\n        document.getElementById(\"userRoleDescription\").value = \"\";\n        document.getElementById(\"authorizationRole\").value = \"\";\n        document.getElementById(\"newUserEmail\").value = \"\";\n        document.getElementById(\"existingUserEmail\").value =\"\";\n\n        $(\"#authorizationModal\").modal('hide');\n        return false;\n    },\n    'click .remove_authorization': function () {\n        var userRoleName = document.getElementById(\"userRoleName\").value;\n        var userRoleDescription = document.getElementById(\"userRoleDescription\").value;\n        var authorizationRole = document.getElementById(\"authorizationRole\").value;\n        var newUserEmail = document.getElementById(\"newUserEmail\").value;\n        var existingUserEmail = document.getElementById(\"existingUserEmail\").value;\n        var settings = {};\n        settings.userRoleName=userRoleName;\n        settings.userRoleDescription=userRoleDescription;\n        settings.authorizationRole=authorizationRole;\n        settings.newUserEmail=newUserEmail;\n        settings.existingUserEmail=existingUserEmail;\n\n        Meteor.call('removeAuthorization', settings, function (error) {\n            if (error) {\n                setError(new Error(error.message));\n            }\n        });\n        // reset modal\n        document.getElementById(\"userRoleName\").value = \"\";\n        document.getElementById(\"userRoleDescription\").value = \"\";\n        document.getElementById(\"authorizationRole\").value = \"\";\n        document.getElementById(\"newUserEmail\").value = \"\";\n        document.getElementById(\"existingUserEmail\").value =\"\";\n\n        $(\"#authorizationModal\").modal('hide');\n        return false;\n    },\n    'click .cancel-authorization': function() {\n        // reset the form\n        document.getElementById(\"userRoleName\").value = \"\";\n        document.getElementById(\"userRoleDescription\").value = \"\";\n        document.getElementById(\"authorizationRole\").value = \"\";\n        document.getElementById(\"newUserEmail\").value = \"\";\n        document.getElementById(\"existingUserEmail\").value =\"\";\n    },\n    'click .user_role_description': function() {\n        document.getElementById('authorizationRole').value = '';\n    },\n    'click .user_role_name': function() {\n        document.getElementById('authorizationRole').value = '';\n    },\n    'change .role-select': function() {\n        document.getElementById('userRoleName').value = '';\n        document.getElementById('userRoleDescription').value = '';\n    },\n    'click .user-email': function() {\n        document.getElementById('existingUserEmail').value = '';\n    },\n    'change .user-select': function() {\n        document.getElementById('newUserEmail').value = '';\n    }\n});\n\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {methods} from 'meteor/randyp:mats-common';\n\nTemplate.mailCredentials.helpers({\n    name : function() {\n        var credentials = matsCollections.Credentials.findOne({});\n        return credentials === undefined ? \"\" : credentials.name;\n    },\n    client_id: function(){\n        var credentials = matsCollections.Credentials.findOne({});\n        return credentials === undefined ? \"\" : credentials.clientId;\n    },\n    client_secret: function(){\n        var credentials = matsCollections.Credentials.findOne({});\n        return credentials === undefined ? \"\" : credentials.clientSecret;\n    },\n    refresh_token: function(){\n        var credentials = matsCollections.Credentials.findOne({});\n        return credentials === undefined ? \"\" : credentials.refresh_token;\n    }\n\n});\n\nTemplate.mailCredentials.events({\n    'click .apply_credentials': function () {\n        var name = document.getElementById(\"credentials-name\").value;\n        var clientId = document.getElementById(\"credentials_client_id\").value;\n        var clientSecret = document.getElementById(\"credentials_client_secret\").value;\n        var clientRefreshToken = document.getElementById(\"credentials_client_refresh_token\").value;\n\n        var settings = {};\n        settings.name = name;\n        settings.clientId = clientId;\n        settings.clientSecret = clientSecret;\n        settings.clientRefreshToken = clientRefreshToken;\n        methods.setCredentials( settings, function (error) {\n            if (error) {\n                setError(new Error(error.message));\n            }\n        });\n        // reset modal\n        document.getElementById(\"credentials-name\").value = \"\";\n        document.getElementById(\"credentials_client_id\").value = \"\";\n        document.getElementById(\"credentials_client_secret\").value = \"\";\n        document.getElementById(\"credentials_client_refresh_token\").value = \"\";\n        $(\"#authorizationModal\").modal('hide');\n        return false;\n    },\n    'click .cancel-credentials': function() {\n        // reset the form\n        var credentials = matsCollections.Credentials.findOne({});\n        document.getElementById(\"credentials-name\").value = credentials.name;\n        document.getElementById(\"credentials_client_id\").value = credentials.clientId;\n        document.getElementById(\"credentials_client_secret\").value = credentials.clientSecret;\n        document.getElementById(\"credentials_client_refresh_token\").value = credentials.refresh_token;\n    }\n});\n\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsCollections} from 'meteor/randyp:mats-common';\n\nTemplate.plotGraphFunctions.helpers({\n    plotGraphFunction : function() {\n        if (Session.get(\"PlotGraphFunctions\") === undefined || Session.get(\"PlotGraphFunctions\").length == 0){\n            Session.set(\"PlotGraphFunctions\",matsCollections.PlotGraphFunctions.find({}).fetch());\n        }\n        return Session.get(\"PlotGraphFunctions\");\n    },\n    errorMessage: function() {\n        return Session.get(\"errorMessage\");\n    },\n    errorTypeIs: function(type) {\n        return Session.get(\"errorType\") === type;\n    }\n\n\n});\n\nvar resetError = function() {\n    errorMessage = \"\";\n    Session.set(\"errorMessage\",\"\");\n    Session.set(\"errorType\",\"\");\n    if (document.getElementById(\"errorMessage\")) {\n        document.getElementById(\"errorMessage\").style.display = \"none\";\n    }\n};\nvar setError = function(type,message) {\n    Session.set(\"errorMessage\", message);\n    Session.set(\"errorType\", type);\n\n    document.getElementById(\"errorMessage\").style.display = \"block\";\n};\n\nTemplate.plotGraphFunctions.events({\n    'click .plotGraphFunction': function(event) {\n        event.preventDefault();\n        resetError();\n        var plotTypeStr = document.getElementById('plotGraphFunction-selection').value;\n        var plotGraphFunctions = Session.get(\"PlotGraphFunctions\");\n        var plotGraphFunction = plotGraphFunctions.filter(function ( obj ) {\n            return obj.plotType === plotTypeStr;\n        })[0];\n\n        document.getElementById(\"plotType\").value=plotGraphFunction.plotType;\n        document.getElementById(\"dataFunction\").value=plotGraphFunction.dataFunction;\n        document.getElementById(\"graphFunction\").value=plotGraphFunction.graphFunction;\n        return false;\n    },\n    'click .plotGraphFunction-selection-add': function(event) {\n        event.preventDefault();\n        resetError();\n        var d = (Date.now() / 1000 | 0).toString();\n        var plotGraphFunctions = Session.get(\"PlotGraphFunctions\");\n        plotGraphFunctions.push({plotType:  d,\n                                graphFunction: \"graph...\",\n                                dataFunction: \"data...\"\n                               });\n        Session.set(\"PlotGraphFunctions\",plotGraphFunctions);\n        return false;\n    },\n    'click .plotGraphFunction-selection-remove': function(event) {\n        event.preventDefault();\n        resetError();\n        var plotTypeStr = document.getElementById('plotGraphFunction-selection').value;\n        var plotGraphFunctions = Session.get(\"PlotGraphFunctions\");\n        for( i=plotGraphFunctions.length-1; i>=0; i--) {\n            if( plotGraphFunctions[i].plotType == plotTypeStr) plotGraphFunctions.splice(i,1);\n        }\n        Session.set(\"PlotGraphFunctions\",plotGraphFunctions);\n        return false;\n    },\n    'click .apply-plotGraphFunction': function() {\n        event.preventDefault();\n        //\n        var sPlotGraphFunctions = Session.get(\"PlotGraphFunctions\");\n        var plotGraphFunctions = matsCollections.PlotGraphFunctions.find({}).fetch();\n        var sPlotTypes = _.pluck(sPlotGraphFunctions,'plotType');\n        var plotTypes =  _.pluck(plotGraphFunctions,'plotType');\n\n        // find any superfluous ones in plotTypes (this is a remove) and remove them from collection\n        var toRemoveFromCollection =  plotTypes.filter( function( el ) {\n            return sPlotTypes.indexOf( el ) < 0;\n        });\n        for (var ip=0; ip < toRemoveFromCollection.length; ip++) {\n            var p = toRemoveFromCollection[ip];\n            var plotType = matsCollections.PlotGraphFunctions.findOne({plotType:p});\n            var id = plotType._id;\n            matsCollections.PlotGraphFunctions.remove({_id:id});\n        }\n        // iterate all the ones in the session and overwrite/add them\n        for (var i=0; i < sPlotTypes.length; i++) {\n            var s = sPlotTypes[i];\n            var spgf = sPlotGraphFunctions.filter(function ( obj ) {\n                return obj.plotType === s;\n            })[0];\n\n            var pt = matsCollections.PlotGraphFunctions.findOne({plotType:s});\n            if (pt) {\n                // update\n                var ptid = pt._id;\n                delete spgf._id;\n                matsCollections.PlotGraphFunctions.update({_id:ptid},{$set:spgf});\n            } else {\n                //insert\n                matsCollections.PlotGraphFunctions.insert(spgf);\n            }\n        }\n        Session.set(\"PlotGraphFunctions\",matsCollections.PlotGraphFunctions.find({}).fetch());\n        $(\"#plotGraphFunctionsModal\").modal('hide');\n        return false;\n    },\n    'click .cancel-plotGraphFunction': function() {\n        event.preventDefault();\n\n        $(\"#plotGraphFunctionsModal\").modal('hide');\n        return false;\n    },\n    'change .plotType, change .dataFunction, change .graphFunction' :function() {\n        var plotTypeStr = document.getElementById('plotGraphFunction-selection').value;\n        var sPlotGraphFunctions = Session.get(\"PlotGraphFunctions\");\n        var spgf = sPlotGraphFunctions.filter(function ( obj ) {\n            return obj.plotType === plotTypeStr;\n        })[0];\n        var plotType = document.getElementById('plotType').value;\n        var dataFunction = document.getElementById('dataFunction').value;\n        var graphFunction = document.getElementById('graphFunction').value;\n        spgf.plotType = plotType;\n        spgf.dataFunction = dataFunction;\n        spgf.graphFunction = graphFunction;\n        Session.set(\"PlotGraphFunctions\",sPlotGraphFunctions);\n    }\n});\n\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport { Hooks } from 'meteor/differential:event-hooks';\nimport {matsTypes } from 'meteor/randyp:mats-common';\nimport {matsCollections } from 'meteor/randyp:mats-common';\nimport {matsMethods } from 'meteor/randyp:mats-common';\n\nAccounts.onLogin(function() {\n        matsMethods.getAuthorizations.call(function(error, result) {\n            if (error !== undefined) {\n                Session.set('roles', []);\n                setError(new Error(error.toLocaleString()));\n                return false;\n            }\n            authList = result;\n            for (var ai = 0; ai < authList.length; ai++){\n                var roles = authList[ai];\n                Session.set('roles', roles);\n                Session.set('signedIn', new Date().getTime());// force re-render after sign in success\n            }\n        });\n});\n\nHooks.onLoggedOut = function (userid){\n    Session.set('roles',[]);\n    var adminContainerDiv = document.getElementById('adminContainer');\n    var adminDiv = document.getElementById(\"administration\");\n    var userDiv = document.getElementById(\"administration\");\n    adminContainerDiv.style.display = \"none\";\n    adminDiv.style.display = \"none\";\n    userDiv.style.display = \"none\";\n};\n\nTemplate.administration.helpers({\n    adminChanged: function() {\n      return Session.get('adminChanged');\n    },\n    signedIn: function(){\n        var d = new Date(Session.get('signedIn'));\n        return (d.toDateString() + \" \" +d.toTimeString()).split(\"+\")[0];\n    },\n    showAdministratorDiv: function(){\n        var roles = Session.get('roles');\n        if ( roles !== undefined && roles.indexOf('administrator') > -1) {\n            return  \"block\";\n        } else {\n            return \"none\"\n        }\n    },\n    showAuthenticatedDiv: function(){\n        var roles = Session.get('roles');\n        if ( roles !== undefined && (roles.indexOf('user') > -1) || roles !== undefined && (roles.indexOf('administrator') > -1)) {\n            return  \"block\";\n        } else {\n            return \"none\"\n        }\n    },\n    showResetNow: function() {\n        var adminChanged = Session.get('adminChanged');\n        var settings = matsCollections.Settings.findOne({});\n        if (document.getElementById(\"ResetFromCode\") == null) {\n            return \"none\";\n        }\n        var resetEnabled =  settings === undefined ? false : document.getElementById(\"ResetFromCode\").checked;\n        var roles = Session.get('roles');\n        if (roles !== undefined && (roles.indexOf('administrator') > -1) && resetEnabled) {\n            return  \"block\";\n        } else {\n            return \"none\"\n        }\n    }\n\n});\n\nTemplate.administration.events({\n    'click .authorization': function () {\n        $(\"#authorizationModal\").modal('show');\n    },\n    'click .credentials': function () {\n        $(\"#mailCredentialsModal\").modal('show');\n    },\n    'click .database': function () {\n        $(\"#databasesModal\").modal('show');\n    },\n    'click .colors': function () {\n        $(\"#colorSchemeModal\").modal('show');\n    },\n    'click .settings': function () {\n        $(\"#settingsModal\").modal('show');\n    },\n    'click .curveParams': function () {\n        var params = matsCollections.CurveParams.find({}, {sort: {displayOrder:1}}).fetch();\n        Session.set('params',params);\n        $(\"#curveParamsModal\").modal('show');\n    },\n    'click .plotGraphFunctions': function () {\n        $(\"#plotGraphFunctionsModal\").modal('show');\n    },\n    'click .export': function () {\n        $(\"#exportModal\").modal('show');\n    },\n    'click .import': function () {\n        $(\"#importModal\").modal('show');\n    },\n    'click .adminControl': function() {\n        var adminContainerDiv = document.getElementById('adminContainer');\n        var adminDiv = document.getElementById(\"administration\");\n        var userDiv = document.getElementById(\"administration\");\n\n        if (adminContainerDiv.style.display == \"none\") {\n            adminContainerDiv.style.display = \"block\";\n            var roles = Session.get('roles');\n            if (roles !== undefined && Session.get('roles').indexOf('administrator') > -1) {\n                adminDiv.style.display = \"block\";\n                userDiv.style.display = \"block\";\n            } else if(roles !== undefined && Session.get('roles').indexOf('user') > -1) {\n                userDiv.style.display = \"block\";\n            } else {\n                adminContainerDiv.style.display = \"none\";\n                adminDiv.style.display = \"none\";\n                userDiv.style.display = \"none\";\n            }\n        } else {\n            adminContainerDiv.style.display = \"none\";\n            adminDiv.style.display = \"none\";\n            userDiv.style.display = \"none\";\n        }\n    },\n    'click .resetNow': function() {\n        $(\"#resetModal\").modal('show');\n        document.getElementById(\"ResetFromCode\").checked = false;\n\n        var settings = matsCollections.Settings.findOne({});\n        settings.resetFromCode = false;\n    }\n});"]}}]