[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar meteorInstall = Package.modules.meteorInstall;\n\n/* Package-scope variables */\nvar Promise;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"promise\":{\"modern.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////\n//                                                                               //\n// packages/promise/modern.js                                                    //\n//                                                                               //\n///////////////////////////////////////////////////////////////////////////////////\n                                                                                 //\n// Initialize the package-scoped Promise variable with global.Promise in\n// all environments, even if it's not defined.\nPromise = global.Promise;\n\n///////////////////////////////////////////////////////////////////////////////////\n\n},\"server.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////\n//                                                                               //\n// packages/promise/server.js                                                    //\n//                                                                               //\n///////////////////////////////////////////////////////////////////////////////////\n                                                                                 //\nrequire(\"./extensions.js\");\n\nrequire(\"meteor-promise\").makeCompatible(\n  Promise,\n  // Allow every Promise callback to run in a Fiber drawn from a pool of\n  // reusable Fibers.\n  require(\"fibers\")\n);\n\n// Reference: https://caniuse.com/#feat=promises\nrequire(\"meteor/modern-browsers\").setMinimumBrowserVersions({\n  chrome: 32,\n  edge: 12,\n  // Since there is no IE11, this effectively excludes Internet Explorer\n  // (pre-Edge) from the modern classification. #9818 #9839\n  ie: 12,\n  firefox: 29,\n  mobileSafari: 8,\n  opera: 20,\n  safari: [7, 1],\n  // https://github.com/Kilian/electron-to-chromium/blob/master/full-versions.js\n  electron: [0, 20],\n}, module.id);\n\n///////////////////////////////////////////////////////////////////////////////////\n\n},\"extensions.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////\n//                                                                               //\n// packages/promise/extensions.js                                                //\n//                                                                               //\n///////////////////////////////////////////////////////////////////////////////////\n                                                                                 //\nvar proto = Promise.prototype;\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nproto.done = function (onFulfilled, onRejected) {\n  var self = this;\n\n  if (arguments.length > 0) {\n    self = this.then.apply(this, arguments);\n  }\n\n  self.then(null, function (err) {\n    Meteor._setImmediate(function () {\n      throw err;\n    });\n  });\n};\n\nif (! hasOwn.call(proto, \"finally\")) {\n  proto[\"finally\"] = function (onFinally) {\n    var threw = false, result;\n    return this.then(function (value) {\n      result = value;\n      // Most implementations of Promise.prototype.finally call\n      // Promise.resolve(onFinally()) (or this.constructor.resolve or even\n      // this.constructor[Symbol.species].resolve, depending on how spec\n      // compliant they're trying to be), but this implementation simply\n      // relies on the standard Promise behavior of resolving any value\n      // returned from a .then callback function.\n      return onFinally();\n    }, function (error) {\n      // Make the final .then callback (below) re-throw the error instead\n      // of returning it.\n      threw = true;\n      result = error;\n      return onFinally();\n    }).then(function () {\n      if (threw) throw result;\n      return result;\n    });\n  };\n}\n\n///////////////////////////////////////////////////////////////////////////////////\n\n},\"node_modules\":{\"meteor-promise\":{\"package.json\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////\n//                                                                               //\n// node_modules/meteor/promise/node_modules/meteor-promise/package.json          //\n//                                                                               //\n///////////////////////////////////////////////////////////////////////////////////\n                                                                                 //\nmodule.exports = {\n  \"name\": \"meteor-promise\",\n  \"version\": \"0.8.7\",\n  \"main\": \"promise_server.js\"\n};\n\n///////////////////////////////////////////////////////////////////////////////////\n\n},\"promise_server.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////\n//                                                                               //\n// node_modules/meteor/promise/node_modules/meteor-promise/promise_server.js     //\n//                                                                               //\n///////////////////////////////////////////////////////////////////////////////////\n                                                                                 //\nmodule.useNode();\n///////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nrequire(\"/node_modules/meteor/promise/modern.js\");\nvar exports = require(\"/node_modules/meteor/promise/server.js\");\n\n/* Exports */\nPackage._define(\"promise\", exports, {\n  Promise: Promise\n});\n\n})();\n","servePath":"/packages/promise.js"}]