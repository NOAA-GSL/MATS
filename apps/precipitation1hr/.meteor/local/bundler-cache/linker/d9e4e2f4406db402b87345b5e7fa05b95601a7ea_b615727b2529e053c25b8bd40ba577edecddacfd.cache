[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar Template = Package['templating-runtime'].Template;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Blaze = Package.blaze.Blaze;\nvar UI = Package.blaze.UI;\nvar Handlebars = Package.blaze.Handlebars;\nvar Spacebars = Package.spacebars.Spacebars;\nvar HTML = Package.htmljs.HTML;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"google-config-ui\":{\"template.google_configure.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                          //\n// packages/google-config-ui/template.google_configure.js                                   //\n//                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                            //\n\nTemplate.__checkName(\"configureLoginServiceDialogForGoogle\");\nTemplate[\"configureLoginServiceDialogForGoogle\"] = new Template(\"Template.configureLoginServiceDialogForGoogle\", (function() {\n  var view = this;\n  return [ HTML.Raw(\"<p>\\n    First, you'll need to get a Google Client ID. Follow these steps:\\n  </p>\\n  \"), HTML.OL(\"\\n    \", HTML.Raw('<li>\\n      Visit <a href=\"https://console.developers.google.com/\" target=\"blank\">https://console.developers.google.com/</a>\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      \"Create Project\", if needed. Wait for Google to finish provisioning.\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      On the left sidebar, go to \"Credentials\" and, on the right, \"OAuth consent screen\". Make sure to enter an email address and a product name, and save.\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      On the left sidebar, go to \"Credentials\". Click the \"Create credentials\" button, then select \"OAuth client ID\" as the type.\\n    </li>'), \"\\n    \", HTML.Raw('<li>\\n      Select \"Web application\" as your application type.\\n    </li>'), \"\\n    \", HTML.LI(\"\\n     Set Authorized Javascript Origins to: \", HTML.SPAN({\n    class: \"url\"\n  }, Blaze.View(\"lookup:siteUrl\", function() {\n    return Spacebars.mustache(view.lookup(\"siteUrl\"));\n  })), \"\\n    \"), \"\\n    \", HTML.LI(\"\\n      Set Authorized Redirect URI to: \", HTML.SPAN({\n    class: \"url\"\n  }, Blaze.View(\"lookup:siteUrl\", function() {\n    return Spacebars.mustache(view.lookup(\"siteUrl\"));\n  }), \"/_oauth/google?close\"), \"\\n    \"), \"\\n    \", HTML.Raw('<li>\\n      Finish by clicking \"Create\".\\n    </li>'), \"\\n  \") ];\n}));\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"google_configure.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                          //\n// packages/google-config-ui/google_configure.js                                            //\n//                                                                                          //\n//////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                            //\nTemplate.configureLoginServiceDialogForGoogle.helpers({\n  siteUrl: () => {\n    let url = Meteor.absoluteUrl();\n\n    if (url.slice(-1) === \"/\") {\n      url = url.slice(0, -1);\n    }\n\n    return url;\n  }\n});\n\nTemplate.configureLoginServiceDialogForGoogle.fields = () => [{\n  property: 'clientId',\n  label: 'Client ID'\n}, {\n  property: 'secret',\n  label: 'Client secret'\n}];\n//////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\",\n    \".css\",\n    \".html\"\n  ]\n});\n\nrequire(\"/node_modules/meteor/google-config-ui/template.google_configure.js\");\nrequire(\"/node_modules/meteor/google-config-ui/google_configure.js\");\n\n/* Exports */\nPackage._define(\"google-config-ui\");\n\n})();\n","servePath":"/packages/google-config-ui.js","sourceMap":{"version":3,"sources":["packages/google-config-ui/google_configure.js"],"names":["Template","configureLoginServiceDialogForGoogle","helpers","siteUrl","url","Meteor","absoluteUrl","slice","fields","property","label"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,QAAQ,CAACC,oCAAT,CAA8CC,OAA9C,CAAsD;AACpDC,SAAO,EAAE,MAAM;AACb,QAAIC,GAAG,GAAGC,MAAM,CAACC,WAAP,EAAV;;AACA,QAAIF,GAAG,CAACG,KAAJ,CAAU,CAAC,CAAX,MAAkB,GAAtB,EAA2B;AACzBH,SAAG,GAAGA,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAY,CAAC,CAAb,CAAN;AACD;;AACD,WAAOH,GAAP;AACD;AAPmD,CAAtD;;AAUAJ,QAAQ,CAACC,oCAAT,CAA8CO,MAA9C,GAAuD,MAAM,CAC3D;AAACC,UAAQ,EAAE,UAAX;AAAuBC,OAAK,EAAE;AAA9B,CAD2D,EAE3D;AAACD,UAAQ,EAAE,QAAX;AAAqBC,OAAK,EAAE;AAA5B,CAF2D,CAA7D,C","file":"/packages/google-config-ui.js","sourcesContent":["Template.configureLoginServiceDialogForGoogle.helpers({\n  siteUrl: () => {\n    let url = Meteor.absoluteUrl();\n    if (url.slice(-1) === \"/\") {\n      url = url.slice(0,-1)\n    }\n    return url;\n  }\n});\n\nTemplate.configureLoginServiceDialogForGoogle.fields = () => [\n  {property: 'clientId', label: 'Client ID'},\n  {property: 'secret', label: 'Client secret'}\n];\n"]}}]