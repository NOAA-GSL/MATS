[{"type":"js","data":"(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar WebApp = Package.webapp.WebApp;\nvar WebAppInternals = Package.webapp.WebAppInternals;\nvar main = Package.webapp.main;\nvar _ = Package.underscore._;\n\n/* Package-scope variables */\nvar PickerImp, Picker;\n\n(function(){\n\n//////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                      //\n// packages/meteorhacks_picker/packages/meteorhacks_picker.js                           //\n//                                                                                      //\n//////////////////////////////////////////////////////////////////////////////////////////\n                                                                                        //\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////\n//                                                                               //\n// packages/meteorhacks:picker/lib/implementation.js                             //\n//                                                                               //\n///////////////////////////////////////////////////////////////////////////////////\n                                                                                 //\nvar pathToRegexp = Npm.require('path-to-regexp');                                // 1\nvar Fiber = Npm.require('fibers');                                               // 2\nvar urlParse = Npm.require('url').parse;                                         // 3\n                                                                                 // 4\nPickerImp = function(filterFunction) {                                           // 5\n  this.filterFunction = filterFunction;                                          // 6\n  this.routes = [];                                                              // 7\n  this.subRouters = [];                                                          // 8\n  this.middlewares = [];                                                         // 9\n}                                                                                // 10\n                                                                                 // 11\nPickerImp.prototype.middleware = function(callback) {                            // 12\n  this.middlewares.push(callback);                                               // 13\n};                                                                               // 14\n                                                                                 // 15\nPickerImp.prototype.route = function(path, callback) {                           // 16\n  var regExp = pathToRegexp(path);                                               // 17\n  regExp.callback = callback;                                                    // 18\n  this.routes.push(regExp);                                                      // 19\n  return this;                                                                   // 20\n};                                                                               // 21\n                                                                                 // 22\nPickerImp.prototype.filter = function(callback) {                                // 23\n  var subRouter = new PickerImp(callback);                                       // 24\n  this.subRouters.push(subRouter);                                               // 25\n  return subRouter;                                                              // 26\n};                                                                               // 27\n                                                                                 // 28\nPickerImp.prototype._dispatch = function(req, res, bypass) {                     // 29\n  var self = this;                                                               // 30\n  var currentRoute = 0;                                                          // 31\n  var currentSubRouter = 0;                                                      // 32\n  var currentMiddleware = 0;                                                     // 33\n                                                                                 // 34\n  if(this.filterFunction) {                                                      // 35\n    var result = this.filterFunction(req, res);                                  // 36\n    if(!result) {                                                                // 37\n      return bypass();                                                           // 38\n    }                                                                            // 39\n  }                                                                              // 40\n                                                                                 // 41\n  processNextMiddleware();                                                       // 42\n  function processNextMiddleware () {                                            // 43\n    var middleware = self.middlewares[currentMiddleware++];                      // 44\n    if(middleware) {                                                             // 45\n      self._processMiddleware(middleware, req, res, processNextMiddleware);      // 46\n    } else {                                                                     // 47\n      processNextRoute();                                                        // 48\n    }                                                                            // 49\n  }                                                                              // 50\n                                                                                 // 51\n  function processNextRoute () {                                                 // 52\n    var route = self.routes[currentRoute++];                                     // 53\n    if(route) {                                                                  // 54\n      var uri = req.url.replace(/\\?.*/, '');                                     // 55\n      var m = uri.match(route);                                                  // 56\n      if(m) {                                                                    // 57\n        var params = self._buildParams(route.keys, m);                           // 58\n        params.query = urlParse(req.url, true).query;                            // 59\n        self._processRoute(route.callback, params, req, res, bypass);            // 60\n      } else {                                                                   // 61\n        processNextRoute();                                                      // 62\n      }                                                                          // 63\n    } else {                                                                     // 64\n      processNextSubRouter();                                                    // 65\n    }                                                                            // 66\n  }                                                                              // 67\n                                                                                 // 68\n  function processNextSubRouter () {                                             // 69\n    var subRouter = self.subRouters[currentSubRouter++];                         // 70\n    if(subRouter) {                                                              // 71\n      subRouter._dispatch(req, res, processNextSubRouter);                       // 72\n    } else {                                                                     // 73\n      bypass();                                                                  // 74\n    }                                                                            // 75\n  }                                                                              // 76\n};                                                                               // 77\n                                                                                 // 78\nPickerImp.prototype._buildParams = function(keys, m) {                           // 79\n  var params = {};                                                               // 80\n  for(var lc=1; lc<m.length; lc++) {                                             // 81\n    var key = keys[lc-1].name;                                                   // 82\n    var value = m[lc];                                                           // 83\n    params[key] = value;                                                         // 84\n  }                                                                              // 85\n                                                                                 // 86\n  return params;                                                                 // 87\n};                                                                               // 88\n                                                                                 // 89\nPickerImp.prototype._processRoute = function(callback, params, req, res, next) { // 90\n  if(Fiber.current) {                                                            // 91\n    doCall();                                                                    // 92\n  } else {                                                                       // 93\n    new Fiber(doCall).run();                                                     // 94\n  }                                                                              // 95\n                                                                                 // 96\n  function doCall () {                                                           // 97\n    callback.call(null, params, req, res, next);                                 // 98\n  }                                                                              // 99\n};                                                                               // 100\n                                                                                 // 101\nPickerImp.prototype._processMiddleware = function(middleware, req, res, next) {  // 102\n  if(Fiber.current) {                                                            // 103\n    doCall();                                                                    // 104\n  } else {                                                                       // 105\n    new Fiber(doCall).run();                                                     // 106\n  }                                                                              // 107\n                                                                                 // 108\n  function doCall() {                                                            // 109\n    middleware.call(null, req, res, next);                                       // 110\n  }                                                                              // 111\n};                                                                               // 112\n///////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n\n\n\n\n(function () {\n\n///////////////////////////////////////////////////////////////////////////////////\n//                                                                               //\n// packages/meteorhacks:picker/lib/instance.js                                   //\n//                                                                               //\n///////////////////////////////////////////////////////////////////////////////////\n                                                                                 //\nPicker = new PickerImp();                                                        // 1\nWebApp.rawConnectHandlers.use(function(req, res, next) {                         // 2\n  Picker._dispatch(req, res, next);                                              // 3\n});                                                                              // 4\n                                                                                 // 5\n///////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n//////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nPackage._define(\"meteorhacks:picker\", {\n  Picker: Picker\n});\n\n})();\n","servePath":"/packages/meteorhacks_picker.js"}]