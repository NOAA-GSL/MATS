{"version":3,"sources":["meteor://ðŸ’»app/packages/randyp:mats-common/server/main.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/both/index.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/both/mats-types.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/both/mats-collections.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/api/matsMethods.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/client/curve_util.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/client/graph_util.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/client/select_util.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/client/index.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/client/init.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/client/routes.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/server/data_util.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/server/data_query_util.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/server/data_diff_util.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/server/data_match_util.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/server/data_curve_ops_util.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/server/data_plot_ops_util.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/server/data_process_util.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/server/plot_spec_util.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/server/index.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/server/publications.js","meteor://ðŸ’»app/packages/randyp:mats-common/imports/startup/server/cache.js","meteor://ðŸ’»app/packages/randyp:mats-common/lib/regression.js","meteor://ðŸ’»app/packages/randyp:mats-common/lib/param_util.js","meteor://ðŸ’»app/packages/randyp:mats-common/lib/plot_util.js","meteor://ðŸ’»app/packages/randyp:mats-common/lib/math_util.js"],"names":["module","link","ServiceConfiguration","v","setGoogleCred","Meteor","isServer","os","Npm","require","hostname","cid","cSecret","gid","gSecret","_id","cred","configurations","findOne","service","clientId","secret","ignore","split","update","$set","insert","loginStyle","DatabaseRoles","MODEL_DATA","META_DATA","SUMS_DATA","SITE_DATA","AppTypes","mats","metexpress","mats4met","InputTypes","textInput","select","selectOrderEnforced","numberSpinner","dateRange","radioGroup","checkBoxGroup","resetButton","controlButton","element","selectMap","custom","unused","forecastSingleCycle","forecastMultiCycle","PlotTypes","timeSeries","profile","dieoff","threshold","validtime","dailyModelCycle","reliability","map","histogram","contour","contourDiff","scatter2d","ForecastTypes","utcCycle","singleCycle","PlotFormats","none","matching","pairwise","absolute","PlotActions","matched","unmatched","BestFits","linear","linearThroughOrigin","exponential","logarithmic","power","MatchFormats","time","level","site","PlotAxisFilters","PlotView","graph","textSeries","ReservedWords","Zero","zero","ideal0","ideal1","ideal2","ideal3","ideal4","ideal5","ideal6","ideal7","ideal8","ideal9","perfectReliability","noSkill","blueCurveText","blackCurveText","redCurveText","Messages","NO_DATA_FOUND","selectorsToHide","MetaDataDBRecord","constructor","poolName","dbName","tables","Error","Array","_records","record","push","addRecord","getRecords","exportDefault","matsTypes","Mongo","CurveParams","Collection","Scatter2dParams","CurveTextPatterns","ScatterAxisTextPattern","SavedCurveParams","PlotParams","SavedPlotParams","PlotGraphFunctions","SavedPlotGraphFunctions","RegionsPerModel","SitesPerModel","RegionDescriptions","Models","Instruments","FcstLensPerModel","CurveSettings","Settings","ColorScheme","SentAddresses","Authorization","Roles","SavedRoles","Databases","SavedDatabases","Credentials","SavedCredentials","SiteMap","StationMap","appName","matsCollections","ValidatedMethod","SimpleSchema","matsCache","matsDataQueryUtils","matsDataUtils","mysql","url","metaDataTableUpdates","LayoutStoreCollection","DownSampleResults","MV_DIRS","settings","private","undefined","_MV_OUT","MV_OUTPUT","_MV_HOME","MV_HOME","_MV_LOGDIR","_MV_ERRDIR","_MV_DATADIR","_MV_SQLDIR","_MV_XMLDIR","_MV_SCRIPTSDIR","_MV_PLOTSSDIR","process","env","JAVA_HOME","LOGDIR","ERRDIR","DATADIR","SQLDIR","XMLDIR","SCRIPTSDIR","PLOTSDIR","HOME","rawCollection","createIndex","expireAfterSeconds","public","proxy_prefix_path","Picker","route","params","req","res","next","middleware","_getCSV","_getJSON","_clearCache","_refreshMetadataMWltData","_mvGetData","_mvGetPoints1","_mvGetPoints2","_mvGetXml","_mvGetPlot","_mvGetScript","_mvGetSql","_mvGetLog","_mvGetErr","_checkMetaDataRefresh","refresh","tableUpdates","find","fetch","tui","length","id","pool","name","tableNames","lastRefreshed","updatedEpoch","Number","MAX_VALUE","ti","tName","rows","simplePoolQueryWrapSynchronous","global","i","e","message","lastRefreshedEpoch","moment","valueOf","console","log","utc","format","asrKeys","appSpecificResetRoutines","ai","clear","end","stringify","csv","result","_getFlattenedResultData","key","statArray","Object","values","stats","dataArray","data","statResultArray","dataResultArray","si","keys","label","di","dataSubArray","dataHeader","filter","indexOf","dsi","fileName","setHeader","header","err","output","write","toLocaleString","flatJSON","_getPagenatedData","JSON","error","dsiRealPageIndex","dsiTextDirection","rk","p","np","resp","r","plotTypes","basis","plotParams","plotType","_","invert","returnData","ci","reservedWords","glob_stats","d_mean","sd","n_good","stde_betsy","lag1","minVal","maxVal","curveData","cdi","x","curveDataElement","raw_stat","y","cdata","labelSuffix","sample_climo","prob_bin","hit_rate","obs_y","obs_n","reduce","prev","curr","N_times","average","queryVal","stdev","min_time","max_time","siteName","glob_mean","glob_sd","glob_n","glob_min","glob_max","bin_stats","bin_n","bin_rf","binLowBound","binUpBound","bin_mean","bin_sd","n","mean","minDate","maxDate","xTextOutput","yTextOutput","zTextOutput","nTextOutput","minDateTextOutput","maxDateTextOutput","firstBestFitIndex","bestFitIndexes","bestFitIndex","cbi","curveTextData","rky","myPageIndex","newPageIndex","ret","rawReturn","getResult","parse","start","direction","dsiStart","dsiEnd","csi","Math","floor","slice","fse","filePath","baseName","readFile","_saveResultData","sizeof","hash","dSize","TimeSeries","DailyModelCycle","downsampler","totalPoints","x_epoch","allowedNumberOfPoints","downSampleResult","dsData","xyDataset","d","index","ratioTotalPoints","myAllowedPoints","round","downsampledSeries","processData","originalIndex","arrayKeys","nonArrayKeys","ki","isArray","array","annotation","Date","storeResult","addSentAddress","validate","toAddress","type","String","validator","run","userId","upsert","address","applyAuthorization","blackbox","roles","roleName","authorization","userRoleName","userRoleDescription","authorizationRole","newUserEmail","existingUserEmail","role","description","email","applyDatabaseSettings","status","host","database","user","password","deleteSettings","remove","emailImage","imageStr","subject","fromAddress","services","google","credentials","clientSecret","refresh_token","smtpTransporter","Nodemailer","createTransport","auth","XOAuth2","refreshToken","mailOptions","sender","replyTo","from","to","attachments","filename","contents","Buffer","sendMail","response","close","getAuthorizations","userEmail","toLowerCase","getDataFunctionFileList","getGraphData","expireKey","Boolean","plotGraphFunction","dataFunction","NODE_ENV","results","Future","future","wait","dsResults","disableOplog","dataFunctionError","getGraphDataByKey","resultKey","getGraphFunctionFileList","getLayout","getMvArtifactsByKey","getPlotResult","pageIndex","rKey","pi","npi","getReleaseNotes","dFuture","fData","PWD","file","getUserAddress","insertColor","newColor","insertAfterIndex","colorScheme","colors","splice","mvBatch","mvbatch","plotSpecFunction","app","artifacts","png","xml","sql","R","points1","points2","plotSpecFilePath","pngFilePath","sqlFilePath","logFilePath","errFilePath","scriptFilePath","dataFilePath","points1Path","points2Path","mvPlot","unlinkSync","artifactPaths","filesExist","xmlSpecExists","existsSync","plotExists","scriptExists","dataExists","sqlExists","logExists","plotSpec","mvBatchCmd","cp","outputFileSync","execSync","stdout","stderr","match","sqlout","readFunctionFile","path","toString","refreshMetaData","removeAuthorization","$pull","multi","removeColor","removeIndex","removeDatabase","resetApp","appRef","metaDataTableRecords","appMdr","appType","dep_env","PYTHON_PATH","RUN_ENV","deployment","deploymentText","Assets","getText","dep","deployment_environment","apps","appVersion","version","appTitle","title","buildDate","metaDataTables","mdti","metaDataRef","count","doRoles","doAuthorization","doCredentials","doColorScheme","doSettings","restoreFromFile","ype","writeFile","restoreFromParameterFile","o","omit","forEach","saveLayout","layout","curveOpsUpdate","saveSettings","saveAs","permission","created","owner","savedAt","savedBy","setCredentials","clientRefreshToken","setSettings","labelPrefix","lineWidth","nullFillString","resetFromCode","LabelPrefix","Title","LineWidth","NullFillString","testGetMetaDataTableUpdates","testGetTables","queryWrap","wrap","callback","connection","createConnection","query","a","Tables_in_ruc_ua_sums2","testSetMetaDataTableUpdatesLastRefreshedBack","mtu","matsMethods","matsPlotUtils","matsParamUtils","Info","graphResult","plot","_1","_2","_3","_4","prototype","call","_5","_6","_7","getPlotResultData","Session","get","plotResultData","setPlotResultData","showSpinner","setError","set","hideSpinner","resetPlotResultData","getGraphResult","setGraphResult","resetGraphResult","getUsedLabels","getNextCurveLabel","setNextCurveLabel","usedLabels","fields","prefixLabels","l","lastIndexOf","RegExp","lastUsedLabel","last","lastLabelNumber","minusPrefix","replace","tryNum","parseInt","isNaN","newLabelNumber","nextCurveLabel","setNextCurveColor","usedColors","lastUsedIndex","nextCurveColor","newIndex","rint","random","getNextCurveColor","clearUsedLabel","newUsedLabels","reject","clearUsedColor","color","newUsedColors","c","clearAllUsed","setUsedColors","curves","setUsedLabels","setUsedColorsAndLabels","resetScatterApply","getPlotType","document","getElementById","checked","addDiffs","newCurves","curvesLength","setInfo","getPlotFormat","baseIndex","newCurve","$","extend","diffFrom","findWhere","base_index","removeDiffs","curve","checkDiffs","plotFormat","showTimeseriesFace","faceOptions","faceSelectors","elem","fidx","style","display","now","showProfileFace","showDieOffFace","param","getParameterForName","setValueTextForParamName","default","showThresholdFace","showValidTimeFace","showDailyModelCycleFace","showReliabilityFace","showMapFace","showHistogramFace","showContourFace","isContour","isContourDiff","showScatterFace","get_err","sVals","sSecs","subVals","subSecs","sum_d","sum2_d","sd2","sqrt","sd_limit","last_secs","MIN_VALUE","minDelta","minSecs","max_secs","secs","delta","abs","data_wg","n_gaps","sum","sum2","loopTime","lastSecond","sec","lag","n_in_lag","t","betsy","min","max","matsCurveUtils","setNoDataLabels","dataset","curveId","value","disabled","marker","setNoDataLabelsMap","lat","width","squareWidthHeight","rectangleWidth","height","rectangleHeight","standAloneWidth","vpw","documentElement","clientWidth","window","innerWidth","standAloneHeight","vph","clientHeight","innerHeight","resizeGraph","setTextView","setGraphView","standAloneSetGraphView","setDefaultView","downloadFile","fileURL","ActiveXObject","save","createElement","href","target","substring","download","navigator","userAgent","search","location","evt","MouseEvent","dispatchEvent","URL","webkitURL","revokeObjectURL","execCommand","_window","open","matsGraphUtils","refreshPeer","event","peerName","targetParam","targetId","targetElem","refreshMapEvent","CustomEvent","detail","refElement","refreshDependents","dependentNames","selectAllbool","re","elements","options","multiple","i1","selected","previously_selected","i2","text","checkDisableOther","firstRender","disableOtherFor","controlledSelectors","getInputElementForParamName","selectedOptions","selectedText","hideOtherFor","inArray","checkHideOther","otherInputElement","selectorControlElem","selectedIndex","scrollIntoView","matsSelectUtils","paramName","disabledOptions","getDisabledOptionsForParamName","optionsGroups","optionsMap","superiorNames","superiorDimensionality","superiors","sNames","sn","superiorElement","selectedSuperiorValue","sNameIndex","elems","getElementsByClassName","val","brothers","myOptions","selectedSuperiorValues","firstSuperiorOptions","theseSuperiors","theseSuperiorsIndex","superior","nextSuperiorOptions","intersection","optionsGroupsKeys","k","concat","sort","optionsAsString","firstGroup","dIndex","empty","append","selectedOptionIndex","sviText","svi","getControlElementForParamName","offsetParent","belem","belemSelectedOptions","Option","isClient","subscribe","Accounts","ui","config","requestOfflineToken","ref","pathArray","protocol","hostport","hostName","matsRef","helpRef","endsWith","matsref","appref","helpref","collections","FlowRouter","action","render","areObjectsEqual","arrayContainsArray","superArray","subArray","b","j","arrayContainsSubArray","current","arraysEqual","arrayUnique","arr","includes","findArrayInSubArray","objectContainsObject","superObject","subObject","superObjectKeys","currentObject","avg","squareDiffs","diff","avgSquareDiff","stdDev","dateConvert","dStr","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","yr","day","month","hour","minute","dateParts","dateArray","timeArray","getDateRange","dates","fromDateStr","fromDate","toDateStr","toDate","fromSecs","secsConvert","toSecs","fromSeconds","toSeconds","getTime","my_date","UTC","date_in_secs","deploymentRoles","settingsId","getPlotParamsFromStack","captureStackTrace","arguments","callee","stack","stackElems","sElem","trim","startsWith","dataFunctionName","noJoy","sLevs","autocorr_limit","hasLevels","outlierQCParam","subLevs","qaCorrected","lastPressure","n_pressures","lag1_t","lag1_p","r1_t","r1_p","n_deltas","lev","lag_by_r","lag1_max","r_sum","n_r","setHistogramParameters","yAxisFormat","binType","binNum","binStart","binStride","pivotVal","binBounds","item","calculateHistogramBins","curveSubStats","curveSubSecs","binParams","binStats","binUpBounds","binLowBounds","binMeans","globalStats","fullLowBound","fullUpBound","fullRange","binInterval","b_idx","closestBoundToPivot","binLabels","lowSdFromMean","upSdFromMean","toFixed","prescribeHistogramBins","binIntervalSum","binIntervalAverage","sortHistogramBins","curveSubLevs","masterBinStats","binSubStats","binSubSecs","binSubLevs","d_idx","ymin","ymax","xmin","xmax","getDiffContourCurveParams","curveKeys","currKey","ckidx","sortFunction","getModelCadence","dataSource","startDate","endDate","cycles","cycles_raw","cycle_seconds","cycles_keys","newTime","chosenStartTime","chosenEndTime","chosenStartIdx","chosenEndIdx","foundStart","foundEnd","startCycles","endCycles","union","middleCycles","currCycles","getTimeInterval","avTime","time_interval","foreCastOffset","dayInMilliSeconds","minCycleTime","thisCadence","thisCadenceIdx","nextCadenceIdx","statement","queryDBTimeSeries","forecastOffset","averageStr","validTimes","forceRegularCadence","completenessQCParam","vtCycles","regular","error_x","error_y","N0","parsedData","parseQueryDataTimeSeries","queryDBSpecialtyCurve","parseQueryDataSpecialtyCurve","parseQueryDataHistogram","queryMapDB","variable","varUnits","siteMap","lon","dBlue","dBlack","dRed","pFuture","rowIndex","sta_name","model_ob_diff","tooltips","thisSite","obj","point","textMarker","dataBlue","dataBlack","dataRed","queryDBContour","z","zmin","zmax","parseQueryDataContour","curveTime","curveStats","avtime","avSeconds","stat","time_diff","sub_values","sub_secs","sub_levs","sub_data","curr_sub_data","sd_idx","NaN","N0_max","N_times_max","this_N0","this_N_times","filteredx","filteredy","curveIndependentVars","independentVar","hr_of_day","avVal","sub_stats","cycles_missing","missingIdx","dSorted","didx","curveSubStatsRaw","curveSubSecsRaw","curveSubLevsRaw","apply","curveStatLookup","curveNLookup","rowXVal","xVal","rowYVal","yVal","statKey","min_secs","currX","currY","currStat","currN","currStatKey","currYStatArray","currYNArray","nPoints","filteredz","filteredMinDate","filteredMaxDate","getLargeIntervalCurveData","independentVarName","dataMaxInterval","largeIntervalCurveData","getDataForDiffCurve","statVarName","minuendData","subtrahendData","subtrahendIndex","minuendIndex","largeIntervalCurveIndex","subtrahendIndependentVar","minuendIndependentVar","largeIntervalIndependentVar","minuendChanged","subtrahendChanged","diffValue","tempSubValsArray","tempSubSecsArray","tempSubLevsArray","minuendDataSubValues","minuendDataSubSeconds","minuendDataSubLevels","subtrahendDataSubValues","subtrahendDataSubSeconds","subtrahendDataSubLevels","mvalIdx","svalIdx","binLabel","getDataForDiffContour","diffDataset","xAxisKey","yAxisKey","visible","minuendYIndex","subtrahendYIndex","diffDataYIndex","diffDataY","minuendY","subtrahendY","minuendXIndex","subtrahendXIndex","diffDataXIndex","diffDataX","minuendX","subtrahendX","diffNumber","diffMinDate","diffMaxDate","toPrecision","colorbar","reversescale","contours","maxZ","matsDataDiffUtils","getMatchedDataSet","subValues","newSubSecs","newSubValues","independentVarGroups","independentVarHasPoint","currIndependentVar","curveIndex","fi","matchingIndependentVars","matchingIndependentHasPoint","subSecIntersection","currSubSecIntersection","dataLength","newVal","newSec","getMatchedDataSetWithLevels","newSubLevs","subIntersections","currSubIntersections","tempSubIntersections","tempPair","newLev","getMatchedDataSetHistogram","subStatsRaw","subSecsRaw","subStats","newSubStats","newCurveData","newStat","newCurveDataKeys","getMatchedDataSetHistogramWithLevels","subLevsRaw","matsDataMatchUtils","getHorizontalValueLine","yValue","cLabel","valueLine","getVerticalValueLine","xValue","getLinearValueLine","generateSeriesCurveOptions","axisMap","dataSeries","axisKey","axisLabel","axisNumber","error_y_temp","thickness","curveOptions","xaxis","yaxis","annotateColor","mode","symbol","size","line","dash","generateProfileCurveOptions","dataProfile","error_x_temp","generateReliabilityCurveOptions","generateBarChartCurveOptions","dataBars","generateMapCurveOptions","markerSizes","ceil","opacity","generateMapColorTextOptions","textfont","family","hoverinfo","generateContourCurveOptions","unitKey","autocontour","ncontours","showlabels","colorscale","titleside","titlefont","matsDataCurveOpsUtils","generateSeriesPlotOptions","errorMax","margin","pad","zeroline","hovermode","hoverlabel","showlegend","tickfont","axisAnchor","axisSide","axisPosition","yAxisNumber","axisIdx","yPad","axisObjectKey","range","anchor","overlaying","side","position","xPad","generateProfilePlotOptions","xAxisNumber","tickVals","tickText","tickvals","ticktext","autorange","generateDieoffPlotOptions","generateThresholdPlotOptions","generateValidTimePlotOptions","generateReliabilityPlotOptions","perfectLine","generateMapPlotOptions","autosize","mapbox","bearing","center","pitch","zoom","accesstoken","generateHistogramPlotOptions","plotBins","bargap","barmode","generateContourPlotOptions","matsDataPlotOpsUtils","processDataXYCurve","appParams","curveInfoParams","bookkeepingParams","axisLimitReprocessed","statisticSelect","indVars","means","rawStat","errorResult","errorBar","fhr","utcCycleStarts","filteredMeans","miny","maxy","minx","maxx","zeroLine","idealValueLine","idealLabel","ivIdx","idealValues","resultOptions","totalProcessingFinish","dataRequests","begin","totalProcessingStart","finish","duration","asSeconds","queries","processDataProfile","levels","reverse","processDataReliability","skillmin","skillmax","noSkillLine","xClimoLine","yClimoLine","processDataHistogram","allReturnedSubStats","allReturnedSubSecs","allReturnedSubLevs","curvesLengthSoFar","sortedData","postQueryStartMoment","dataFoundForCurve","alreadyMatched","diffResult","cOptions","postQueryFinishMoment","processDataContour","currText","currYTextArray","matsDataProcessUtils","statMvTranslation","xmlBuilder","_pad","num","s","_title","someError","_plotText","_componentToHex","hex","_rgbToHex","cParts","g","_getUniqDates","model","region","forecastLength","regionsClause","regions","join","forecastLengthsClause","forecastValueMap","valuesMap","forecastLengths","fl","metadataPool","dstrMoment","dstr","valid","momentSdiHour","vti","thisvt","_getSortedDatesForIndepRange","sortedDates","_getSortedHoursForIndepRange","hours","Set","add","_getSortedDatesForDepRange","addIndepUngroupedDateElementsBetween","sdi","ele","addDatabaseElement","databases","databasesStr","addFolders","MV_RSCRIPT","folders","startPlotSpec","create","encoding","standalone","sumPool","connectionConfig","port","management_system","MV_DB_MANAGEMENT_SYSTEM","addPlotCi","cList","cListStr","addShowSignif","addPlotDisp","addColors","ch","addPch","addType","addLty","addLwd","addConSeries","addOrderSeries","addLegend","addSeries","dependentAxes","hiddenCurves","sVars","seriesAxisMap","series","models","vx_masks","fcst_leads","fcst_levls","seriesElem","axis","initHours","seriesElements","seriesElementValues","daci","sVar","sValues","paddedV","sValuesStr","thisVar","has","sElementKeys","sei","seVar","svars","getDependentAxis","yaxesDefault","dependentAxesVariables","yaxes","addDeps","deps","depKey","depAxis","subDep","variableStatisticPairs","vars","depElem","addAnomalycorrDeps","variables","_addSeriesLabels","y1vars","y1i","y2vars","y2i","addTemplate","templateStr","addIndepDates","indep","addIndepLevels","lvlSet","levelVals","lvls","li","att","addIndepValidHours","hi","addIndepForecastHours","leadSet","leads","addTmpl","tmpl","plotAction","addPlotFix","addPlotCond","addCalcStat","statType","addPlotStat","addPlotCmd","addY1Lim","addY1Bufr","addY2Lim","addMiscellaneous","endPlotSpec","pretty","matsPlotSpecUtils","publish","ready","Results","life","expire","gaussianElimination","maxrow","tmp","methods","gradient","intercept","len","coordinate","string","equation","points","denominator","A","pow","E","B","polynomial","order","lhs","rhs","answer","w","lastvalue","regression","method","getControlButtonIdForParamName","pname","getValueElementForParamName","getValueIdForParamName","getValueForParamName","textContent","selection","getInputIdForParamName","setInputForParamName","idSelectorStr","idSelector","prop","getElementValues","curveParams","scatterParams","selector","el","idSelect","axisStr","expandParams","dataElem","collapseParams","collapseParam","typeSort","setDefaultForParamName","defaultValue","getDefaultDateRange","dateParam","startInit","stopInit","stopDate","getMinMaxDates","minMoment","maxMoment","subtract","setAllParamsToDefault","nonDependents","resetMapEvent","isInputElementVisible","inputElement","is","isParamVisible","paramRef","isControlButtonVisible","setInputValueForParamAndtriggerChange","trigger","getOptionsMapForParam","getOptionsForParam","getAppName","getCurveItemValueForParamName","curveNumber","visibilityControllerForParam","found","some","pKeys","getAxisText","scatterAxisTextPattern","textPattern","pName","delimiter","getCurveText","curveTextPattern","buttons","getElementsByName","plotFormatParam","getBestFit","containsPoint","pointArray","pLat","pLon","disableActionButtons","enableActionButtons","isNum","args","parseFloat","variance","median","matsMathUtils"],"mappings":"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","file":"/packages/randyp_mats-common.js","sourcesContent":["/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/31/16.\n */\nimport '../imports/startup/server/index.js';\nimport '../imports/startup/both/index.js';\nimport {ServiceConfiguration} from 'meteor/service-configuration';\n\nvar setGoogleCred = function () {\n    /*\n     from developer console:\n     console.developers.google.apis\n     */\n    if (Meteor.isServer) {\n        var os = Npm.require('os');\n        var hostname = os.hostname();\n        var cid = \"\";\n        var cSecret = \"\";\n        var gid = \"\";\n        var gSecret = \"\";\n        var _id = \"\";\n        var cred;\n        try {\n            cred = ServiceConfiguration.configurations.findOne({service:'google'});\n            if (cred) {\n                cid = cred.clientId;\n                cSecret = cred.secret;\n                _id = cred._id;\n            }\n        } catch (ignore) {\n        }\n        switch (hostname.split('.')[0]) {\n            case \"mats\":\n                gid = \"499180266722-d4rn615s4s8tenra4tdisbl1i34uvu82.apps.googleusercontent.com\";\n                gSecret = \"U0QuFoFkMnZwNck1nJfPK1Uv\";\n                break;\n            case \"mats-dev\":\n                gid = \"499180266722-m8qusll2n5sc57u0hdefans35noqkt13.apps.googleusercontent.com\";\n                gSecret = \"Ra1xCSDnr-ZZX1wgyAHHSbIU\";\n                break;\n            case \"mats-int\":\n                gid = \"499180266722-31eikjprn2lek2jmv8q31adhdbi5cc4b.apps.googleusercontent.com\";\n                gSecret = \"WLaPaYq4MdU4nEUSh_Pw3MDJ\";\n                break;\n            case \"localhost\":\n                gid = \"499180266722-b4j64bso7ncfick2cgku7iib516tkhsh.apps.googleusercontent.com\";\n                gSecret = \"j4EZvOdAgOrDH_Lkg82uebpu\";\n                break;\n            default:\n                gid = \"499180266722-mu5h3she61fgicuro1kjrlv0m4rd7brt.apps.googleusercontent.com\";\n                gSecret = \"oVViBi9TgLrLPWt6ZTv7M95k\";\n                break;\n        }\n        if (gid != cid || gSecret != cSecret) {\n            // reset gid and gSecret\n            if (cred) {\n                ServiceConfiguration.configurations.update(_id, {$set: {secret: gSecret, clientId: gid}});\n            } else {\n                ServiceConfiguration.configurations.insert({service: \"google\",loginStyle: \"popup\", secret: gSecret, clientId: gid});\n            }\n        }\n    }\n};\n\nsetGoogleCred();","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/31/16.\n */\nimport './mats-collections.js';\nimport './mats-types.js';\nimport '../api/matsMethods.js';","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/31/16.\n */\nvar DatabaseRoles = {\n    MODEL_DATA: 'model_data',\n    META_DATA: 'meta_data',\n    SUMS_DATA: 'sums_data',\n    SITE_DATA: 'site_data'\n};\n\nvar AppTypes = {\n    mats: 'mats',\n    metexpress: 'metexpress',\n    mats4met: 'mats4met'\n};\n\nvar InputTypes = {\n    textInput: 'textInput',\n    select: 'select',\n    selectOrderEnforced: 'selectOrderEnforced',\n    numberSpinner: 'numberSpinner',\n    dateRange: 'dateRange',\n    radioGroup: 'radioGroup',\n    checkBoxGroup: 'checkBoxGroup',\n    resetButton: 'resetButton',\n    controlButton: 'controlButton',\n    element: 'element',\n    selectMap: 'selectMap',\n    custom: 'custom',\n    unused: \"unused\",\n    forecastSingleCycle: 'forecasts single cycle',\n    forecastMultiCycle: 'forecasts multi cycle'\n};\n\nvar PlotTypes = {\n    timeSeries: \"TimeSeries\",\n    profile: \"Profile\",\n    dieoff: \"DieOff\",\n    threshold: \"Threshold\",\n    validtime: \"ValidTime\",\n    dailyModelCycle: \"DailyModelCycle\",\n    reliability: \"Reliability\",\n    map: \"Map\",\n    histogram: \"Histogram\",\n    contour: \"Contour\",\n    contourDiff: \"ContourDiff\",\n    scatter2d: \"Scatter2d\"\n};\n\nvar ForecastTypes = {\n    dieoff: \"dieoff\",\n    utcCycle: \"utc cycle\",\n    singleCycle: \"single cycle\"\n};\n\nvar PlotFormats = {\n    none: \"none\",\n    matching: \"matching\",\n    pairwise: \"pairwise\",\n    absolute: \"absolute\"\n};\n\nvar PlotActions = {\n    matched: \"matched\",\n    unmatched: \"unmatched\"\n};\n\nvar BestFits = {\n    none: 'none',\n    linear: 'linear',\n    linearThroughOrigin: 'linearThroughOrigin',\n    exponential: 'exponential',\n    logarithmic: 'logarithmic',\n    power: 'power'\n};\n\nvar MatchFormats = {\n    none: \"none\",\n    time: \"time\",\n    level: \"level\",\n    site: \"site\"\n};\n\nvar PlotAxisFilters = {\n    none: \"none\",\n    level: \"level\",\n    site: \"site\"\n};\n\nvar PlotView = {\n    graph: \"graph\",\n    textSeries: \"text\",\n};\n\nvar ReservedWords = {\n    Zero: \"Zero\",\n    zero: \"zero\",\n    ideal0: \"ideal0\",\n    ideal1: \"ideal1\",\n    ideal2: \"ideal2\",\n    ideal3: \"ideal3\",\n    ideal4: \"ideal4\",\n    ideal5: \"ideal5\",\n    ideal6: \"ideal6\",\n    ideal7: \"ideal7\",\n    ideal8: \"ideal8\",\n    ideal9: \"ideal9\",\n    perfectReliability: \"Perfect Reliability\",\n    noSkill: \"No Skill\",\n    blueCurveText: \"blueCurveText\",\n    blackCurveText: \"blackCurveText\",\n    redCurveText: \"redCurveText\"\n};\n\nvar Messages = {\n    NO_DATA_FOUND: \"INFO:0 data records found\"\n};\n\n//hide non-timeseries selectors at startup\nvar selectorsToHide = ['dieoff-type', 'utc-cycle-start', 'histogram-bin-controls', 'histogram-yaxis-controls', 'bin-number', 'bin-pivot', 'bin-start', 'bin-stride', 'bin-bounds', 'x-axis-parameter', 'y-axis-parameter'];\n\n/*\nClass for holding metaData records. These are stored in an array. An app can have multiple metadata databases and each database has a pool for connections.\nThese pools are global (although for future reference the access might be from this collection.). They are refenced in this script via the pool name.\nThis class enforces the types of the poolName (in case someone accidentally tries to store the whole pool object), and the database name and a list\nof table names. The internal list can be appended. The getRecords returns the internal list.\n */\nclass MetaDataDBRecord {\n    constructor(poolName, dbName, tables) {\n        if (!typeof poolName === \"string\") {\n            throw new Error(\"MetaDataDBRecord.constructor : poolName is not a string\");\n        }\n        if (!typeof dbName === \"string\") {\n            throw new Error(\"MetaDataDBRecord.constructor : dbName is not a string\");\n        }\n        if (!tables instanceof Array) {\n            throw new Error(\"MetaDataDBRecord.constructor : tables is not an array\");\n        }\n        this._records = [];\n        var record = {'pool': poolName, 'name': dbName, 'tables': tables};\n        this._records.push(record);\n    }\n\n    addRecord(poolName, dbName, tables) {\n        if (!typeof poolName === \"string\") {\n            throw new Error(\"MetaDataDBRecord.constructor : poolName is not a string\");\n        }\n        if (!typeof dbName === \"string\") {\n            throw new Error(\"MetaDataDBRecord.constructor : dbName is not a string\");\n        }\n        if (!tables instanceof Array) {\n            throw new Error(\"MetaDataDBRecord.constructor : tables is not an array\");\n        }\n        var record = {'pool': poolName, 'name': dbName, 'tables': tables};\n        this._records.push(record);\n    }\n\n    getRecords() {\n        return this._records;\n    }\n}\n\nexport default matsTypes = {\n    InputTypes: InputTypes,\n    PlotTypes: PlotTypes,\n    PlotFormats: PlotFormats,\n    PlotActions: PlotActions,\n    BestFits: BestFits,\n    MatchFormats: MatchFormats,\n    PlotAxisFilters: PlotAxisFilters,\n    PlotView: PlotView,\n    Messages: Messages,\n    ForecastTypes: ForecastTypes,\n    ReservedWords: ReservedWords,\n    selectorsToHide: selectorsToHide,\n    MetaDataDBRecord: MetaDataDBRecord,\n    AppTypes: AppTypes,\n    DatabaseRoles: DatabaseRoles\n}\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/31/16.\n */\nimport { Mongo } from 'meteor/mongo';\nvar CurveParams = new Mongo.Collection(\"CurveParams\");\nvar Scatter2dParams = new Mongo.Collection(\"Scatter2dParams\");\nvar CurveTextPatterns = new Mongo.Collection(\"CurveTextPatterns\");\nvar ScatterAxisTextPattern = new Mongo.Collection(\"ScatterAxisTextPattern\");\nvar SavedCurveParams = new Mongo.Collection(\"SavedCurveParams\");\nvar PlotParams = new Mongo.Collection(\"PlotParams\");\nvar SavedPlotParams = new Mongo.Collection(\"SavedPlotParams\");\nvar PlotGraphFunctions = new Mongo.Collection(\"PlotGraphFunctions\");\nvar SavedPlotGraphFunctions = new Mongo.Collection(\"SavedPlotGraphFunctions\");\nvar RegionsPerModel = new Mongo.Collection(\"RegionsPerModel\");\nvar SitesPerModel = new Mongo.Collection(\"SitesPerModel\");\nvar RegionDescriptions = new Mongo.Collection(\"RegionDescriptions\");\nvar Models = new Mongo.Collection(\"Models\");\nvar Instruments = new Mongo.Collection(\"Instruments\");\nvar FcstLensPerModel = new Mongo.Collection(\"FcstLensPerModel\");\nvar CurveSettings = new Mongo.Collection(\"CurveSettings\");\nvar Settings = new Mongo.Collection(\"Settings\");\nvar ColorScheme = new Mongo.Collection(\"ColorScheme\");\nvar SentAddresses = new Mongo.Collection(\"SentAddresses\");\nvar Authorization = new Mongo.Collection(\"Authorization\");\nvar Roles = new Mongo.Collection(\"Roles\");\nvar SavedRoles = new Mongo.Collection(\"SavedRoles\");\nvar Databases = new Mongo.Collection(\"Databases\");\nvar SavedDatabases = new Mongo.Collection(\"SavedDatabases\");\nvar Credentials = new Mongo.Collection(\"Credentials\");\nvar SavedCredentials = new Mongo.Collection(\"SavedCredentials\");\nvar SiteMap = new Mongo.Collection(\"SiteMap\");\nvar StationMap = new Mongo.Collection(\"StationMap\");\nvar appName = new Mongo.Collection(\"appName\");\n\nexport default matsCollections = {\n    CurveParams:CurveParams,\n    Scatter2dParams:Scatter2dParams,\n    CurveTextPatterns:CurveTextPatterns,\n    ScatterAxisTextPattern:ScatterAxisTextPattern,\n    SavedCurveParams:SavedCurveParams,\n    PlotParams:PlotParams,\n    SavedPlotParams:SavedPlotParams,\n    PlotGraphFunctions:PlotGraphFunctions,\n    SavedPlotGraphFunctions:SavedPlotGraphFunctions,\n    RegionsPerModel:RegionsPerModel,\n    SitesPerModel:SitesPerModel,\n    RegionDescriptions:RegionDescriptions,\n    Models:Models,\n    Instruments:Instruments,\n    FcstLensPerModel:FcstLensPerModel,\n    CurveSettings:CurveSettings,\n    Settings:Settings,\n    ColorScheme:ColorScheme,\n    SentAddresses:SentAddresses,\n    Authorization:Authorization,\n    Roles:Roles,\n    SavedRoles:SavedRoles,\n    Databases:Databases,\n    SavedDatabases:SavedDatabases,\n    Credentials:Credentials,\n    SavedCredentials:SavedCredentials,\n    SiteMap:SiteMap,\n    StationMap:StationMap,\n    appName:appName\n};","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {Meteor} from \"meteor/meteor\";\nimport {ValidatedMethod} from 'meteor/mdg:validated-method';\nimport {SimpleSchema} from 'meteor/aldeed:simple-schema';\nimport {matsCache, matsCollections, matsDataQueryUtils, matsDataUtils, matsTypes} from 'meteor/randyp:mats-common';\nimport {mysql} from 'meteor/pcel:mysql';\nimport {url} from 'url';\nimport {Mongo} from 'meteor/mongo';\n\n// PRIVATE\n\n// local collection used to keep the table update times for refresh - won't ever be synchronized or persisted.\nconst metaDataTableUpdates = new Mongo.Collection(null);\nconst LayoutStoreCollection = new Mongo.Collection(\"LayoutStoreCollection\"); // initialize collection used for pop-out window functionality\nconst DownSampleResults = new Mongo.Collection(\"DownSampleResults\");\n\nvar MV_DIRS = {};\n// Define routes for server\nif (Meteor.isServer) {\n    if (Meteor.settings.private !== undefined && Meteor.settings.private !== null) {\n        const _MV_OUT = Meteor.settings.private.MV_OUTPUT;\n        const _MV_HOME = Meteor.settings.private.MV_HOME;\n        const _MV_LOGDIR = _MV_OUT + \"/xml/\";\n        const _MV_ERRDIR = _MV_OUT + \"/xml/\";\n        const _MV_DATADIR = _MV_OUT + \"/data/\";\n        const _MV_SQLDIR = _MV_OUT + \"/xml/\";  // sql output goes with the xml output\n        const _MV_XMLDIR = _MV_OUT + \"/xml/\";\n        const _MV_SCRIPTSDIR = _MV_OUT + \"/scripts/\";\n        const _MV_PLOTSSDIR = _MV_OUT + \"/plots/\";\n        process.env.JAVA_HOME = Meteor.settings.private.JAVA_HOME;\n        process.env.MV_HOME = Meteor.settings.private.MV_HOME;\n\n        MV_DIRS = {\n            LOGDIR: _MV_LOGDIR,\n            ERRDIR: _MV_ERRDIR,\n            DATADIR: _MV_DATADIR,\n            SQLDIR: _MV_SQLDIR,\n            XMLDIR: _MV_XMLDIR,\n            SCRIPTSDIR: _MV_SCRIPTSDIR,\n            PLOTSDIR: _MV_PLOTSSDIR,\n            HOME: _MV_HOME\n        };\n    }\n\n    // add indexes to result and axes collections\n    DownSampleResults.rawCollection().createIndex({\"createdAt\": 1}, {expireAfterSeconds: 3600 * 8}); // 8 hour expiration\n    LayoutStoreCollection.rawCollection().createIndex({\"createdAt\": 1}, {expireAfterSeconds: 900}); // 15 min expiration\n    // set the default proxy prefix path to \"\"\n    if (Meteor.settings.public != null && Meteor.settings.public.proxy_prefix_path  == null) {\n        Meteor.settings.public.proxy_prefix_path = \"\";\n    }\n\n    Picker.route('/_getCSV/:key', function (params, req, res, next) {\n        Picker.middleware(_getCSV(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/_getCSV/:key', function (params, req, res, next) {\n        Picker.middleware(_getCSV(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/app:/_getCSV/:key', function (params, req, res, next) {\n        Picker.middleware(_getCSV(params, req, res, next));\n    });\n\n    Picker.route('/CSV/:f/:key/:m/:a', function (params, req, res, next) {\n        Picker.middleware(_getCSV(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/CSV/:f/:key/:m/:a', function (params, req, res, next) {\n        Picker.middleware(_getCSV(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/:app/CSV/:f/:key/:m/:a', function (params, req, res, next) {\n        Picker.middleware(_getCSV(params, req, res, next));\n    });\n\n    Picker.route('/_getJSON/:key', function (params, req, res, next) {\n        Picker.middleware(_getJSON(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/_getJSON/:key', function (params, req, res, next) {\n        Picker.middleware(_getJSON(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/app:/_getJSON/:key', function (params, req, res, next) {\n        Picker.middleware(_getJSON(params, req, res, next));\n    });\n\n    Picker.route('/JSON/:f/:key/:m/:a', function (params, req, res, next) {\n        Picker.middleware(_getJSON(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/JSON/:f/:key/:m/:a', function (params, req, res, next) {\n        Picker.middleware(_getJSON(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/:app/JSON/:f/:key/:m/:a', function (params, req, res, next) {\n        Picker.middleware(_getJSON(params, req, res, next));\n    });\n\n    Picker.route('/clearCache', function (params, req, res, next) {\n        Picker.middleware(_clearCache(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/clearCache', function (params, req, res, next) {\n        Picker.middleware(_clearCache(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/:app/clearCache', function (params, req, res, next) {\n        Picker.middleware(_clearCache(params, req, res, next));\n    });\n\n    Picker.route('/refreshMetadata', function (params, req, res, next) {\n        Picker.middleware(_refreshMetadataMWltData(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/refreshMetadata', function (params, req, res, next) {\n        Picker.middleware(_refreshMetadataMWltData(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/:app/refreshMetadata', function (params, req, res, next) {\n        Picker.middleware(_refreshMetadataMWltData(params, req, res, next));\n    });\n\n// create picker routes for metviewer middleware static files\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/:app/mvdata/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetData(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/:app/mvpoints1/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetPoints1(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/:app/mvpoints2/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetPoints2(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/:app/mvxml/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetXml(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/:app/mvplot/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetPlot(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/:app/mvscript/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetScript(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/:app/mvsql/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetSql(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/:app/mvlog/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetLog(params, req, res, next));\n    });\n\n    Picker.route(Meteor.settings.public.proxy_prefix_path + '/:app/mverr/:key', function (params, req, res, next) {\n        Picker.middleware(_mvGetErr(params, req, res, next));\n    });\n}\n\n// private - used to see if the main page needs to update its selectors\nconst _checkMetaDataRefresh = function () {\n    // This routine compares the current last modified time of the tables used for curveParameter metadata\n    // with the last update time to determine if an update is necessary. We really only do this for Curveparams\n    /*\n        metaDataTableUpdates:\n        {\n            name: dataBaseName,\n            tables: [tableName1, tableName2 ..],\n            lastRefreshed : timestamp\n        }\n     */\n    var refresh = false;\n    const tableUpdates = metaDataTableUpdates.find({}).fetch();\n    for (var tui = 0; tui < tableUpdates.length; tui++) {\n        var id = tableUpdates[tui]._id;\n        var poolName = tableUpdates[tui].pool;\n        var dbName = tableUpdates[tui].name;\n        var tableNames = tableUpdates[tui].tables;\n        var lastRefreshed = tableUpdates[tui]['lastRefreshed'];\n        var updatedEpoch = Number.MAX_VALUE;\n        for (var ti = 0; ti < tableNames.length; ti++) {\n            var tName = tableNames[ti];\n            var rows = matsDataQueryUtils.simplePoolQueryWrapSynchronous(global[poolName], \"SELECT UNIX_TIMESTAMP(UPDATE_TIME)\" +\n                \"    FROM   information_schema.tables\" +\n                \"    WHERE  TABLE_SCHEMA = '\" + dbName + \"'\" +\n                \"    AND TABLE_NAME = '\" + tName + \"'\");\n            for (var i = 0; i < rows.length; i++) {\n                try {\n                    updatedEpoch = rows[i]['UNIX_TIMESTAMP(UPDATE_TIME)'];\n                    break;\n                } catch (e) {\n                    throw new Error(\"_checkMetaDataRefresh - cannot find last update time for database: \" + dbName + \" and table: \" + tName + \" ERROR:\" + e.message);\n                }\n                if (updatedEpoch === Number.MAX_VALUE) {\n                    throw new Error(\"_checkMetaDataRefresh - cannot find last update time for database: \" + dbName + \" and table: \" + tName);\n                }\n            }\n            const lastRefreshedEpoch = moment(lastRefreshed).valueOf() / 1000;\n            if (lastRefreshedEpoch < updatedEpoch) {\n                refresh = true;\n                console.log(\"Refreshing the metadata in the app selectors because table \" + dbName + \".\" + tName + \" was updated at \" + moment.utc(updatedEpoch * 1000).format(\"YYYY-MM-DD HH:mm:ss\") + \" while the metadata was last refreshed at \" + moment.utc(lastRefreshedEpoch * 1000).format(\"YYYY-MM-DD HH:mm:ss\"));\n                break;\n            }\n        }\n        if (refresh === true) {\n            // refresh the app metadata\n            // app specific routines\n            //const asrKeys = Object.keys(appSpecificResetRoutines);\n            const asrKeys = appSpecificResetRoutines;\n            for (var ai = 0; ai < asrKeys.length; ai++) {\n                global.appSpecificResetRoutines[ai]();\n            }\n            // remember that we updated ALL the metadata tables just now\n            metaDataTableUpdates.update({_id: id}, {$set: {lastRefreshed: moment().format()}});\n        }\n    }\n    return true;\n};\n\n// private middleware for clearing the cache\nconst _clearCache = function (params, req, res, next) {\n    if (Meteor.isServer) {\n        matsCache.clear();\n        res.end(\"<body><h1>clearCache Done!</h1></body>\");\n    }\n};\n\n// private middleware for _getCSV route\nconst _getCSV = function (params, req, res, next) {\n    if (Meteor.isServer) {\n        var stringify = require('csv-stringify');\n        var csv = \"\";\n        try {\n            var result = _getFlattenedResultData(params.key, 0, -1000);\n            var statArray = Object.values(result.stats);\n            var dataArray = Object.values(result.data);\n            var statResultArray = [];\n            var dataResultArray = [];\n            for (var si = 0; si < statArray.length; si++) {\n                statResultArray.push(Object.keys(statArray[si])); // push the stat header for this curve(keys)\n                statResultArray.push(statArray[si]['n'] === 0 ? [statArray[si].label] : Object.values(statArray[si])); // push the stats for this curve\n            }\n\n            for (var di = 0; di < dataArray.length; di++) {\n                var dataSubArray = Object.values(dataArray[di]);\n                var dataHeader = dataSubArray[0] === undefined ? statArray[di].label : Object.keys(dataSubArray[0]);\n                //dataHeader[0] = 'label';\n                dataHeader[0] = dataSubArray[0] === undefined ? \"NO DATA\" : Object.keys(dataSubArray[0]).filter(key => key.indexOf('Curve') != -1)[0];\n                dataResultArray.push(dataHeader); // push this curve data header (keys)\n                if (dataSubArray[0] === undefined) {\n                    continue;\n                }\n                for (var dsi = 0; dsi < dataSubArray.length; dsi++) {  // push this curves data\n                    dataResultArray.push(Object.values(dataSubArray[dsi]));\n                }\n            }\n            var fileName = \"matsplot-\" + moment.utc().format('YYYYMMDD-HH.mm.ss') + \".csv\";\n            res.setHeader('Content-disposition', 'attachment; filename=' + fileName);\n            res.setHeader('Content-Type', 'attachment.ContentType');\n            stringify(statResultArray, {header: true}, function (err, output) {\n                if (err) {\n                    console.log(\"error in _getCSV:\", err);\n                    res.write(\"error,\" + err.toLocaleString());\n                    res.end(\"<body><h1>_getCSV Error! \" + err.toLocaleString() + \"</h1></body>\");\n                    return;\n                }\n                res.write(output);\n                stringify(dataResultArray, {header: true}, function (err, output) {\n                    if (err) {\n                        console.log(\"error in _getCSV:\", err);\n                        res.write(\"error,\" + err.toLocaleString());\n                        res.end(\"<body><h1>_getCSV Error! \" + err.toLocaleString() + \"</h1></body>\");\n                        return;\n                    }\n                    res.write(output);\n                    res.end();\n                });\n                delete result;\n                delete statResultArray;\n                delete dataResultArray;\n            });\n        } catch (e) {\n            console.log('error retrieving data: ', e);\n            csv = \"error,\" + e.toLocaleString();\n            res.setHeader('Content-disposition', 'attachment; filename=matsplot.csv');\n            res.setHeader('Content-Type', 'attachment.ContentType');\n            res.end(\"<body><h1>_getCSV Error! \" + csv + \"</h1></body>\");\n        }\n    }\n};\n\n// private middleware for _getJSON route\nconst _getJSON = function (params, req, res, next) {\n    if (Meteor.isServer) {\n        var flatJSON = \"\";\n        try {\n            var result = _getPagenatedData(params.key, 0, -1000);\n            flatJSON = JSON.stringify(result);\n        } catch (e) {\n            console.log('error retrieving data: ', e);\n            flatJSON = JSON.stringify({error: e});\n            delete flatJSON.dsiRealPageIndex;\n            delete flatJSON.dsiTextDirection;\n        }\n        res.setHeader('Content-Type', 'application/json');\n        res.write(flatJSON);\n        res.end();\n        delete flatJSON;\n        delete result;\n    }\n};\n\n// private method for getting pagenated results and flattening them in order to be appropriate for text display.\nconst _getFlattenedResultData = function (rk, p, np) {\n    if (Meteor.isServer) {\n        var resp;\n        try {\n            var r = rk;\n            var p = p;\n            var np = np;\n            // get the pagenated data\n            var result = _getPagenatedData(r, p, np);\n            // find the type\n            var plotTypes = result.basis.plotParams.plotTypes;\n            var plotType = (_.invert(plotTypes))[true];\n            // extract data\n            var data = result.data;\n            var dsiRealPageIndex = result.dsiRealPageIndex;\n            var dsiTextDirection = result.dsiTextDirection;\n            switch (plotType) {\n                case matsTypes.PlotTypes.timeSeries:\n                case matsTypes.PlotTypes.dailyModelCycle:\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of maps\n                    /*\n                    returnData is\n                    {\n                        stats: {\n                                    curve0: {label:someLabel, mean:someMean,sd:someSd....}\n                                    curve1: {label:someLabel, mean:someMean,sd:someSd....}\n                                    ...\n                                }\n                        data: {\n                                    curve0: [\n                                                {time:someTime, stat: someStat, sd: someSd,....},\n                                                {time:someTime, stat: someStat, sd: someSd,....},\n                                                ....\n                                            ],\n                                    curve1: [\n                                                {time:someTime, stat: someStat, sd: someSd,....},\n                                                {time:someTime, stat: someStat, sd: someSd,....},\n                                                ....\n                                            ],\n                                            ...\n                              }\n                    }\n                     */\n                    for (var ci = 0; ci < data.length; ci++) { // for each curve\n                        // if the curve label is a reserved word do not process the curve (its a zero or max curve)\n                        var reservedWords = Object.values(matsTypes.ReservedWords);\n                        if (reservedWords.indexOf(data[ci].label) >= 0) {\n                            continue; // don't process the zero or max curves\n                        }\n                        var stats = {};\n                        stats['label'] = data[ci].label;\n                        stats['mean'] = data[ci].glob_stats.d_mean;\n                        stats['standard deviation'] = data[ci].glob_stats.sd;\n                        stats['n'] = data[ci].glob_stats.n_good;\n                        stats['standard error'] = data[ci].glob_stats.stde_betsy;\n                        stats['lag1'] = data[ci].glob_stats.lag1;\n                        stats['minimum'] = data[ci].glob_stats.minVal;\n                        stats['maximum'] = data[ci].glob_stats.maxVal;\n                        returnData.stats[data[ci].label] = stats;\n\n                        var curveData = [];  // map of maps\n                        for (var cdi = 0; cdi < data[ci].x.length; cdi++) { //for each datapoint\n                            var curveDataElement = {};\n                            curveDataElement[data[ci].label + ' time'] = data[ci].x[cdi];\n                            curveDataElement['raw stat from query'] = data[ci].stats[cdi].raw_stat;\n                            curveDataElement['plotted stat'] = data[ci].y[cdi];\n                            curveDataElement['std dev'] = data[ci].stats[cdi].sd;\n                            curveDataElement['std error'] = data[ci].stats[cdi].stde_betsy;\n                            curveDataElement['lag1'] = data[ci].stats[cdi].lag1;\n                            curveDataElement['n'] = data[ci].stats[cdi].n_good;\n                            curveData.push(curveDataElement);\n                        }\n                        returnData.data[data[ci].label] = curveData;\n                    }\n                    break;\n                case matsTypes.PlotTypes.profile:\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of map\n                    for (var ci = 0; ci < data.length; ci++) {  // for each curve\n                        var reservedWords = Object.values(matsTypes.ReservedWords);\n                        if (reservedWords.indexOf(data[ci].label) >= 0) {\n                            continue; // don't process the zero or max curves\n                        }\n                        var stats = {};\n                        stats['label'] = data[ci].label;\n                        stats['mean'] = data[ci].glob_stats.d_mean;\n                        stats['standard deviation'] = data[ci].glob_stats.sd;\n                        stats['n'] = data[ci].glob_stats.n_good;\n                        stats['standard error'] = data[ci].glob_stats.stde_betsy;\n                        stats['lag1'] = data[ci].glob_stats.lag1;\n                        stats['minimum'] = data[ci].glob_stats.minVal;\n                        stats['maximum'] = data[ci].glob_stats.maxVal;\n                        returnData.stats[data[ci].label] = stats;\n\n                        var cdata = data[ci].data;\n                        var curveData = [];  // array of maps\n                        for (var cdi = 0; cdi < data[ci].x.length; cdi++) {  // for each datapoint\n                            var curveDataElement = {};\n                            curveDataElement[data[ci].label + ' level'] = data[ci].y[cdi];\n                            curveDataElement['raw stat from query'] = data[ci].stats[cdi].raw_stat;\n                            curveDataElement['plotted stat'] = data[ci].x[cdi];\n                            curveDataElement['std dev'] = data[ci].stats[cdi].sd;\n                            curveDataElement['std error'] = data[ci].stats[cdi].stde_betsy;\n                            curveDataElement['lag1'] = data[ci].stats[cdi].lag1;\n                            curveDataElement['n'] = data[ci].stats[cdi].n_good;\n                            curveData.push(curveDataElement);\n                        }\n                        returnData.data[data[ci].label] = curveData;\n                    }\n                    break;\n                case matsTypes.PlotTypes.dieoff:\n                case matsTypes.PlotTypes.threshold:\n                case matsTypes.PlotTypes.validtime:\n                    var labelSuffix;\n                    switch (plotType) {\n                        case matsTypes.PlotTypes.dieoff:\n                            labelSuffix = \" forecast lead time\";\n                            break;\n                        case matsTypes.PlotTypes.validtime:\n                            labelSuffix = \" hour of day\";\n                            break;\n                        case matsTypes.PlotTypes.threshold:\n                            labelSuffix = \" threshold (in)\";\n                            break;\n                    }\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of maps\n\n                    for (var ci = 0; ci < data.length; ci++) {  // for each curve\n                        var reservedWords = Object.values(matsTypes.ReservedWords);\n                        if (reservedWords.indexOf(data[ci].label) >= 0) {\n                            continue; // don't process the zero or max curves\n                        }\n                        var stats = {};\n                        stats['label'] = data[ci].label;\n                        stats['mean'] = data[ci].glob_stats.d_mean;\n                        stats['standard deviation'] = data[ci].glob_stats.sd;\n                        stats['n'] = data[ci].glob_stats.n_good;\n                        stats['minimum'] = data[ci].glob_stats.minVal;\n                        stats['maximum'] = data[ci].glob_stats.maxVal;\n                        returnData.stats[data[ci].label] = stats;\n\n                        var curveData = [];  // map of maps\n                        for (var cdi = 0; cdi < data[ci].x.length; cdi++) {  // for each datapoint\n                            var curveDataElement = {};\n                            curveDataElement[data[ci].label + labelSuffix] = data[ci].x[cdi];\n                            curveDataElement['raw stat from query'] = data[ci].stats[cdi].raw_stat;\n                            curveDataElement['plotted stat'] = data[ci].y[cdi];\n                            curveDataElement['std dev'] = data[ci].stats[cdi].sd;\n                            curveDataElement['n'] = data[ci].stats[cdi].n_good;\n                            curveData.push(curveDataElement);\n                        }\n                        returnData.data[data[ci].label] = curveData;\n                    }\n                    break;\n                case matsTypes.PlotTypes.reliability:\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of map\n                    for (var ci = 0; ci < data.length; ci++) {  // for each curve\n                        var reservedWords = Object.values(matsTypes.ReservedWords);\n                        if (reservedWords.indexOf(data[ci].label) >= 0) {\n                            continue; // don't process the zero or max curves\n                        }\n                        var stats = {};\n                        stats['label'] = data[ci].label;\n                        stats['sample climo'] = data[ci].glob_stats.sample_climo;\n                        returnData.stats[data[ci].label] = stats;\n\n                        var cdata = data[ci].data;\n                        var curveData = [];  // array of maps\n                        for (var cdi = 0; cdi < data[ci].y.length; cdi++) {  // for each datapoint\n                            var curveDataElement = {};\n                            curveDataElement[data[ci].label + ' probability bin'] = data[ci].stats[cdi].prob_bin;\n                            curveDataElement['hit rate'] = data[ci].stats[cdi].hit_rate;\n                            curveDataElement['oy'] = data[ci].stats[cdi].obs_y;\n                            curveDataElement['on'] = data[ci].stats[cdi].obs_n;\n                            curveData.push(curveDataElement);\n                        }\n                        returnData.data[data[ci].label] = curveData;\n                    }\n                    break;\n                case matsTypes.PlotTypes.map:\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of maps\n\n                    var stats = {};\n                    stats['label'] = data[0].label;\n                    stats['total number of obs'] = data[0].stats.reduce(function (prev, curr) {\n                        return prev + curr.N_times;\n                    }, 0);\n                    stats['mean difference'] = matsDataUtils.average(data[0].queryVal);\n                    stats['standard deviation'] = matsDataUtils.stdev(data[0].queryVal);\n                    stats['minimum time'] = data[0].stats.reduce(function (prev, curr) {\n                        return (prev < curr.min_time ? prev : curr.min_time);\n                    });\n                    stats['minimum time'] = moment.utc(stats['minimum time'] * 1000).format('YYYY-MM-DD HH:mm');\n                    stats['maximum time'] = data[0].stats.reduce(function (prev, curr) {\n                        return (prev > curr.max_time ? prev : curr.max_time);\n                    });\n                    stats['maximum time'] = moment.utc(stats['maximum time'] * 1000).format('YYYY-MM-DD HH:mm');\n\n                    returnData.stats[data[0].label] = stats;\n\n                    var curveData = [];  // map of maps\n                    for (var si = 0; si < data[0].siteName.length; si++) {\n                        var curveDataElement = {};\n                        curveDataElement['Site Name'] = data[0].siteName[si];\n                        curveDataElement['Number of Times'] = data[0].stats[si].N_times;\n                        curveDataElement['Start Date'] = moment.utc((data[0].stats[si].min_time) * 1000).format('YYYY-MM-DD HH:mm');\n                        curveDataElement['End Date'] = moment.utc((data[0].stats[si].max_time) * 1000).format('YYYY-MM-DD HH:mm');\n                        curveDataElement['Average Difference'] = data[0].queryVal[si];\n                        curveData.push(curveDataElement);\n                    }\n                    returnData.data[data[0].label] = curveData;\n                    break;\n                case matsTypes.PlotTypes.histogram:\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of maps\n\n                    for (var ci = 0; ci < data.length; ci++) { // for each curve\n                        var reservedWords = Object.values(matsTypes.ReservedWords);\n                        if (reservedWords.indexOf(data[ci].label) >= 0) {\n                            continue; // don't process the zero or max curves\n                        }\n                        var stats = {};\n                        stats['label'] = data[ci].label;\n                        stats['mean'] = data[ci].glob_stats.glob_mean;\n                        stats['standard deviation'] = data[ci].glob_stats.glob_sd;\n                        stats['n'] = data[ci].glob_stats.glob_n;\n                        stats['minimum'] = data[ci].glob_stats.glob_min;\n                        stats['maximum'] = data[ci].glob_stats.glob_max;\n                        returnData.stats[data[ci].label] = stats;\n\n                        var curveData = [];  // map of maps\n                        for (var cdi = 0; cdi < data[ci].x.length; cdi++) {   // for each datapoint\n                            var curveDataElement = {};\n                            curveDataElement[data[ci].label + ' bin range'] = data[ci].bin_stats[cdi]['binLabel'];\n                            curveDataElement['n'] = data[ci].bin_stats[cdi].bin_n;\n                            curveDataElement['bin rel freq'] = data[ci].bin_stats[cdi].bin_rf;\n                            curveDataElement['bin lower bound'] = data[ci].bin_stats[cdi].binLowBound;\n                            curveDataElement['bin upper bound'] = data[ci].bin_stats[cdi].binUpBound;\n                            curveDataElement['bin mean'] = data[ci].bin_stats[cdi].bin_mean;\n                            curveDataElement['bin std dev'] = data[ci].bin_stats[cdi].bin_sd;\n                            curveData.push(curveDataElement);\n                        }\n                        returnData.data[data[ci].label] = curveData;\n                    }\n                    break;\n                case matsTypes.PlotTypes.contour:\n                case matsTypes.PlotTypes.contourDiff:\n                    var returnData = {};\n                    returnData.stats = {};   // map of maps\n                    returnData.data = {};  // map of arrays of maps\n                    var stats = {};\n                    stats['label'] = data[0].label;\n                    stats['total number of points'] = data[0].glob_stats.n;\n                    stats['mean stat'] = data[0].glob_stats.mean;\n                    stats['minimum time'] = data[0].glob_stats.minDate;\n                    stats['minimum time'] = moment.utc(stats['minimum time'] * 1000).format('YYYY-MM-DD HH:mm');\n                    stats['maximum time'] = data[0].glob_stats.maxDate;\n                    stats['maximum time'] = moment.utc(stats['maximum time'] * 1000).format('YYYY-MM-DD HH:mm');\n\n                    returnData.stats[data[0].label] = stats;\n\n                    var curveData = [];  // map of maps\n                    for (var si = 0; si < data[0].xTextOutput.length; si++) {\n                        var curveDataElement = {};\n                        curveDataElement['xVal'] = data[0].xTextOutput[si];\n                        curveDataElement['yVal'] = data[0].yTextOutput[si];\n                        curveDataElement['stat'] = data[0].zTextOutput[si];\n                        curveDataElement['N'] = data[0].nTextOutput[si];\n                        curveDataElement['Start Date'] = moment.utc((data[0].minDateTextOutput[si]) * 1000).format('YYYY-MM-DD HH:mm');\n                        curveDataElement['End Date'] = moment.utc((data[0].maxDateTextOutput[si]) * 1000).format('YYYY-MM-DD HH:mm');\n                        curveData.push(curveDataElement);\n                    }\n                    returnData.data[data[0].label] = curveData;\n                    break;\n                case matsTypes.PlotTypes.scatter2d:\n                    var returnData = {}; // returns a map of arrays of maps\n                    /*\n                    returnData = {\n                                    curve0: [\n                                                {\n                                                xval: number,\n                                                yval: number,\n                                                bestfit: number || none\n                                                },\n                                                {\n                                                xval: number,\n                                                yval: number,\n                                                bestfit: number || none\n                                                },\n                                               .....\n                                            ],\n                                     curve1: [\n                                                {\n                                                xval: number,\n                                                yval: number,\n                                                bestfit: number || none\n                                                },\n                                                {\n                                                xval: number,\n                                                yval: number,\n                                                bestfit: number || none\n                                                },\n                                               .....\n                                            ],\n                                            ....\n                                }\n                     */\n                    var firstBestFitIndex = -1;\n                    var bestFitIndexes = {};\n                    for (var ci = 0; ci < data.length; ci++) {\n                        if (ci == firstBestFitIndex) {\n                            break; // best fit curves are at the end so do not do further processing\n                        }\n                        var curveData = data[ci];\n                        // look for a best fit curve - only have to look at curves with higher index than this one\n                        var bestFitIndex = -1;\n                        for (var cbi = ci + 1; cbi < data.length; cbi++) {\n                            if (((data[cbi].label).indexOf(curveData.label) !== -1) && ((data[cbi].label).indexOf(\"-best fit\") != -1)) {\n                                bestFitIndexes[ci] = cbi;\n                                if (firstBestFitIndex == -1) {\n                                    firstBestFitIndex = cbi;\n                                }\n                                break;\n                            }\n                        }\n                        var curveTextData = [];\n                        for (var cdi = 0; cdi < curveData.data.length; cdi++) {\n                            var element = {};\n                            element['xAxis'] = curveData.data[cdi][0];\n                            element['yAxis'] = curveData.data[cdi][1];\n                            if (bestFitIndexes[ci] === undefined) {\n                                element['best fit'] = \"none;\"\n                            } else {\n                                element['best fit'] = data[bestFitIndexes[ci]].data[cdi][1];\n                            }\n                            curveTextData.push(element);\n                        }\n                        returnData[curveData.label] = curveTextData;\n                    }\n                    break;\n                default:\n                    return undefined;\n            }\n            returnData.dsiRealPageIndex = dsiRealPageIndex;\n            returnData.dsiTextDirection = dsiTextDirection;\n            return returnData;\n        } catch (error) {\n           throw new Meteor.Error(\"Error in _getFlattenedResultData function: \" + error.message);\n        }\n    }\n};\n\n// private method for getting pagenated data\n// a newPageIndex of -1000 means get all the data (used for export)\n// a newPageIndex of -2000 means get just the last page\nconst _getPagenatedData = function (rky, p, np) {\n    if (Meteor.isServer) {\n        var key = rky;\n        var myPageIndex = p;\n        var newPageIndex = np;\n        var ret;\n        var rawReturn;\n\n        try {\n            var result = matsCache.getResult(key);\n            rawReturn = result === undefined ? undefined : result.result; // getResult structure is {key:something, result:resultObject}\n        } catch (e) {\n            console.log(\"_getPagenatedData: Error - \", e);\n            return undefined;\n        }\n        ret = rawReturn === undefined ? undefined : JSON.parse(JSON.stringify(rawReturn));\n        var start;\n        var end;\n        var direction = 1;\n        if (newPageIndex === -1000) {\n            // all the data\n            start = 0;\n            end = Number.MAX_VALUE;\n        } else if (newPageIndex === -2000) {\n            // just the last page\n            start = -2000;\n            direction = -1;\n        } else if (myPageIndex <= newPageIndex) {\n            // proceed forward\n            start = (newPageIndex - 1) * 100;\n            end = newPageIndex * 100;\n        } else {\n            // move back\n            direction = -1;\n            start = newPageIndex * 100;\n            end = (newPageIndex + 1) * 100;\n        }\n\n        var dsiStart;\n        var dsiEnd;\n        for (var csi = 0; csi < ret.data.length; csi++) {\n            if (ret.data[csi].x == null || ret.data[csi].x.length <= 100) {\n                continue; // don't bother pagenating datasets less than or equal to a page - ret is rawReturn\n            }\n            dsiStart = start;\n            dsiEnd = end;\n            if (dsiStart > ret.data[csi].x.length || dsiStart === -2000) {\n                // show the last page if we either requested it specifically or are trying to navigate past it\n                dsiStart = Math.floor(rawReturn.data[csi].x.length / 100) * 100;\n                dsiEnd = rawReturn.data[csi].x.length;\n                if (dsiEnd === dsiStart) {\n                    // make sure the last page isn't empty--if rawReturn.data[csi].data.length/100 produces a whole number,\n                    // dsiStart and dsiEnd would be the same. This makes sure that the last full page is indeed the last page, without a phantom empty page afterwards\n                    dsiStart = dsiEnd - 100;\n                }\n            }\n            if (dsiStart < 0) {\n                // show the first page if we are trying to navigate before it\n                dsiStart = 0;\n                dsiEnd = 100;\n            }\n            if (dsiEnd < dsiStart) {\n                // make sure that the end is after the start\n                dsiEnd = dsiStart + 100;\n            }\n            if (dsiEnd > ret.data[csi].x.length) {\n                // make sure we don't request past the end -- if results are one page, this should convert the\n                // start and end from 0 and 100 to 0 and whatever the end is.\n                dsiEnd = ret.data[csi].x.length;\n            }\n            ret.data[csi].x = rawReturn.data[csi].x.slice(dsiStart, dsiEnd);\n            ret.data[csi].y = rawReturn.data[csi].y.slice(dsiStart, dsiEnd);\n            ret.data[csi].stats = rawReturn.data[csi].stats.slice(dsiStart, dsiEnd);\n            ret.data[csi].glob_stats = rawReturn.data[csi].glob_stats;\n        }\n\n        delete rawReturn;\n        if (direction === 1) {\n            ret.dsiRealPageIndex = Math.floor(dsiEnd / 100);\n        } else {\n            ret.dsiRealPageIndex = Math.floor(dsiStart / 100);\n        }\n        ret.dsiTextDirection = direction;\n        return ret;\n    }\n};\n\n//private middleware for getting metviewer data file\nconst _mvGetData = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.DATADIR;\n    const baseName = params.key + \".data\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain')\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting data file :\" + baseName);\n        res.end();\n    }\n}\n\n//private middleware for getting metviewer points1 file\nconst _mvGetPoints1 = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.DATADIR;\n    const baseName = params.key + \".points1\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain')\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting data file :\" + baseName);\n        res.end();\n    }\n}\n\n\n//private middleware for getting metviewer points1 file\nconst _mvGetPoints2 = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.DATADIR;\n    const baseName = params.key + \".points2\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain')\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting data file :\" + baseName);\n        res.end();\n    }\n}\n\n//private middleware for getting metviewer xml file\nconst _mvGetXml = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.XMLDIR;\n    const baseName = params.key + \".xml\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain');\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting xml file :\" + baseName);\n        res.end();\n    }\n}\n//private middleware for getting metviewer plot file\nconst _mvGetPlot = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.PLOTSDIR;\n    const baseName = params.key + \".png\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'image/png');\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'application/txt');\n        res.write(\"Error Error getting plot file :\" + baseName);\n        res.end();\n    }\n}\n//private middleware for getting metviewer script file\nconst _mvGetScript = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.SCRIPTSDIR;\n    const baseName = params.key + \".R\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain');\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting script file :\" + baseName);\n        res.end();\n    }}\n//private middleware for getting metviewer sql file\nconst _mvGetSql = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.SQLDIR;\n    const baseName = params.key + \".sql\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/sql');\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting sql file :\" + baseName);\n        res.end();\n    }\n}\n//private middleware for getting metviewer log file\nconst _mvGetLog = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.LOGDIR;\n    const baseName = params.key + \".log\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain');\n            if (err) {console.log(err);} // Fail if the file can't be read.\n            res.end(data); // Send the file data to the browser.\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting log file :\" + baseName);\n        res.end();\n    }\n}\n//private middleware for getting metviewer err file\nconst _mvGetErr = function(params, req, res, next) {\n    const fse = require(\"fs-extra\");\n    const filePath = MV_DIRS.ERRDIR;\n    const baseName = params.key + \".err\";\n    const fileName = filePath + '/' + baseName;\n    try {\n        fse.readFile(fileName, function(err, data) {\n            res.setHeader('Content-Type', 'text/plain');\n            if (err) {\n                res.setHeader('Content-Type', 'text/plain');\n                res.write(\"Error Error getting err file :\" + baseName);\n                res.end();\n            } else {\n                res.end(data); // Send the file data to the browser.\n            }\n        });\n    }\n    catch (error) {\n        res.setHeader('Content-Type', 'text/plain');\n        res.write(\"Error Error getting plot file :\" + baseName);\n        res.end();\n    }\n}\n\n\n// private define a middleware for refreshing the metadata\nconst _refreshMetadataMWltData = function (params, req, res, next) {\n    if (Meteor.isServer) {\n        _checkMetaDataRefresh();\n        res.end(\"<body><h1>refreshMetadata Done!</h1></body>\");\n    }\n};\n\n// private save the result from the query into mongo and downsample if that result's size is greater than 1Mb\nconst _saveResultData = function (result) {\n    if (Meteor.isServer) {\n        var sizeof = require('object-sizeof');\n        var hash = require('object-hash');\n        var key = hash(result.basis.plotParams);\n        var threshold = 1000000;\n        var ret = {};\n        try {\n            var dSize = sizeof(result.data);\n            //console.log(\"result.basis.data size is \", dSize);\n            // TimeSeries and DailyModelCycle are the only plot types that require downSampling\n            if (dSize > threshold && (result.basis.plotParams.plotTypes.TimeSeries || result.basis.plotParams.plotTypes.DailyModelCycle)) {\n                // greater than threshold need to downsample\n                // downsample and save it in DownSampleResult\n                console.log(\"DownSampling\");\n                var downsampler = require(\"downsample-lttb\");\n                var totalPoints = 0;\n                for (var di = 0; di < result.data.length; di++) {\n                    totalPoints += result.data[di].x_epoch.length;\n                }\n                var allowedNumberOfPoints = (threshold / dSize) * totalPoints;\n                var downSampleResult = result === undefined ? undefined : JSON.parse(JSON.stringify(result));\n                for (var ci = 0; ci < result.data.length; ci++) {\n                    var dsData = {};\n                    var xyDataset = result.data[ci].x_epoch.map(function (d, index) {\n                        return [result.data[ci].x_epoch[index], result.data[ci].y[index]];\n                    });\n                    var ratioTotalPoints = xyDataset.length / totalPoints;\n                    var myAllowedPoints = Math.round(ratioTotalPoints * allowedNumberOfPoints);\n                    // downsample the array\n                    var downsampledSeries;\n                    if (myAllowedPoints < xyDataset.length && xyDataset.length > 2) {\n                        downsampledSeries = downsampler.processData(xyDataset, myAllowedPoints);\n                        // replace the y attributes (tooltips etc.) with the y attributes from the nearest x\n                        var originalIndex = 0;\n                        // skip through the original dataset capturing each downSampled data point\n                        var arrayKeys = [];\n                        var nonArrayKeys = [];\n                        var keys = Object.keys(result.data[ci]);\n                        for (var ki = 0; ki < keys.length; ki++) {\n                            if (keys[ki] !== 'x_epoch') {\n                                if (Array.isArray(result.data[ci][keys[ki]])) {\n                                    arrayKeys.push(keys[ki]);\n                                    dsData[keys[ki]] = [];\n                                } else {\n                                    nonArrayKeys.push(keys[ki]);\n                                }\n                            }\n                        }\n                        // We only ever downsample series plots - never profiles and series plots only ever have error_y arrays.\n                        // This is a little hacky but what is happening is we putting error_y.array on the arrayKeys list so that it gets its\n                        // downsampled equivalent values.\n                        for (ki = 0; ki < nonArrayKeys.length; ki++) {\n                            dsData[nonArrayKeys[ki]] = result.data[ci][nonArrayKeys[ki]];\n                        }\n                        // remove the original error_y array data.\n                        dsData['error_y'].array = [];\n                        for (var dsi = 0; dsi < downsampledSeries.length; dsi++) {\n                            while (originalIndex < result.data[ci].x_epoch.length && (result.data[ci].x_epoch[originalIndex] < downsampledSeries[dsi][0])) {\n                                originalIndex++;\n                            }\n                            // capture the stuff related to this downSampled data point (downSampled data points are always a subset of original data points)\n                            for (ki = 0; ki < arrayKeys.length; ki++) {\n                                dsData[arrayKeys[ki]][dsi] = result.data[ci][arrayKeys[ki]][originalIndex];\n                            }\n                            dsData['error_y']['array'][dsi] = result.data[ci]['error_y']['array'][originalIndex];\n                        }\n                        // add downsampled annotation to curve options\n                        downSampleResult[ci] = dsData;\n                        downSampleResult[ci].annotation += \"   **DOWNSAMPLED**\";\n                    } else {\n                        downSampleResult[ci] = result.data[ci];\n                    }\n                    downSampleResult.data[ci] = downSampleResult[ci];\n                }\n                DownSampleResults.rawCollection().insert({\"createdAt\": new Date(), key: key, result: downSampleResult});// createdAt ensures expiration set in mats-collections\n                ret = {key: key, result: downSampleResult};\n            } else {\n                ret = {key: key, result: result};\n            }\n            // save original dataset in the matsCache\n            if (result.basis.plotParams.plotTypes.TimeSeries || result.basis.plotParams.plotTypes.DailyModelCycle) {\n                for (var ci = 0; ci < result.data.length; ci++) {\n                    delete (result.data[ci]['x_epoch']);     // we only needed this as an index for downsampling\n                }\n            }\n            matsCache.storeResult(key, {key: key, result: result}); // lifespan is handled by lowDb (internally) in matscache\n        } catch (error) {\n            if (error.toLocaleString().indexOf(\"larger than the maximum size\") != -1) {\n                throw new Meteor.Error(+\": Requesting too much data... try averaging\");\n            }\n        }\n        return ret;\n    }\n};\n\n// PUBLIC METHODS\n//administration tools\nconst addSentAddress = new ValidatedMethod({\n    name: 'matsMethods.addSentAddress',\n    validate: new SimpleSchema({\n        toAddress: {type: String}\n    }).validator(),\n    run(toAddress) {\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(401, \"not-logged-in\");\n        }\n        matsCollections.SentAddresses.upsert({address: toAddress}, {address: toAddress, userId: Meteor.userId()});\n        return false;\n    }\n});\n\n\n//  administation tool\nconst applyAuthorization = new ValidatedMethod({\n    name: 'matsMethods.applyAuthorization',\n    validate: new SimpleSchema({\n        settings: {type: Object, blackbox: true}\n    }).validator(),\n    run(settings) {\n        if (Meteor.isServer) {\n            var roles;\n            var roleName;\n            var authorization;\n\n            var userRoleName = settings.userRoleName;\n            var userRoleDescription = settings.userRoleDescription;\n            var authorizationRole = settings.authorizationRole;\n            var newUserEmail = settings.newUserEmail;\n            var existingUserEmail = settings.existingUserEmail;\n\n            if (authorizationRole) {\n                // existing role - the role roleName - no need to verify as the selection list came from the database\n                roleName = authorizationRole;\n            } else if (userRoleName && userRoleDescription) {\n                // possible new role - see if it happens to already exist\n                var role = matsCollections.Roles.findOne({name: userRoleName});\n                if (role === undefined) {\n                    // need to add new role using description\n                    matsCollections.Roles.upsert({name: userRoleName}, {$set: {description: userRoleDescription}});\n                    roleName = userRoleName;\n                } else {\n                    // see if the description matches...\n                    roleName = role.name;\n                    var description = role.description;\n                    if (description != userRoleDescription) {\n                        // have to update the description\n                        matsCollections.Roles.upsert({name: userRoleName}, {$set: {description: userRoleDescription}});\n                    }\n                }\n            }\n            // now we have a role roleName - now we need an email\n            if (existingUserEmail) {\n                // existing user -  no need to verify as the selection list came from the database\n                // see if it already has the role\n                authorization = matsCollections.Authorization.findOne({email: existingUserEmail});\n                roles = authorization.roles;\n                if (roles.indexOf(roleName) == -1) {\n                    // have to add the role\n                    if (roleName) {\n                        roles.push(roleName);\n                    }\n                    matsCollections.Authorization.upsert({email: existingUserEmail}, {$set: {roles: roles}});\n                }\n            } else if (newUserEmail) {\n                // possible new authorization - see if it happens to exist\n                authorization = matsCollections.Authorization.findOne({email: newUserEmail});\n                if (authorization !== undefined) {\n                    // authorization exists - add role to roles if necessary\n                    roles = authorization.roles;\n                    if (roles.indexOf(roleName) == -1) {\n                        // have to add the role\n                        if (roleName) {\n                            roles.push(roleName);\n                        }\n                        matsCollections.Authorization.upsert({email: existingUserEmail}, {$set: {roles: roles}});\n                    }\n                } else {\n                    // need a new authorization\n                    roles = [];\n                    if (roleName) {\n                        roles.push(roleName);\n                    }\n                    if (newUserEmail) {\n                        matsCollections.Authorization.upsert({email: newUserEmail}, {$set: {roles: roles}});\n                    }\n                }\n            }\n            return false;\n        }\n    }\n});\n\n// database controls\nconst applyDatabaseSettings = new ValidatedMethod({\n    name: 'matsMethods.applyDatabaseSettings',\n    validate: new SimpleSchema({\n        settings: {type: Object, blackbox: true}\n    }).validator(),\n\n    run(settings) {\n        if (Meteor.isServer) {\n            if (settings.name) {\n                matsCollections.Databases.upsert({name: settings.name}, {\n                    $set: {\n                        name: settings.name,\n                        role: settings.role,\n                        status: settings.status,\n                        host: settings.host,\n                        database: settings.database,\n                        user: settings.user,\n                        password: settings.password\n                    }\n                });\n            }\n            return false;\n        }\n    }\n});\n\n\n//administration tools\nconst deleteSettings = new ValidatedMethod({\n    name: 'matsMethods.deleteSettings',\n    validate: new SimpleSchema({\n        name: {\n            type: String\n        }\n    }).validator(),\n    run(params) {\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(\"not-logged-in\");\n        }\n        if (Meteor.isServer) {\n            matsCollections.CurveSettings.remove({name: params.name});\n        }\n    }\n});\n\n//administration tools\nconst emailImage = new ValidatedMethod({\n    name: 'matsMethods.emailImage',\n    validate: new SimpleSchema({\n        imageStr: {type: String},\n        toAddress: {type: String},\n        subject: {type: String}\n    }).validator(),\n    run(params) {\n        var imageStr = params.imageStr;\n        var toAddress = params.toAddress;\n        var subject = params.subject;\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(401, \"not-logged-in\");\n        }\n        var fromAddress = Meteor.user().services.google.email;\n        // these come from google - see\n        // http://masashi-k.blogspot.fr/2013/06/sending-mail-with-gmail-using-xoauth2.html\n        //http://stackoverflow.com/questions/24098461/nodemailer-gmail-what-exactly-is-a-refresh-token-and-how-do-i-get-one/24123550\n\n        // the gmail account for the credentials is mats.mail.daemon@gmail.com - pwd mats2015!\n        //var clientId = \"339389735380-382sf11aicmgdgn7e72p4end5gnm9sad.apps.googleusercontent.com\";\n        //var clientSecret = \"7CfNN-tRl5QAL595JTW2TkRl\";\n        //var refresh_token = \"1/PDql7FR01N2gmq5NiTfnrT-OlCYC3U67KJYYDNPeGnA\";\n        var credentials = matsCollections.Credentials.findOne({name: \"oauth_google\"}, {\n            clientId: 1,\n            clientSecret: 1,\n            refresh_token: 1\n        });\n        var clientId = credentials.clientId;\n        var clientSecret = credentials.clientSecret;\n        var refresh_token = credentials.refresh_token;\n\n        var smtpTransporter;\n        try {\n            smtpTransporter = Nodemailer.createTransport(\"SMTP\", {\n                service: \"Gmail\",\n                auth: {\n                    XOAuth2: {\n                        user: \"mats.gsd@noaa.gov\",\n                        clientId: clientId,\n                        clientSecret: clientSecret,\n                        refreshToken: refresh_token\n                    }\n                }\n            });\n\n        } catch (e) {\n            throw new Meteor.Error(401, \"Transport error \" + e.message());\n        }\n        try {\n            var mailOptions = {\n                sender: fromAddress,\n                replyTo: fromAddress,\n                from: fromAddress,\n                to: toAddress,\n                subject: subject,\n                attachments: [\n                    {\n                        filename: \"graph.png\",\n                        contents: new Buffer(imageStr.split(\"base64,\")[1], \"base64\")\n                    }\n                ]\n            };\n\n            smtpTransporter.sendMail(mailOptions, function (error, response) {\n                if (error) {\n                    console.log(\"smtpTransporter error \" + error + \" from:\" + fromAddress + \" to:\" + toAddress);\n                } else {\n                    console.log(response + \" from:\" + fromAddress + \" to:\" + toAddress);\n                }\n                smtpTransporter.close();\n            });\n        } catch (e) {\n            throw new Meteor.Error(401, \"Send error \" + e.message());\n        }\n        return false;\n    }\n});\n\n// administation tool\nconst getAuthorizations = new ValidatedMethod({\n    name: 'matsMethods.getAuthorizations',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        var roles = [];\n        if (Meteor.isServer) {\n            var userEmail = Meteor.user().services.google.email.toLowerCase();\n            roles = matsCollections.Authorization.findOne({email: userEmail}).roles;\n        }\n        return roles;\n    }\n});\n\n// administration tool\nconst getDataFunctionFileList = new ValidatedMethod({\n    name: 'matsMethods.getDataFunctionFileList',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        if (Meteor.isServer) {\n        }\n    }\n});\n\n\n// retrieves the saved query results (or downsampled results)\nconst getGraphData = new ValidatedMethod({\n    name: 'matsMethods.getGraphData',\n    validate: new SimpleSchema({\n        plotParams: {\n            type: Object,\n            blackbox: true\n        },\n        plotType: {\n            type: String\n        },\n        expireKey: {\n            type: Boolean\n        }\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var plotGraphFunction = matsCollections.PlotGraphFunctions.findOne({plotType: params.plotType});\n            var dataFunction = plotGraphFunction.dataFunction;\n            var ret;\n            try {\n                var hash = require('object-hash');\n                var key = hash(params.plotParams);\n                if (process.env.NODE_ENV === \"development\" || params.expireKey) {\n                    matsCache.expireKey(key);\n                }\n                var results = matsCache.getResult(key);\n                if (results === undefined) {\n                    // results aren't in the cache - need to process data routine\n                    const Future = require('fibers/future');\n                    var future = new Future();\n                    global[dataFunction](params.plotParams, function (results) {\n                        ret = _saveResultData(results);\n                        future[\"return\"](ret);\n                    });\n                    return future.wait();\n                } else { // results were already in the matsCache (same params and not yet expired)\n                    // are results in the downsampled collection?\n                    var dsResults = DownSampleResults.findOne({key: key}, {}, {disableOplog: true});\n                    if (dsResults !== undefined) {\n                        // results are in the mongo cache downsampled collection - returned the downsampled graph data\n                        ret = dsResults;\n                        // update the expire time in the downsampled collection - this requires a new Date\n                        DownSampleResults.rawCollection().update({key: key}, {$set: {\"createdAt\": new Date()}});\n                    } else {\n                        ret = results;  // {key:someKey, result:resultObject}\n                        // refresh expire time. The only way to perform a refresh on matsCache is to re-save the result.\n                        matsCache.storeResult(results.key, results);\n                    }\n                    var sizeof = require('object-sizeof');\n                    console.log(\"result.data size is \", sizeof(results));\n                    return ret;\n                }\n            } catch (dataFunctionError) {\n                if (dataFunctionError.toLocaleString().indexOf(\"INFO:\") !== -1) {\n                    throw new Meteor.Error(dataFunctionError.message);\n                } else {\n                    throw new Meteor.Error(\"Error in getGraphData function:\" + dataFunction + \" : \" + dataFunctionError.message);\n                }\n            }\n            return undefined; // probably won't get here\n        }\n    }\n});\n\n// retrieves the saved query results (or downsampled results) for a specific key\nconst getGraphDataByKey = new ValidatedMethod({\n    name: 'matsMethods.getGraphDataByKey',\n    validate: new SimpleSchema({\n        resultKey: {\n            type: String\n        }\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var ret;\n            var key = params.resultKey;\n            try {\n                var dsResults = DownSampleResults.findOne({key: key}, {}, {disableOplog: true});\n                if (dsResults !== undefined) {\n                    ret = dsResults;\n                } else {\n                    ret = matsCache.getResult(key); // {key:someKey, result:resultObject}\n                }\n                var sizeof = require('object-sizeof');\n                console.log(\"getGraphDataByKey results size is \", sizeof(dsResults));\n                return ret;\n            } catch (error) {\n                throw new Meteor.Error(\"Error in getGraphDataByKey function:\" + key + \" : \" + error.message);\n            }\n            return undefined;\n        }\n    }\n});\n\n// administration tool\nconst getGraphFunctionFileList = new ValidatedMethod({\n    name: 'matsMethods.getGraphFunctionFileList',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        if (Meteor.isServer) {\n        }\n    }\n});\n\nconst getLayout = new ValidatedMethod({\n    name: 'matsMethods.getLayout',\n    validate: new SimpleSchema({\n        resultKey: {\n            type: String\n        }\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var ret;\n            var key = params.resultKey;\n            try {\n                ret = LayoutStoreCollection.rawCollection().findOne({key: key});\n                return ret;\n            } catch (error) {\n                throw new Meteor.Error(\"Error in getLayout function:\" + key + \" : \" + error.message);\n            }\n            return undefined;\n        }\n    }\n});\n\n// retrieves the saved artifacts (file urls) that were generated by nvBatch for a specific key\nconst getMvArtifactsByKey = new ValidatedMethod({\n    name: 'matsMethods.getMvArtifactsByKey',\n    validate: new SimpleSchema({\n        key: {\n            type: String\n        }\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var ret;\n            var key = params.key;\n            try {\n                ret = matsCache.getResult(key); // {key:someKey, result:resultObject}\n                return ret;\n            } catch (error) {\n                throw new Meteor.Error(\"Error in getMvArtifactsByKey function:\" + key + \" : \" + error.message);\n            }\n            return undefined;\n        }\n    }\n});\n\n/*\ngetPlotResult is used by the graph/text_*_output templates which are used to display textual results.\nBecause the data isn't being rendered graphically this data is always full size, i.e. NOT downsampled.\nThat is why it only finds it in the Result file cache, never the DownSampleResult collection.\n\nBecause the dataset can be so large ... e.g. megabytes the data retrieval is pagenated. The index is\napplied to the underlying datasets.The data gets stripped down and flattened to only contain the data neccesary for text presentation.\nA new page index of -1000 means get all the data i.e. no pagenation.\n */\nconst getPlotResult = new ValidatedMethod({\n    name: 'matsMethods.getPlotResult',\n    validate: new SimpleSchema({\n        resultKey: {type: String},\n        pageIndex: {type: Number},\n        newPageIndex: {type: Number}\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var rKey = params.resultKey;\n            var pi = params.pageIndex;\n            var npi = params.newPageIndex;\n            var ret = {};\n            try {\n                ret = _getFlattenedResultData(rKey, pi, npi);\n            } catch (e) {\n                console.log(e);\n            }\n            return ret;\n        }\n    }\n});\n\n\nconst getReleaseNotes = new ValidatedMethod({\n    name: 'matsMethods.getReleaseNotes',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        //     return Assets.getText('public/MATSReleaseNotes.html');\n        // }\n        if (Meteor.isServer) {\n            var future = require('fibers/future');\n            var fse = require('fs-extra');\n            var dFuture = new future();\n            var fData;\n            console.log(process.env.PWD);\n            var file;\n            if (process.env.NODE_ENV === \"development\") {\n                file = process.env.PWD + \"/../../meteor_packages/mats-common/public/MATSReleaseNotes.html\";\n            } else {\n                file = process.env.PWD + \"/programs/server/assets/packages/randyp_mats-common/public/MATSReleaseNotes.html\";\n            }\n            try {\n                fse.readFile(file, 'utf8', function (err, data) {\n                    if (err) {\n                        fData = err.message;\n                        dFuture[\"return\"]();\n                    } else {\n                        fData = data;\n                        dFuture[\"return\"]();\n                    }\n                });\n            } catch (e) {\n                fData = e.message;\n                dFuture[\"return\"]();\n            }\n            dFuture.wait();\n            return fData;\n        }\n    }\n});\n\n\n// administration tool\nconst getUserAddress = new ValidatedMethod({\n    name: 'matsMethods.getUserAddress',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        if (Meteor.isServer) {\n            return Meteor.user().services.google.email.toLowerCase();\n        }\n    }\n});\n\n// app utility\nconst insertColor = new ValidatedMethod({\n    name: 'matsMethods.insertColor',\n    validate: new SimpleSchema({\n        newColor: {type: String},\n        insertAfterIndex: {type: Number}\n    }).validator(),\n    run(params) {\n        if (params.newColor == \"rgb(255,255,255)\") {\n            return false;\n        }\n        var colorScheme = matsCollections.ColorScheme.findOne({});\n        colorScheme.colors.splice(params.insertAfterIndex, 0, newColor);\n        matsCollections.update({}, colorScheme);\n        return false;\n    }\n});\n\n\n// checks to see if the mv artifacts are cached (based on plotspec hash) if not execs an mvbatch and caches the results\nconst mvBatch = new ValidatedMethod({\n    name: 'matsMethods.mvBatch',\n    validate: new SimpleSchema({\n        plotParams: {\n            type: Object,\n            blackbox: true\n        },\n        plotType: {\n            type: String\n        }\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var mvbatch = MV_DIRS.HOME + \"/bin/mv_batch.sh\";\n            var plotGraphFunction = matsCollections.PlotGraphFunctions.findOne({plotType: params.plotType});\n            var plotSpecFunction = plotGraphFunction.plotSpecFunction;\n            var ret;\n            const appName = matsCollections.appName.findOne({}).app;\n            const fse = require('fs-extra');\n            // generate the key from the params\n            const hash = require('object-hash');\n            const key = hash(params.plotParams);\n            // generate the server router (Picker) urls according to the hash key.\n            var artifacts = {};\n            if (process.env.NODE_ENV === \"development\") {\n                artifacts = {\n                    png: appName + \"/mvplot/\" + key,\n                    xml: appName + \"/mvxml/\" + key,\n                    sql: appName + \"/mvsql/\" + key,\n                    log: appName + \"/mvlog/\" + key,\n                    err: appName + \"/mverr/\" + key,\n                    R: appName + \"/mvscript/\" + key,\n                    data: appName + \"/mvdata/\" + key,\n                    points1: appName + \"/mvpoints1/\" + key,\n                    points2: appName + \"/mvpoints2/\" + key,\n                };\n            } else {\n                // in production the appName is already at the end of the location.href\n                // - which is used to form a url for retrieving the artifact\n                artifacts = {\n                    png: \"/mvplot/\" + key,\n                    xml: \"/mvxml/\" + key,\n                    sql: \"/mvsql/\" + key,\n                    log: \"/mvlog/\" + key,\n                    err: \"/mverr/\" + key,\n                    R: \"/mvscript/\" + key,\n                    data: \"/mvdata/\" + key,\n                    points1: \"/mvpoints1/\" + key,\n                    points2: \"/mvpoints2/\" + key,\n                };\n            }\n            // generate the real file paths (these are not exposed to clients)\n            const plotSpecFilePath = MV_DIRS.XMLDIR + key + \".xml\";\n            const pngFilePath = MV_DIRS.PLOTSDIR + key + \".png\";\n            const sqlFilePath = MV_DIRS.SQLDIR + key + \".sql\";\n            const logFilePath = MV_DIRS.LOGDIR + key + \".log\";\n            const errFilePath = MV_DIRS.ERRDIR + key + \".err\";\n            const scriptFilePath = MV_DIRS.SCRIPTSDIR + key + \".R\";\n            const dataFilePath = MV_DIRS.DATADIR + key + \".data\";\n            const points1Path = MV_DIRS.DATADIR + key + \".points1\";\n            const points2Path = MV_DIRS.DATADIR + key + \".points2\";\n            // NOTE: the plotParams should include an mvPlot:true parameter.\n            // This should have been set in the caller. This makes the mv plotSpec cache entry unique from a MATS plot\n            if (params.plotParams.mvPlot !== true) {\n                throw new Meteor.Error(\"Error in mvBatch: Not an mv plot request: no plotParams.mvPlot:true\");\n            }\n            if (process.env.NODE_ENV === \"development\" || params.expireKey) {\n                matsCache.expireKey(key);\n                // in development just blow away the files too\n                try {\n                    fse.unlinkSync(plotSpecFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(pngFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(sqlFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(logFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(errFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(scriptFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(dataFilePath);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(points1Path);\n                } catch (ignore){}\n                try {\n                    fse.unlinkSync(points2Path);\n                } catch (ignore){}\n            }\n            // try to get the key from the cache\n            var artifactPaths = matsCache.getResult(key);\n            var filesExist = false;\n            if (artifactPaths != null) {\n                // artifact paths were already cached\n                // do the files exist?\n                // check for file existence\n                var xmlSpecExists = fse.existsSync(plotSpecFilePath);\n                var plotExists = fse.existsSync(pngFilePath);\n                var scriptExists = fse.existsSync(scriptFilePath);\n                var dataExists = fse.existsSync(dataFilePath);\n                var sqlExists = fse.existsSync(sqlFilePath);\n                var logExists = fse.existsSync(logFilePath);\n                filesExist = xmlSpecExists && plotExists && scriptExists && dataExists && sqlExists && logExists;\n            }\n            // either the artifacts were cached but the files don't exist or the artifacts were not cached\n            if (artifactPaths == null || filesExist === false) {\n                // artifactPaths are not in the cache - or the files are not there - need to process plotSpecFunction routine\n                // translate the plotparams to a plotSpec and use the key in the plotSpec reference\n                global[plotSpecFunction](params.plotParams, key, function (err, plotSpec) {\n                    // callback\n                    if (err) {\n                        console.log(err, \"plotspecFunction:\", plotSpecFunction);\n                        throw new Meteor.Error(err + \"plotspecFunction: \" + plotSpecFunction);\n                    } else {\n\n                        // no error and we have a plot spec\n                        // see if the artifacts exist as files. They might have been run before and are still hanging around.\n                        // NOTE: the MV_OUTPUT aren't cached at all (i.e. no expiration) -\n                        // therefore the expiration of the MATS cache plotSpec and the actual artifacts is sloppy.\n\n                        // check for file existence\n                        var xmlSpecExists = fse.existsSync(plotSpecFilePath);\n                        var plotExists = fse.existsSync(pngFilePath);\n                        var scriptExists = fse.existsSync(scriptFilePath);\n                        var dataExists = fse.existsSync(dataFilePath);\n                        var sqlExists = fse.existsSync(sqlFilePath);\n                        var logExists = fse.existsSync(logFilePath);\n                        var filesExist = xmlSpecExists && plotExists && scriptExists && dataExists && sqlExists && logExists;\n                        if (!filesExist) {\n                            const mvBatchCmd = MV_DIRS.HOME + \"/bin/mv_batch.sh \" + ' ' + plotSpecFilePath;\n                            const cp = require('child_process');\n                            // save the plotSpec\n                            fse.outputFileSync(plotSpecFilePath, plotSpec);\n                            // exec mv batch with this plotSpec - this should be synchronous\n                            cp.execSync(mvBatchCmd, (error, stdout, stderr) => {\n                                if (stderr) {\n                                    fse.outputFileSync(errFilePath, stderr, function (err) {\n                                        if (err) {\n                                            console.log(\"Error:couldn't write error file\" + err); //null\n                                        }\n                                    });\n                                } else {\n                                    fse.outputFileSync(errFilePath, \"no stderr for key: \" + key, function (err) {\n                                        if (err) {\n                                            console.log(\"Error:couldn't write error file\" + err); //null\n                                        }\n                                    });\n                                }\n                                if (stdout) {\n                                    if (stdout.match(/ERROR/)) {\n                                        fse.outputFileSync(errFilePath, stdout, function (err) {\n                                            if (err) {\n                                                console.log(\"Error:couldn't write log/err file\" + err);\n                                            }\n                                        });\n                                    }\n                                    fse.outputFileSync(logFilePath, stdout, function (err) {\n                                        if (err) {\n                                            console.log(\"Error:couldn't write log file\" + err);\n                                        }\n                                    });\n                                    var sqlout = stdout.match(/[\\s\\S]*#*(SELECT[\\s\\S]*)Database/) == null ? null : stdout.match(/[\\s\\S]*#*(SELECT[\\s\\S]*)Database/)[1];\n                                    if (sqlout == null) {\n                                        fse.outputFileSync(sqlFilePath, \"no sql statement found in output for key: \" + key, function (err) {\n                                            if (err) {\n                                                console.log(\"Error:couldn't write sql file\" + err);\n                                            }\n                                        });\n                                    } else {\n                                        fse.outputFileSync(sqlFilePath, sqlout, function (err) {\n                                            if (err) {\n                                                console.log(\"Error:couldn't write sql file\" + err);\n                                            }\n                                        });\n                                    }\n                                } else {\n                                    fse.outputFileSync(logFilePath, \"No stdout captured for: \" + key, function (err) {\n                                        if (err) {\n                                            console.log(\"Error:couldn't write log file\" + err);\n                                        }\n                                    });\n                                }\n\n                                // no error - check for the files and cache the spec and filePaths\n                                var xmlSpecExists = fse.existsSync(plotSpecFilePath);\n                                var plotExists = fse.existsSync(pngFilePath);\n                                var scriptExists = fse.existsSync(scriptFilePath);\n                                var dataExists = fse.existsSync(dataFilePath);\n                                var sqlExists = fse.existsSync(sqlFilePath);\n                                var logExists = fse.existsSync(logFilePath);\n                                var filesExist = xmlSpecExists && plotExists && scriptExists && dataExists && sqlExists && logExists;\n                                if (!filesExist) {\n                                    console.error('exec error: expected files do not exist');\n                                }\n                                matsCache.storeResult(key, artifacts);\n                                /*\n                                    The mvbatch should have saved the plot artifacts according to the following plotSpec elements\n                                        <data_file>key.data</data_file>\n                                        <plot_file>key.png</plot_file>\n                                        <r_file>key.R</r_file>\n                                    where key is the same as the key for the matsCache\n                                    The stored artifacts shoulkd be like ...\n                                        MV_OUTPUT/plots/key.png\n                                        MV_OUTPUT/xml/key.xml\n                                        MV_OUTPUT/xml/key.sql\n                                        MV_OUTPUT/xml/key.log\n                                        MV_OUTPUT/scripts/key.R\n                                        MV_OUTPUT/data/key.data\n                                        MV_OUTPUT/data/key.sum_stat.info\n                                        MV_OUTPUT/data/key.data.sum_stat\n\n                                        MV_OUTPUT/xml/key.xml is the plotSpec\n                                */\n                                return {'key': key, 'artifacts':artifacts};\n                            }); //ret = {key:key, result:{artifacts:artifacts}}\n                            // return the key and the artifacts\n                        }  // plotspec did not exist\n                        else {\n                            // the files actually already existed but we needed the plotspec\n                            // so just refresh the cache and return the key right away\n                            matsCache.storeResult(key, artifacts);\n                            return {'key': key, 'artifacts':artifacts};\n                        }\n                    }\n                });\n            } // either artifactPaths == null || filesExist === false\n            else {\n                // artifacts existed and plotspec existed - refresh the cache\n                matsCache.storeResult(key, artifacts);\n                return {'key': key, 'artifacts':artifacts};\n            }\n            return {'key': key, 'artifacts':artifacts};\n        } // if Meteor is Server\n    } // run\n});\n\n// administration tool\nconst readFunctionFile = new ValidatedMethod({\n    name: 'matsMethods.readFunctionFile',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        if (Meteor.isServer) {\n            var future = require('fibers/future');\n            var fse = require('fs-extra');\n            var path = \"\";\n            var fData;\n            if (type == \"data\") {\n                path = \"/web/static/dataFunctions/\" + file;\n                console.log('exporting data file: ' + path);\n            } else if (type == \"graph\") {\n                path = \"/web/static/displayFunctions/\" + file;\n                console.log('exporting graph file: ' + path);\n            } else {\n                return (\"error - wrong type\");\n            }\n            fse.readFile(path, function (err, data) {\n                if (err) throw err;\n                fData = data.toString();\n                future[\"return\"](fData);\n            });\n            return future.wait();\n        }\n    }\n});\n\n// refreshes the metadata for the app that's running\nconst refreshMetaData = new ValidatedMethod({\n    name: 'matsMethods.refreshMetaData',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        if (Meteor.isServer) {\n            try {\n                //console.log(\"Asked to refresh metadata\");\n                _checkMetaDataRefresh();\n            } catch (e) {\n                console.log(e);\n                throw new Meteor.Error(\"Server error: \", e.message);\n            }\n        }\n        return metaDataTableUpdates.find({}).fetch();\n    }\n});\n\n// administation tool\nconst removeAuthorization = new ValidatedMethod({\n    name: 'matsMethods.removeAuthorization',\n    validate: new SimpleSchema({\n        settings: {type: Object, blackbox: true}\n    }).validator(),\n    run(settings) {\n        if (Meteor.isServer) {\n            var email;\n            var roleName;\n            var userRoleName = settings.userRoleName;\n            var authorizationRole = settings.authorizationRole;\n            var newUserEmail = settings.newUserEmail;\n            var existingUserEmail = settings.existingUserEmail;\n            if (authorizationRole) {\n                // existing role - the role roleName - no need to verify as the selection list came from the database\n                roleName = authorizationRole;\n            } else if (userRoleName) {\n                roleName = userRoleName;\n            }\n            if (existingUserEmail) {\n                email = existingUserEmail;\n            } else {\n                email = newUserEmail;\n            }\n\n            // if user and role remove the role from the user\n            if (email && roleName) {\n                matsCollections.Authorization.update({email: email}, {$pull: {roles: roleName}});\n            }\n            // if user and no role remove the user\n            if (email && !roleName) {\n                matsCollections.Authorization.remove({email: email});\n            }\n            // if role and no user remove role and remove role from all users\n            if (roleName && !email) {\n                // remove the role\n                matsCollections.Roles.remove({name: roleName});\n                // remove the roleName role from all the authorizations\n                matsCollections.Authorization.update({roles: roleName}, {$pull: {roles: roleName}}, {multi: true});\n            }\n            return false;\n        }\n    }\n});\n\n// app utility\nconst removeColor = new ValidatedMethod({\n    name: 'matsMethods.removeColor',\n    validate: new SimpleSchema({\n        removeColor: {type: String}\n    }).validator(),\n    run(removeColor) {\n        var colorScheme = matsCollections.ColorScheme.findOne({});\n        var removeIndex = colorScheme.colors.indexOf(removeColor);\n        colorScheme.colors.splice(removeIndex, 1);\n        matsCollections.ColorScheme.update({}, colorScheme);\n        return false;\n    }\n});\n\n// database controls\nconst removeDatabase = new ValidatedMethod({\n    name: 'matsMethods.removeDatabase',\n    validate: new SimpleSchema({\n        dbName: {type: String}\n    }).validator(),\n    run(dbName) {\n        if (Meteor.isServer) {\n            matsCollections.Databases.remove({name: dbName});\n        }\n    }\n});\n\n// makes sure all of the parameters display appropriate selections in relation to one another\nconst resetApp = function (appRef) {\n    var fse = require('fs-extra');\n    const metaDataTableRecords = appRef.appMdr;\n    const type = appRef.appType;\n    const appName = appRef.app;\n    var dep_env = process.env.NODE_ENV;\n    // set some defaults for python processing - these can be overridden\n    if (Meteor.settings.private != null && Meteor.settings.private.PYTHON_PATH == null) {\n        Meteor.settings.private.PYTHON_PATH = \"/usr/bin/python\";\n    }\n\n    if (Meteor.settings.private != null && Meteor.settings.private.process != null && Meteor.settings.private.process.RUN_ENV != null) {\n        switch (Meteor.settings.private.process.RUN_ENV) {\n            case \"development\":\n            case \"integration\":\n            case \"production\":\n                dep_env = Meteor.settings.private.process.RUN_ENV;\n                break;\n            default:\n                dep_env = process.env.NODE_ENV;\n               break;\n        }\n    }\n    var deployment;\n    var deploymentText = Assets.getText('public/deployment/deployment.json');\n    if (deploymentText == null) {  // equivilent to deploymentText === null || deploymentText === undefined\n    }\n    deployment = JSON.parse(deploymentText);\n    var app = {};\n    for (var ai = 0; ai < deployment.length; ai++) {\n        var dep = deployment[ai];\n        if (dep.deployment_environment == dep_env) {\n            app = dep.apps.filter(function (app) {\n                return app.app === appName;\n            })[0];\n        }\n    }\n    const appVersion = app ? app.version : \"unknown\";\n    const appTitle = app ? app.title : \"unknown\";\n    const buildDate = app ? app.buildDate : \"unknown\";\n    const appType = type ? type : matsTypes.AppTypes.mats;\n    matsCollections.appName.upsert({app:appName},{$set:{app:appName}});\n\n    // remember that we updated the metadata tables just now - create metaDataTableUpdates\n    /*\n        metaDataTableUpdates:\n        {\n            name: dataBaseName,\n            tables: [tableName1, tableName2 ..],\n            lastRefreshed : timestamp\n        }\n     */\n    // only create metadata tables if the resetApp was called with a real metaDataTables object\n    if (metaDataTableRecords instanceof matsTypes.MetaDataDBRecord) {\n        var metaDataTables = metaDataTableRecords.getRecords();\n        for (var mdti = 0; mdti < metaDataTables.length; mdti++) {\n            const metaDataRef = metaDataTables[mdti];\n            metaDataRef.lastRefreshed = moment().format();\n            if (metaDataTableUpdates.find({name: metaDataRef.name}).count() == 0) {\n                metaDataTableUpdates.update({name: metaDataRef.name}, metaDataRef, {upsert: true});\n            }\n        }\n    } else {\n        throw new Meteor.Error(\"Server error: \", \"resetApp: bad pool-database entry\");\n    }\n\n    matsCollections.Roles.remove({});\n    matsDataUtils.doRoles();\n    matsCollections.Authorization.remove({});\n    matsDataUtils.doAuthorization();\n    matsCollections.Credentials.remove({});\n    matsDataUtils.doCredentials();\n    matsCollections.PlotGraphFunctions.remove({});\n    matsCollections.ColorScheme.remove({});\n    matsDataUtils.doColorScheme();\n    matsCollections.Settings.remove({});\n    matsDataUtils.doSettings(appTitle, appVersion, buildDate, appType);\n    matsCollections.CurveParams.remove({});\n    matsCollections.PlotParams.remove({});\n    matsCollections.CurveTextPatterns.remove({});\n// app specific routines\n    //const asrKeys = Object.keys(appSpecificResetRoutines);\n    const asrKeys = appSpecificResetRoutines;\n    for (var ai = 0; ai < asrKeys.length; ai++) {\n        global.appSpecificResetRoutines[ai]();\n    }\n    matsCache.clear();\n};\n\n// administration tool\nconst restoreFromFile = new ValidatedMethod({\n    name: 'matsMethods.restoreFromFile',\n    validate: new SimpleSchema({\n        type: {type: String},\n        name: {type: String},\n        data: {type: Object, blackbox: true}\n    }).validator(),\n\n    run(params) {\n        if (Meteor.isServer) {\n            console.log(\"restoring \" + params.type + \" file \" + params.name);\n            var path = \"\";\n            if (params.type == \"data\") {\n                path = \"/web/static/dataFunctions/\" + params.name;\n            } else if (params.ype == \"graph\") {\n                path = \"/web/static/displayFunctions/\" + params.name;\n            } else {\n                return (\"error - wrong tyoe\");\n            }\n            console.log('importing ' + params.type + ' file: ' + path);\n            var fse = require('fs-extra');\n            fse.writeFile(path, params.data.toString(), function (err) {\n                if (err) {\n                    return (err.toLocaleString());\n                }\n                console.log('imported ' + params.type + ' file: ' + path);\n            });\n        }\n    }\n});\n\n// administration tool\nconst restoreFromParameterFile = new ValidatedMethod({\n    name: 'matsMethods.restoreFromParameterFile',\n    validate: new SimpleSchema({\n        name: {type: String},\n        data: {type: Object, blackbox: true}\n    }).validator(),\n    run(params) {\n        var data = params.data;\n        if (Meteor.isServer) {\n            var d = [];\n            if (data.CurveParams) {\n                matsCollections.CurveParams.remove({});\n                d = _.map(data.CurveParams, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.CurveParams.insert(o);\n                });\n            }\n            if (data.PlotParams) {\n                matsCollections.PlotParams.remove({});\n                d = _.map(data.PlotParams, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.PlotParams.insert(o);\n                });\n            }\n            if (data.PlotGraphFunctions) {\n                matsCollections.PlotGraphFunctions.remove({});\n                d = _.map(data.PlotGraphFunctions, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.PlotGraphFunctions.insert(o);\n                });\n            }\n            if (data.Settings) {\n                matsCollections.Settings.remove({});\n                d = _.map(data.Settings, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.Settings.insert(o);\n                });\n            }\n            if (data.ColorScheme) {\n                matsCollections.ColorScheme.remove({});\n                d = _.map(data.ColorScheme, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.ColorScheme.insert(o);\n                });\n            }\n            if (data.Authorization) {\n                matsCollections.Authorization.remove({});\n                d = _.map(data.Authorization, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.Authorization.insert(o);\n                });\n            }\n            if (data.Roles) {\n                matsCollections.Roles.remove({});\n                d = _.map(data.Roles, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.Roles.insert(o);\n                });\n            }\n            if (data.Databases) {\n                matsCollections.Databases.remove({});\n                d = _.map(data.Databases, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.Databases.insert(o);\n                });\n            }\n            if (data.Credentials) {\n                matsCollections.Credentials.remove({});\n                d = _.map(data.Credentials, function (o) {\n                    return _.omit(o, '_id');\n                });\n                d.forEach(function (o) {\n                    matsCollections.Credentials.insert(o);\n                });\n            }\n        }\n    }\n});\n\nconst saveLayout = new ValidatedMethod({\n    name: 'matsMethods.saveLayout',\n    validate: new SimpleSchema({\n        resultKey: {\n            type: String\n        },\n        layout: {\n            type: Object, blackbox: true\n        },\n        curveOpsUpdate: {\n            type: Object, blackbox: true\n        }\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var key = params.resultKey;\n            var layout = params.layout;\n            var curveOpsUpdate = params.curveOpsUpdate;\n            try {\n                LayoutStoreCollection.upsert({key: key}, {$set: {\"createdAt\": new Date(), layout: layout, curveOpsUpdate: curveOpsUpdate}});\n            } catch (error) {\n                throw new Meteor.Error(\"Error in saveLayout function:\" + key + \" : \" + error.message);\n            }\n        }\n    }\n});\n\n//administration tools\nconst saveSettings = new ValidatedMethod({\n    name: 'matsMethods.saveSettings',\n    validate: new SimpleSchema({\n        saveAs: {\n            type: String\n        },\n        p: {\n            type: Object,\n            blackbox: true\n        },\n        permission: {\n            type: String\n        }\n    }).validator(),\n    run(params) {\n        var user = \"anonymous\";\n        matsCollections.CurveSettings.upsert({name: params.saveAs}, {\n            created: moment().format(\"MM/DD/YYYY HH:mm:ss\"),\n            name: params.saveAs,\n            data: params.p,\n            owner: Meteor.userId() == null ? \"anonymous\" : Meteor.userId(),\n            permission: params.permission,\n            savedAt: new Date(),\n            savedBy: Meteor.user() == null ? \"anonymous\" : user\n        });\n    }\n});\n\n// administation tool\nconst setCredentials = new ValidatedMethod({\n    name: 'matsMethods.setCredentials',\n    validate: new SimpleSchema({\n        settings: {type: Object, blackbox: true}\n    }).validator(),\n    run(settings) {\n        if (Meteor.isServer) {\n            var name = settings.name;\n            var clientId = settings.clientId;\n            var clientSecret = settings.clientSecret;\n            var clientRefreshToken = settings.clientRefreshToken;\n            matsCollections.Credentials.update({}, {\n                $set: {\n                    name: name,\n                    clientId: clientId,\n                    clientSecret: clientSecret,\n                    refresh_token: clientRefreshToken\n                }\n            });\n            return false;\n        }\n    }\n});\n\nconst setSettings = new ValidatedMethod({\n    name: 'matsMethods.setSettings',\n    validate: new SimpleSchema({\n        settings: {type: Object, blackbox: true}\n    }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            var settings = params.settings;\n            var labelPrefix = settings.labelPrefix;\n            var title = settings.title;\n            var lineWidth = settings.lineWidth;\n            var nullFillString = settings.nullFillString;\n            var resetFromCode = settings.resetFromCode;\n            matsCollections.Settings.update({}, {\n                $set: {\n                    LabelPrefix: labelPrefix,\n                    Title: title,\n                    LineWidth: lineWidth,\n                    NullFillString: nullFillString,\n                    resetFromCode: resetFromCode\n                }\n            });\n        }\n        return false;\n    }\n});\n\n\n/* test methods */\n\nconst testGetMetaDataTableUpdates = new ValidatedMethod({\n    name: 'matsMethods.testGetMetaDataTableUpdates',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        return metaDataTableUpdates.find({}).fetch();\n    }\n});\n\nconst testGetTables = new ValidatedMethod({\n    name: 'matsMethods.testGetTables',\n    validate: new SimpleSchema(\n        {\n            host: {type: String},\n            user: {type: String},\n            password: {type: String},\n            database: {type: String}\n        }).validator(),\n    run(params) {\n        if (Meteor.isServer) {\n            const Future = require('fibers/future');\n            const queryWrap = Future.wrap(function (callback) {\n                const connection = mysql.createConnection({\n                    host: params.host,\n                    user: params.user,\n                    password: params.password,\n                    database: params.database\n                });\n                connection.query(\"show tables;\", function (err, result) {\n                    const tables = result.map(function (a) {\n                        return a.Tables_in_ruc_ua_sums2;\n                    });\n                    return callback(err, tables);\n                });\n                connection.end(function (err) {\n                    if (err) {\n                        console.log(\"testGetTables cannot end connection\");\n                    }\n                });\n            });\n            return queryWrap().wait();\n        }\n    }\n});\n\nconst testSetMetaDataTableUpdatesLastRefreshedBack = new ValidatedMethod({\n    name: 'matsMethods.testSetMetaDataTableUpdatesLastRefreshedBack',\n    validate: new SimpleSchema({}).validator(),\n    run() {\n        var mtu = metaDataTableUpdates.find({}).fetch();\n        var id = mtu[0]._id;\n        metaDataTableUpdates.update({_id: id}, {$set: {lastRefreshed: 0}});\n        return metaDataTableUpdates.find({}).fetch();\n    }\n});\n\nexport default matsMethods = {\n    addSentAddress: addSentAddress,\n    applyAuthorization: applyAuthorization,\n    applyDatabaseSettings: applyDatabaseSettings,\n    deleteSettings: deleteSettings,\n    emailImage: emailImage,\n    getAuthorizations: getAuthorizations,\n    getDataFunctionFileList: getDataFunctionFileList,\n    getGraphData: getGraphData,\n    getGraphDataByKey: getGraphDataByKey,\n    getGraphFunctionFileList: getGraphFunctionFileList,\n    getLayout: getLayout,\n    getMvArtifactsByKey:getMvArtifactsByKey,\n    getPlotResult: getPlotResult,\n    getReleaseNotes: getReleaseNotes,\n    getUserAddress: getUserAddress,\n    insertColor: insertColor,\n    mvBatch: mvBatch,\n    readFunctionFile: readFunctionFile,\n    refreshMetaData: refreshMetaData,\n    removeAuthorization: removeAuthorization,\n    removeColor: removeColor,\n    removeDatabase: removeDatabase,\n    resetApp: resetApp,\n    restoreFromFile: restoreFromFile,\n    restoreFromParameterFile: restoreFromParameterFile,\n    saveLayout: saveLayout,\n    saveSettings: saveSettings,\n    setCredentials: setCredentials,\n    setSettings: setSettings,\n    testGetMetaDataTableUpdates: testGetMetaDataTableUpdates,\n    testGetTables: testGetTables,\n    testSetMetaDataTableUpdatesLastRefreshedBack: testSetMetaDataTableUpdatesLastRefreshedBack,\n    MV_DIRS: MV_DIRS\n};\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsPlotUtils} from 'meteor/randyp:mats-common';\nimport {matsParamUtils} from 'meteor/randyp:mats-common';\nimport {Info} from 'meteor/randyp:mats-common';\nimport {matsMethods} from 'meteor/randyp:mats-common';\n\n\n/*\n global dataset variable - container for graph dataset.\n This (plotResult) is very important. It isn't \"var\" because it needs to be a meteor global scope.\n The page is rendered whe the graph page comes up, but the data from the data processing callback\n in plotList.js or curveList.js may not have set the global variable\n PlotResult.\n */\n\n//var plotResultData = null; -- this was the global variable for the text output data, but now it is set elsewhere\nvar graphResult = null;     // this is the global variable for the data on the graph\nvar plot;\n\nconst sizeof = function (_1) {\n    var _2 = [_1];\n    var _3 = 0;\n    for (var _4 = 0; _4 < _2.length; _4++) {\n        switch (typeof _2[_4]) {\n            case \"boolean\":\n                _3 += 4;\n                break;\n            case \"number\":\n                _3 += 8;\n                break;\n            case \"string\":\n                _3 += 2 * _2[_4].length;\n                break;\n            case \"object\":\n                if (Object.prototype.toString.call(_2[_4]) != \"[object Array]\") {\n                    for (var _5 in _2[_4]) {\n                        _3 += 2 * _5.length;\n                    }\n                }\n                for (var _5 in _2[_4]) {\n                    var _6 = false;\n                    for (var _7 = 0; _7 < _2.length; _7++) {\n                        if (_2[_7] === _2[_4][_5]) {\n                            _6 = true;\n                            break;\n                        }\n                    }\n                    if (!_6) {\n                        _2.push(_2[_4][_5]);\n                    }\n                }\n        }\n    }\n    return _3;\n};\n\n// Retrieves the globally stored plotResultData for the text output and other things.\n// Re-sets the plotResultData if the requested page range has changed, or if it has not been previously set.\nconst getPlotResultData = function () {\n    var pageIndex = Session.get(\"pageIndex\");\n    var newPageIndex = Session.get(\"newPageIndex\");\n    if (plotResultData === undefined || plotResultData === null || Session.get('textRefreshNeeded') === true) {\n        setPlotResultData();\n    }\n    return plotResultData;\n};\n\n// Sets the global plotResultData variable for the text output to the requested range from the Results data stored in mongo, via a MatsMethod.\nconst setPlotResultData = function () {\n    var pageIndex = Session.get(\"pageIndex\");\n    var newPageIndex = Session.get(\"newPageIndex\");\n\n    if (Session.get('textRefreshNeeded') === true) {\n        showSpinner();\n        matsMethods.getPlotResult.call({\n            resultKey: Session.get(\"plotResultKey\"),\n            pageIndex: pageIndex,\n            newPageIndex: newPageIndex\n        }, function (error, result) {\n            if (error !== undefined) {\n                setError(new Error(\"matsMethods.getPlotResult failed : error: \" + error));\n                Session.set('textRefreshNeeded', false);\n            }\n            if (result == undefined) {\n                plotResultData = undefined;\n                Session.set('textRefreshNeeded', false);\n                hideSpinner();\n                return;\n            }\n            plotResultData = result;\n            Session.set(\"pageIndex\", result.dsiRealPageIndex);\n            Session.set(\"pageTextDirection\", result.dsiTextDirection);\n            Session.set('textLoaded', new Date());\n            console.log(\"size of plotResultData is \", sizeof(plotResultData));\n            Session.set('textRefreshNeeded', false);\n            hideSpinner();\n        });\n    }\n};\n\n// resets the global plotResultData variable for the text output to null\nconst resetPlotResultData = function () {\n    plotResultData = null;\n    Session.set('textLoaded', new Date());\n};\n\n// gets the global graphResult variable, which is the data object for the (possibly downsampled) data on the graph\nconst getGraphResult = function () {\n    if (graphResult === undefined || graphResult === null) {\n        return [];\n    }\n    return graphResult;\n};\n\n// sets the global graphResult variable to the (possibly downsampled) data object returned from MatsMethods, in order to make the graph\nconst setGraphResult = function (result) {\n    graphResult = result;\n    Session.set('graphDataLoaded', new Date());\n    console.log(\"size of graphResultData is\", sizeof(graphResult));\n};\n\n// resets the global graphResult variable to null\nconst resetGraphResult = function () {\n    graphResult = null;\n    Session.set('graphDataLoaded', new Date());\n};\n\n/*\n Curve utilities - used to determine curve labels and colors etc.\n */\nconst getUsedLabels = function () {\n    if (Session.get('UsedLabels') === undefined) {\n        return [];\n    }\n    return Session.get('UsedLabels');\n};\n\nconst getNextCurveLabel = function () {\n    if (Session.get('NextCurveLabel') === undefined) {\n        setNextCurveLabel();\n    }\n    return Session.get('NextCurveLabel');\n};\n\n// determine the next curve Label and set it in the session\n// private, not exported\nconst setNextCurveLabel = function () {\n    const usedLabels = Session.get('UsedLabels');\n    const settings = matsCollections.Settings.findOne({}, {fields: {LabelPrefix: 1}});\n    if (settings === undefined) {\n        return false;\n    }\n    const labelPrefix = settings.LabelPrefix;\n    // find all the labels that start with our prefix (some could be custom)\n    const prefixLabels = _.filter(usedLabels, function (l) {\n        return (l && (l.lastIndexOf(labelPrefix, 0) === 0) && (l.match(new RegExp(labelPrefix, 'g')).length) == 1);\n    });\n    const lastUsedLabel = _.last(prefixLabels);\n    var lastLabelNumber = -1;\n\n    if (lastUsedLabel !== undefined) {\n        const minusPrefix = lastUsedLabel.replace(labelPrefix, '');\n        const tryNum = parseInt(minusPrefix, 10);\n        if (!isNaN(tryNum)) {\n            lastLabelNumber = tryNum;\n        }\n    }\n    var newLabelNumber = lastLabelNumber + 1;\n    var nextCurveLabel = labelPrefix + newLabelNumber;\n    // the label might be one from a removed curve so the next ones might be used\n    while (_.indexOf(usedLabels, nextCurveLabel) != -1) {\n        newLabelNumber++;\n        nextCurveLabel = labelPrefix + newLabelNumber;\n    }\n    Session.set('NextCurveLabel', nextCurveLabel);\n};\n\n// determine the next curve color and set it in the session\n// private - not exported\nconst setNextCurveColor = function () {\n    var usedColors = Session.get('UsedColors');\n    var colors = matsCollections.ColorScheme.findOne({}, {fields: {colors: 1}}).colors;\n    var lastUsedIndex = -1;\n    if (usedColors !== undefined) {\n        lastUsedIndex = _.indexOf(colors, _.last(usedColors));\n    }\n    var nextCurveColor;\n    if (lastUsedIndex !== undefined && lastUsedIndex != -1) {\n        if (lastUsedIndex < colors.length - 1) {\n            var newIndex = lastUsedIndex + 1;\n            nextCurveColor = colors[newIndex];\n            // the color might be one from a removed curve so the next ones might be used\n            while (_.indexOf(usedColors, nextCurveColor) != -1) {\n                newIndex++;\n                nextCurveColor = colors[newIndex];\n            }\n        } else {\n            // out of defaults\n            var rint = Math.round(0xffffff * Math.random());\n            nextCurveColor = 'rgb(' + (rint >> 16) + ',' + (rint >> 8 & 255) + ',' + (rint & 255) + ')';\n        }\n    } else {\n        nextCurveColor = colors[0];\n    }\n    Session.set('NextCurveColor', nextCurveColor);\n};\n\n// get the next curve color from the session\n// private - not exported\nconst getNextCurveColor = function () {\n    if (Session.get('NextCurveColor') === undefined) {\n        setNextCurveColor();\n    }\n    return Session.get('NextCurveColor');\n};\n\n// clear a used label and set the nextCurveLabel to the one just cleared\nconst clearUsedLabel = function (label) {\n    var usedLabels = Session.get('UsedLabels');\n    var newUsedLabels = _.reject(usedLabels, function (l) {\n        return l == label;\n    });\n    Session.set('UsedLabels', newUsedLabels);\n    Session.set('NextCurveLabel', label);\n};\n\n// clear a used color and set the nextCurveColor to the one just cleared\nconst clearUsedColor = function (color) {\n    var usedColors = Session.get('UsedColors');\n    var newUsedColors = _.reject(usedColors, function (c) {\n        return c == color;\n    });\n    Session.set('UsedColors', newUsedColors);\n    Session.set('NextCurveColor', color);\n};\n\n// clear all the used colors and labels and set the nextCurve values\n// to the first in the scheme and the first of the labelPrefix.\n// This is used by the removeAll\nconst clearAllUsed = function () {\n    Session.set('UsedColors', undefined);\n    var colors = matsCollections.ColorScheme.findOne({}, {fields: {colors: 1}}).colors;\n    Session.set('NextCurveColor', colors[0]);\n    Session.set('UsedLabels', undefined);\n    var labelPrefix = matsCollections.Settings.findOne({}, {fields: {LabelPrefix: 1}}).LabelPrefix;\n    Session.set('NextCurveLabel', labelPrefix + 0);\n    Session.set('Curves', []);\n};\n\n// use curves in session to determine which defaults are already used\n// and to set the usedColors in the session\n// this is used on restore settings to set up the usedColors\n// private - not exported\n//setUsedDefaults = function() {\nconst setUsedColors = function () {\n    var curves = Session.get('Curves');\n    var usedColors = [];\n    for (var i = 0; i < curves.length; i++) {\n        var color = curves[i].color;\n        usedColors.push(color);\n    }\n    Session.set('UsedColors', usedColors);\n    setNextCurveColor();\n};\n\n// private - not exported\nconst setUsedLabels = function () {\n    var curves = Session.get('Curves');\n    var usedLabels = [];\n    for (var i = 0; i < curves.length; i++) {\n        var label = curves[i].label;\n        usedLabels.push(label);\n    }\n    Session.set('UsedLabels', usedLabels);\n    setNextCurveLabel();\n};\n\nconst setUsedColorsAndLabels = function () {\n    setUsedColors();\n    setUsedLabels();\n};\n\nconst resetScatterApply = function () {\n    if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n        Session.set('axisCurveIcon', 'fa-asterisk');\n        Session.set('xaxisCurveText', 'XAXIS NOT YET APPLIED');\n        Session.set('yaxisCurveText', 'YAXIS NOT YET APPLIED');\n        Session.set('xaxisCurveColor', 'red');\n        Session.set('yaxisCurveColor', 'red');\n        if (document.getElementById('Fit-Type-radioGroup-none') !== null) {\n            document.getElementById('Fit-Type-radioGroup-none').checked = true;\n        }\n    }\n};\n\n// add the difference curves\n// private - not exported\nconst addDiffs = function () {\n    var curves = Session.get('Curves');\n    var newCurves = Session.get('Curves');\n    // diffs is checked -- have to add diff curves\n    var curvesLength = curves.length;\n    if (curvesLength <= 1) {\n        setInfo(\"You cannot difference less than two curves!\");\n        return false;\n    }\n\n    switch (matsPlotUtils.getPlotFormat()) {\n        case matsTypes.PlotFormats.matching:\n            var baseIndex = 0; // This will probably not default to curve 0 in the future\n            for (var ci = 1; ci < curves.length; ci++) {\n                var newCurve = $.extend(true, {}, curves[ci]);\n                newCurve.label = curves[ci].label + \"-\" + curves[0].label;\n                newCurve.color = getNextCurveColor();\n                newCurve.diffFrom = [ci, baseIndex];\n                // do not create extra diff if it already exists\n                if (_.findWhere(curves, {label: newCurve.label}) === undefined) {\n                    newCurves.push(newCurve);\n                    Session.set('Curves', newCurves);\n                    setUsedColorsAndLabels();\n                }\n            }\n            break;\n        case matsTypes.PlotFormats.pairwise:\n            var baseIndex = 0; // This will probably not default to curve 0 in the future\n            for (var ci = 1; ci < curves.length; ci++) {\n                if (ci % 2 != 0) {  // only diff on odd curves against previous curve\n                    var base_index = ci - 1;\n\n                    var newCurve = $.extend(true, {}, curves[ci]);\n                    newCurve.label = curves[ci].label + \"-\" + curves[base_index].label;\n                    newCurve.color = getNextCurveColor();\n                    newCurve.diffFrom = [ci, baseIndex];\n                    // do not create extra diff if it already exists\n                    if (_.findWhere(curves, {label: newCurve.label}) === undefined) {\n                        newCurves.push(newCurve);\n                        Session.set('Curves', newCurves);\n                        setUsedColorsAndLabels();\n                    }\n                }\n            }\n            break;\n        case matsTypes.PlotFormats.absolute:\n            var baseIndex = 0; // This will probably not default to curve 0 in the future\n            for (var ci = 1; ci < curves.length; ci++) {\n                var newCurve = $.extend(true, {}, curves[ci]);\n                newCurve.label = curves[ci].label + \"-\" + curves[0].label;\n                newCurve.color = getNextCurveColor();\n                newCurve.diffFrom = [ci, baseIndex];\n                // do not create extra diff if it already exists\n                if (_.findWhere(curves, {label: newCurve.label}) === undefined) {\n                    newCurves.push(newCurve);\n                    Session.set('Curves', newCurves);\n                    setUsedColorsAndLabels();\n                }\n            }\n            break;\n    }\n};\n\n\n// remove difference curves\n// private - not exported\nconst removeDiffs = function () {\n    var curves = Session.get('Curves');\n    var newCurves = _.reject(curves, function (curve) {\n        return curve.diffFrom != null\n    });\n    Session.set('Curves', newCurves);\n    setUsedColorsAndLabels();\n};\n\n// resolve the difference curves\n// (used after adding or removing a curve while the show diffs box is checked)\nconst checkDiffs = function () {\n    var curves = Session.get('Curves');\n    if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n        // scatter plots have no concept of difference curves.\n        return;\n    }\n    var plotFormat = matsPlotUtils.getPlotFormat();\n    if (curves.length > 1) {\n        if (plotFormat !== matsTypes.PlotFormats.none) {\n            removeDiffs();\n            addDiffs();\n        } else {\n            removeDiffs();\n        }\n    }\n};\n\n// method to display the appropriate selectors for a timeseries curve\nconst showTimeseriesFace = function () {\n    // move dates selector to plot parameters - one date range for all curves\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.timeSeries).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'none',\n            'dates': 'block',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'block',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.timeSeries);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a profile curve\nconst showProfileFace = function () {\n    // move dates selector to curve parameters - one date range for each curve\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.profile).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'block',\n            'dates': 'none',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'none',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.profile);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a dieoff curve\nconst showDieOffFace = function () {\n    // move dates selector to curve parameters - one date range for each curve\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.dieoff).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'block',\n            'dates': 'none',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'none',\n            'dieoff-type': 'block',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        // reset the value for dieoff-type, so that the checkHideOther routine will work\n        const param = matsParamUtils.getParameterForName('dieoff-type');\n        matsParamUtils.setValueTextForParamName(param.name, param.default);\n\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.dieoff);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a threshold curve\nconst showThresholdFace = function () {\n    // move dates selector to curve parameters - one date range for each curve\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.threshold).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'block',\n            'dates': 'none',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'none',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.threshold);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a valid time curve\nconst showValidTimeFace = function () {\n    // move dates selector to curve parameters - one date range for each curve\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.validtime).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'block',\n            'dates': 'none',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'none',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.validtime);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a daily model cycle curve\nconst showDailyModelCycleFace = function () {\n    // move dates selector to plot parameters - one date range for all curves\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.dailyModelCycle).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'none',\n            'dates': 'block',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'none',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'none',\n            'utc-cycle-start': 'block',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.dailyModelCycle);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a reliability curve\nconst showReliabilityFace = function () {\n    // move dates selector to curve parameters - one date range for each curve\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.reliability).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'none',\n            'dates': 'block',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'block',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'none',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.reliability);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a map\nconst showMapFace = function () {\n    // move dates selector to plot parameters - one date range for all curves\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.map).checked === true) {\n        var faceOptions;\n        faceOptions = {\n            'curve-dates': 'none',\n            'dates': 'block',\n            'region': 'none',\n            'statistic': 'none',\n            'threshold': 'none',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'none',\n            'sites': 'block',\n            'sitesMap': 'block',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.map);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a histogram\nconst showHistogramFace = function () {\n    // move dates selector to curve parameters - one date range for each curve\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.histogram).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'block',\n            'dates': 'none',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'block',\n            'histogram-yaxis-controls': 'block',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.histogram);\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a contour plot\nconst showContourFace = function () {\n    // move dates selector to plot parameters - one date range for all curves\n    const isContour = document.getElementById('plot-type-' + matsTypes.PlotTypes.contour) !== null && document.getElementById('plot-type-' + matsTypes.PlotTypes.contour).checked === true;\n    const isContourDiff = document.getElementById('plot-type-' + matsTypes.PlotTypes.contourDiff) !== null && document.getElementById('plot-type-' + matsTypes.PlotTypes.contourDiff).checked === true;\n    if (isContour || isContourDiff) {\n        var faceOptions = {\n            'curve-dates': 'none',\n            'dates': 'block',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'block',\n            'y-axis-parameter': 'block'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        // //need to be consistent with the x and y axis 'hideOtherFor' settings\n        // const xAxisVal = matsParamUtils.getValueForParamName('x-axis-parameter');\n        // const yAxisVal = matsParamUtils.getValueForParamName('y-axis-parameter');\n        // if (xAxisVal === 'Fcst lead time' || yAxisVal === 'Fcst lead time') {\n        //     elem = document.getElementById('forecast-length-item');\n        //     if (elem && elem.style) {\n        //         elem.style.display = 'none';\n        //     }\n        // }\n        // if (xAxisVal === 'Valid UTC hour' || yAxisVal === 'Valid UTC hour') {\n        //     elem = document.getElementById('valid-time-item');\n        //     if (elem && elem.style) {\n        //         elem.style.display = 'none';\n        //     }\n        // }\n        // if (xAxisVal === 'Pressure level' || yAxisVal === 'Pressure level') {\n        //     elem = document.getElementById('pres-level-item');\n        //     if (elem && elem.style) {\n        //         elem.style.display = 'none';\n        //     }\n        // }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"none\";\n        }\n        if (isContour) {\n            Session.set('plotType', matsTypes.PlotTypes.contour);\n        } else {\n            Session.set('plotType', matsTypes.PlotTypes.contourDiff);\n        }\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// method to display the appropriate selectors for a scatter plot\nconst showScatterFace = function () {\n    if (document.getElementById('plot-type-' + matsTypes.PlotTypes.scatter2d).checked === true) {\n        var faceOptions = {\n            'curve-dates': 'none',\n            'dates': 'block',\n            'region': 'block',\n            'statistic': 'block',\n            'threshold': 'block',\n            'pres-level': 'block',\n            'forecast-length': 'block',\n            'dieoff-type': 'none',\n            'average': 'none',\n            'valid-time': 'block',\n            'utc-cycle-start': 'none',\n            'histogram-bin-controls': 'none',\n            'histogram-yaxis-controls': 'none',\n            'bin-number': 'none',\n            'bin-bounds': 'none',\n            'truth': 'block',\n            'sites' : 'none',\n            'sitesMap' : 'none',\n            'x-axis-parameter': 'none',\n            'y-axis-parameter': 'none'\n        };\n        const faceSelectors = Object.keys(faceOptions);\n        var elem;\n        for (var fidx = 0; fidx < faceSelectors.length; fidx++) {\n            elem = document.getElementById(faceSelectors[fidx] + '-item');\n            if (elem && elem.style) {\n                elem.style.display = faceOptions[faceSelectors[fidx]];\n            }\n        }\n        elem = document.getElementById(matsTypes.PlotTypes.scatter2d);\n        if (elem && elem.style) {\n            elem.style.display = \"block\";\n        }\n        Session.set('plotType', matsTypes.PlotTypes.scatter2d);\n        Session.set('lastUpdate', Date.now());   // force curveParams to re-render\n        // matsParamUtils.setAllParamsToDefault();\n        Session.set('lastUpdate', Date.now());\n    }\n};\n\n// this is no longer used, but it was once employed by the text output routines to calculate the stats for the entire curve\nconst get_err = function (sVals, sSecs) {\n    /* THIS IS DIFFERENT FROM THE ONE IN DATA_UTILS,\n       This one does not throw away outliers and it captures minVal and maxVal\n       refer to perl error_library.pl sub  get_stats\n        to see the perl implementation of these statics calculations.\n        These should match exactly those, except that they are processed in reverse order.\n     */\n    var subVals = [];\n    var subSecs = [];\n    var sVals = sVals;\n    var sSecs = sSecs;\n    var n = sVals.length;\n    var n_good = 0;\n    var sum_d = 0;\n    var sum2_d = 0;\n    var error = \"\";\n    var i;\n    for (i = 0; i < n; i++) {\n        if (sVals[i] !== null) {\n            n_good = n_good + 1;\n            sum_d = sum_d + sVals[i];\n            sum2_d = sum2_d + sVals[i] * sVals[i];\n            subVals.push(sVals[i]);\n            subSecs.push(sSecs[i]);\n        }\n    }\n    var d_mean = sum_d / n_good;\n    var sd2 = sum2_d / n_good - d_mean * d_mean;\n    var sd = sd2 > 0 ? Math.sqrt(sd2) : sd2;\n    var sd_limit = 3 * sd;\n    //console.log(\"see error_library.pl l208 These are processed in reverse order to the perl code -  \\nmean is \" + d_mean + \" sd_limit is +/- \" + sd_limit + \" n_good is \" + n_good + \" sum_d is\" + sum_d + \" sum2_d is \" + sum2_d);\n    // find minimum delta_time, if any value missing, set null\n    var last_secs = Number.MIN_VALUE;\n    var minDelta = Number.MAX_VALUE;\n    var minSecs = Number.MAX_VALUE;\n    var max_secs = Number.MIN_VALUE;\n    var minVal = Number.MAX_VALUE;\n    var maxVal = Number.MIN_VALUE;\n    for (i = 0; i < subSecs.length; i++) {\n        var secs = (subSecs[i]);\n        var delta = Math.abs(secs - last_secs);\n        if (delta < minDelta) {\n            minDelta = delta;\n        }\n        if (secs < minSecs) {\n            minSecs = secs;\n        }\n        if (secs > max_secs) {\n            max_secs = secs;\n        }\n        last_secs = secs;\n    }\n\n    var data_wg = [];\n    var n_gaps = 0;\n    n_good = 0;\n    var sum = 0;\n    var sum2 = 0;\n    var loopTime = minSecs;\n    if (minDelta < 0) {\n        error = (\"Invalid time interval - minDelta: \" + minDelta);\n    }\n    // remove data more than $sd_limit from mean\n    for (i = 0; i < subVals.length; i++) {\n        minVal = minVal < subVals[i] ? minVal : subVals[i];\n        maxVal = maxVal > subVals[i] ? maxVal : subVals[i];\n        n_good++;\n    }\n    //console.log(\"new mean after throwing away outliers is \" + sd + \" n_good is \" + n_good + \" sum is \" + sum  + \" sum2 is \" + sum2 + \" d_mean is \" + d_mean);\n    // look for gaps.... per Bill, we only need one gap per series of gaps...\n    var lastSecond = Number.MIN_VALUE;\n\n    for (i = 0; i < subSecs.length; i++) {\n        var sec = subSecs[i];\n        if (lastSecond >= 0) {\n            if (sec - lastSecond > minDelta) {\n                // insert a gap\n                data_wg.push(null);\n                n_gaps++;\n            }\n        }\n        lastSecond = sec;\n        data_wg.push(subVals[i]);\n    }\n    //console.log (\"n_gaps: \" + n_gaps +  \" time gaps in subseries\");\n\n    //from http://www.itl.nist.gov/div898/handbook/eda/section3/eda35c.htm\n    var r = [];\n    for (var lag = 0; lag <= 1; lag++) {\n        r[lag] = 0;\n        var n_in_lag = 0;\n        for (var t = 0; t < ((n + n_gaps) - lag); t++) {\n            if (data_wg[t] != null && data_wg[t + lag] != null) {\n                r[lag] += +(data_wg[t] - d_mean) * (data_wg[t + lag] - d_mean);\n                n_in_lag++;\n            }\n        }\n        if (n_in_lag > 0 && sd > 0) {\n            r[lag] /= (n_in_lag * sd * sd);\n        } else {\n            r[lag] = null;\n        }\n        //console.log('r for lag ' + lag + \" is \" + r[lag] + \" n_in_lag is \" + n_in_lag + \" n_good is \" + n_good);\n    }\n    // Betsy Weatherhead's correction, based on lag 1\n    if (r[1] >= 1) {\n        r[1] = .99999;\n    }\n    const betsy = Math.sqrt((n_good - 1) * (1 - r[1]));\n    var stde_betsy;\n    if (betsy != 0) {\n        stde_betsy = sd / betsy;\n    } else {\n        stde_betsy = null;\n    }\n    const stats = {\n        d_mean: d_mean,\n        stde_betsy: stde_betsy,\n        sd: sd,\n        n_good: n_good,\n        lag1: r[1],\n        min: minSecs,\n        max: max_secs,\n        minVal: minVal,\n        maxVal: maxVal,\n        sum: sum_d\n    };\n    //console.log(\"stats are \" + JSON.stringify(stats));\n    // stde_betsy is standard error with auto correlation\n    //console.log(\"---------\\n\\n\");\n    return stats;\n};\n\nconst showSpinner = function () {\n    if (document.getElementById(\"spinner\")) {\n        document.getElementById(\"spinner\").style.display = \"block\";\n    }\n};\nconst hideSpinner = function () {\n    if (document.getElementById(\"spinner\")) {\n        document.getElementById(\"spinner\").style.display = \"none\";\n    }\n};\n\nexport default matsCurveUtils = {\n    resetScatterApply: resetScatterApply,\n    getUsedLabels: getUsedLabels,\n    getNextCurveLabel: getNextCurveLabel,\n    getNextCurveColor: getNextCurveColor,\n    clearAllUsed: clearAllUsed,\n    clearUsedLabel: clearUsedLabel,\n    clearUsedColor: clearUsedColor,\n    setUsedLabels: setUsedLabels,\n    setUsedColorsAndLabels: setUsedColorsAndLabels,\n    addDiffs: addDiffs,\n    removeDiffs: removeDiffs,\n    checkDiffs: checkDiffs,\n    showScatterFace: showScatterFace,\n    showTimeseriesFace: showTimeseriesFace,\n    showProfileFace: showProfileFace,\n    showDieOffFace: showDieOffFace,\n    showThresholdFace: showThresholdFace,\n    showValidTimeFace: showValidTimeFace,\n    showDailyModelCycleFace: showDailyModelCycleFace,\n    showReliabilityFace: showReliabilityFace,\n    showMapFace: showMapFace,\n    showHistogramFace: showHistogramFace,\n    showContourFace: showContourFace,\n    get_err: get_err,\n    getPlotResultData: getPlotResultData,\n    //setPlotResultData: setPlotResultData,\n    resetPlotResultData: resetPlotResultData,\n    getGraphResult: getGraphResult,\n    setGraphResult: setGraphResult,\n    resetGraphResult: resetGraphResult,\n    showSpinner: showSpinner,\n    hideSpinner: hideSpinner,\n};\n\n            ","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\n\n// set the label for the hide show buttons (NO DATA) for the initial time here\nconst setNoDataLabels = function (dataset) {\n    for (var c = 0; c < dataset.length; c++) {\n        if (dataset[c].x.length === 0) {\n            Session.set(dataset[c].curveId + \"hideButtonText\", 'NO DATA');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').value = 'NO DATA';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').disabled = true;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"background-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"border-color\"] = \"black\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"color\"] = \"white\";\n            }\n            Session.set(dataset[c].curveId + \"pointsButtonText\", 'NO DATA');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-points')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').value = 'NO DATA';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').disabled = true;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"background-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"border-color\"] = \"black\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"color\"] = \"white\";\n            }\n            Session.set(dataset[c].curveId + \"errorBarButtonText\", 'NO DATA');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').value = 'NO DATA';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').disabled = true;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"background-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"border-color\"] = \"black\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"color\"] = \"white\";\n            }\n            Session.set(dataset[c].curveId + \"barChartButtonText\", 'NO DATA');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-bars')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').value = 'NO DATA';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').disabled = true;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"background-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"border-color\"] = \"black\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"color\"] = \"white\";\n            }\n            Session.set(dataset[c].curveId + \"annotateButtonText\", 'NO DATA');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').value = 'NO DATA';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').disabled = true;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"background-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"border-color\"] = \"black\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"color\"] = \"white\";\n            }\n        } else {\n            Session.set(dataset[c].curveId + \"hideButtonText\", 'hide curve');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').value = 'hide curve';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').disabled = false;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"background-color\"] = \"white\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"border-color\"] = dataset[c].marker.color;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide').style[\"color\"] = dataset[c].marker.color;\n            }\n            Session.set(dataset[c].curveId + \"pointsButtonText\", 'hide points');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-points')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').value = 'hide points';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').disabled = false;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"background-color\"] = \"white\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"border-color\"] = dataset[c].marker.color;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-points').style[\"color\"] = dataset[c].marker.color;\n            }\n            Session.set(dataset[c].curveId + \"errorBarButtonText\", 'hide error bars');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').value = 'hide error bars';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').disabled = false;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"background-color\"] = \"white\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"border-color\"] = dataset[c].marker.color;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-errorbars').style[\"color\"] = dataset[c].marker.color;\n            }\n            Session.set(dataset[c].curveId + \"barChartButtonText\", 'hide bars');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-bars')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').value = 'hide bars';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').disabled = false;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"background-color\"] = \"white\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"border-color\"] = dataset[c].marker.color;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-bars').style[\"color\"] = dataset[c].marker.color;\n            }\n            Session.set(dataset[c].curveId + \"annotateButtonText\", 'hide annotation');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').value = 'hide annotation';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').disabled = false;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"background-color\"] = \"white\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"border-color\"] = dataset[c].marker.color;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-annotate').style[\"color\"] = dataset[c].marker.color;\n            }\n        }\n    }\n};\n\nconst setNoDataLabelsMap = function (dataset) {\n    for (var c = 0; c < dataset.length; c++) {\n        if (dataset[c].lat.length === 0) {\n            Session.set(dataset[c].curveId + \"heatMapButtonText\", 'NO DATA');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').value = 'NO DATA';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').disabled = true;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"background-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"border-color\"] = \"black\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"color\"] = \"white\";\n            }\n        } else {\n            Session.set(dataset[c].curveId + \"heatMapButtonText\", 'show heat map');\n            if (document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap')) {\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').value = 'show heat map';\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').disabled = false;\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"background-color\"] = \"white\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"border-color\"] = \"red\";\n                document.getElementById(dataset[c].curveId + '-curve-show-hide-heatmap').style[\"color\"] = \"red\";\n            }\n        }\n    }\n};\n\n// plot width helper used in multiple places\nconst width = function (plotType) {\n    switch (plotType) {\n        case matsTypes.PlotTypes.profile:\n        case matsTypes.PlotTypes.scatter2d:\n            // set the width square\n            return squareWidthHeight();\n            break;\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.dailyModelCycle:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.threshold:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.reliability:\n        case matsTypes.PlotTypes.map:\n        case matsTypes.PlotTypes.histogram:\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n        default:\n            // set the width wide\n            return rectangleWidth();\n            break;\n    }\n};\n\n// plot height helper used in multiple places\nconst height = function (plotType) {\n    switch (plotType) {\n        case matsTypes.PlotTypes.profile:\n        case matsTypes.PlotTypes.scatter2d:\n            // set the height square\n            return squareWidthHeight();\n            break;\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.dailyModelCycle:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.threshold:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.reliability:\n        case matsTypes.PlotTypes.map:\n        case matsTypes.PlotTypes.histogram:\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n        default:\n            // set the height wide\n            return rectangleHeight();\n            break;\n    }\n};\n\nconst standAloneWidth = function () {\n    var vpw = Math.min(document.documentElement.clientWidth, window.innerWidth || 0);\n    return (.9 * vpw).toString() + \"px\";\n};\nconst standAloneHeight = function () {\n    var vph = Math.min(document.documentElement.clientHeight, window.innerHeight || 0);\n    return (.825 * vph).toString() + \"px\";\n};\n\nconst squareWidthHeight = function () {\n    var vpw = Math.min(document.documentElement.clientWidth, window.innerWidth || 0);\n    var vph = Math.min(document.documentElement.clientHeight, window.innerHeight || 0);\n    var min = Math.min(vpw, vph);\n    if (min < 400) {\n        return (.9 * min).toString() + \"px\";\n    } else {\n        return (.7 * min).toString() + \"px\";\n    }\n};\nconst rectangleWidth = function () {\n    var vpw = Math.min(document.documentElement.clientWidth, window.innerWidth || 0);\n    if (vpw < 400) {\n        return (.9 * vpw).toString() + \"px\";\n    } else {\n        return (.9 * vpw).toString() + \"px\";\n    }\n};\nconst rectangleHeight = function () {\n    var vph = Math.min(document.documentElement.clientHeight, window.innerHeight || 0);\n    if (vph < 400) {\n        return (.8 * vph).toString() + \"px\";\n    } else {\n        return (.7 * vph).toString() + \"px\";\n    }\n};\n\nconst resizeGraph = function (plotType) {\n    document.getElementById('placeholder').style.width = width(plotType);\n    document.getElementById('placeholder').style.height = height(plotType);\n};\n\n// helper to bring up the text page\nconst setTextView = function (plotType) {\n    //shows text page and proper text output, hides everything else\n    document.getElementById('placeholder').style.width = width(plotType);\n    document.getElementById('placeholder').style.height = height(plotType);\n    document.getElementById(\"text-page-button-group\").style.display = \"block\";\n    document.getElementById(\"plot-page-button-group\").style.display = \"none\";\n    document.getElementById(\"curves\").style.display = \"none\";\n    document.getElementById(\"graphView\").style.display = \"none\";\n    document.getElementById(\"textView\").style.display = \"block\";\n    document.getElementById('plot-control-button-group').style.display = \"none\";\n};\n\n// helper to bring up the graph page\nconst setGraphView = function (plotType) {\n    document.getElementById('placeholder').style.width = width(plotType);\n    document.getElementById('placeholder').style.height = height(plotType);\n    //shows graph page, hides everything else\n    document.getElementById('graph-container').style.display = 'block';\n    document.getElementById('plotType').style.display = 'none';\n    document.getElementById('paramList').style.display = 'none';\n    document.getElementById('plotList').style.display = 'none';\n    document.getElementById('curveList').style.display = 'none';\n    if (document.getElementById(\"plotTypeContainer\")) {\n        document.getElementById(\"plotTypeContainer\").style.display = \"none\";\n    }\n    if (document.getElementById(\"scatter2d\")) {\n        document.getElementById(\"scatter2d\").style.display = \"none\";\n    }\n    if (document.getElementById(\"scatterView\")) {\n        document.getElementById(\"scatterView\").style.display = \"none\";\n    }\n    document.getElementById(\"text-page-button-group\").style.display = \"none\";\n    document.getElementById(\"plot-page-button-group\").style.display = \"block\";\n    document.getElementById(\"curves\").style.display = \"block\";\n    document.getElementById(\"graphView\").style.display = \"block\";\n    document.getElementById(\"textView\").style.display = \"none\";\n    if (Session.get('plotType') !== matsTypes.PlotTypes.map) {\n        document.getElementById('plot-control-button-group').style.display = \"block\";\n    } else {\n        document.getElementById('plot-control-button-group').style.display = \"none\";\n    }\n};\n\n// helper to bring up the graph page in a pop-up window\nconst standAloneSetGraphView = function () {\n    //shows graph page, hides everything else\n    document.getElementById('placeholder').style.width = standAloneWidth();\n    document.getElementById('placeholder').style.height = standAloneHeight();\n    document.getElementById('graph-container').style.display = 'block';\n    document.getElementById(\"curves\").style.display = \"block\";\n    document.getElementById(\"graphView\").style.display = \"block\";\n};\n\n// helper to bring up the main selector page\nconst setDefaultView = function () {\n    // show elements of the main page\n    if (document.getElementById('paramList')) {\n        document.getElementById('paramList').style.display = 'block';\n    }\n    if (document.getElementById('plotList')) {\n        document.getElementById('plotList').style.display = 'block';\n    }\n    if (document.getElementById('curveList')) {\n        document.getElementById('curveList').style.display = 'block';\n    }\n    if (document.getElementById(\"plotTypeContainer\")) {\n        document.getElementById(\"plotTypeContainer\").style.display = \"block\";\n    }\n    if (document.getElementById(\"scatterView\")) {\n        document.getElementById(\"scatterView\").style.display = \"block\";\n    }\n    if (document.getElementById(\"scatter2d\")) {\n        document.getElementById(\"scatter2d\").style.display = \"block\";\n    }\n    // hide graph page\n    if (document.getElementById('graph-container')) {\n        document.getElementById('graph-container').style.display = 'none';\n    }\n    document.getElementById(\"plot-page-button-group\").style.display = \"block\";\n    document.getElementById('plot-control-button-group').style.display = \"block\";\n    // hide text page\n    document.getElementById(\"textView\").style.display = \"none\";\n};\n\n\nconst downloadFile = function (fileURL, fileName) {\n    // for non-IE\n    if (!window.ActiveXObject) {\n        var save = document.createElement('a');\n        save.href = fileURL;\n        save.target = '_blank';\n        var filename = fileURL.substring(fileURL.lastIndexOf('/') + 1);\n        save.download = fileName || filename;\n        if (navigator.userAgent.toLowerCase().match(/(ipad|iphone|safari)/) && navigator.userAgent.search(\"Chrome\") < 0) {\n            document.location = save.href;\n        // window event not working here\n        } else {\n            var evt = new MouseEvent('click', {\n                'view': window,\n                'bubbles': true,\n                'cancelable': false\n            });\n            save.dispatchEvent(evt);\n            (window.URL || window.webkitURL).revokeObjectURL(save.href);\n        }\n    }\n\n    // for IE < 11\n    else if (!!window.ActiveXObject && document.execCommand) {\n        var _window = window.open(fileURL, '_blank');\n        _window.document.close();\n        _window.document.execCommand('SaveAs', true, fileName || fileURL)\n        _window.close();\n    }\n};\n\nexport default matsGraphUtils = {\n    setNoDataLabels: setNoDataLabels,\n    setNoDataLabelsMap: setNoDataLabelsMap,\n    width: width,\n    height: height,\n    standAloneWidth: standAloneWidth,\n    standAloneHeight: standAloneHeight,\n    resizeGraph: resizeGraph,\n    setTextView: setTextView,\n    setGraphView: setGraphView,\n    standAloneSetGraphView: standAloneSetGraphView,\n    setDefaultView: setDefaultView,\n    downloadFile: downloadFile\n};","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsCollections, matsMethods, matsParamUtils, matsPlotUtils, matsTypes} from 'meteor/randyp:mats-common';\n\n// method to refresh the peers of the current selector\nconst refreshPeer = function (event, param) {\n    try {\n        const peerName = param.peerName;\n        if (peerName !== undefined) {\n            // refresh the peer\n            const targetParam = matsParamUtils.getParameterForName(peerName);\n            const targetId = targetParam.name + '-' + targetParam.type;\n            const targetElem = document.getElementById(targetId);\n            const refreshMapEvent = new CustomEvent(\"refresh\", {\n                detail: {\n                    refElement: null\n                }\n            });\n            targetElem.dispatchEvent(refreshMapEvent);\n        }\n        refreshDependents(event, param);\n    } catch (e) {\n        e.message = \"INFO: Error in select.js refreshPeer: \" + e.message;\n        setInfo(e.message);\n    }\n};\n\n// method to refresh the dependents of the current selector\nconst refreshDependents = function (event, param) {\n    try {\n        const dependentNames = param.dependentNames;\n        if (dependentNames && Object.prototype.toString.call(dependentNames) === '[object Array]' && dependentNames.length > 0) {\n            // refresh the dependents\n            var selectAllbool = false;\n            for (var i = 0; i < dependentNames.length; i++) {\n                const name = dependentNames[i];\n                const targetParam = matsParamUtils.getParameterForName(name);\n                var targetId;\n                if (targetParam.type === matsTypes.InputTypes.dateRange) {\n                    targetId = \"element-\" + targetParam.name;\n                } else {\n                    targetId = targetParam.name + '-' + targetParam.type;\n                }\n                const targetElem = document.getElementById(targetId);\n\n                if (document.getElementById('selectAll')) {\n                    selectAllbool = document.getElementById('selectAll').checked;\n                }\n                try {\n                    targetElem.dispatchEvent(new CustomEvent(\"refresh\"))\n                } catch (re) {\n                    re.message = \"INFO: refreshDependents of: \" + param.name + \" dependent: \" + targetParam.name + \" - error: \" + re.message;\n                    setInfo(re.message);\n                }\n                const elements = targetElem.options;\n                const select = true;\n                if (targetElem.multiple && elements !== undefined && elements.length > 0) {\n                    if (selectAllbool) {\n                        for (var i1 = 0; i1 < elements.length; i1++) {\n                            elements[i1].selected = select;\n                        }\n                        matsParamUtils.setValueTextForParamName(name, \"\");\n                    } else {\n                        const previously_selected = Session.get('selected');\n                        for (var i2 = 0; i2 < elements.length; i2++) {\n                            if (_.indexOf(previously_selected, elements[i2].text) != -1) {\n                                elements[i2].selected = select;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    } catch (e) {\n        e.message = \"INFO: Error in select.js refreshDependents: \" + e.message;\n        setInfo(e.message);\n    }\n};\n\n// check for enable controlled - This select might have control of another selector\nconst checkDisableOther = function (param, firstRender) {\n    try {\n        if (param.disableOtherFor !== undefined) {\n            // this param controls the enable/disable properties of at least one other param.\n            // Use the options to enable disable that param.\n            const controlledSelectors = Object.keys(param.disableOtherFor);\n            for (var i = 0; i < controlledSelectors.length; i++) {\n                const elem = matsParamUtils.getInputElementForParamName(param.name);\n                if (!elem) {\n                    return;\n                }\n                const selectedOptions = elem.selectedOptions;\n                const selectedText = selectedOptions && selectedOptions.length > 0 ? selectedOptions[0].text : \"\";\n                if ((firstRender == true && param.default == param.hideOtherFor[controlledSelectors[i]]) ||\n                    (param.disableOtherFor[controlledSelectors[i]] === matsTypes.InputTypes.unused && selectedText === \"\") ||\n                    $.inArray(selectedText, param.disableOtherFor[controlledSelectors[i]]) !== -1) {\n                    matsParamUtils.getInputElementForParamName(controlledSelectors[i]).disabled = true;\n                    matsParamUtils.setValueTextForParamName(controlledSelectors[i], matsTypes.InputTypes.unused);\n                } else {\n                    matsParamUtils.getInputElementForParamName(controlledSelectors[i]).disabled = false;\n                }\n            }\n        }\n    } catch (e) {\n        e.message = \"INFO: Error in select.js checkDisableOther: \" + e.message;\n        setInfo(e.message);\n    }\n};\n\n// check for hide controlled - This select might have control of another selector's visibility\nconst checkHideOther = function (param, firstRender) {\n    try {\n        if (param.hideOtherFor !== undefined) {\n            // this param controls the visibility of at least one other param.\n            const controlledSelectors = Object.keys(param.hideOtherFor);\n            for (var i = 0; i < controlledSelectors.length; i++) {\n                const elem = matsParamUtils.getInputElementForParamName(param.name);\n                if (!elem) {\n                    return;\n                }\n                const selectedOptions = elem.selectedOptions;\n                const selectedText = selectedOptions && selectedOptions.length > 0 ? selectedOptions[0].text : \"\";\n\n                var otherInputElement = matsParamUtils.getInputElementForParamName(controlledSelectors[i]);\n\n                var selectorControlElem;\n                if ((firstRender == true && param.default == param.hideOtherFor[controlledSelectors[i]]) ||\n                    (param.hideOtherFor[controlledSelectors[i]] === matsTypes.InputTypes.unused && selectedText === \"\") ||\n                    $.inArray(selectedText, param.hideOtherFor[controlledSelectors[i]]) !== -1) {\n                    selectorControlElem = document.getElementById(controlledSelectors[i] + '-item');\n                    if (selectorControlElem && selectorControlElem.style) {\n                        selectorControlElem.style.display = \"none\";\n                    }\n                    matsParamUtils.setValueTextForParamName(controlledSelectors[i], matsTypes.InputTypes.unused);\n                } else {\n                    selectorControlElem = document.getElementById(controlledSelectors[i] + '-item');\n                    if (selectorControlElem && selectorControlElem.style) {\n                        selectorControlElem.style.display = \"block\";\n                    }\n                    otherInputElement && otherInputElement.options && otherInputElement.selectedIndex >= 0 &&\n                    otherInputElement.options[otherInputElement.selectedIndex].scrollIntoView();\n                }\n            }\n            matsSelectUtils.checkDisableOther(param), firstRender;\n        }\n    } catch (e) {\n        e.message = \"INFO: Error in select.js checkHideOther: \" + e.message;\n        setInfo(e.message);\n    }\n};\n\n// refresh the selector in question to the appropriate options indicated by the values of any superior selectors\nconst refresh = function (event, paramName) {\n    if (paramName.search('axis') === 1) {\n        // this is a \"brother\" (hidden) scatterplot param. There is no need to refresh it or add event listeners etc.\n        return;\n    }\n    const param = matsParamUtils.getParameterForName(paramName);\n    const elem = matsParamUtils.getInputElementForParamName(paramName);\n\n    /*\n    OptionsGroups are a mechanism for displaying the select options in groups.\n    A disabled option is used for the group header. Disabled options simply show up\n    in the selector list in bold font and act as group titles. They are disabled so that\n    they cannot be clicked. DisabledOptions are the headers that the options are to be grouped under.\n    disabledOptions are optional so if there are disabledOptions they are the keys in the optionsGroups\n    and they are the sort order of those keys.\n    */\n    const disabledOptions = matsParamUtils.getDisabledOptionsForParamName(paramName);\n    const optionsGroups = param.optionsGroups;\n    const optionsMap = param.optionsMap;\n\n    const superiorNames = param.superiorNames;\n    const superiorDimensionality = superiorNames !== undefined && superiorNames !== null && superiorNames.length > 0 && Array.isArray(superiorNames[0]) ? superiorNames.length : 1;\n    var superiors = [];\n    // get a list of the current superior selected values - in order of superiority i.e. [databaseValue,dataSourceValue]\n    var sNames;\n    if (superiorNames !== undefined) {\n        if (superiorDimensionality === 1) {\n            sNames = superiorNames;\n        } else {\n            sNames = superiorNames[0];\n        }\n        for (var sn = 0; sn < sNames.length; sn++) {\n            var superiorElement = matsParamUtils.getInputElementForParamName(sNames[sn]);\n            var selectedSuperiorValue = superiorElement.options[superiorElement.selectedIndex] === undefined ? matsParamUtils.getParameterForName(sNames[sn]).default : superiorElement.options[superiorElement.selectedIndex].text;\n            superiors[0] = superiors[0] === undefined ? [] : superiors[0];\n            superiors[0].push({element: superiorElement, value: selectedSuperiorValue});\n        }\n        for (var sNameIndex = 1; sNameIndex < superiorDimensionality; sNameIndex++) {\n            sNames = superiorNames[sNameIndex];\n            for (var sn = 0; sn < sNames.length; sn++) {\n                var superiorElement = matsParamUtils.getInputElementForParamName(sNames[sn]);\n                var selectedSuperiorValue = superiorElement.options[superiorElement.selectedIndex] === undefined ? matsParamUtils.getParameterForName(sNames[sn]).default : superiorElement.options[superiorElement.selectedIndex].text;\n                superiors[sNameIndex] = superiors[sNameIndex] === undefined ? [] : superiors[sNameIndex];\n                superiors[sNameIndex].push({element: superiorElement, value: selectedSuperiorValue});\n            }\n        }\n    }\n    /*\n    So what are superiors now.....\n    superiors = [[{element:anElement,value:aValue},{element:anElement,value:aValue}...]]\n    or they might be [[{element:anElement,value:aValue},{element:anElement,value:aValue}...],[{element:anElement,value:aValue},{element:anElement,value:aValue}...],...]\n\n\n     Axis-brothers:\n     Axis-brothers are for scatter plots. They are a second hidden set of parameters that apply to a different axis.\n     Because there may be axis \"brothers\" This refresh must go and\n     see if there are any brother elements that are essentially hidden copies\n     of this one, and also refresh their options lists\n\n     Superior Heirarchy:\n     There can be a heirarchy of superiors and dependents. The superiorNames are a list of paramNames. The most superior has the 0th index and\n     the least superior has the highest index.\n     The Refresh uses the superiors to get the appropriate options for a given options map.\n     The way it works is that superiors are always refreshed first. The superior heirarchy selections are then used by a\n     dependent to retrieve its appropriate optionsMap from the superiorOptionsMap.\n     superiorsOptionsMap = {\n        mostSuperiorValue0: {  // optionsMap for the most superior first value\n            nextSuperiorValue0: [value0,value1,value2,value3,...],\n            nextSuperiorValue1: [value0,value1,value2,value3,...],\n            nextSuperiorValue2: [value0,value1,value2,value3,...],\n            ...\n        },\n        mostSuperiorValue1:{  // optionsMap for the most superior second value\n            nextSuperiorValue0: [value0,value1,value2,value3,...],\n            nextSuperiorValue1: [value0,value1,value2,value3,...],\n            nextSuperiorValue2: [value0,value1,value2,value3,...],\n            ...\n        },\n        ...,\n        mostSuperiorValue2:{  // optionsMap for the most superior third value\n            nextSuperiorValue0: [value0,value1,value2,value3,...],\n            nextSuperiorValue1: [value0,value1,value2,value3,...],\n            nextSuperiorValue2: [value0,value1,value2,value3,...],\n            ...\n        },\n     }\n     */\n\n    // find all the elements that have ids like .... \"x|y|z\" + \"axis-\" + this.name\n    const name = param.name;\n    const elems = document.getElementsByClassName(\"data-input\") === undefined ? [] : document.getElementsByClassName(\"data-input\");\n    Session.set('selected', $(elem).val());\n\n    if (elem && elem.options) {\n        if (elem.selectedIndex === undefined || elem.selectedIndex === -1) {\n            if (param.default !== matsTypes.InputTypes.unused) {\n                elem.selectedIndex = 0;\n            }\n        }\n        const selectedText = elem.selectedIndex >= 0 ? elem.options[elem.selectedIndex].text : matsTypes.InputTypes.unused;\n        var brothers = [];\n        for (var i = 0; i < elems.length; i++) {\n            if (elems[i].id.indexOf(name) >= 0 && elems[i].id !== elem.id)\n                brothers.push(elems[i]);\n        }\n\n        var myOptions = [];\n        var selectedSuperiorValues = [];\n\n        try {\n            // index down through the options for the list of superiors\n            // starting with the most superior down through the least superior\n            // and get the options list for the first set of superiors.\n            // These are the ancestral options.\n            if (param.optionsMap) {\n                var firstSuperiorOptions = optionsMap;\n                var theseSuperiors = superiors === undefined || superiors.length === 0 ? [] : superiors[0];\n                for (var theseSuperiorsIndex = 0; theseSuperiorsIndex < theseSuperiors.length; theseSuperiorsIndex++) {\n                    var superior = theseSuperiors[theseSuperiorsIndex];\n                    var selectedSuperiorValue = superior.value;\n                    firstSuperiorOptions = firstSuperiorOptions[selectedSuperiorValue];\n                }\n                myOptions = Array.isArray(firstSuperiorOptions) ? firstSuperiorOptions : Object.keys(firstSuperiorOptions);\n            } else {\n                myOptions = param.options;\n            }\n\n            // need to get the ancestral truth options because we may need to intersect the options\n\n\n            /* tricky little bit here:\n            SuperiorDimensionality:\n             It is possible to have two superior options maps.. i.e. datasource and truth.\n             In that case the superiorNames won't look like [\"something\",\"somethingelse\"],\n             instead it will look like [[\"something\",\"somethingelse\"],[\"someotherthing\",\"someotherthingelse\"]]\n             i.e. it will be a multidimensional array.\n\n             If the controlButton for one of these multi-dimensional superior elements is hidden ....\n             matsParamUtils.getControlElementForParamName(superior.element.name).offsetParent !== null\n             it has been hidden because it has a visibility dependency on another param\n             i.e. truth-data-source and truth-variable (for mean there would be no truth, but for bias\n             there must always be truth...).\n             In this case these are dependent upon statistic such that if the statistic is \"mean\" the truth-data-source and truth-variable\n             are hidden. See the wfip2 main.js statistic param as an example....\n             \"disableOtherFor:{'truth-data-source':[statisticOptionsMap.mean][0]},\"\n             and\n             \"hideOtherFor:{'truth-data-source':[statisticOptionsMap.mean][0]},\"\n             are the fields that cause the truth-data-source to be hidden when statistic is set to \"mean\".\n             In that condition (the controlButton is hidden) the superior should not be used as an intersection in the selected sites.\n             matsParamUtils.getControlElementForParamName(superior.element.name).offsetParent will be null if the controlButton\n             for this element (this superior) is hidden. That is the tricky part ... it will be null.\n\n             Also the unused superior is tested against the superior according to the truth table...\n             used && unused  -> use the used\n             unused and used -> use the used\n             used and used -> use the intersection\n             unused and unused - set the options to []\n\n             A select may have a list of disabledOptions. These are used as optionGroup markers.\n             */\n\n            // need to get the actual options here\n            for (var sNameIndex = 1; sNameIndex < superiorDimensionality; sNameIndex++) {\n                // index down through the options for the list of superiors\n                // starting with the most superior down through the least superior\n                // and get the options list for the first set of superiors.\n                // These are the ancestral options.\n                var nextSuperiorOptions = optionsMap;\n                var theseSuperiors = superiors === undefined || superiors.length === 0 ? [] : superiors[sNameIndex];\n                for (var theseSuperiorsIndex = 0; theseSuperiorsIndex < theseSuperiors.length; theseSuperiorsIndex++) {\n                    var superior = theseSuperiors[theseSuperiorsIndex];\n                    var selectedSuperiorValue = superior.value;\n                    nextSuperiorOptions = nextSuperiorOptions[selectedSuperiorValue];\n                }\n                // since we now have multiple options we have to intersect them\n                myOptions = _.intersection(myOptions, nextSuperiorOptions);\n            }\n            if (myOptions === []) {  // none used - set to []\n                matsParamUtils.setValueTextForParamName(name, matsTypes.InputTypes.unused);\n            }\n        } catch (e) {\n            e.message = \"INFO: Error in select.js refresh: determining options from superiors: \" + e.message;\n            setInfo(e.message);\n        }\n\n        try {\n            // reset the options of the select\n            // if the options are null it might be that this is the initial setup.\n            // so use the optionsmap and the default options for the map\n            // it might also mean that there are no superiors for this param\n            if (myOptions == null) {\n                // get the default options\n                if (optionsGroups) {\n                    // optionGroups are an ordered map. It probably has options that are in the disabledOption list\n                    // which are used as markers in the select options pulldown. This is typical for models\n                    const optionsGroupsKeys = Object.keys(optionsGroups);\n                    for (var k = 0; k < optionsGroupsKeys.length; k++) {\n                        if (myOptions === null) {\n                            myOptions = [];\n                            myOptions.push(optionsGroupsKeys[k]);\n                            myOptions = myOptions.concat(optionsGroups[optionsGroupsKeys[k]]); // the primary group does not get sorted\n                        } else {\n                            myOptions.push(optionsGroupsKeys[k]);\n                            myOptions = myOptions.concat(optionsGroups[optionsGroupsKeys[k]].sort()); // non primary  groups get sorted\n                        }\n                    }\n                } else {\n                    myOptions = param.options;\n                }\n            }\n            var optionsAsString = \"\";\n            if (myOptions === undefined || myOptions == null) {\n                return;\n            }\n            var firstGroup = true;\n            for (var i = 0; i < myOptions.length; i++) {\n                var dIndex = disabledOptions === undefined ? -1 : disabledOptions.indexOf(myOptions[i]);\n                if (dIndex >= 0) {   // the option was found in the disabled options so it needs to be an optgroup label\n                    // disabled option\n                    if (firstGroup === true) {\n                        // first in group\n                        optionsAsString += \"<optgroup label=\" + myOptions[i] + \">\";\n                        firstGroup = false;\n                    } else {\n                        optionsAsString += \"</optgroup>\";\n                        optionsAsString += \"<optgroup label=\" + myOptions[i] + \">\";\n                    }\n                } else {\n                    //regular option - the option was not found in the disabled options\n                    optionsAsString += \"<option value='\" + myOptions[i] + \"'>\" + myOptions[i] + \"</option>\";\n                }\n            }\n            if (disabledOptions !== undefined) {\n                optionsAsString += \"</optgroup>\";\n            }\n            $('select[name=\"' + name + '\"]').empty().append(optionsAsString);\n            //reset the selected index if it had been set prior (the list may have changed so the index may have changed)\n            var selectedOptionIndex;\n            if (selectedText === 'initial') {\n                selectedOptionIndex = myOptions.indexOf(param.default);\n            } else {\n                selectedOptionIndex = myOptions.indexOf(selectedText);\n            }\n            var sviText = \"\";\n            if (selectedOptionIndex == -1 && elem.selectedIndex >= 0) {\n                for (var svi = 0; svi < selectedSuperiorValues.length; svi++) {\n                    superior = superiors[svi];\n                    if (matsParamUtils.getControlElementForParamName(superior.element.name).offsetParent !== null) {\n                        if (svi > 0) {\n                            sviText += \" and \";\n                        }\n                        sviText += selectedSuperiorValues[svi]\n                    }\n                }\n                setInfo(\"I changed your selected \" + name + \": '\" + selectedText + \"' to '\" + myOptions[0] + \"' because '\" + selectedText + \"' is no longer an option for \" + sviText);\n            }\n            // if the selectedText existed in the new options list then the selectedOptionIndex won't be -1 and we have to choose the default option\n            if (selectedOptionIndex === -1) {\n                // if the param default is unused set it to unused\n                // else just choose the 0th element in the element options. default?\n                if (param.default === matsTypes.InputTypes.unused) {\n                    matsParamUtils.setValueTextForParamName(name, matsTypes.InputTypes.unused);\n                } else {\n                    elem.selectedIndex = 0;\n                    elem && elem.options && elem.selectedIndex >= 0 && elem.options[elem.selectedIndex].scrollIntoView();\n                    elem && elem.options && elem.selectedIndex >= 0 && matsParamUtils.setValueTextForParamName(name, elem.options[elem.selectedIndex].text);\n                }\n            } else {\n                elem.selectedIndex = selectedOptionIndex;\n                elem && elem.options && elem.selectedIndex >= 0 && elem.options[elem.selectedIndex].scrollIntoView();\n                elem && elem.options && elem.selectedIndex >= 0 && matsParamUtils.setValueTextForParamName(name, elem.options[elem.selectedIndex].text);\n            }\n            for (var i = 0; i < brothers.length; i++) {\n                const belem = brothers[i];\n                const belemSelectedOptions = $(belem.selectedOptions).map(function () {\n                    return (this.value)\n                }).get();\n                if (belemSelectedOptions === undefined || belemSelectedOptions.length === 0) {\n                    belem.options = [];\n                    for (var i1 = 0; i1 < myOptions.length; i1++) {\n                        belem.options[belem.options.length] = new Option(myOptions[i1], myOptions[i1], i1 == 0, i1 == 0);\n                    }\n                }\n            }\n        } catch (e) {\n            e.message = \"INFO: Error in select.js refresh: resetting selected options: \" + e.message;\n            setInfo(e.message);\n        }\n    }\n    refreshPeer(event, param);\n};  // refresh function\n\nexport default matsSelectUtils = {\n    refresh: refresh,\n    refreshPeer: refreshPeer,\n    refreshDependents: refreshDependents,\n    checkDisableOther: checkDisableOther,\n    checkHideOther: checkHideOther\n};\n\n            ","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/31/16.\n */\nimport './curve_util.js';\nimport './graph_util.js';\nimport './select_util.js';\nimport './init.js';\nimport '../both';\nimport './routes.js';\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport matsCollections from 'meteor/randyp:mats-common';\nif (Meteor.isClient) {\n    Meteor.subscribe(\"CurveParams\");\n    Meteor.subscribe(\"Scatter2dParams\");\n    Meteor.subscribe(\"SavedCurveParams\");\n    Meteor.subscribe(\"PlotParams\");\n    Meteor.subscribe(\"PlotGraphFunctions\");\n    Meteor.subscribe(\"RegionsPerModel\");\n    Meteor.subscribe(\"SitesPerModel\");\n    Meteor.subscribe(\"RegionDescriptions\");\n    Meteor.subscribe(\"Models\");\n    Meteor.subscribe(\"FcstLensPerModel\");\n    Meteor.subscribe(\"ColorScheme\");\n    Meteor.subscribe(\"Settings\");\n    Meteor.subscribe(\"CurveSettings\");\n    Meteor.subscribe(\"SentAddresses\");\n    Meteor.subscribe(\"Roles\");\n    Meteor.subscribe(\"Authorization\");\n    Meteor.subscribe(\"Credentials\");\n    Meteor.subscribe(\"Databases\");\n    Meteor.subscribe(\"CurveTextPatterns\");\n    Meteor.subscribe(\"ScatterAxisTextPattern\");\n    Meteor.subscribe(\"RangePerDescriptor\");\n    Meteor.subscribe(\"SiteMap\");\n    Meteor.subscribe(\"StationMap\");\n    Meteor.subscribe(\"appName\");\n    Meteor.subscribe(\"LayoutStoreCollection\");\n    Session.set('Curves', []);\n    Session.set('PlotParams', []);\n\n    Accounts.ui.config({\n        requestOfflineToken: {\n            google: true\n        }\n    });\n\n    const ref = location.href;\n    const pathArray = location.href.split('/');\n    const protocol = pathArray[0];\n    const hostport = pathArray[2];\n    const hostName = hostport.split(':')[0];\n    const app = pathArray[3] == \"\" ? \"/\" : pathArray[3];\n    const matsRef = protocol + \"//\" + hostport;\n    const helpRef = ref.endsWith('/') ? ref + \"help\" : ref + \"/help\";\n    Session.set(\"app\", {appName: app, matsref: matsRef, appref: ref, helpref: helpRef, hostName: hostName});\n    var collections = Object.keys(matsCollections).map(key => matsCollections[key]);\n    Session.set(\"Mongol\", {\n        'collections': collections,\n        'display': false,\n        'opacity_normal': \".7\",\n        'opacity_expand': \".9\",\n        'disable_warning': true\n    });\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport { FlowRouter } from 'meteor/ostrio:flow-router-extra';\n\n//localhost routes\n\nFlowRouter.route('/', {\n    name: 'main',\n    action() {\n        this.render('Home')\n    }\n});\n\nFlowRouter.route('/CSV/:graphFunction/:key/:matching/:appName', {\n    name: 'csv',\n    action(params) {\n        console.log(\"in csv route\");\n        window.location.href=FlowRouter.path;\n    }\n});\n\nFlowRouter.route('/JSON/:graphFunction/:key/:matching/:appName', {\n    name: 'json',\n    action(params) {\n        console.log(\"in json route\");\n        window.location.href=FlowRouter.path;\n    }\n});\n\n\nFlowRouter.route('/preview/:graphFunction/:key/:matching/:appName', {\n    name: 'preview',\n    action(params) {\n        console.log(\"in preview route- setting params\", params);\n        this.render('GraphStandAlone', params);\n    }\n});\n\n//prefix routes\nFlowRouter.route(Meteor.settings.public.proxy_prefix_path + '/', {\n    name: 'main',\n    action() {\n        this.render('Home')\n    }\n});\n\nFlowRouter.route(Meteor.settings.public.proxy_prefix_path + '/CSV/:graphFunction/:key/:matching/:appName', {\n    name: 'csv',\n    action(params) {\n        console.log(\"in csv route\");\n        window.location.href=FlowRouter.path;\n    }\n});\n\nFlowRouter.route(Meteor.settings.public.proxy_prefix_path + '/JSON/:graphFunction/:key/:matching/:appName', {\n    name: 'json',\n    action(params) {\n        console.log(\"in json route\");\n        window.location.href=FlowRouter.path;\n    }\n});\n\n\nFlowRouter.route(Meteor.settings.public.proxy_prefix_path + '/preview/:graphFunction/:key/:matching/:appName', {\n    name: 'preview',\n    action(params) {\n        console.log(\"in preview route- setting params\", params);\n        this.render('GraphStandAlone', params);\n    }\n});\n\n\n// appname routes\nFlowRouter.route(Meteor.settings.public.proxy_prefix_path + '/:appName', {\n    name: 'main',\n    action() {\n        this.render('Home')\n    }\n});\n\nFlowRouter.route(Meteor.settings.public.proxy_prefix_path + '/*/CSV/:graphFunction/:key/:matching/:appName', {\n    name: 'csv',\n    action(params) {\n        console.log(\"in csv route\");\n        window.location.href=FlowRouter.path;\n    }\n});\n\nFlowRouter.route(Meteor.settings.public.proxy_prefix_path + '/*/JSON/:graphFunction/:key/:matching/:appName', {\n    name: 'json',\n    action(params) {\n        console.log(\"in json route\");\n        window.location.href=FlowRouter.path;\n    }\n});\n\nFlowRouter.route(Meteor.settings.public.proxy_prefix_path + '/*/preview/:graphFunction/:key/:matching/:appName', {\n    name: 'preview',\n    action(params) {\n        console.log(\"in preview route- setting params\", params);\n        this.render('GraphStandAlone', params);\n    }\n});\n\n// exception routes\nFlowRouter.route(Meteor.settings.public.proxy_prefix_path + '/*/', {\n    name: 'main',\n    action() {\n        this.render('notFound')\n    }\n});\n\nFlowRouter.route('*', {\n    action() {\n        console.log ('route: ' + ' not found' );\n        this.render('notFound');\n    }\n});\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsPlotUtils} from 'meteor/randyp:mats-common';\n\n//this function checks if two JSON objects are identical\nconst areObjectsEqual = function (o, p) {\n    if ((o && !p) || (p && !o)) {\n        return false;\n    }\n    if (JSON.stringify(o) === JSON.stringify(p)) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\n//this function checks if values of subArray are also in superArray\nconst arrayContainsArray = function (superArray, subArray) {\n    superArray.sort(function (a, b) {\n        return Number(a) - Number(b);\n    });\n    subArray.sort(function (a, b) {\n        return Number(a) - Number(b);\n    });\n    var i, j;\n    for (i = 0, j = 0; i < superArray.length && j < subArray.length;) {\n        if (superArray[i] < subArray[j]) {\n            ++i;\n        } else if (superArray[i] === subArray[j]) {\n            ++i;\n            ++j;\n        } else {\n            // subArray[j] not in superArray, so superArray does not contain all elements of subArray\n            return false;\n        }\n    }\n    // make sure there are no elements left in sub\n    return j === subArray.length;\n};\n\n//this function checks if the entire array subArray is contained in superArray\nconst arrayContainsSubArray = function (superArray, subArray) {\n    var i, j, current;\n    for (i = 0; i < superArray.length; ++i) {\n        if (subArray.length === superArray[i].length) {\n            current = superArray[i];\n            for (j = 0; j < subArray.length && subArray[j] === current[j]; ++j) ;\n            if (j === subArray.length)\n                return true;\n        }\n    }\n    return false;\n};\n\n//this function checks if two arrays are identical\nconst arraysEqual = function (a, b) {\n    if (a === b) return true;\n    if (a == null || b == null) return false;\n    if (a.length !== b.length) return false;\n    for (var i = 0; i < a.length; ++i) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n};\n\nconst arrayUnique = function(a) {\n    var arr = [];\n    for(var i = 0; i < a.length; i++) {\n        if(!arr.includes(a[i])) {\n            arr.push(a[i]);\n        }\n    }\n    return arr;\n};\n\n//this function finds the position of the array subArray in superArray\nconst findArrayInSubArray = function (superArray, subArray) {\n    var i, j, current;\n    for (i = 0; i < superArray.length; ++i) {\n        if (subArray.length === superArray[i].length) {\n            current = superArray[i];\n            for (j = 0; j < subArray.length && subArray[j] === current[j]; ++j) ;\n            if (j === subArray.length)\n                return i;\n        }\n    }\n    return -1;\n};\n\n//this function checks if an object is a value in another object\nconst objectContainsObject = function (superObject, subObject) {\n    const superObjectKeys = Object.keys(superObject);\n    var currentObject;\n    for (var i = 0; i < superObjectKeys.length; i++) {\n        currentObject = superObject[superObjectKeys[i]];\n        if (areObjectsEqual(subObject,currentObject)) {\n            return true;\n        }\n    }\n    // if the loop completes, the subObject was not found\n    return false;\n};\n\n//utility for calculating the average of an array\nconst average = function (data) {\n    var sum = data.reduce(function (sum, value) {\n        return value == null ? sum : sum + value;\n    }, 0);\n    var avg = sum / data.length;\n    return avg;\n};\n\n//utility for calculating the stdev of an array\nconst stdev = function (data) {\n    var avg = average(data);\n    var squareDiffs = data.map(function(value){\n        var diff = value - avg;\n        return diff * diff;\n    });\n    var avgSquareDiff = average(squareDiffs);\n    var stdDev = Math.sqrt(avgSquareDiff);\n    return stdDev;\n};\n\n//this function makes sure date strings are in the correct format\nconst dateConvert = function (dStr) {\n    if (dStr === undefined || dStr === \" \") {\n        var now = new Date();\n        var date = new Date(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate(), now.getUTCHours(), now.getUTCMinutes(), now.getUTCSeconds());\n        var yr = date.getUTCFullYear();\n        var day = date.getUTCDate();\n        var month = date.getUTCMonth();\n        var hour = date.getUTCHours();\n        var minute = date.getUTCMinutes();\n        return month + \"/\" + day + '/' + yr + ' ' + hour + \":\" + minute;\n    }\n    var dateParts = dStr.split(' ');\n    var dateArray = dateParts[0].split(/[\\-\\/]/);  // split on - or /    01-01-2017 OR 01/01/2017\n    var month = dateArray[0];\n    var day = dateArray[1];\n    var yr = dateArray[2];\n    var hour = 0;\n    var minute = 0;\n    if (dateParts[1]) {\n        var timeArray = dateParts[1].split(\":\");\n        hour = timeArray[0];\n        minute = timeArray[1];\n    }\n    return month + \"/\" + day + '/' + yr + ' ' + hour + \":\" + minute;\n};\n\n//splits the date range string from the date selector into standardized fromDate/toDate strings,\n// plus the epochs for the fromDate and toDate\nconst getDateRange = function (dateRange) {\n    var dates = dateRange.split(' - ');\n    var fromDateStr = dates[0];\n    var fromDate = dateConvert(fromDateStr);\n    var toDateStr = dates[1];\n    var toDate = dateConvert(toDateStr);\n    var fromSecs = secsConvert(fromDateStr);\n    var toSecs = secsConvert(toDateStr);\n    return {\n        fromDate: fromDate,\n        toDate: toDate,\n        fromSeconds: fromSecs,\n        toSeconds: toSecs\n    }\n};\n\n//this function converts a date string into an epoch\nconst secsConvert = function (dStr) {\n    if (dStr === undefined || dStr === \" \") {\n        var now = new Date();\n        return now.getTime() / 1000;\n    }\n    else {\n        var dateParts = dStr.split(' ');\n        var dateArray = dateParts[0].split(/[\\-\\/]/);  // split on - or /    01-01-2017 OR 01/01/2017\n        var month = dateArray[0];\n        var day = dateArray[1];\n        var yr = dateArray[2];\n        var hour = 0;\n        var minute = 0;\n        if (dateParts[1]) {\n            var timeArray = dateParts[1].split(\":\");\n            hour = timeArray[0];\n            minute = timeArray[1];\n        }\n        var my_date = new Date(Date.UTC(yr, month - 1, day, hour, minute, 0));\n        // to UTC time, not local time\n        var date_in_secs = my_date.getTime();\n    }\n    // to UTC time, not local time\n    //return date_in_secs/1000 -3600*6;\n    return date_in_secs / 1000;\n};\n\n//function to manage authorized logins for MATS\nconst doAuthorization = function () {\n    if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n        matsCollections.Authorization.remove({});\n    }\n    if (matsCollections.Authorization.find().count() == 0) {\n        matsCollections.Authorization.insert({email: \"randy.pierce@noaa.gov\", roles: [\"administrator\"]});\n        matsCollections.Authorization.insert({email: \"kirk.l.holub@noaa.gov\", roles: [\"administrator\"]});\n        matsCollections.Authorization.insert({email: \"jeffrey.a.hamilton@noaa.gov\", roles: [\"administrator\"]});\n        matsCollections.Authorization.insert({email: \"bonny.strong@noaa.gov\", roles: [\"administrator\"]});\n        matsCollections.Authorization.insert({email: \"molly.b.smith@noaa.gov\", roles: [\"administrator\"]});\n        matsCollections.Authorization.insert({email: \"mats.gsd@noaa.gov\", roles: [\"administrator\"]});\n    }\n};\n\n//master list of colors for MATS curves\nconst doColorScheme = function () {\n    if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n        matsCollections.ColorScheme.remove({});\n    }\n    if (matsCollections.ColorScheme.find().count() == 0) {\n        matsCollections.ColorScheme.insert({\n            colors: [\n                \"rgb(255,0,0)\",\n                \"rgb(0,0,255)\",\n                \"rgb(255,165,0)\",\n                \"rgb(128,128,128)\",\n                \"rgb(238,130,238)\",\n\n                \"rgb(238,130,238)\",\n                \"rgb(0,0,139)\",\n                \"rgb(148,0,211)\",\n                \"rgb(105,105,105)\",\n                \"rgb(255,140,0)\",\n\n                \"rgb(235,92,92)\",\n                \"rgb(82,92,245)\",\n                \"rgb(133,143,143)\",\n                \"rgb(235,143,92)\",\n                \"rgb(190,120,120)\",\n\n                \"rgb(225,82,92)\",\n                \"rgb(72,82,245)\",\n                \"rgb(123,133,143)\",\n                \"rgb(225,133,92)\",\n                \"rgb(180,120,120)\"\n            ]\n        });\n    }\n};\n\n//utility for google login capabilities in MATS -- broken for esrl.noaa.gov/gsd/mats?\nconst doCredentials = function () {\n// the gmail account for the credentials is mats.mail.daemon@gmail.com - pwd mats2015!\n    if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n        matsCollections.Credentials.remove({});\n    }\n    if (matsCollections.Credentials.find().count() == 0) {\n        matsCollections.Credentials.insert({\n            name: \"oauth_google\",\n            clientId: \"499180266722-aai2tddo8s9edv4km1pst88vebpf9hec.apps.googleusercontent.com\",\n            clientSecret: \"xdU0sc7SbdOOEzSyID_PTIRE\",\n            refresh_token: \"1/3bhWyvCMMfwwDdd4F3ftlJs3-vksgg7G8POtiOBwYnhIgOrJDtdun6zK6XiATCKT\"\n        });\n    }\n};\n\n//another utility to assist at logging into MATS\nconst doRoles = function () {\n    if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n        matsCollections.Roles.remove({});\n    }\n    if (matsCollections.Roles.find().count() == 0) {\n        matsCollections.Roles.insert({name: \"administrator\", description: \"administrator privileges\"});\n    }\n};\n\n//for use in matsMethods.resetApp() to establish default settings\nconst doSettings = function (title, version, buildDate, appType) {\n    if (matsCollections.Settings.findOne({}) === undefined || matsCollections.Settings.findOne({}).resetFromCode === undefined || matsCollections.Settings.findOne({}).resetFromCode == true) {\n        matsCollections.Settings.remove({});\n    }\n    if (matsCollections.Settings.find().count() == 0) {\n        matsCollections.Settings.insert({\n            LabelPrefix: \"Curve\",\n            Title: title,\n            appVersion: version,\n            buildDate: buildDate,\n            appType: appType,\n            LineWidth: 3.5,\n            NullFillString: \"---\",\n            resetFromCode: false\n        });\n    }\n    // always update the version, roles, and the hostname, not just if it doesn't exist...\n    var settings = matsCollections.Settings.findOne({});\n    const deploymentRoles = {\n        \"mats-dev\": \"development\",\n        \"mats-int\": \"integration\",\n        \"mats\": \"production\"\n    };\n    var settingsId = settings._id;\n    var os = Npm.require('os');\n    var hostname = os.hostname().split('.')[0];\n    settings['appVersion'] = version;\n    settings['hostname'] = hostname;\n    settings['deploymentRoles'] = JSON.stringify(deploymentRoles);\n    matsCollections.Settings.update(settingsId, {$set: settings});\n};\n\n//Utility for transferring client-side parameters to the server-side methods via the \"PlotParams\" object in the stack.\n//Add values to this object in the 'click .submit-params' event handler in plot_list.js\nconst getPlotParamsFromStack = function () {\n    var params = {};\n    const err = new Error;\n    Error.captureStackTrace(err, arguments.callee.arguments.callee);\n    const stack = err.stack;\n    const stackElems = stack.split(\"\\n\");\n    for (si = 0; si < stackElems.length; si++) {\n        const sElem = stackElems[si].trim();\n        if (sElem.indexOf('dataFunctions') !== -1 && sElem.startsWith(\"at data\")) {\n            const dataFunctionName = sElem.split('at ')[1];\n            try {\n                params = global[sElem.split('at ')[1].split(' ')[0]].arguments[0]\n            } catch (noJoy) {\n            }\n            break;\n        }\n    }\n    return params;\n};\n\n//calculates mean, stdev, and other statistics for curve data points in all apps and plot types\nconst get_err = function (sVals, sSecs, sLevs) {\n    /* refer to perl error_library.pl sub  get_stats\n     to see the perl implementation of these statics calculations.\n     These should match exactly those, except that they are processed in reverse order.\n     */\n    const autocorr_limit = 0.95;\n    const hasLevels = sLevs.length > 0;\n    const plotParams = getPlotParamsFromStack();\n    var outlierQCParam;\n    if (plotParams[\"outliers\"] !== \"all\") {\n        outlierQCParam = Number(plotParams[\"outliers\"]);\n    } else {\n        outlierQCParam = 100;\n    }\n\n    var subVals = [];\n    var subSecs = [];\n    var subLevs = [];\n    var n = sVals.length;\n    var n_good = 0;\n    var sum_d = 0;\n    var sum2_d = 0;\n    var error = \"\";\n    var i;\n    for (i = 0; i < n; i++) {\n        if (sVals[i] !== null && !isNaN(sVals[i])) {\n            n_good = n_good + 1;\n            sum_d = sum_d + sVals[i];\n            sum2_d = sum2_d + sVals[i] * sVals[i];\n            subVals.push(sVals[i]);\n            subSecs.push(sSecs[i]);\n            if (hasLevels) {\n                subLevs.push(sLevs[i]);\n            }\n        }\n    }\n    var d_mean = sum_d / n_good;\n    var sd2 = sum2_d / n_good - d_mean * d_mean;\n    var sd = sd2 > 0 ? Math.sqrt(sd2) : sd2;\n    var sd_limit = outlierQCParam * sd;\n    //console.log(\"see error_library.pl l208 These are processed in reverse order to the perl code -  \\nmean is \" + d_mean + \" sd_limit is +/- \" + sd_limit + \" n_good is \" + n_good + \" sum_d is\" + sum_d + \" sum2_d is \" + sum2_d);\n\n    // find minimum delta_time, if any value missing, set null\n    var last_secs = 0;\n    var minDelta = Number.MAX_VALUE;\n    var minSecs = Number.MAX_VALUE;\n    var max_secs = Number.MIN_VALUE;\n    var minVal = Number.MAX_VALUE;\n    var maxVal = -1 * Number.MAX_VALUE;\n    var secs;\n    var delta;\n    for (i = 0; i < subSecs.length; i++) {\n        secs = (subSecs[i]);\n        delta = Math.abs(secs - last_secs);\n        if (delta > 0 && delta < minDelta) {\n            minDelta = delta;\n        }\n        if (secs < minSecs) {\n            minSecs = secs;\n        }\n        if (secs > max_secs) {\n            max_secs = secs;\n        }\n        last_secs = secs;\n    }\n\n    var data_wg = [];\n    var n_gaps = 0;\n    n_good = 0;\n    var sum = 0;\n    var sum2 = 0;\n    if (minDelta < 0) {\n        error = (\"Invalid time interval - minDelta: \" + minDelta);\n        console.log(\"matsDataUtil.getErr: Invalid time interval - minDelta: \" + minDelta)\n    }\n    // remove data more than $sd_limit from mean\n    var qaCorrected = [];\n    for (i = 0; i < subVals.length; i++) {\n        if (Math.abs(subVals[i] - d_mean) > sd_limit) {\n            qaCorrected.push(\"removing datum \" + i + \" with value \" + subVals[i] + \" because it exceeds \" + outlierQCParam + \" standard deviations from the mean - mean: \" + d_mean + \" \" + outlierQCParam + \" * sd: \" + sd_limit + \" delta: \" + (subVals[i] - d_mean));\n            // console.log(qaCorrected.join('\\n'));\n            subVals[i] = null;\n        } else {\n            minVal = minVal < subVals[i] ? minVal : subVals[i];\n            maxVal = maxVal > subVals[i] ? maxVal : subVals[i];\n            sum += subVals[i];\n            sum2 += subVals[i] * subVals[i];\n            n_good++;\n        }\n    }\n    if (n_good < 1) {\n        return {d_mean: null, stde_betsy: null, sd: null, n_good: n_good, lag1: null, min: null, max: null, sum: null};\n    }\n\n    // recalculate if we threw anything away.\n    d_mean = sum / n_good;\n    sd2 = sum2 / n_good - d_mean * d_mean;\n    sd = 0;\n    if (sd2 > 0) {\n        sd = Math.sqrt(sd2);\n    }\n    //console.log(\"new mean after throwing away outliers is \" + sd + \" n_good is \" + n_good + \" sum is \" + sum  + \" sum2 is \" + sum2 + \" d_mean is \" + d_mean);\n\n    // look for gaps\n    var lastSecond = -1 * Number.MAX_VALUE;\n    var lastPressure = -1 * Number.MAX_VALUE;\n    var n_pressures;\n    if (hasLevels) {\n        n_pressures = arrayUnique(subLevs).length;\n    } else {\n        n_pressures = 1;\n    }\n    // set lag1_t to the first time the time changes from its initial value + 1 (data zero based)\n    // set lag1_p to the first time the pressure changes from its initial value + 1 (data zero based)\n    var lag1_t = 0;\n    var lag1_p = 0;\n    var r1_t = 0;\t\t\t// autocorrelation for time\n    var r1_p = 0;\t\t\t// autocorrelation for pressure\n    var j = 0;              // i is loop index without gaps; j is loop index with gaps\n    var n_deltas = 0;\n\n    for (i = 0; i < subSecs.length; i++) {\n        var sec = subSecs[i];\n        var lev;\n        if (hasLevels) {\n            lev = subLevs[i];\n            // find first time the pressure changes\n            if (lag1_p === 0 && lastPressure > 0) {\n                if (lev !== lastPressure) {\n                    lag1_p = j;\n                }\n            }\n        }\n        if (lastSecond >= 0) {\n            if(lag1_t === 0 && sec !== lastSecond) {\n                lag1_t = j;\n            }\n            if (Math.abs(sec - lastSecond) > minDelta) {\n                n_deltas = (Math.abs(sec - lastSecond)/minDelta - 1) * n_pressures;\n                // for the Autocorrelation at lag 1, it doesn't matter how many missing\n                // data we put in within gaps! (But for the other AC's it does.)\n                // since we're using only the AC at lag 1 for calculating std err, let's\n                // save cpu time and only put in one missing datum per gap, no matter\n                // how long. WRM 2/22/2019\n                // but if we're using a different lag, which could happen, we'll need\n                // to insert all the missing data in each gap. WRM 2/22/2019\n                // $n_deltas=1;\n                for(var count = 0; count < n_deltas; count++) {\n                    data_wg.push(null);\n                    n_gaps++;\n                    j++;\n                }\n            }\n        }\n        lastSecond = sec;\n        if (hasLevels) {\n            lastPressure = lev;\n        }\n        data_wg.push(subVals[i]);\n        j++;\n    }\n\n    //from http://www.itl.nist.gov/div898/handbook/eda/section3/eda35c.htm\n    var r = [];\n    var lag_by_r = {};\n    var lag1_max = lag1_p > lag1_t ? lag1_p : lag1_t;\n    var r_sum = 0;\n    var n_r = 0;\n    var n_in_lag;\n    var lag;\n    var t;\n    for (lag = 0; lag <= lag1_max; lag++) {\n        r[lag] = 0;\n        n_in_lag = 0;\n        for (t = 0; t < ((n + n_gaps) - lag); t++) {\n            if (data_wg[t] != null && data_wg[t + lag] != null) {\n                r[lag] += +(data_wg[t] - d_mean) * (data_wg[t + lag] - d_mean);\n                n_in_lag++;\n            }\n        }\n        if (n_in_lag > 0 && sd > 0) {\n            r[lag] /= (n_in_lag * sd * sd);\n            r_sum += r[lag];\n            n_r++;\n        } else {\n            r[lag] = null;\n        }\n        if(lag >= 1 && lag < (n + n_gaps) / 2) {\n            lag_by_r[r[lag]] = lag;\n        }\n    }\n    if (lag1_t > 0) {\n        r1_t = r[lag1_t] !== undefined ? r[lag1_t] : 0;\n    }\n    if (lag1_p > 0) {\n        r1_p = r[lag1_p] !== undefined ? r[lag1_p] : 0;\n    }\n\n    // Betsy Weatherhead's correction, based on lag 1, augmented by the highest\n    // lag > 1 and < n/2\n    if (r1_p >= autocorr_limit) {\n        r1_p = autocorr_limit;\n    }\n    if(r1_t >= autocorr_limit) {\n        r1_t = autocorr_limit;\n    }\n\n    const betsy = Math.sqrt((n_good-1)*(1. - r1_p)*(1. - r1_t));\n    var stde_betsy;\n    if (betsy !== 0) {\n        stde_betsy = sd / betsy;\n    } else {\n        stde_betsy = null;\n    }\n    const stats = {\n        d_mean: d_mean,\n        stde_betsy: stde_betsy,\n        sd: sd,\n        n_good: n_good,\n        lag1: r[1],\n        min: minSecs,\n        max: max_secs,\n        minVal: minVal,\n        maxVal: maxVal,\n        sum: sum_d,\n        qaCorrected: qaCorrected\n    };\n    //console.log(\"stats are \" + JSON.stringify(stats));\n    // stde_betsy is standard error with auto correlation\n    //console.log(\"---------\\n\\n\");\n    return stats;\n};\n\n// utility to process the user-input histogram customization controls\nconst setHistogramParameters = function (plotParams) {\n    var yAxisFormat = plotParams['histogram-yaxis-controls'];\n    var binType = plotParams['histogram-bin-controls'];\n    var binNum = 12;    // default bin number\n    var binStart = undefined;    // default is no mandated bin start\n    var binStride = undefined;         // default is no mandated stride\n    var pivotVal = undefined;      // default is not to shift the bins over to a pivot\n    var binBounds = []; // default is no specified bin bounds -- our algorithm will figure them out if this array stays empty\n\n    switch (binType) {\n        case \"Set number of bins\":\n            // get the user's chosen number of bins\n            binNum = Number(plotParams['bin-number']);\n            if (isNaN(binNum)) {\n                throw new Error(\"Error parsing bin number: please enter the desired number of bins.\");\n            }\n            break;\n\n        case \"Make zero a bin bound\":\n            // let the histogram routine know that we want the bins shifted over to zero\n            pivotVal = 0;\n            break;\n\n        case \"Choose a bin bound\":\n            // let the histogram routine know that we want the bins shifted over to whatever was input\n            pivotVal = Number(plotParams['bin-pivot']);\n            if (isNaN(pivotVal)) {\n                throw new Error(\"Error parsing bin pivot: please enter the desired bin pivot.\");\n            }\n            break;\n\n        case \"Set number of bins and make zero a bin bound\":\n            // get the user's chosen number of bins and let the histogram routine know that we want the bins shifted over to zero\n            binNum = Number(plotParams['bin-number']);\n            if (isNaN(binNum)) {\n                throw new Error(\"Error parsing bin number: please enter the desired number of bins.\");\n            }\n            pivotVal = 0;\n            break;\n\n        case \"Set number of bins and choose a bin bound\":\n            // get the user's chosen number of bins and let the histogram routine know that we want the bins shifted over to whatever was input\n            binNum = Number(plotParams['bin-number']);\n            if (isNaN(binNum)) {\n                throw new Error(\"Error parsing bin number: please enter the desired number of bins.\");\n            }\n            pivotVal = Number(plotParams['bin-pivot']);\n            if (isNaN(pivotVal)) {\n                throw new Error(\"Error parsing bin pivot: please enter the desired bin pivot.\");\n            }\n            break;\n\n        case \"Manual bins\":\n            // try to parse whatever we've been given for bin bounds. Throw an error if they didn't follow directions to enter a comma-separated list of numbers.\n            try {\n                binBounds = plotParams['bin-bounds'].split(\",\").map(function (item) {\n                    item.trim();\n                    item = Number(item);\n                    if (!isNaN(item)) {\n                        return item\n                    } else {\n                        throw new Error(\"Error parsing bin bounds: please enter  at least two numbers delimited by commas.\");\n                    }\n                });\n                binNum = binBounds.length + 1; // add 1 because these are inner bin bounds\n            } catch (e) {\n                throw new Error(\"Error parsing bin bounds: please enter  at least two numbers delimited by commas.\");\n            }\n            // make sure that we've been given at least two good bin bounds (enough to make one bin).\n            if (binNum < 3) {\n                throw new Error(\"Error parsing bin bounds: please enter at least two numbers delimited by commas.\");\n            }\n            break;\n\n        case \"Manual bin start, number, and stride\":\n            // get the bin start, number, and stride.\n            binNum = Number(plotParams['bin-number']);\n            if (isNaN(binNum)) {\n                throw new Error(\"Error parsing bin number: please enter the desired number of bins.\");\n            }\n            binStart = Number(plotParams['bin-start']);\n            if (isNaN(binStart)) {\n                throw new Error(\"Error parsing bin start: please enter the desired bin start.\");\n            }\n            binStride = Number(plotParams['bin-stride']);\n            if (isNaN(binStride)) {\n                throw new Error(\"Error parsing bin stride: please enter the desired bin stride.\");\n            }\n            break;\n\n        case \"Default bins\":\n        default:\n            break;\n    }\n    return {\n        yAxisFormat: yAxisFormat,\n        binNum: binNum,\n        binStart: binStart,\n        binStride: binStride,\n        pivotVal: pivotVal,\n        binBounds: binBounds\n    };\n};\n\n// utility that takes arrays of seconds and values and produces a data structure containing bin information for histogram plotting\nconst calculateHistogramBins = function (curveSubStats, curveSubSecs, binParams) {\n\n    // binStart and binStride will only be defined if the user wants to specify the bin spacing.\n    // otherwise, we'll use the mean and standard deviation of the data to space the bins.\n\n    // pivotVal will only be defined if the user wants to shift the bin limits to align with a certain value.\n    // otherwise, we'll keep everything aligned with the data mean.\n\n    var binStats = {};\n    var binUpBounds = [];\n    var binLowBounds = [];\n    var binMeans = [];\n\n    // calculate the global stats across all of the data\n    const globalStats = get_err(curveSubStats, curveSubSecs, []);   // we don't need levels for the mean or sd calculations, so just pass in an empty array\n    const glob_mean = globalStats.d_mean;\n    const glob_sd = globalStats.sd;\n\n    var fullLowBound;\n    var fullUpBound;\n    var fullRange;\n    var binInterval;\n\n    if (binParams.binStart === undefined || binParams.binStride === undefined) {\n        // use the global stats to determine the bin bounds -- should be based on dividing up +/- 3*sd from the mean into requested number of bins\n        fullLowBound = glob_mean - 3 * glob_sd;\n        fullUpBound = glob_mean + 3 * glob_sd;\n        fullRange = 6 * glob_sd;\n        binInterval = fullRange / (binParams.binNum - 2);   // take off two bins from the total number of requested bins to represent values either less than - 3*sd from the mean or greater than 3*sd from the mean\n    } else {\n        // use the user-defined start, number, and stride to determine the bin bounds\n        fullLowBound = binParams.binStart;\n        fullUpBound = binParams.binStart + (binParams.binNum - 2) * binParams.binStride;  // take off two bins from the total number of requested bins to represent values that fall outside of the prescribed range\n        fullRange = (binParams.binNum - 2) * binParams.binStride;\n        binInterval = binParams.binStride;\n    }\n\n    // store an array of the upper and lower bounding values for each bin.\n    binUpBounds[0] = fullLowBound; // the first upper bound should be exactly - 3*sd from the mean, or the previously calculated fullLowBound\n    binLowBounds[0] = -1 * Number.MAX_VALUE;\n    binMeans[0] = fullLowBound - binInterval / 2;\n    for (var b_idx = 1; b_idx < binParams.binNum - 1; b_idx++) {\n        binUpBounds[b_idx] = binUpBounds[b_idx - 1] + binInterval; // increment from fullLowBound to get the rest of the bin upper limits\n        binLowBounds[b_idx] = binUpBounds[b_idx - 1];\n        binMeans[b_idx] = binUpBounds[b_idx - 1] + binInterval / 2;\n    }\n    binUpBounds[binParams.binNum - 1] = Number.MAX_VALUE; // the last bin should have everything too large to fit into the previous bins, so make its upper bound the max number value\n    binLowBounds[binParams.binNum - 1] = fullUpBound;\n    binMeans[binParams.binNum - 1] = fullUpBound + binInterval / 2;\n\n    if (binParams.pivotVal !== undefined && !isNaN(binParams.pivotVal)) {\n        // need to shift the bounds and means over so that one of the bounds is on the chosen pivot\n        var closestBoundToPivot = binLowBounds.reduce(function (prev, curr) {\n            return (Math.abs(curr - binParams.pivotVal) < Math.abs(prev - binParams.pivotVal) ? curr : prev);\n        });\n        binUpBounds = binUpBounds.map(function (val) {\n            return val - (closestBoundToPivot - binParams.pivotVal);\n        });\n        binLowBounds = binLowBounds.map(function (val) {\n            return val - (closestBoundToPivot - binParams.pivotVal);\n        });\n        binMeans = binMeans.map(function (val) {\n            return val - (closestBoundToPivot - binParams.pivotVal);\n        });\n    }\n\n    // calculate the labels for each bin, based on the data bounding range, for the graph x-axis later\n    var binLabels = [];\n    var lowSdFromMean;\n    var upSdFromMean;\n    for (b_idx = 0; b_idx < binParams.binNum; b_idx++) {\n        lowSdFromMean = (binLowBounds[b_idx]).toFixed(2);\n        upSdFromMean = (binUpBounds[b_idx]).toFixed(2);\n        if (b_idx === 0) {\n            binLabels[b_idx] = \"< \" + upSdFromMean;\n        } else if (b_idx === binParams.binNum - 1) {\n            binLabels[b_idx] = \"> \" + lowSdFromMean;\n        } else {\n            binLabels[b_idx] = lowSdFromMean + \"-\" + upSdFromMean;\n        }\n    }\n\n    binStats['glob_mean'] = glob_mean;\n    binStats['glob_sd'] = glob_sd;\n    binStats['binUpBounds'] = binUpBounds;\n    binStats['binLowBounds'] = binLowBounds;\n    binStats['binMeans'] = binMeans;\n    binStats['binLabels'] = binLabels;\n\n    return {'binStats': binStats};\n};\n\n// utility that takes an array of user-defined bin bounds and produces a data structure containing bin information for histogram plotting\nconst prescribeHistogramBins = function (curveSubStats, curveSubSecs, binParams) {\n\n    var binStats = {};\n\n    // calculate the global stats across all of the data\n    const globalStats = get_err(curveSubStats, curveSubSecs, []);   // we don't need levels for the mean or sd calculations, so just pass in an empty array\n    const glob_mean = globalStats.d_mean;\n    const glob_sd = globalStats.sd;\n\n    // make sure the user-defined bins are in order from least to greatest\n    binParams.binBounds = binParams.binBounds.sort(function (a, b) {\n        return Number(a) - Number(b);\n    });\n\n    // store an array of the upper and lower bounding values for each bin.\n    var binUpBounds = [];\n    var binLowBounds = [];\n    var binMeans = [];\n    var binIntervalSum = 0;\n    for (var b_idx = 1; b_idx < binParams.binNum - 1; b_idx++) {\n        binUpBounds[b_idx] = binParams.binBounds[b_idx];\n        binLowBounds[b_idx] = binParams.binBounds[b_idx - 1];\n        binMeans[b_idx] = (binUpBounds[b_idx] + binLowBounds[b_idx]) / 2;\n        binIntervalSum = binIntervalSum + (binUpBounds[b_idx] - binLowBounds[b_idx]);\n    }\n    const binIntervalAverage = binIntervalSum / (binParams.binNum - 2);\n    binUpBounds[0] = binLowBounds[1];\n    binLowBounds[0] = -1 * Number.MAX_VALUE; // the first bin should have everything too small to fit into the other bins, so make its lower bound -1 * the max number value\n    binMeans[0] = binLowBounds[1] - binIntervalAverage / 2; // the bin means for the edge bins is a little arbitrary, so base it on the average bin width\n    binUpBounds[binParams.binNum - 1] = Number.MAX_VALUE; // the last bin should have everything too large to fit into the previous bins, so make its upper bound the max number value\n    binLowBounds[binParams.binNum - 1] = binUpBounds[binParams.binNum - 2];\n    binMeans[binParams.binNum - 1] = binUpBounds[binParams.binNum - 2] + binIntervalAverage / 2; // the bin means for the edge bins is a little arbitrary, so base it on the average bin width\n\n    // calculate the labels for each bin, based on the data bounding range, for the graph x-axis later\n    var binLabels = [];\n    var lowSdFromMean;\n    var upSdFromMean;\n    for (b_idx = 0; b_idx < binParams.binNum; b_idx++) {\n        lowSdFromMean = (binLowBounds[b_idx]).toFixed(2);\n        upSdFromMean = (binUpBounds[b_idx]).toFixed(2);\n        if (b_idx === 0) {\n            binLabels[b_idx] = \"< \" + upSdFromMean;\n        } else if (b_idx === binParams.binNum - 1) {\n            binLabels[b_idx] = \"> \" + lowSdFromMean;\n        } else {\n            binLabels[b_idx] = lowSdFromMean + \"-\" + upSdFromMean;\n        }\n    }\n\n    binStats['glob_mean'] = glob_mean;\n    binStats['glob_sd'] = glob_sd;\n    binStats['binUpBounds'] = binUpBounds;\n    binStats['binLowBounds'] = binLowBounds;\n    binStats['binMeans'] = binMeans;\n    binStats['binLabels'] = binLabels;\n\n    return {'binStats': binStats};\n};\n\n// utility that takes arrays of seconds, values, and optionally levels, and produces a data structure for histogram data\n// processing. Used in the initial histogram DB query and in matching.\nconst sortHistogramBins = function (curveSubStats, curveSubSecs, curveSubLevs, binNum, masterBinStats, hasLevels, d) {\n\n    // need maps to hold the sub values and seconds (and levels) for each bin, after the bin bounds are calculated.\n    var binSubStats = {};\n    var binSubSecs = {};\n    var binSubLevs = {};\n\n    for (var b_idx = 0; b_idx < binNum; b_idx++) {\n        binSubStats[b_idx] = [];\n        binSubSecs[b_idx] = [];\n        binSubLevs[b_idx] = [];\n    }\n\n    // calculate the global stats across all of the data\n    var globalStats;\n    if (hasLevels) {\n        globalStats = get_err(curveSubStats, curveSubSecs, curveSubLevs);\n    } else {\n        globalStats = get_err(curveSubStats, curveSubSecs, []);\n    }\n    const glob_mean = globalStats.d_mean;\n    const glob_sd = globalStats.sd;\n    const glob_n = globalStats.n_good;\n    const glob_max = globalStats.maxVal;\n    const glob_min = globalStats.minVal;\n\n    // sort data into bins\n    const binUpBounds = masterBinStats.binUpBounds;\n    const binLowBounds = masterBinStats.binLowBounds;\n    const binMeans = masterBinStats.binMeans;\n    const binLabels = masterBinStats.binLabels;\n\n    for (var d_idx = 0; d_idx < curveSubStats.length; d_idx++) {\n        // iterate through all of the bins until we find one where the upper limit is greater than our datum.\n        for (b_idx = 0; b_idx < binNum; b_idx++) {\n            if (curveSubStats[d_idx] <= binUpBounds[b_idx]) {\n                binSubStats[b_idx].push(curveSubStats[d_idx]);\n                binSubSecs[b_idx].push(curveSubSecs[d_idx]);\n                if (hasLevels) {\n                    binSubLevs[b_idx].push(curveSubLevs[d_idx]);\n                }\n                break;\n            }\n        }\n    }\n\n    // calculate the statistics for each bin\n    // we are especially interested in the number of values in each bin, as that is the plotted stat in a histogram\n    var binStats;\n    var bin_mean;\n    var bin_sd;\n    var bin_n;\n    var bin_rf;\n\n    var sum = 0;\n    var count = 0;\n    for (b_idx = 0; b_idx < binNum; b_idx++) {\n        if (hasLevels) {\n            binStats = get_err(binSubStats[b_idx], binSubSecs[b_idx], binSubLevs[b_idx]);\n        } else {\n            binStats = get_err(binSubStats[b_idx], binSubSecs[b_idx], []);\n        }\n        bin_mean = binStats.d_mean;\n        bin_sd = binStats.sd;\n        bin_n = binStats.n_good;\n        bin_rf = bin_n / glob_n;\n\n        /*\n        var d = {// d will contain the curve data\n            x: [], //placeholder\n            y: [], //placeholder\n            error_x: [], // unused\n            error_y: [], // unused\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            glob_stats: {}, // placeholder\n            bin_stats: [], // placeholder\n            text: [], //placeholder\n            xmax: Number.MIN_VALUE,\n            xmin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE\n        };\n        */\n\n        d.x.push(binMeans[b_idx]);\n        d.y.push(bin_n);\n        d.subVals.push(binSubStats[b_idx]);\n        d.subSecs.push(binSubSecs[b_idx]);\n        d.bin_stats.push({\n            'bin_mean': bin_mean,\n            'bin_sd': bin_sd,\n            'bin_n': bin_n,\n            'bin_rf': bin_rf,\n            'binLowBound': binLowBounds[b_idx],\n            'binUpBound': binUpBounds[b_idx],\n            'binLabel': binLabels[b_idx]\n        });\n        d.text.push(null);\n\n        if (hasLevels) {\n            d.subLevs.push(binSubLevs[b_idx]);\n        }\n\n        // set axis limits based on returned data\n        if (d.y[b_idx] !== null) {\n            sum = sum + d.y[b_idx];\n            count++;\n            d.ymin = d.ymin < d.y[b_idx] ? d.ymin : d.y[b_idx];\n            d.ymax = d.ymax > d.y[b_idx] ? d.ymax : d.y[b_idx];\n        }\n\n    }\n    d.glob_stats = {\n        'glob_mean': glob_mean,\n        'glob_sd': glob_sd,\n        'glob_n': glob_n,\n        'glob_max': glob_max,\n        'glob_min': glob_min\n    };\n    d.xmin = d.x[0];\n    d.xmax = d.x[binNum - 1];\n\n    return {d: d};\n};\n\n// utility that takes the curve params for two contour plots and collapses them into the curve params for one diff contour.\nconst getDiffContourCurveParams = function (curves) {\n\n    var newCurve = {};\n    const curveKeys = Object.keys(curves[0]);\n    var currKey;\n    for (var ckidx = 0; ckidx < curveKeys.length; ckidx++) {\n        currKey = curveKeys[ckidx];\n        if (currKey === 'color') {\n            newCurve['color'] = \"rgb(255,165,0)\";\n        } else if (curves[0][currKey] === curves[1][currKey]) {\n            newCurve[currKey] = curves[0][currKey];\n        } else {\n            newCurve[currKey] = curves[1][currKey] + \"-\" + curves[0][currKey];\n        }\n    }\n    return [newCurve];\n};\n\n//used for sorting arrays\nconst sortFunction = function (a, b) {\n    if (a[0] === b[0]) {\n        return 0;\n    }\n    else {\n        return (a[0] < b[0]) ? -1 : 1;\n    }\n};\n\nexport default matsDataUtils = {\n\n    areObjectsEqual: areObjectsEqual,\n    arrayContainsArray: arrayContainsArray,\n    arrayContainsSubArray: arrayContainsSubArray,\n    arraysEqual: arraysEqual,\n    arrayUnique: arrayUnique,\n    findArrayInSubArray: findArrayInSubArray,\n    objectContainsObject: objectContainsObject,\n    average: average,\n    stdev: stdev,\n    dateConvert: dateConvert,\n    getDateRange: getDateRange,\n    secsConvert: secsConvert,\n    doAuthorization: doAuthorization,\n    doColorScheme: doColorScheme,\n    doCredentials: doCredentials,\n    doRoles: doRoles,\n    doSettings: doSettings,\n    getPlotParamsFromStack: getPlotParamsFromStack,\n    get_err: get_err,\n    setHistogramParameters: setHistogramParameters,\n    calculateHistogramBins: calculateHistogramBins,\n    prescribeHistogramBins: prescribeHistogramBins,\n    sortHistogramBins: sortHistogramBins,\n    getDiffContourCurveParams: getDiffContourCurveParams,\n    sortFunction: sortFunction,\n\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsDataUtils, matsTypes, matsCollections} from 'meteor/randyp:mats-common';\nimport {Meteor} from \"meteor/meteor\";\n\n//const Future = require('fibers/future');\n\n//utility to get the cadence for a particular model, so that the query function\n//knows where to include null points for missing data.\nconst getModelCadence = function (pool, dataSource, startDate, endDate) {\n    var rows = [];\n    var cycles;\n    try {\n        //this query should only return data if the model cadence is irregular.\n        //otherwise, the cadence will be calculated later by the query function.\n        rows = simplePoolQueryWrapSynchronous(pool, \"select cycle_seconds \" +\n            \"from mats_common.primary_model_orders \" +\n            \"where model = \" +\n            \"(select new_model as display_text from mats_common.standardized_model_list where old_model = '\" + dataSource + \"');\");\n        var cycles_raw = JSON.parse(rows[0].cycle_seconds);\n        var cycles_keys = Object.keys(cycles_raw).sort();\n        //there can be difference cadences for different time periods (each time period is a key in cycles_keys,\n        //with the cadences for that period represented as values in cycles_raw), so this section identifies all\n        //time periods relevant to the requested date range, and returns the union of their cadences.\n        if (cycles_keys.length !== 0) {\n            var newTime;\n            var chosenStartTime;\n            var chosenEndTime;\n            var chosenStartIdx;\n            var chosenEndIdx;\n            var foundStart = false;\n            var foundEnd = false;\n            for (var ti = cycles_keys.length - 1; ti >= 0; ti--) {\n                newTime = cycles_keys[ti];\n                if (startDate >= Number(newTime) && !foundStart) {\n                    chosenStartTime = newTime;\n                    chosenStartIdx = ti;\n                    foundStart = true;\n                }\n                if (endDate >= Number(newTime) && !foundEnd) {\n                    chosenEndTime = newTime;\n                    chosenEndIdx = ti;\n                    foundEnd = true;\n                }\n                if (foundStart && foundEnd) {\n                    break;\n                }\n            }\n            if (chosenStartTime !== undefined && chosenEndTime !== undefined) {\n                if (Number(chosenStartTime) === Number(chosenEndTime)) {\n                    cycles = cycles_raw[chosenStartTime];\n                } else if (chosenEndIdx - chosenStartIdx === 1) {\n                    const startCycles = cycles_raw[chosenStartTime];\n                    const endCycles = cycles_raw[chosenEndTime];\n                    cycles = _.union(startCycles, endCycles);\n                } else {\n                    var middleCycles = [];\n                    var currCycles;\n                    for (ti = chosenStartIdx + 1; ti < chosenEndIdx; ti++) {\n                        currCycles = cycles_raw[cycles_keys[ti]];\n                        middleCycles = _.union(middleCycles, currCycles);\n                    }\n                    const startCycles = cycles_raw[chosenStartTime];\n                    const endCycles = cycles_raw[chosenEndTime];\n                    cycles = _.union(startCycles, endCycles, middleCycles);\n                }\n            }\n        }\n    } catch (e) {\n        //ignore - just a safety check, don't want to exit if there isn't a cycles_per_model entry\n        //if there isn't a cycles_per_model entry, it just means that the model has a regular cadence\n    }\n    if (cycles !== null && cycles !== undefined && cycles.length > 0) {\n        for (var c = 0; c < cycles.length; c++) {\n            cycles[c] = cycles[c] * 1000;         // convert to milliseconds\n        }\n    } else {\n        cycles = []; //regular cadence model--cycles will be calculated later by the query function\n    }\n    return cycles;\n};\n\n//this function calculates the interval between the current time and the next time for irregular cadence models.\nconst getTimeInterval = function (avTime, time_interval, foreCastOffset, cycles) {\n    //have to calculate the time_interval\n    var ti;\n    var dayInMilliSeconds = 24 * 3600 * 1000;\n    var minCycleTime = Math.min(...cycles);\n\n    var thisCadence = (avTime % dayInMilliSeconds); //current hour of day (valid time)\n    if (Number(thisCadence) - (Number(foreCastOffset) * 3600 * 1000) < 0) { //check to see if cycle time was on previous day -- if so, need to wrap around 00Z to get current hour of day (cycle time)\n        thisCadence = (Number(thisCadence) - (Number(foreCastOffset) * 3600 * 1000) + dayInMilliSeconds); //current hour of day (cycle time)\n    } else {\n        thisCadence = (Number(thisCadence) - (Number(foreCastOffset) * 3600 * 1000)); //current hour of day (cycle time)\n    }\n\n    var thisCadenceIdx = cycles.indexOf(thisCadence); //fnd our where the current hour of day is in the cycles array\n    if (thisCadenceIdx !== -1) {\n        var nextCadenceIdx = thisCadenceIdx + 1; //choose the next hour of the day\n        if (nextCadenceIdx >= cycles.length) {\n            ti = (dayInMilliSeconds - thisCadence) + minCycleTime; //if we were at the last cycle cadence, wrap back around to the first cycle cadence\n        } else {\n            ti = cycles[nextCadenceIdx] - cycles[thisCadenceIdx]; //otherwise take the difference between the current and next hours of the day.\n        }\n    } else {\n        ti = time_interval; //if for some reason the current hour of the day isn't in the cycles array, default to the regular cadence interval\n    }\n\n    return ti;\n};\n\n//utility for querying the DB\nconst simplePoolQueryWrapSynchronous = function (pool, statement) {\n    /*\n     simple synchronous query of statement to the specified pool.\n     params :\n     pool - a predefined db pool (usually defined in main.js). i.e. wfip2Pool = mysql.createPool(wfip2Settings);\n     statement - String - a valid sql statement\n     actions - queries database and will wait until query returns.\n     return: rowset - an array of rows\n     throws: error\n     */\n    if (Meteor.isServer) {\n        const Future = require('fibers/future');\n        const queryWrap = Future.wrap(function (pool, statement, callback) {\n            pool.query(statement, function (err, rows) {\n                return callback(err, rows);\n            });\n        });\n        return queryWrap(pool, statement).wait();\n    }\n};\n\n//this method queries the database for timeseries plots\nconst queryDBTimeSeries = function (pool, statement, dataSource, forecastOffset, startDate, endDate, averageStr, validTimes, hasLevels, forceRegularCadence) {\n    //upper air is only verified at 00Z and 12Z, so you need to force irregular models to verify at that regular cadence\n    const Future = require('fibers/future');\n    if (Meteor.isServer) {\n        const plotParams = matsDataUtils.getPlotParamsFromStack();\n        const completenessQCParam = Number(plotParams[\"completeness\"]) / 100;\n\n        var cycles = getModelCadence(pool, dataSource, startDate, endDate); // if irregular model cadence, get cycle times. If regular, get empty array.\n        if (validTimes.length > 0 && validTimes !== matsTypes.InputTypes.unused) {\n            var vtCycles = validTimes.map(function (x) {\n                return (Number(x) - forecastOffset) * 3600 * 1000;\n            }); // selecting validTimes makes the cadence irregular\n            vtCycles = vtCycles.map(function (x) {\n                return x < 0 ? (x + 24 * 3600 * 1000) : x;\n            }); // make sure no cycles are negative\n            vtCycles = vtCycles.sort(function (a, b) {\n                return Number(a) - Number(b);\n            }); //sort 'em\n            cycles = cycles.length > 0 ? _.intersection(cycles, vtCycles) : vtCycles; // if we already had cycles get the ones that correspond to valid times\n        }\n        const regular = (forceRegularCadence || averageStr !== \"None\" || !(cycles !== null && cycles.length > 0)); // If curves have averaging, the cadence is always regular, i.e. it's the cadence of the average\n\n        var dFuture = new Future();\n        var d = {// d will contain the curve data\n            x: [],\n            y: [],\n            error_x: [],\n            error_y: [],\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            stats: [],\n            text: [],\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n        var error = \"\";\n        var N0 = [];\n        var N_times = [];\n\n        pool.query(statement, function (err, rows) {\n            // query callback - build the curve data from the results - or set an error\n            if (err !== undefined && err !== null) {\n                error = err.message;\n            } else if (rows === undefined || rows === null || rows.length === 0) {\n                error = matsTypes.Messages.NO_DATA_FOUND;\n            } else {\n                const parsedData = parseQueryDataTimeSeries(pool, rows, d, completenessQCParam, hasLevels, averageStr, forecastOffset, cycles, regular);\n                d = parsedData.d;\n                N0 = parsedData.N0;\n                N_times = parsedData.N_times;\n                cycles = parsedData.cycles;\n            }\n            // done waiting - have results\n            dFuture['return']();\n        });\n\n        // wait for future to finish\n        dFuture.wait();\n        return {\n            data: d,\n            error: error,\n            N0: N0,\n            N_times: N_times,\n            averageStr: averageStr,\n            cycles: cycles,\n        };\n    }\n};\n\n//this method queries the database for specialty curves such as profiles, dieoffs, threshold plots, valid time plots, and histograms\nconst queryDBSpecialtyCurve = function (pool, statement, plotType, hasLevels) {\n    if (Meteor.isServer) {\n        const Future = require('fibers/future');\n        const plotParams = matsDataUtils.getPlotParamsFromStack();\n        const completenessQCParam = Number(plotParams[\"completeness\"]) / 100;\n        const appType = matsCollections.Settings.findOne({}).appType;\n\n        var dFuture = new Future();\n        var d = {// d will contain the curve data\n            x: [],\n            y: [],\n            error_x: [],\n            error_y: [],\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            stats: [],\n            text: [],\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n\n        var error = \"\";\n        var N0 = [];\n        var N_times = [];\n\n        pool.query(statement, function (err, rows) {\n            // query callback - build the curve data from the results - or set an error\n            if (err !== undefined && err !== null) {\n                error = err.message;\n            } else if (rows === undefined || rows === null || rows.length === 0) {\n                error = matsTypes.Messages.NO_DATA_FOUND;\n            } else {\n                var parsedData;\n                if (plotType !== matsTypes.PlotTypes.histogram) {\n                    parsedData = parseQueryDataSpecialtyCurve(rows, d, completenessQCParam, plotType, appType, hasLevels);\n                } else {\n                    parsedData = parseQueryDataHistogram(d, rows, hasLevels);\n                }\n                d = parsedData.d;\n                N0 = parsedData.N0;\n                N_times = parsedData.N_times;\n            }\n            dFuture['return']();\n        });\n\n        // wait for future to finish\n        dFuture.wait();\n        return {\n            data: d,\n            error: error,\n            N0: N0,\n            N_times: N_times,\n        };\n    }\n};\n\n//this method queries the database for map plots\nconst queryMapDB = function (pool, statement, dataSource, variable, varUnits, siteMap) {\n    if (Meteor.isServer) {\n        // d will contain the curve data\n        var d = {\n            siteName: [],\n            queryVal: [],\n            lat: [],\n            lon: [],\n            color: [],\n            stats: [],\n            text: []\n        };\n        // for biases <= -1\n        var dBlue = {\n            siteName: [],\n            queryVal: [],\n            lat: [],\n            lon: [],\n            stats: [],\n            text: [],\n            color: \"rgb(0,0,255)\"\n        };\n        // for biases > -1 and < 1\n        var dBlack = {\n            siteName: [],\n            queryVal: [],\n            lat: [],\n            lon: [],\n            stats: [],\n            text: [],\n            color: \"rgb(0,0,0)\"\n        };\n        // for biases >= 1\n        var dRed = {\n            siteName: [],\n            queryVal: [],\n            lat: [],\n            lon: [],\n            stats: [],\n            text: [],\n            color: \"rgb(255,0,0)\"\n        };\n\n        var error = \"\";\n        const Future = require('fibers/future');\n        var pFuture = new Future();\n        pool.query(statement, function (err, rows) {\n            // query callback - build the curve data from the results - or set an error\n            if (err !== undefined && err !== null) {\n                error = err.message;\n            } else if (rows === undefined || rows === null || rows.length === 0) {\n                error = matsTypes.Messages.NO_DATA_FOUND;\n            } else {\n                var queryVal;\n                for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                    const site = rows[rowIndex].sta_name;\n                    queryVal = rows[rowIndex].model_ob_diff;\n                    d.siteName.push(site);\n                    d.queryVal.push(queryVal);\n                    d.stats.push({\n                        N_times: rows[rowIndex].N_times,\n                        min_time: rows[rowIndex].min_time,\n                        max_time: rows[rowIndex].max_time\n                    });\n                    var tooltips = site +\n                        \"<br>\" + \"variable: \" + variable +\n                        \"<br>\" + \"model: \" + dataSource +\n                        \"<br>\" + \"model-obs: \" + queryVal + \" \" + varUnits +\n                        \"<br>\" + \"n: \" + rows[rowIndex].N_times;\n                    d.text.push(tooltips);\n\n                    var thisSite = siteMap.find(obj => {\n                        return obj.name === site;\n                    });\n                    d.lat.push(thisSite.point[0]);\n                    d.lon.push(thisSite.point[1]);\n\n                    var textMarker = queryVal === null ? \"\" : queryVal.toFixed(0);\n                    if (queryVal <= -1) {\n                        d.color.push(\"rgb(0,0,255)\");\n                        dBlue.siteName.push(site);\n                        dBlue.queryVal.push(queryVal);\n                        dBlue.text.push(textMarker);\n                        dBlue.lat.push(thisSite.point[0]);\n                        dBlue.lon.push(thisSite.point[1]);\n                    } else if (queryVal >= 1) {\n                        d.color.push(\"rgb(255,0,0)\");\n                        dRed.siteName.push(site);\n                        dRed.queryVal.push(queryVal);\n                        dRed.text.push(textMarker);\n                        dRed.lat.push(thisSite.point[0]);\n                        dRed.lon.push(thisSite.point[1]);\n                    } else {\n                        d.color.push(\"rgb(0,0,0)\");\n                        dBlack.siteName.push(site);\n                        dBlack.queryVal.push(queryVal);\n                        dBlack.text.push(textMarker);\n                        dBlack.lat.push(thisSite.point[0]);\n                        dBlack.lon.push(thisSite.point[1]);\n                    }\n                }// end of loop row\n            }\n            // done waiting - have results\n            pFuture['return']();\n        });\n\n        // wait for future to finish\n        pFuture.wait();\n        return {\n            data: d,    // [sub_values,sub_secs] as arrays\n            dataBlue: dBlue,    // [sub_values,sub_secs] as arrays\n            dataBlack: dBlack,    // [sub_values,sub_secs] as arrays\n            dataRed: dRed,    // [sub_values,sub_secs] as arrays\n            error: error,\n        };\n    }\n};\n\n//this method queries the database for contour plots\nconst queryDBContour = function (pool, statement) {\n    if (Meteor.isServer) {\n        const Future = require('fibers/future');\n\n        var dFuture = new Future();\n        var d = {// d will contain the curve data\n            x: [],\n            y: [],\n            z: [],\n            n: [],\n            text: [],\n            xTextOutput: [],\n            yTextOutput: [],\n            zTextOutput: [],\n            nTextOutput: [],\n            minDateTextOutput: [],\n            maxDateTextOutput: [],\n            stats: [],\n            glob_stats: {},\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            zmin: Number.MAX_VALUE,\n            zmax: Number.MIN_VALUE,\n            sum: 0\n        };\n\n        var error = \"\";\n        pool.query(statement, function (err, rows) {\n            // query callback - build the curve data from the results - or set an error\n            if (err !== undefined && err !== null) {\n                error = err.message;\n            } else if (rows === undefined || rows === null || rows.length === 0) {\n                error = matsTypes.Messages.NO_DATA_FOUND;\n            } else {\n                const parsedData = parseQueryDataContour(rows, d);\n                d = parsedData.d;\n            }\n            dFuture['return']();\n        });\n\n        // wait for future to finish\n        dFuture.wait();\n        return {\n            data: d,\n            error: error\n        };\n    }\n};\n\n//this method parses the returned query data for timeseries plots\nconst parseQueryDataTimeSeries = function (pool, rows, d, completenessQCParam, hasLevels, averageStr, foreCastOffset, cycles, regular) {\n    /*\n        var d = {// d will contain the curve data\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            stats: [],     //pointStats\n            text: [],\n            glob_stats: {},     //curveStats\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n    */\n    d.error_x = null;  // time series doesn't use x errorbars\n    var N0 = [];\n    var N_times = [];\n    var xmax = Number.MIN_VALUE;\n    var xmin = Number.MAX_VALUE;\n\n    var curveTime = [];\n    var curveStats = [];\n    var subVals = [];\n    var subSecs = [];\n    var subLevs = [];\n\n    var time_interval = rows.length > 1 ? Number(rows[1].avtime) - Number(rows[0].avtime) : undefined; //calculate a base time interval -- will be used if data is regular\n    for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n\n        var avSeconds = Number(rows[rowIndex].avtime);\n        var avTime = avSeconds * 1000;\n        xmin = avTime < xmin ? avTime : xmin;\n        xmax = avTime > xmax ? avTime : xmax;\n        var stat = rows[rowIndex].stat;\n        N0.push(rows[rowIndex].N0);             // number of values that go into a time series point\n        N_times.push(rows[rowIndex].N_times);   // number of times that go into a time series point\n\n        // find the minimum time_interval. For regular models, this will differ from the previous time_interval\n        // if the interval was artificially large due to missing values. For irregular models, we need the minimum\n        // interval to be sure we don't accidentally go past the next data point.\n        if (rowIndex < rows.length - 1) {\n            var time_diff = Number(rows[rowIndex + 1].avtime) - Number(rows[rowIndex].avtime);\n            if (time_diff < time_interval) {\n                time_interval = time_diff;\n            }\n        }\n\n        // store sub values that will later be used for calculating error bar statistics.\n        var sub_values = [];\n        var sub_secs = [];\n        var sub_levs = [];\n        if (stat !== null && stat !== \"NULL\" && rows[rowIndex].sub_data !== undefined) {\n            try {\n                var sub_data = rows[rowIndex].sub_data.toString().split(',');\n                var curr_sub_data;\n                for (var sd_idx = 0; sd_idx < sub_data.length; sd_idx++) {\n                    curr_sub_data = sub_data[sd_idx].split(';');\n                    sub_values.push(Number(curr_sub_data[0]));\n                    sub_secs.push(Number(curr_sub_data[1]));\n                    if (hasLevels) {\n                        if (!isNaN(Number(curr_sub_data[2]))) {\n                            sub_levs.push(Number(curr_sub_data[2]));\n                        } else {\n                            sub_levs.push(curr_sub_data[2]);\n                        }\n                    }\n                }\n            } catch (e) {\n                // this is an error produced by a bug in the query function, not an error returned by the mysql database\n                e.message = \"Error in parseQueryDataTimeSeries. The expected fields don't seem to be present in the results cache: \" + e.message;\n                throw new Error(e.message);\n            }\n        } else {\n            sub_values = NaN;\n            sub_secs = NaN;\n            if (hasLevels) {\n                sub_levs = NaN;\n            }\n        }\n        curveTime.push(avTime);\n        curveStats.push(stat);\n        subVals.push(sub_values);\n        subSecs.push(sub_secs);\n        if (hasLevels) {\n            subLevs.push(sub_levs);\n        }\n    }\n\n    var N0_max = Math.max(...N0);\n    var N_times_max = Math.max(...N_times);\n\n    if (xmin < Number(rows[0].avtime) * 1000 || averageStr !== \"None\") {\n        xmin = Number(rows[0].avtime) * 1000;\n    }\n\n    time_interval = time_interval * 1000;\n    var loopTime = xmin;\n    var sum = 0;\n    while (loopTime <= xmax) {\n        var d_idx = curveTime.indexOf(loopTime);\n        if (d_idx < 0) {\n            if (hasLevels) {\n                //d.push([loopTime, null, -1, NaN, NaN, NaN]);// add a null for missing data\n                d.x.push(loopTime);\n                d.y.push(null);\n                //d.error_x not used\n                d.error_y.push(null);   //placeholder\n                d.subVals.push(NaN);\n                d.subSecs.push(NaN);\n                d.subLevs.push(NaN);\n            } else {\n                //d.push([loopTime, null, -1, NaN, NaN]);     // add a null for missing data\n                d.x.push(loopTime);\n                d.y.push(null);\n                //d.error_x not used\n                d.error_y.push(null); //placeholder\n                d.subVals.push(NaN);\n                d.subSecs.push(NaN);\n            }\n        } else {\n            var this_N0 = N0[d_idx];\n            var this_N_times = N_times[d_idx];\n            // Make sure that we don't have any points with far less data than the rest of the graph, and that\n            // we don't have any points with a smaller completeness value than specified by the user.\n            if (this_N0 < 0.1 * N0_max || this_N_times < completenessQCParam * N_times_max) {\n                if (hasLevels) {\n//                    d.push([loopTime, null, -1, NaN, NaN, NaN]);     // add a null if this time doesn't pass QC\n                    d.x.push(loopTime);\n                    d.y.push(null);\n                    //d.error_x not used\n                    d.error_y.push(null); //placeholder\n                    d.subVals.push(NaN);\n                    d.subSecs.push(NaN);\n                    d.subLevs.push(NaN);\n                } else {\n//                    d.push([loopTime, null, -1, NaN, NaN]);     // add a null if this time doesn't pass QC\n                    d.x.push(loopTime);\n                    d.y.push(null);\n                    //d.error_x not used\n                    d.error_y.push(null); //placeholder\n                    d.subVals.push(NaN);\n                    d.subSecs.push(NaN);\n                }\n            } else {\n                sum += curveStats[d_idx];\n                if (hasLevels) {\n                    //d.push([loopTime, curveStats[d_idx], -1, subVals[d_idx], subSecs[d_idx], subLevs[d_idx]]);   // else add the real data\n                    d.x.push(loopTime);\n                    d.y.push(curveStats[d_idx]);\n                    //d.error_x not used\n                    d.error_y.push(null);\n                    d.subVals.push(subVals[d_idx]);\n                    d.subSecs.push(subSecs[d_idx]);\n                    d.subLevs.push(subLevs[d_idx]);\n                } else {\n                    //d.push([loopTime, curveStats[d_idx], -1, subVals[d_idx], subSecs[d_idx]]);   // else add the real data\n                    d.x.push(loopTime);\n                    d.y.push(curveStats[d_idx]);\n                    //d.error_x not used\n                    d.error_y.push(null);\n                    d.subVals.push(subVals[d_idx]);\n                    d.subSecs.push(subSecs[d_idx]);\n                }\n            }\n        }\n        if (!regular) {  // it is a model that has an irregular set of intervals, i.e. an irregular cadence\n            time_interval = getTimeInterval(loopTime, time_interval, foreCastOffset, cycles);   // the time interval most likely will not be the one calculated above\n        }\n        loopTime = loopTime + time_interval;    // advance to the next time.\n    }\n    if (regular) {\n        cycles = [time_interval];   // regular models will return one cycle cadence\n    }\n    const filteredx = d.x.filter(x => x);\n    const filteredy = d.y.filter(y => y);\n    d.xmin = Math.min(...filteredx);\n    d.xmax = Math.max(...filteredx);\n    d.ymin = Math.min(...filteredy);\n    d.ymax = Math.max(...filteredy);\n    d.sum = sum;\n\n    if (d.xmin == \"-Infinity\" || (d.x.indexOf(0) !== -1 && 0 < d.xmin)) {\n        d.xmin = 0;\n    }\n    if (d.ymin == \"-Infinity\" || (d.y.indexOf(0) !== -1 && 0 < d.ymin)) {\n        d.ymin = 0;\n    }\n\n    if (d.xmax == \"-Infinity\") {\n        d.xmax = 0;\n    }\n    if (d.ymax == \"-Infinity\") {\n        d.ymax = 0;\n    }\n    return {\n        d: d,\n        N0: N0,\n        N_times: N_times,\n        cycles: cycles\n    };\n};\n\n//this method parses the returned query data for specialty curves such as profiles, dieoffs, threshold plots, and valid time plots\nconst parseQueryDataSpecialtyCurve = function (rows, d, completenessQCParam, plotType, appType, hasLevels) {\n    /*\n        var d = {// d will contain the curve data\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            stats: [],     //pointStats\n            text: [],\n            glob_stats: {},     //curveStats\n            xmin:num,\n            ymin:num,\n            xmax:num,\n            ymax:num,\n            sum:num;\n        };\n    */\n    var N0 = [];\n    var N_times = [];\n    var curveIndependentVars = [];\n    var curveStats = [];\n    var subVals = [];\n    var subSecs = [];\n    var subLevs = [];\n    for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        var independentVar;\n        if (plotType === matsTypes.PlotTypes.validtime) {\n            independentVar = Number(rows[rowIndex].hr_of_day);\n        } else if (plotType === matsTypes.PlotTypes.profile) {\n            independentVar = Number((rows[rowIndex].avVal).toString().replace('P', ''));\n        } else if (plotType === matsTypes.PlotTypes.dailyModelCycle) {\n            independentVar = Number(rows[rowIndex].avtime) * 1000;\n        } else {\n            independentVar = Number(rows[rowIndex].avtime);\n        }\n\n        var stat = rows[rowIndex].stat;\n        N0.push(rows[rowIndex].N0);             // number of values that go into a point on the graph\n        N_times.push(rows[rowIndex].N_times);   // number of times that go into a point on the graph\n\n        var sub_stats = [];\n        var sub_secs = [];\n        var sub_levs = [];\n        if (stat !== null && stat !== \"NULL\" && rows[rowIndex].sub_data !== undefined) {\n            try {\n                var sub_data = rows[rowIndex].sub_data.toString().split(',');\n                var curr_sub_data;\n                for (var sd_idx = 0; sd_idx < sub_data.length; sd_idx++) {\n                    curr_sub_data = sub_data[sd_idx].split(';');\n                    sub_stats.push(Number(curr_sub_data[0]));\n                    sub_secs.push(Number(curr_sub_data[1]));\n                    if (hasLevels) {\n                        if (!isNaN(Number(curr_sub_data[2]))) {\n                            sub_levs.push(Number(curr_sub_data[2]));\n                        } else {\n                            sub_levs.push(curr_sub_data[2]);\n                        }\n                    }\n                }\n            } catch (e) {\n                // this is an error produced by a bug in the query function, not an error returned by the mysql database\n                e.message = \"Error in parseQueryDataSpecialtyCurve. The expected fields don't seem to be present in the results cache: \" + e.message;\n                throw new Error(e.message);\n            }\n        } else {\n            sub_stats = NaN;\n            sub_secs = NaN;\n            if (hasLevels) {\n                sub_levs = NaN;\n            }\n        }\n\n        // deal with missing forecast cycles for dailyModelCycle plot type\n        if (plotType === matsTypes.PlotTypes.dailyModelCycle && rowIndex > 0 && (Number(independentVar) - Number(rows[rowIndex - 1].avtime * 1000)) > 3600 * 24 * 1000) {\n            const cycles_missing = Math.floor((Number(independentVar) - Number(rows[rowIndex - 1].avtime * 1000)) / (3600 * 24 * 1000));\n            for (var missingIdx = cycles_missing; missingIdx > 0; missingIdx--) {\n                curveIndependentVars.push(independentVar - 3600 * 24 * 1000 * missingIdx);\n                curveStats.push(null);\n                subVals.push(NaN);\n                subSecs.push(NaN);\n                if (hasLevels) {\n                    subLevs.push(NaN);\n                }\n            }\n        }\n        curveIndependentVars.push(independentVar);\n        curveStats.push(stat);\n        subVals.push(sub_stats);\n        subSecs.push(sub_secs);\n        if (hasLevels) {\n            subLevs.push(sub_levs);\n        }\n    }\n    var N0_max = Math.max(...N0);\n    var N_times_max = Math.max(...N_times);\n    var sum = 0;\n    for (var d_idx = 0; d_idx < curveIndependentVars.length; d_idx++) {\n        var this_N0 = N0[d_idx];\n        var this_N_times = N_times[d_idx];\n        // Make sure that we don't have any points with far less data than the rest of the graph, and that\n        // we don't have any points with a smaller completeness value than specified by the user.\n        if (this_N0 < 0.05 * N0_max || this_N_times < completenessQCParam * N_times_max) {\n            if (plotType === matsTypes.PlotTypes.profile) {\n                // profile has the stat first, and then the independent var. The others have independent var and then stat.\n                // this is in the pattern of x-plotted-variable, y-plotted-variable.\n                //d.push([null, curveIndependentVars[d_idx], -1, NaN, NaN, NaN]);\n                d.x.push(null);\n                d.y.push(curveIndependentVars[d_idx]);\n                d.error_x.push(null);  // placeholder\n                //d.error_y not used for profile\n                d.subVals.push(NaN);\n                d.subSecs.push(NaN);\n                d.subLevs.push(NaN);\n            } else if (plotType !== matsTypes.PlotTypes.dieoff) {\n                // for dieoffs, we don't want to add a null for missing data. Just don't have a point for that FHR.\n                if (hasLevels) {\n                    //d.push([curveIndependentVars[d_idx], null, -1, NaN, NaN, NaN]);\n                    d.x.push(curveIndependentVars[d_idx]);\n                    d.y.push(null);\n                    //d.error_x not used for curves other than profile\n                    d.error_y.push(null);  // placeholder\n                    d.subVals.push(NaN);\n                    d.subSecs.push(NaN);\n                    d.subLevs.push(NaN);\n                } else {\n                    //d.push([curveIndependentVars[d_idx], null, -1, NaN, NaN]);\n                    d.x.push(curveIndependentVars[d_idx]);\n                    d.y.push(null);\n                    //d.error_x not used for curves other than profile\n                    d.error_y.push(null);  // placeholder\n                    d.subVals.push(NaN);\n                    d.subSecs.push(NaN);\n                }\n            }\n        } else {\n            // else add the real data\n            sum += curveStats[d_idx];\n            if (plotType === matsTypes.PlotTypes.profile) {\n                // profile has the stat first, and then the independent var. The others have independent var and then stat.\n                // this is in the pattern of x-plotted-variable, y-plotted-variable.\n//                d.push([curveStats[d_idx], curveIndependentVars[d_idx], -1, subVals[d_idx], subSecs[d_idx], subLevs[d_idx]]);\n                d.x.push(curveStats[d_idx]);\n                d.y.push(curveIndependentVars[d_idx]);\n                d.error_x.push(null); // placeholder\n                //d.error_y not used for curves other than profile\n                d.subVals.push(subVals[d_idx]);\n                d.subSecs.push(subSecs[d_idx]);\n                d.subLevs.push(subLevs[d_idx]);\n            } else if (hasLevels) {\n//                d.push([curveIndependentVars[d_idx], curveStats[d_idx], -1, subVals[d_idx], subSecs[d_idx], subLevs[d_idx]]);\n                d.x.push(curveIndependentVars[d_idx]);\n                d.y.push(curveStats[d_idx]);\n                //d.error_x not used for curves other than profile\n                d.error_y.push(null);  // placeholder\n                d.subVals.push(subVals[d_idx]);\n                d.subSecs.push(subSecs[d_idx]);\n                d.subLevs.push(subLevs[d_idx]);\n            } else {\n//                d.push([curveIndependentVars[d_idx], curveStats[d_idx], -1, subVals[d_idx], subSecs[d_idx]]);\n                d.x.push(curveIndependentVars[d_idx]);\n                d.y.push(curveStats[d_idx]);\n                //d.error_x not used for curves other than profile\n                d.error_y.push(null);  // placeholder\n                d.subVals.push(subVals[d_idx]);\n                d.subSecs.push(subSecs[d_idx]);\n            }\n        }\n    }\n\n    // the met levels are ordered as strings, so we need to re-sort them\n    if (plotType === matsTypes.PlotTypes.profile && appType === matsTypes.AppTypes.metexpress) {\n        var dSorted = [];\n        for (var didx = 0; didx < d.y.length; didx++) {\n            dSorted.push({\n                y: d.y[didx],\n                x: d.x[didx],\n                error_x: d.error_x[didx],\n                subVals: d.subVals[didx],\n                subSecs: d.subSecs[didx],\n                subLevs: d.subLevs[didx]\n            });\n        }\n        d.y = [];\n        d.x = [];\n        d.error_x = [];\n        d.subVals = [];\n        d.subSecs = [];\n        d.subLevs = [];\n        dSorted.sort(function(a,b) { return a.y - b.y; });\n        dSorted.map(function (elem) {\n            d.y.push(elem.y);\n            d.x.push(elem.x);\n            d.error_x.push(elem.error_x);\n            d.subVals.push(elem.subVals);\n            d.subSecs.push(elem.subSecs);\n            d.subLevs.push(elem.subLevs);\n        });\n    }\n\n    const filteredx = d.x.filter(x => x);\n    const filteredy = d.y.filter(y => y);\n    d.xmin = Math.min(...filteredx);\n    d.xmax = Math.max(...filteredx);\n    d.ymin = Math.min(...filteredy);\n    d.ymax = Math.max(...filteredy);\n    d.sum = sum;\n\n    if (d.xmin == \"-Infinity\" || (d.x.indexOf(0) !== -1 && 0 < d.xmin)) {\n        d.xmin = 0;\n    }\n    if (d.ymin == \"-Infinity\" || (d.y.indexOf(0) !== -1 && 0 < d.ymin)) {\n        d.ymin = 0;\n    }\n\n    if (d.xmax == \"-Infinity\") {\n        d.xmax = 0;\n    }\n    if (d.ymax == \"-Infinity\") {\n        d.ymax = 0;\n    }\n\n    return {\n        d: d,\n        N0: N0,\n        N_times: N_times\n    };\n};\n\n// this method parses the returned query data for histograms\nconst parseQueryDataHistogram = function (d, rows, hasLevels) {\n    /*\n        var d = {// d will contain the curve data\n            x: [], //placeholder\n            y: [], //placeholder\n            error_x: [], // unused\n            error_y: [], // unused\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            glob_stats: [], // placeholder\n            bin_stats: [], // placeholder\n            text: [] //placeholder\n            xmin:num,\n            xmax:num,\n            ymin:num,\n            ymax:num\n        };\n    */\n\n    // these arrays hold all the sub values and seconds (and levels) until they are sorted into bins\n    var curveSubStatsRaw = [];\n    var curveSubSecsRaw = [];\n    var curveSubLevsRaw = [];\n\n    // parse the data returned from the query\n    for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n\n        var stat = rows[rowIndex].stat;\n        var sub_stats = [];\n        var sub_secs = [];\n        var sub_levs = [];\n        if (stat !== null && stat !== \"NULL\" && rows[rowIndex].sub_data !== undefined) {\n            try {\n                var sub_data = rows[rowIndex].sub_data.toString().split(',');\n                var curr_sub_data;\n                for (var sd_idx = 0; sd_idx < sub_data.length; sd_idx++) {\n                    curr_sub_data = sub_data[sd_idx].split(';');\n                    sub_stats.push(Number(curr_sub_data[0]));\n                    sub_secs.push(Number(curr_sub_data[1]));\n                    if (hasLevels) {\n                            if (!isNaN(Number(curr_sub_data[2]))) {\n                                sub_levs.push(Number(curr_sub_data[2]));\n                            } else {\n                                sub_levs.push(curr_sub_data[2]);\n                            }\n                        }\n                        curveSubLevsRaw.push(sub_levs);\n                    }\n                curveSubStatsRaw.push(sub_stats);\n                curveSubSecsRaw.push(sub_secs);\n            } catch (e) {\n                // this is an error produced by a bug in the query function, not an error returned by the mysql database\n                e.message = \"Error in parseQueryDataHistogram. The expected fields don't seem to be present in the results cache: \" + e.message;\n                throw new Error(e.message);\n            }\n        }\n    }\n\n    // we don't have bins yet, so we want all of the data in one array\n    const subVals = [].concat.apply([], curveSubStatsRaw);\n    const subSecs = [].concat.apply([], curveSubSecsRaw);\n    var subLevs;\n    if (hasLevels) {\n        subLevs = [].concat.apply([], curveSubLevsRaw);\n    }\n\n    d.subVals = subVals;\n    d.subSecs = subSecs;\n    d.subLevs = subLevs;\n\n    return {\n        d: d,\n        N0: subVals.length,\n        N_times: subSecs.length\n    };\n};\n\n//this method parses the returned query data for contour plots\nconst parseQueryDataContour = function (rows, d) {\n    /*\n        var d = {// d will contain the curve data\n            x: [],\n            y: [],\n            z: [],\n            n: [],\n            text: [],\n            xTextOutput: [],\n            yTextOutput: [],\n            zTextOutput: [],\n            nTextOutput: [],\n            minDateTextOutput: [],\n            maxDateTextOutput: [],\n            stats: []],\n            glob_stats: {},\n            xmin:num,\n            ymin:num,\n            zmin:num,\n            xmax:num,\n            ymax:num,\n            zmax:num,\n            sum:num\n        };\n    */\n    var curveStatLookup = {};\n    var curveNLookup = {};\n    // get all the data out of the query array\n    for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        var rowXVal = rows[rowIndex].xVal;\n        var rowYVal = rows[rowIndex].yVal;\n        var statKey = rowXVal.toString() + '_' + rowYVal.toString();\n        var stat = rows[rowIndex].stat;\n        var n = rows[rowIndex].sub_data !== null ? rows[rowIndex].sub_data.toString().split(',').length : 0;\n        var minDate = rows[rowIndex].min_secs;\n        var maxDate = rows[rowIndex].max_secs;\n        if (stat === undefined || stat === null || stat === 'NULL') {\n            stat = null;\n            n = 0;\n            minDate = null;\n            maxDate = null;\n        }\n        // store flat arrays of all the parsed data, used by the text output and for some calculations later\n        d.xTextOutput.push(Number(rowXVal));\n        d.yTextOutput.push(Number(rowYVal));\n        d.zTextOutput.push(stat);\n        d.nTextOutput.push(n);\n        d.minDateTextOutput.push(minDate);\n        d.maxDateTextOutput.push(maxDate);\n        curveStatLookup[statKey] = stat;\n        curveNLookup[statKey] = n;\n    }\n    // get the unique x and y values and sort the stats into the 2D z array accordingly\n    d.x = matsDataUtils.arrayUnique(d.xTextOutput).sort(function (a, b) {\n        return a - b\n    });\n    d.y = matsDataUtils.arrayUnique(d.yTextOutput).sort(function (a, b) {\n        return a - b\n    });\n    var i;\n    var j;\n    var currX;\n    var currY;\n    var currStat;\n    var currN;\n    var currStatKey;\n    var currYStatArray;\n    var currYNArray;\n    var sum = 0;\n    var nPoints = 0;\n    for (j = 0; j < d.y.length; j++) {\n        currY = d.y[j];\n        currYStatArray = [];\n        currYNArray = [];\n        for (i = 0; i < d.x.length; i++) {\n            currX = d.x[i];\n            currStatKey = currX.toString() + '_' + currY.toString();\n            currStat = curveStatLookup[currStatKey];\n            currN = curveNLookup[currStatKey];\n            if (currStat === undefined) {\n                currYStatArray.push(null);\n                currYNArray.push(0);\n            } else {\n                sum += currStat;\n                nPoints = nPoints + 1;\n                currYStatArray.push(currStat);\n                currYNArray.push(currN);\n            }\n        }\n        d.z.push(currYStatArray);\n        d.n.push(currYNArray);\n    }\n\n    // calculate statistics\n    const filteredx = d.x.filter(x => x);\n    const filteredy = d.y.filter(y => y);\n    const filteredz = d.zTextOutput.filter(z => z);\n    d.xmin = Math.min(...filteredx);\n    d.xmax = Math.max(...filteredx);\n    d.ymin = Math.min(...filteredy);\n    d.ymax = Math.max(...filteredy);\n    d.zmin = Math.min(...filteredz);\n    d.zmax = Math.max(...filteredz);\n    d.sum = sum;\n\n    if (d.xmin == \"-Infinity\" || (d.x.indexOf(0) !== -1 && 0 < d.xmin)) {\n        d.xmin = 0;\n    }\n    if (d.ymin == \"-Infinity\" || (d.y.indexOf(0) !== -1 && 0 < d.ymin)) {\n        d.ymin = 0;\n    }\n    if (d.zmin == \"-Infinity\" || (d.zTextOutput.indexOf(0) !== -1 && 0 < d.zmin)) {\n        d.zmin = 0;\n    }\n\n    if (d.xmax == \"-Infinity\") {\n        d.xmax = 0;\n    }\n    if (d.ymax == \"-Infinity\") {\n        d.ymax = 0;\n    }\n    if (d.zmax == \"-Infinity\") {\n        d.zmax = 0;\n    }\n\n    const filteredMinDate = d.minDateTextOutput.filter(t => t);\n    const filteredMaxDate = d.maxDateTextOutput.filter(t => t);\n    d.glob_stats['mean'] = sum / nPoints;\n    d.glob_stats['minDate'] = Math.min(...filteredMinDate);\n    d.glob_stats['maxDate'] = Math.max(...filteredMaxDate);\n    d.glob_stats['n'] = nPoints;\n\n    return {\n        d: d\n    };\n};\n\nexport default matsDataQueryUtils = {\n\n    simplePoolQueryWrapSynchronous: simplePoolQueryWrapSynchronous,\n    queryDBTimeSeries: queryDBTimeSeries,\n    queryDBSpecialtyCurve: queryDBSpecialtyCurve,\n    queryMapDB: queryMapDB,\n    queryDBContour: queryDBContour\n\n}\n\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsPlotUtils} from 'meteor/randyp:mats-common';\n\n// returns the data for whichever curve has the larger interval in its independent variable\nconst getLargeIntervalCurveData = function (dataset, diffFrom, independentVarName) {\n    var dataMaxInterval = Number.MIN_VALUE;\n    var largeIntervalCurveData = dataset[diffFrom[0]];\n    // set up the indexes and determine the minimum independentVarName value for the dataset\n    for (var ci = 0; ci < dataset.length; ci++) {\n        if (dataset[ci][independentVarName] === undefined || dataset[ci][independentVarName].length === 0) {\n            // one of the curves has no data. No match possible. Just use interval from first curve\n            break;\n        }\n        if (dataset[ci][independentVarName].length > 1) {\n            var diff;\n            for (var di = 0; di < dataset[ci][independentVarName].length - 1; di++) {  // don't go all the way to the end - one shy\n                diff = dataset[ci][independentVarName][di + 1] - dataset[ci][independentVarName][di];\n                if (diff > dataMaxInterval) {\n                    dataMaxInterval = diff;\n                    largeIntervalCurveData = dataset[ci];\n                }\n            }\n        }\n    }\n    return largeIntervalCurveData;\n};\n\n// generates diff curves for all plot types that have diff curves.\nconst getDataForDiffCurve = function (dataset, diffFrom, plotType, hasLevels) {\n    /*\n     DATASET ELEMENTS:\n        series: [data,data,data ...... ]   each data is itself an object\n        d = {\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            stats: [],     //pointStats\n            text: [],\n            glob_stats: {},     //curveStats\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n\n     NOTE -- for profiles, x is the statVarName and y is the independentVarName, because profiles plot the statVarName\n        on the x axis and the independentVarName on the y axis.\n\n    For histograms:\n    DATASET ELEMENTS:\n        series: [data,data,data ...... ]   each data is itself an array\n        d = {\n            x: [], //placeholder\n            y: [], //placeholder\n            error_x: [], // unused\n            error_y: [], // unused\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            glob_stats: [], // placeholder\n            bin_stats: [], // placeholder\n            text: [] //placeholder\n        };\n\n     */\n\n    // determine whether data[0] or data[1] is the independent variable, and which is the stat value\n    var independentVarName;\n    var statVarName;\n    if (plotType !== matsTypes.PlotTypes.profile) {\n        independentVarName = 'x';\n        statVarName = 'y';\n    } else {\n        independentVarName = 'y';\n        statVarName = 'x';\n    }\n\n    // initialize variables\n    var minuendData = dataset[diffFrom[0]];\n    var subtrahendData = dataset[diffFrom[1]];\n    var subtrahendIndex = 0;\n    var minuendIndex = 0;\n\n    var d;\n    if (plotType !== matsTypes.PlotTypes.histogram) {\n        d = {\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            glob_stats: [],\n            stats: [],     //curveStats\n            text: [],\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n    } else {\n        d = {\n            x: [],\n            y: [],\n            error_x: [],\n            error_y: [],\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            glob_stats: {\n                'glob_mean': null,\n                'glob_sd': null,\n                'glob_n': null,\n                'glob_max': null,\n                'glob_min': null\n            },\n            bin_stats: [],\n            text: [],\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n        };\n    }\n\n    // make sure neither curve is empty\n    if (minuendData.x.length === 0 || subtrahendData.x.length === 0) {\n        return {'dataset': d};\n    }\n\n    // this is a difference curve - we are differencing diffFrom[0] - diffFrom[1] based on the\n    // independentVarName values of whichever has the largest interval\n    // find the largest interval between diffFrom[0] curve and diffFrom[1] curve\n    var largeIntervalCurveData = getLargeIntervalCurveData(dataset, diffFrom, independentVarName);\n\n    // calculate the differences\n    for (var largeIntervalCurveIndex = 0; largeIntervalCurveIndex < largeIntervalCurveData[independentVarName].length; largeIntervalCurveIndex++) {\n\n        // make sure that we are actually on the same independentVarName value for each curve\n        var subtrahendIndependentVar = subtrahendData[independentVarName][subtrahendIndex];\n        var minuendIndependentVar = minuendData[independentVarName][minuendIndex];\n        var largeIntervalIndependentVar = largeIntervalCurveData[independentVarName][largeIntervalCurveIndex];\n\n        // increment the minuendIndex until it reaches this iteration's largeIntervalIndependentVar\n        var minuendChanged = false;\n        while (largeIntervalIndependentVar > minuendIndependentVar && minuendIndex < minuendData[independentVarName].length - 1) {\n            minuendIndependentVar = minuendData[independentVarName][++minuendIndex];\n            minuendChanged = true;\n        }\n        // if the end of the curve was reached without finding the largeIntervalIndependentVar, increase the minuendIndex to trigger the end conditions.\n        if (!minuendChanged && minuendIndex >= minuendData[independentVarName].length - 1) {\n            ++minuendIndex;\n        }\n\n        // increment the subtrahendIndex until it reaches this iteration's largeIntervalIndependentVar\n        var subtrahendChanged = false;\n        while (largeIntervalIndependentVar > subtrahendIndependentVar && subtrahendIndex < subtrahendData[independentVarName].length - 1) {\n            subtrahendIndependentVar = subtrahendData[independentVarName][++subtrahendIndex];\n            subtrahendChanged = true;\n        }\n        // if the end of the curve was reached without finding the largeIntervalIndependentVar, increase the subtrahendIndex to trigger the end conditions.\n        if (!subtrahendChanged && subtrahendIndex >= subtrahendData[independentVarName].length - 1) {\n            ++subtrahendIndex;\n        }\n\n        var diffValue = null;\n        var tempSubValsArray;\n        var tempSubSecsArray;\n        var tempSubLevsArray;\n        if (minuendData[independentVarName][minuendIndex] !== undefined && subtrahendData[independentVarName][subtrahendIndex] !== undefined) {  // make sure both curves actually have data at this index\n            if ((minuendData[statVarName][minuendIndex] !== null && subtrahendData[statVarName][subtrahendIndex] !== null) && minuendData[independentVarName][minuendIndex] === subtrahendData[independentVarName][subtrahendIndex]) { // make sure data is not null at this point and the independentVars actually match\n\n                diffValue = minuendData[statVarName][minuendIndex] - subtrahendData[statVarName][subtrahendIndex];\n                d[independentVarName].push(largeIntervalIndependentVar);\n                d[statVarName].push(diffValue);\n                d.error_x.push(null);\n                d.error_y.push(null);\n                tempSubValsArray = [];\n                tempSubSecsArray = [];\n                if (hasLevels) {\n                    tempSubLevsArray = [];\n                }\n\n                if (plotType !== matsTypes.PlotTypes.histogram) {\n                    var minuendDataSubValues = minuendData.subVals[minuendIndex];\n                    var minuendDataSubSeconds = minuendData.subSecs[minuendIndex];\n                    if (hasLevels) {\n                        var minuendDataSubLevels = minuendData.subLevs[minuendIndex];\n                    }\n                    var subtrahendDataSubValues = subtrahendData.subVals[subtrahendIndex];\n                    var subtrahendDataSubSeconds = subtrahendData.subSecs[subtrahendIndex];\n                    if (hasLevels) {\n                        var subtrahendDataSubLevels = subtrahendData.subLevs[subtrahendIndex];\n                    }\n\n                    // find matching sub values and diff those\n                    for (var mvalIdx = 0; mvalIdx < minuendDataSubValues.length; mvalIdx++) {\n                        for (var svalIdx = 0; svalIdx < subtrahendDataSubValues.length; svalIdx++) {\n                            if (hasLevels && minuendDataSubSeconds[mvalIdx] === subtrahendDataSubSeconds[svalIdx] && minuendDataSubLevels[mvalIdx] === subtrahendDataSubLevels[svalIdx]) {\n                                tempSubValsArray.push(minuendDataSubValues[mvalIdx] - subtrahendDataSubValues[svalIdx]);\n                                tempSubSecsArray.push(minuendDataSubSeconds[mvalIdx]);\n                                tempSubLevsArray.push(minuendDataSubLevels[mvalIdx]);\n                            } else if (!hasLevels && minuendDataSubSeconds[mvalIdx] === subtrahendDataSubSeconds[svalIdx]) {\n                                tempSubValsArray.push(minuendDataSubValues[mvalIdx] - subtrahendDataSubValues[svalIdx]);\n                                tempSubSecsArray.push(minuendDataSubSeconds[mvalIdx]);\n                            }\n                        }\n                    }\n\n                    d.subVals.push(tempSubValsArray);\n                    d.subSecs.push(tempSubSecsArray);\n                    if (hasLevels) {\n                        d.subLevs.push(tempSubLevsArray);\n                    }\n\n                    d.sum = d.sum + d[independentVarName][largeIntervalCurveIndex];\n\n                } else {\n                    d.bin_stats.push({\n                        'bin_mean': null,\n                        'bin_sd': null,\n                        'bin_n': diffValue,\n                        'bin_rf': minuendData.bin_stats[minuendIndex].bin_rf - subtrahendData.bin_stats[subtrahendIndex].bin_rf,\n                        'binLowBound': minuendData.bin_stats[minuendIndex].binLowBound,\n                        'binUpBound': minuendData.bin_stats[minuendIndex].binUpBound,\n                        'binLabel': minuendData.bin_stats[minuendIndex].binLabel\n                    });\n                }\n\n            } else {\n                // no match for this independentVarName\n                d[independentVarName].push(largeIntervalIndependentVar);\n                d[statVarName].push(null);\n                d.error_x.push(null);\n                d.error_y.push(null);\n                d.subVals.push([]);\n                d.subSecs.push([]);\n                if (hasLevels) {\n                    d.subLevs.push([]);\n                }\n                if (plotType === matsTypes.PlotTypes.histogram) {\n                    d.bin_stats.push({\n                        'bin_mean': null,\n                        'bin_sd': null,\n                        'bin_n': null,\n                        'bin_rf': null,\n                        'binLowBound': minuendData.bin_stats[minuendIndex].binLowBound,\n                        'binUpBound': minuendData.bin_stats[minuendIndex].binUpBound,\n                        'binLabel': minuendData.bin_stats[minuendIndex].binLabel\n                    });\n                }\n\n            }\n        } else if ((!subtrahendChanged && subtrahendIndex >= subtrahendData[independentVarName].length - 1) || (!minuendChanged && minuendIndex >= minuendData[independentVarName].length - 1)) {\n            // we've reached the end of at least one curve, so end the diffing.\n            break;\n        }\n    }\n\n    const filteredx = d.x.filter(x => x);\n    const filteredy = d.y.filter(y => y);\n    d.xmin = Math.min(...filteredx);\n    d.xmax = Math.max(...filteredx);\n    d.ymin = Math.min(...filteredy);\n    d.ymax = Math.max(...filteredy);\n\n    return {'dataset': d};\n};\n\n// generates diff of two contours.\nconst getDataForDiffContour = function (dataset) {\n    /*\n     DATASET ELEMENTS:\n        d[i] = {\n            label: string,\n            curveId: string,\n            name: string,\n            annotateColor: string,\n            annotation: string,             -----\n            x: [],                          *****\n            y: [],                          *****\n            z: [[]],                        *****\n            n: [[]],                        *****\n            text: [],\n            stats: [],\n            glob_stats: object,             -----\n            type: string,\n            autocontour: boolean,\n            ncontours: number,\n            colorbar: object,\n            colorscale: string,\n            reversescale: boolean,\n            contours: object,\n            marker: object,\n            xAxisKey: [],\n            yAxisKey: [],\n            visible: boolean,\n            xTextOutput: [],                *****\n            yTextOutput: [],                *****\n            zTextOutput: [],                *****\n            nTextOutput: [],                *****\n            maxDateTextOutput: [],          *****\n            minDateTextOutput: [],          *****\n            xmax: number,                   -----\n            xmin: number,                   -----\n            ymax: number,                   -----\n            ymin: number,                   -----\n            zmax: number,                   -----\n            zmin: number,                   -----\n            sum: number                     *****\n        };\n\n        ***** indicates calculation in loops\n        ----- indicates calculation after loops\n     */\n\n    // initialize output object\n    var diffDataset = {};\n    diffDataset['label'] = dataset[1].label + '-' + dataset[0].label;\n    diffDataset['curveId'] = dataset[1].curveId + '-' + dataset[0].curveId;\n    diffDataset['name'] = dataset[1].name + '-' + dataset[0].name;\n    diffDataset['annotateColor'] = \"rgb(255,165,0)\";\n    diffDataset['annotation'] = \"\";\n    diffDataset['text'] = [];\n    diffDataset['type'] = dataset[0].type;\n    diffDataset['marker'] = dataset[0].marker;\n    diffDataset['xAxisKey'] = dataset[0].xAxisKey;\n    diffDataset['yAxisKey'] = dataset[0].yAxisKey;\n    diffDataset['visible'] = dataset[0].visible;\n    diffDataset['x'] = [];\n    diffDataset['y'] = [];\n    diffDataset['z'] = [];\n    diffDataset['n'] = [];\n    diffDataset['xTextOutput'] = [];\n    diffDataset['yTextOutput'] = [];\n    diffDataset['zTextOutput'] = [];\n    diffDataset['nTextOutput'] = [];\n    diffDataset['maxDateTextOutput'] = [];\n    diffDataset['minDateTextOutput'] = [];\n    diffDataset['stats'] = [];\n    diffDataset['glob_stats'] = {};\n    diffDataset['xmax'] = -1 * Number.MAX_VALUE;\n    diffDataset['xmin'] = Number.MAX_VALUE;\n    diffDataset['ymax'] = -1 * Number.MAX_VALUE;\n    diffDataset['ymin'] = Number.MAX_VALUE;\n    diffDataset['zmax'] = -1 * Number.MAX_VALUE;\n    diffDataset['zmin'] = Number.MAX_VALUE;\n    diffDataset['sum'] = 0;\n\n    // initialize local variables\n    var minuendData = dataset[1];\n    var subtrahendData = dataset[0];\n\n    // get common x and y\n    diffDataset.x = _.intersection(minuendData.x, subtrahendData.x).sort(function (a, b) {\n        return a - b\n    });\n    diffDataset.y = _.intersection(minuendData.y, subtrahendData.y).sort(function (a, b) {\n        return a - b\n    });\n\n    // make we actually have matches\n    if (diffDataset.x.length === 0 || diffDataset.y.length === 0) {\n        diffDataset.x = [];\n        diffDataset.y = [];\n        return [diffDataset];\n    }\n\n    // make sure neither dataset is empty\n    if (minuendData.x.length === 0 || subtrahendData.x.length === 0 || minuendData.y.length === 0 || subtrahendData.y.length === 0) {\n        return [diffDataset];\n    }\n\n    var minuendYIndex = 0;\n    var subtrahendYIndex = 0;\n    var nPoints = 0;\n\n    // loop through common Ys\n    for (var diffDataYIndex = 0; diffDataYIndex < diffDataset.y.length; diffDataYIndex++) {\n        //make sure that we are actually on the same y value for each curve\n        var diffDataY = diffDataset.y[diffDataYIndex];\n        var minuendY = minuendData.y[minuendYIndex];\n        var subtrahendY = subtrahendData.y[subtrahendYIndex];\n\n        //increment the minuendYIndex until it reaches this iteration's diffDataY\n        while (diffDataY > minuendY && minuendYIndex < minuendData.y.length - 1) {\n            minuendY = minuendData.y[++minuendYIndex];\n        }\n\n        //increment the subtrahendYIndex until it reaches this iteration's diffDataY\n        while (diffDataY > subtrahendY && subtrahendYIndex < subtrahendData.y.length - 1) {\n            subtrahendY = subtrahendData.y[++subtrahendYIndex];\n        }\n\n        // initialize n and z arrays for this Y\n        diffDataset.z[diffDataYIndex] = [];\n        diffDataset.n[diffDataYIndex] = [];\n\n        var minuendXIndex = 0;\n        var subtrahendXIndex = 0;\n        for (var diffDataXIndex = 0; diffDataXIndex < diffDataset.x.length; diffDataXIndex++) {\n            //make sure that we are actually on the same x value for each curve\n            var diffDataX = diffDataset.x[diffDataXIndex];\n            var minuendX = minuendData.x[minuendXIndex];\n            var subtrahendX = subtrahendData.x[subtrahendXIndex];\n\n            //increment the minuendXIndex until it reaches this iteration's diffDataX\n            while (diffDataX > minuendX && minuendXIndex < minuendData.x.length - 1) {\n                minuendX = minuendData.x[++minuendXIndex];\n            }\n\n            //increment the subtrahendXIndex until it reaches this iteration's diffDataX\n            while (diffDataX > subtrahendX && subtrahendXIndex < subtrahendData.x.length - 1) {\n                subtrahendX = subtrahendData.x[++subtrahendXIndex];\n            }\n\n            var diffValue = null;\n            var diffNumber = 0;\n            var diffMinDate = null;\n            var diffMaxDate = null;\n            if ((minuendData.z[minuendYIndex][minuendXIndex] !== undefined && subtrahendData.z[subtrahendYIndex][subtrahendXIndex] !== undefined)\n                && (minuendData.z[minuendYIndex][minuendXIndex] !== null && subtrahendData.z[subtrahendYIndex][subtrahendXIndex] !== null)\n                && minuendX === subtrahendX && minuendY === subtrahendY) { // make sure both contours actually have data at these indices, data is not null at this point, and the x and y actually match\n                // calculate the difference values\n                diffValue = minuendData.z[minuendYIndex][minuendXIndex] - subtrahendData.z[subtrahendYIndex][subtrahendXIndex];\n                diffNumber = minuendData.n[minuendYIndex][minuendXIndex] <= subtrahendData.n[subtrahendYIndex][subtrahendXIndex] ? minuendData.n[minuendYIndex][minuendXIndex] : subtrahendData.n[subtrahendYIndex][subtrahendXIndex];\n                diffMinDate = minuendData.minDateTextOutput[minuendYIndex * minuendData.x.length + minuendXIndex] <= subtrahendData.minDateTextOutput[subtrahendYIndex * subtrahendData.x.length + subtrahendXIndex] ? minuendData.minDateTextOutput[minuendYIndex * minuendData.x.length + minuendXIndex] : subtrahendData.minDateTextOutput[subtrahendYIndex * subtrahendData.x.length + subtrahendXIndex];\n                diffMaxDate = minuendData.maxDateTextOutput[minuendYIndex * minuendData.x.length + minuendXIndex] >= subtrahendData.maxDateTextOutput[subtrahendYIndex * subtrahendData.x.length + subtrahendXIndex] ? minuendData.maxDateTextOutput[minuendYIndex * minuendData.x.length + minuendXIndex] : subtrahendData.maxDateTextOutput[subtrahendYIndex * subtrahendData.x.length + subtrahendXIndex];\n                diffDataset['sum'] += diffValue;\n                nPoints = nPoints + 1;\n            }\n            diffDataset.z[diffDataYIndex].push(diffValue);\n            diffDataset.n[diffDataYIndex].push(diffNumber);\n            diffDataset.xTextOutput.push(diffDataX);\n            diffDataset.yTextOutput.push(diffDataY);\n            diffDataset.zTextOutput.push(diffValue);\n            diffDataset.nTextOutput.push(diffNumber);\n            diffDataset.minDateTextOutput.push(diffMinDate);\n            diffDataset.maxDateTextOutput.push(diffMaxDate);\n        }\n    }\n\n    // calculate statistics\n    const filteredx = diffDataset.x.filter(x => x);\n    const filteredy = diffDataset.y.filter(y => y);\n    const filteredz = diffDataset.zTextOutput.filter(z => z);\n    diffDataset.xmin = Math.min(...filteredx);\n    diffDataset.xmax = Math.max(...filteredx);\n    diffDataset.ymin = Math.min(...filteredy);\n    diffDataset.ymax = Math.max(...filteredy);\n    diffDataset.zmin = Math.min(...filteredz);\n    diffDataset.zmax = Math.max(...filteredz);\n\n    if (diffDataset.xmin == \"-Infinity\" || (diffDataset.x.indexOf(0) !== -1 && 0 < diffDataset.xmin)) {\n        diffDataset.xmin = 0;\n    }\n    if (diffDataset.ymin == \"-Infinity\" || (diffDataset.y.indexOf(0) !== -1 && 0 < diffDataset.ymin)) {\n        diffDataset.ymin = 0;\n    }\n    if (diffDataset.zmin == \"-Infinity\" || (diffDataset.zTextOutput.indexOf(0) !== -1 && 0 < diffDataset.zmin)) {\n        diffDataset.zmin = 0;\n    }\n\n    if (diffDataset.xmax == \"-Infinity\") {\n        diffDataset.xmax = 0;\n    }\n    if (diffDataset.ymax == \"-Infinity\") {\n        diffDataset.ymax = 0;\n    }\n    if (diffDataset.zmax == \"-Infinity\") {\n        diffDataset.zmax = 0;\n    }\n\n    const filteredMinDate = diffDataset.minDateTextOutput.filter(t => t);\n    const filteredMaxDate = diffDataset.maxDateTextOutput.filter(t => t);\n    diffDataset.glob_stats['mean'] = diffDataset.sum / nPoints;\n    diffDataset.glob_stats['minDate'] = Math.min(...filteredMinDate);\n    diffDataset.glob_stats['maxDate'] = Math.max(...filteredMaxDate);\n    diffDataset.glob_stats['n'] = nPoints;\n    diffDataset['annotation'] = diffDataset.glob_stats.mean === undefined ? diffDataset.label + \"- mean = NaN\" : diffDataset.label + \"- mean = \" + diffDataset.glob_stats.mean.toPrecision(4);\n\n    // make contours symmetrical around 0\n    diffDataset['autocontour'] = false;\n    diffDataset['ncontours'] = 15;\n    diffDataset['colorbar'] = dataset[0].colorbar;\n    diffDataset['colorbar']['title'] = dataset[0].colorbar.title === dataset[1].colorbar.title ? dataset[0].colorbar.title : dataset[1].colorbar.title + \" - \" + dataset[0].colorbar.title;\n    diffDataset['colorscale'] = [[0,\"rgb(5,10,172)\"],[0.35,\"rgb(106,137,247)\"],[0.45,\"rgb(255,255,255)\"],[0.55,\"rgb(255,255,255)\"],[0.6,\"rgb(220,170,132)\"],[0.7,\"rgb(230,145,90)\"],[1,\"rgb(178,10,28)\"]];\n    diffDataset['reversescale'] = dataset[0].reversescale;\n    diffDataset['contours'] = dataset[0].contours;\n    const maxZ = Math.abs(diffDataset.zmax) > Math.abs(diffDataset.zmin) ? Math.abs(diffDataset.zmax) : Math.abs(diffDataset.zmin);\n    diffDataset['contours']['start'] = -1 * maxZ + (2 * maxZ) / 16;\n    diffDataset['contours']['end'] = maxZ - (2 * maxZ) / 16;\n    diffDataset['contours']['size'] = (2 * maxZ) / 16;\n\n    return [diffDataset];\n};\n\nexport default matsDataDiffUtils = {\n\n    getDataForDiffCurve: getDataForDiffCurve,\n    getDataForDiffContour: getDataForDiffContour\n\n}\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsDataUtils} from 'meteor/randyp:mats-common';\nimport {matsTypes} from 'meteor/randyp:mats-common';\n\n// function for removing unmatched data from a dataset containing multiple curves *without* levels\nconst getMatchedDataSet = function (dataset, curvesLength) {\n\n    var subSecs = [];\n    var subValues = [];\n    var newSubSecs = [];\n    var newSubValues = [];\n    var independentVarGroups = [];\n    var independentVarHasPoint = [];\n    var currIndependentVar;\n    var curveIndex;\n    var data;\n    var di;\n    var fi;\n    var si;\n\n    // matching in this function is based on a curve's independent variable. For a timeseries, the independentVar is epoch,\n    // for a profile, it's level, for a dieoff, it's forecast hour, for a threshold plot, it's threshold, and for a\n    // valid time plot, it's hour of day. This function identifies the the independentVar values common across all of\n    // the curves, and then the common sub times/levels/values for those independentVar values.\n\n    // find the matching independentVars shared across all curves\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) { // every curve\n        independentVarGroups[curveIndex] = [];  // store the independentVars for each curve that are not null\n        independentVarHasPoint[curveIndex] = [];   // store the *all* of the independentVars for each curve\n        subSecs[curveIndex] = {};  // store the individual record times (subSecs) going into each independentVar for each curve\n        data = dataset[curveIndex];\n        for (di = 0; di < data.x.length; di++) { // loop over every independentVar value in this curve\n            currIndependentVar = data.x[di];\n            if (data.y[di] !== null) {\n                subSecs[curveIndex][currIndependentVar] = data.subSecs[di];   // store raw secs for this independentVar value, since it's not a null point\n                independentVarGroups[curveIndex].push(currIndependentVar);   // store this independentVar value, since it's not a null point\n            }\n            independentVarHasPoint[curveIndex].push(currIndependentVar);    // store all the independentVar values, regardless of whether they're null\n        }\n    }\n\n    var matchingIndependentVars = _.intersection.apply(_, independentVarGroups);    // find all of the non-null independentVar values common across all the curves\n    var matchingIndependentHasPoint = _.intersection.apply(_, independentVarHasPoint);    // find all of the independentVar values common across all the curves, regardless of whether or not they're null\n    var subSecIntersection = {};       // eventually find the intersecting subSecs for each common non-null independentVar value\n\n    for (fi = 0; fi < matchingIndependentVars.length; fi++) { // loop over each common non-null independentVar value\n        currIndependentVar = matchingIndependentVars[fi];\n        var currSubSecIntersection = subSecs[0][currIndependentVar];   // fill current subSecs intersection array with subSecs from the first curve\n        for (curveIndex = 1; curveIndex < curvesLength; curveIndex++) { // loop over every curve\n            currSubSecIntersection = _.intersection(currSubSecIntersection, subSecs[curveIndex][currIndependentVar]);   // keep taking the intersection of the current subSecs intersection array with each curve's subSecs array for this independentVar value\n        }\n        subSecIntersection[currIndependentVar] = currSubSecIntersection;   // store the final intersecting subSecs array for this common non-null independentVar value\n    }\n\n    // remove non-matching independentVars and subSecs\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) { // loop over every curve\n        data = dataset[curveIndex];\n\n        // need to loop backwards through the data array so that we can splice non-matching indices\n        // while still having the remaining indices in the correct order\n        var dataLength = data.x.length;\n        for (di = dataLength - 1; di >= 0; di--) {\n\n            if (matchingIndependentVars.indexOf(data.x[di]) === -1) {  // if this is not a common non-null independentVar value, we'll have to remove some data\n                if (matchingIndependentHasPoint.indexOf(data.x[di]) === -1) {   // if at least one curve doesn't even have a null here, much less a matching value (beacause of the cadence), just drop this independentVar\n                    data.x.splice(di, 1);\n                    data.y.splice(di, 1);\n                    data.error_y.array.splice(di, 1);\n                    data.subVals.splice(di, 1);\n                    data.subSecs.splice(di, 1);\n                    data.stats.splice(di, 1);\n                    data.text.splice(di, 1);\n                } else {    // if all of the curves have either data or nulls at this independentVar, and there is at least one null, ensure all of the curves are null\n                    data.y[di] = null;\n                    data.subVals[di] = NaN;\n                    data.subSecs[di] = NaN;\n                }\n                continue;   // then move on to the next independentVar. There's no need to mess with the subSecs\n            }\n            subSecs = data.subSecs[di];\n            subValues = data.subVals[di];\n\n            if (subSecs.length > 0) {\n                currIndependentVar = data.x[di];\n                newSubValues = [];\n                newSubSecs = [];\n                for (si = 0; si < subSecs.length; si++) {  // loop over all subSecs for this independentVar\n                    if (subSecIntersection[currIndependentVar].indexOf(subSecs[si]) !== -1) { // keep the subValue only if its associated subSec is common to all curves for this independentVar\n                        var newVal = subValues[si];\n                        var newSec = subSecs[si];\n                        if (newVal !== undefined) {\n                            newSubValues.push(newVal);\n                            newSubSecs.push(newSec);\n                        }\n                    }\n                }\n                // store the filtered data\n                data.subVals[di] = newSubValues;\n                data.subSecs[di] = newSubSecs;\n            }\n        }\n        dataset[curveIndex] = data;\n    }\n\n    return dataset;\n};\n\n// function for removing unmatched data from a dataset containing multiple curves *with* levels\nconst getMatchedDataSetWithLevels = function (dataset, curvesLength, plotType) {\n\n    var subSecs = [];\n    var subLevs = [];\n    var subValues = [];\n    var newSubSecs = [];\n    var newSubLevs = [];\n    var newSubValues = [];\n    var independentVarGroups = [];\n    var independentVarHasPoint = [];\n    var currIndependentVar;\n    var curveIndex;\n    var data;\n    var di;\n    var fi;\n    var si;\n\n    // matching in this function is based on a curve's independent variable. For a timeseries, the independentVar is epoch,\n    // for a profile, it's level, for a dieoff, it's forecast hour, for a threshold plot, it's threshold, and for a\n    // valid time plot, it's hour of day. This function identifies the the independentVar values common across all of\n    // the curves, and then the common sub times/levels/values for those independentVar values.\n\n    //determine whether data.x or data.y is the independent variable, and which is the stat value\n    var independentVarName;\n    var statVarName;\n    if (plotType !== matsTypes.PlotTypes.profile) {\n        independentVarName = 'x';\n        statVarName = 'y';\n    } else {\n        independentVarName = 'y';\n        statVarName = 'x';\n    }\n\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) { // every curve\n        independentVarGroups[curveIndex] = [];  // store the independentVars for each curve that are not null\n        independentVarHasPoint[curveIndex] = [];   // store the *all* of the independentVars for each curve\n        subSecs[curveIndex] = {};  // store the individual record times (subSecs) going into each independentVar for each curve\n        subLevs[curveIndex] = {};  // store the individual record levels (subLevs) going into each independentVar for each curve\n        data = dataset[curveIndex];\n        for (di = 0; di < data[independentVarName].length; di++) { // loop over every independentVar value in this curve\n            currIndependentVar = data[independentVarName][di];\n            if (data[statVarName][di] !== null) {\n                subSecs[curveIndex][currIndependentVar] = data.subSecs[di];   // store raw secs for this independentVar value, since it's not a null point\n                subLevs[curveIndex][currIndependentVar] = data.subLevs[di];   // store raw levs for this independentVar value, since it's not a null point\n                independentVarGroups[curveIndex].push(currIndependentVar);   // store this independentVar value, since it's not a null point\n            }\n            independentVarHasPoint[curveIndex].push(currIndependentVar);    // store all the independentVar values, regardless of whether they're null\n        }\n    }\n\n    var matchingIndependentVars = _.intersection.apply(_, independentVarGroups);    // find all of the non-null independentVar values common across all the curves\n    var matchingIndependentHasPoint = _.intersection.apply(_, independentVarHasPoint);    // find all of the independentVar values common across all the curves, regardless of whether or not they're null\n    var subIntersections = [];       // eventually find the intersecting subSecs and subLevs for each common non-null independentVar value\n\n    for (fi = 0; fi < matchingIndependentVars.length; fi++) { // loop over each common non-null independentVar value\n        currIndependentVar = matchingIndependentVars[fi];\n        subIntersections[currIndependentVar] = [];\n        var currSubIntersections = [];\n        for (si = 0; si < subSecs[0][currIndependentVar].length; si++) {   // fill current intersection array with sec-lev pairs from the first curve\n            currSubIntersections.push([subSecs[0][currIndependentVar][si], subLevs[0][currIndependentVar][si]]);\n        }\n        for (curveIndex = 1; curveIndex < curvesLength; curveIndex++) { // loop over every curve after the first\n            var tempSubIntersections = [];\n            var tempPair;\n            for (si = 0; si < subSecs[curveIndex][currIndependentVar].length; si++) { // loop over every subSecs value\n                tempPair = [subSecs[curveIndex][currIndependentVar][si], subLevs[curveIndex][currIndependentVar][si]];    // create an individual sec-lev pair for each index in the subSecs and subLevs arrays\n                if (matsDataUtils.arrayContainsSubArray(currSubIntersections, tempPair)) {   // see if the individual sec-lev pair matches a pair from the current intersection array\n                    tempSubIntersections.push(tempPair);    // store matching pairs\n                }\n            }\n            currSubIntersections = tempSubIntersections;    //replace current intersection array with array of only pairs that matched from this loop through.\n        }\n        subIntersections[currIndependentVar] = currSubIntersections;   // store the final intersecting subSecs array for this common non-null independentVar value\n    }\n\n    // remove non-matching independentVars and subSecs\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) { // loop over every curve\n        data = dataset[curveIndex];\n\n        // need to loop backwards through the data array so that we can splice non-matching indices\n        // while still having the remaining indices in the correct order\n        var dataLength = data[independentVarName].length;\n        for (di = dataLength - 1; di >= 0; di--) {\n\n            if (matchingIndependentVars.indexOf(data[independentVarName][di]) === -1) {  // if this is not a common non-null independentVar value, we'll have to remove some data\n                if (matchingIndependentHasPoint.indexOf(data[independentVarName][di]) === -1) {   // if at least one curve doesn't even have a null here, much less a matching value (beacause of the cadence), just drop this independentVar\n                    data.x.splice(di, 1);\n                    data.y.splice(di, 1);\n                    data[('error_' + statVarName)].array.splice(di, 1);\n                    data.subVals.splice(di, 1);\n                    data.subSecs.splice(di, 1);\n                    data.subLevs.splice(di, 1);\n                    data.stats.splice(di, 1);\n                    data.text.splice(di, 1);\n                } else {    // if all of the curves have either data or nulls at this independentVar, and there is at least one null, ensure all of the curves are null\n                    data[statVarName][di] = null;\n                    data.subVals[di] = NaN;\n                    data.subSecs[di] = NaN;\n                    data.subLevs[di] = NaN;\n                }\n                continue;   // then move on to the next independentVar. There's no need to mess with the subSecs or subLevs\n            }\n            subSecs = data.subSecs[di];\n            subLevs = data.subLevs[di];\n            subValues = data.subVals[di];\n\n            if (subSecs.length > 0 && subLevs.length > 0) {\n                currIndependentVar = data[independentVarName][di];\n                newSubValues = [];\n                newSubSecs = [];\n                newSubLevs = [];\n                for (si = 0; si < subSecs.length; si++) {  // loop over all subSecs for this independentVar\n                    tempPair = [subSecs[si], subLevs[si]]; //create sec-lev pair for each sub value\n                    if (matsDataUtils.arrayContainsSubArray(subIntersections[currIndependentVar], tempPair)) {  // keep the subValue only if its sec-lev pair is common to all curves for this independentVar\n                        var newVal = subValues[si];\n                        var newSec = subSecs[si];\n                        var newLev = subLevs[si];\n                        if (newVal !== undefined) {\n                            newSubValues.push(newVal);\n                            newSubSecs.push(newSec);\n                            newSubLevs.push(newLev);\n                        }\n                    }\n                }\n                // store the filtered data\n                data.subVals[di] = newSubValues;\n                data.subSecs[di] = newSubSecs;\n                data.subLevs[di] = newSubLevs;\n            }\n        }\n        dataset[curveIndex] = data;\n    }\n\n    return dataset;\n};\n\n// function for removing unmatched data from a dataset containing multiple curves for a histogram *without* levels.\n// separate matching functions are needed for histograms because you have to take all of the data out of the bins, then\n// match it, then recalculate the bins. For other plot types, you can just leave the data in its already-sorted fhr, level, etc.\nconst getMatchedDataSetHistogram = function (dataset, curvesLength, binStats) {\n\n    var subStatsRaw = {};\n    var subSecsRaw = {};\n    var subStats = {};\n    var subSecs = {};\n    var newSubStats = {};\n    var newSubSecs = {};\n    var newCurveData;\n    var curveIndex;\n    var di;\n    var si;\n\n    // pull all subSecs and subStats out of their bins, and back into one master array\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) {\n        data = dataset[curveIndex];\n        subStatsRaw[curveIndex] = [];\n        subSecsRaw[curveIndex] = [];\n        subStats[curveIndex] = [];\n        subSecs[curveIndex] = [];\n        for (di = 0; di < data.x.length; di++) {\n            subStatsRaw[curveIndex].push(data.subVals[di]);\n            subSecsRaw[curveIndex].push(data.subSecs[di]);\n        }\n        subStats[curveIndex] = [].concat.apply([], subStatsRaw[curveIndex]);\n        subSecs[curveIndex] = [].concat.apply([], subSecsRaw[curveIndex]);\n    }\n\n    // determine which seconds are present in all curves\n    var subSecIntersection = subSecs[0];   // fill current subSecs intersection array with subSecs from the first curve\n    for (curveIndex = 1; curveIndex < curvesLength; curveIndex++) { // loop over every curve\n        subSecIntersection = _.intersection(subSecIntersection, subSecs[curveIndex]);   // keep taking the intersection of the current subSecs intersection array with each curve's subSecs array\n    }\n\n    // remove non-matching subSecs and subStats\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) { // loop over every curve\n        data = dataset[curveIndex];\n        if (subSecIntersection.length > 0) {\n            newSubStats[curveIndex] = [];\n            newSubSecs[curveIndex] = [];\n\n            for (si = 0; si < subSecs[curveIndex].length; si++) {  // loop over all subSecs for this curve\n                if (subSecIntersection.indexOf(subSecs[curveIndex][si]) !== -1) { // keep the subStat only if its associated subSec is common to all curves\n                    var newStat = subStats[curveIndex][si];\n                    var newSec = subSecs[curveIndex][si];\n                    if (newStat !== undefined) {\n                        newSubStats[curveIndex].push(newStat);\n                        newSubSecs[curveIndex].push(newSec);\n                    }\n                }\n            }\n            // re-sort all of the data into histogram bins\n            var d = {// d will contain the curve data\n                x: [], //placeholder\n                y: [], //placeholder\n                error_x: [], // unused\n                error_y: [], // unused\n                subVals: [],\n                subSecs: [],\n                subLevs: [],\n                glob_stats: {}, // placeholder\n                bin_stats: [], // placeholder\n                text: [], //placeholder\n                xmin: Number.MAX_VALUE,\n                xmax: Number.MIN_VALUE,\n                ymin: Number.MAX_VALUE,\n                ymax: Number.MIN_VALUE,\n            };\n            newCurveData = matsDataUtils.sortHistogramBins(newSubStats[curveIndex], newSubSecs[curveIndex], [], data.x.length, binStats, false, d);\n            var newCurveDataKeys = Object.keys(newCurveData.d);\n            for (var didx = 0; didx < newCurveDataKeys.length; didx++) {\n                dataset[curveIndex][newCurveDataKeys[didx]] = newCurveData.d[newCurveDataKeys[didx]];\n            }\n        } else {\n            // if there are no matching values, set data to an empty array\n            dataset[curveIndex] = {\n                x: [],\n                y: [],\n                error_x: [],\n                error_y: [],\n                subVals: [],\n                subSecs: [],\n                subLevs: [],\n                glob_stats: {},\n                bin_stats: [],\n                text: [],\n                xmin: Number.MAX_VALUE,\n                xmax: Number.MIN_VALUE,\n                ymin: Number.MAX_VALUE,\n                ymax: Number.MIN_VALUE,\n            };\n        }\n    }\n    return dataset;\n};\n\n// function for removing unmatched data from a dataset containing multiple curves for a histogram *with* levels.\n// separate matching functions are needed for histograms because you have to take all of the data out of the bins, then\n// match it, then recalculate the bins. For other plot types, you can just leave the data in its already-sorted fhr, level, etc.\nconst getMatchedDataSetHistogramWithLevels = function (dataset, curvesLength, binStats) {\n\n    var subStatsRaw = {};\n    var subSecsRaw = {};\n    var subLevsRaw = {};\n    var subStats = {};\n    var subSecs = {};\n    var subLevs = {};\n    var newSubStats = {};\n    var newSubSecs = {};\n    var newSubLevs = {};\n    var newCurveData;\n    var curveIndex;\n    var di;\n    var si;\n\n    // pull all subSecs and subStats out of their bins, and back into one master array\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) {\n        data = dataset[curveIndex];\n        subStatsRaw[curveIndex] = [];\n        subSecsRaw[curveIndex] = [];\n        subLevsRaw[curveIndex] = [];\n        subStats[curveIndex] = [];\n        subSecs[curveIndex] = [];\n        subLevs[curveIndex] = [];\n        for (di = 0; di < data.x.length; di++) {\n            subStatsRaw[curveIndex].push(data.subVals[di]);\n            subSecsRaw[curveIndex].push(data.subSecs[di]);\n            subLevsRaw[curveIndex].push(data.subLevs[di]);\n        }\n        subStats[curveIndex] = [].concat.apply([], subStatsRaw[curveIndex]);\n        subSecs[curveIndex] = [].concat.apply([], subSecsRaw[curveIndex]);\n        subLevs[curveIndex] = [].concat.apply([], subLevsRaw[curveIndex]);\n    }\n\n    // determine which seconds and levels are present in all curves\n    var subIntersections = [];       // eventually find the intersecting subSecs and subLevs across all curves\n    for (si = 0; si < subSecs[0].length; si++) {   // fill current intersection array with sec-lev pairs from the first curve\n        subIntersections.push([subSecs[0][si], subLevs[0][si]]);\n    }\n    for (curveIndex = 1; curveIndex < curvesLength; curveIndex++) { // loop over every curve after the first\n        var tempSubIntersections = [];\n        var tempPair;\n        for (si = 0; si < subSecs[curveIndex].length; si++) { // loop over every subSecs value\n            tempPair = [subSecs[curveIndex][si], subLevs[curveIndex][si]];    // create an individual sec-lev pair for each index in the subSecs and subLevs arrays\n            if (matsDataUtils.arrayContainsSubArray(subIntersections, tempPair)) {   // see if the individual sec-lev pair matches a pair from the current intersection array\n                tempSubIntersections.push(tempPair);    // store matching pairs\n            }\n        }\n        subIntersections = tempSubIntersections;    //replace current intersection array with array of only pairs that matched from this loop through.\n    }\n\n    // remove non-matching subSecs, subLevs, and subStats\n    for (curveIndex = 0; curveIndex < curvesLength; curveIndex++) { // loop over every curve\n        data = dataset[curveIndex];\n        if (subIntersections.length > 0) {\n            newSubStats[curveIndex] = [];\n            newSubSecs[curveIndex] = [];\n            newSubLevs[curveIndex] = [];\n\n            for (si = 0; si < subSecs[curveIndex].length; si++) {  // loop over all subSecs for this curve\n                tempPair = [subSecs[curveIndex][si], subLevs[curveIndex][si]]; //create sec-lev pair for each subStat\n                if (matsDataUtils.arrayContainsSubArray(subIntersections, tempPair)) {  // keep the subStat only if its sec-lev pair is common to all curves\n                    var newStat = subStats[curveIndex][si];\n                    var newSec = subSecs[curveIndex][si];\n                    var newLev = subLevs[curveIndex][si];\n                    if (newStat !== undefined) {\n                        newSubStats[curveIndex].push(newStat);\n                        newSubSecs[curveIndex].push(newSec);\n                        newSubLevs[curveIndex].push(newLev);\n                    }\n                }\n            }\n            // re-sort all of the data into histogram bins\n            var d = {// d will contain the curve data\n                x: [], //placeholder\n                y: [], //placeholder\n                error_x: [], // unused\n                error_y: [], // unused\n                subVals: [],\n                subSecs: [],\n                subLevs: [],\n                glob_stats: {}, // placeholder\n                bin_stats: [], // placeholder\n                text: [], //placeholder\n                xmin: Number.MAX_VALUE,\n                xmax: Number.MIN_VALUE,\n                ymin: Number.MAX_VALUE,\n                ymax: Number.MIN_VALUE,\n            };\n            newCurveData = matsDataUtils.sortHistogramBins(newSubStats[curveIndex], newSubSecs[curveIndex], newSubLevs[curveIndex], data.x.length, binStats, true, d);\n            var newCurveDataKeys = Object.keys(newCurveData.d);\n            for (var didx = 0; didx < newCurveDataKeys.length; didx++) {\n                dataset[curveIndex][newCurveDataKeys[didx]] = newCurveData.d[newCurveDataKeys[didx]];\n            }\n        } else {\n            // if there are no matching values, set data to an empty dataset\n            dataset[curveIndex] = {\n                x: [],\n                y: [],\n                error_x: [],\n                error_y: [],\n                subVals: [],\n                subSecs: [],\n                subLevs: [],\n                glob_stats: {},\n                bin_stats: [],\n                text: [],\n                xmin: Number.MAX_VALUE,\n                xmax: Number.MIN_VALUE,\n                ymin: Number.MAX_VALUE,\n                ymax: Number.MIN_VALUE,\n            };\n        }\n    }\n    return dataset;\n};\n\nexport default matsDataMatchUtils = {\n\n    getMatchedDataSet: getMatchedDataSet,\n    getMatchedDataSetWithLevels: getMatchedDataSetWithLevels,\n    getMatchedDataSetHistogram: getMatchedDataSetHistogram,\n    getMatchedDataSetHistogramWithLevels: getMatchedDataSetHistogramWithLevels\n\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n// adds a horizontal black line along a specific y value\nconst getHorizontalValueLine = function (xmax, xmin, yValue, cLabel) {\n\n    const valueLine = {\n        \"label\": cLabel,\n        \"curveId\": cLabel,\n        \"annotation\": \"\",\n        \"name\": \"y = \" + yValue.toString(),\n        \"mode\": \"lines\",\n        \"x\": [xmin, xmax],\n        \"x_epoch\": [xmin, xmax],\n        \"y\": [yValue, yValue],\n        \"error_x\": [null, null],\n        \"error_y\": [null, null],\n        \"subVals\": [],\n        \"subSecs\": [],\n        \"subLevs\": [],\n        \"stats\": [{\"d_mean\": 0, \"sd\": 0, \"n_good\": 0, \"lag1\": 0, \"stde\": 0}, {\n            \"d_mean\": 0,\n            \"sd\": 0,\n            \"n_good\": 0,\n            \"lag1\": 0,\n            \"stde\": 0\n        }],\n        \"tooltip\": [\"y = \" + yValue.toString(), \"y = \" + yValue.toString()],\n        \"xmin\": xmin,\n        \"xmax\": xmax,\n        \"ymin\": yValue,\n        \"ymax\": yValue,\n        \"line\": {\n            \"color\": \"rgb(0,0,0)\",\n        }\n    };\n\n    return valueLine\n};\n\n// adds a vertical black line along a specific x value\nconst getVerticalValueLine = function (ymax, ymin, xValue, cLabel) {\n\n    const valueLine = {\n        \"label\": cLabel,\n        \"curveId\": cLabel,\n        \"annotation\": \"\",\n        \"name\": \"x = \" + xValue.toString(),\n        \"mode\": \"lines\",\n        \"x\": [xValue, xValue],\n        \"y\": [ymin, ymax],\n        \"error_x\": [null, null],\n        \"error_y\": [null, null],\n        \"subVals\": [],\n        \"subSecs\": [],\n        \"subLevs\": [],\n        \"stats\": [{\"d_mean\": 0, \"sd\": 0, \"n_good\": 0, \"lag1\": 0, \"stde\": 0}, {\n            \"d_mean\": 0,\n            \"sd\": 0,\n            \"n_good\": 0,\n            \"lag1\": 0,\n            \"stde\": 0\n        }],\n        \"tooltip\": [\"x = \" + xValue.toString(), \"x = \" + xValue.toString()],\n        \"xmin\": xValue,\n        \"xmax\": xValue,\n        \"ymin\": ymin,\n        \"ymax\": ymax,\n        \"line\": {\n            \"color\": \"rgb(0,0,0)\",\n        }\n    };\n\n    return valueLine\n};\n\n// adds a linear line\nconst getLinearValueLine = function (xmax, xmin, ymax, ymin, cLabel) {\n\n    const valueLine = {\n        \"label\": cLabel,\n        \"curveId\": cLabel,\n        \"annotation\": \"\",\n        \"name\": cLabel,\n        \"mode\": \"lines\",\n        \"x\": [xmin, xmax],\n        \"x_epoch\": [xmin, xmax],\n        \"y\": [ymin, ymax],\n        \"error_x\": [null, null],\n        \"error_y\": [null, null],\n        \"subVals\": [],\n        \"subSecs\": [],\n        \"subLevs\": [],\n        \"stats\": [{\"d_mean\": 0, \"sd\": 0, \"n_good\": 0, \"lag1\": 0, \"stde\": 0}, {\n            \"d_mean\": 0,\n            \"sd\": 0,\n            \"n_good\": 0,\n            \"lag1\": 0,\n            \"stde\": 0\n        }],\n        \"tooltip\": \"\",\n        \"xmin\": xmin,\n        \"xmax\": xmax,\n        \"ymin\": ymin,\n        \"ymax\": ymax,\n        \"line\": {\n            \"color\": \"rgb(0,0,0)\",\n        }\n    };\n\n    return valueLine\n};\n\n// provides curve options for all plot types with an independent x axis and a dependent y axis\nconst generateSeriesCurveOptions = function (curve, curveIndex, axisMap, dataSeries) {\n\n    const label = curve['label'];\n    const annotation = curve['annotation'];\n\n    // adjust axes for later setting of the plot options\n    const ymin = curve['ymin'];\n    const ymax = curve['ymax'];\n    const xmin = curve['xmin'];\n    const xmax = curve['xmax'];\n    const axisKey = curve['axisKey'];\n    if (axisKey in axisMap) {\n        axisMap[axisKey].axisLabel = axisKey;\n        axisMap[axisKey].ymin = ymin < axisMap[axisKey].ymin ? ymin : axisMap[axisKey].ymin;\n        axisMap[axisKey].ymax = ymax > axisMap[axisKey].ymax ? ymax : axisMap[axisKey].ymax;\n        axisMap[axisKey].xmin = xmin < axisMap[axisKey].xmin ? xmin : axisMap[axisKey].xmin;\n        axisMap[axisKey].xmax = xmax > axisMap[axisKey].xmax ? xmax : axisMap[axisKey].xmax;\n    } else {\n        axisMap[axisKey] = {\n            index: Object.keys(axisMap).length + 1,\n            xmin: xmin,\n            xmax: xmax,\n            ymin: ymin,\n            ymax: ymax,\n            axisLabel: axisKey\n        };\n    }\n\n    const axisNumber = Object.keys(axisMap).indexOf(axisKey);\n\n    var error_y_temp = {\n        error_y: {\n            array: dataSeries.error_y,\n            thickness: 1,     // set the thickness of the error bars\n            color: curve['color'],\n            visible: false, // changed later if matching\n            // width: 0\n        }\n    };\n    var curveOptions = {\n        ...{\n            label: label,\n            curveId: label,\n            name: label,\n            xaxis: \"x1\",\n            yaxis: \"y\" + (axisNumber + 1),\n            annotation: annotation,\n            annotateColor: curve['color'],\n            mode: \"lines+markers\",\n            marker: {\n                symbol: \"circle\",\n                color: curve['color'],\n                size: 8\n            },\n            line: {\n                dash: 'solid',\n                color: curve['color'],\n                width: 2\n            },\n            visible: true\n        }, ...dataSeries\n    };\n\n    delete curveOptions.error_y;\n\n    curveOptions['error_y'] = error_y_temp.error_y;\n\n    return curveOptions;\n};\n\n// provides curve options for all plot types with an independent y axis and a dependent x axis\nconst generateProfileCurveOptions = function (curve, curveIndex, axisMap, dataProfile) {\n\n    const label = curve['label'];\n    const annotation = curve['annotation'];\n\n    // adjust axes for later setting of the plot options\n    const ymin = curve['ymin'];\n    const ymax = curve['ymax'];\n    const xmin = curve['xmin'];\n    const xmax = curve['xmax'];\n    const axisKey = curve['axisKey'];\n    if (axisKey in axisMap) {\n        axisMap[axisKey].axisLabel = axisKey;\n        axisMap[axisKey].ymin = ymin < axisMap[axisKey].ymin ? ymin : axisMap[axisKey].ymin;\n        axisMap[axisKey].ymax = ymax > axisMap[axisKey].ymax ? ymax : axisMap[axisKey].ymax;\n        axisMap[axisKey].xmin = xmin < axisMap[axisKey].xmin ? xmin : axisMap[axisKey].xmin;\n        axisMap[axisKey].xmax = xmax > axisMap[axisKey].xmax ? xmax : axisMap[axisKey].xmax;\n    } else {\n        axisMap[axisKey] = {\n            index: Object.keys(axisMap).length + 1,\n            xmin: xmin,\n            xmax: xmax,\n            ymin: ymin,\n            ymax: ymax,\n            axisLabel: axisKey\n        };\n    }\n\n    const axisNumber = Object.keys(axisMap).indexOf(axisKey);\n\n    var error_x_temp = {\n        error_x: {\n            array: dataProfile.error_x,\n            thickness: 1,     // set the thickness of the error bars\n            color: curve['color'],\n            visible: false, // changed later if matching\n            // width: 0\n        }\n    };\n    var curveOptions = {\n        ...{\n            label: label,\n            curveId: label,\n            name: label,\n            xaxis: \"x\" + (axisNumber + 1),\n            yaxis: \"y1\",\n            annotation: annotation,\n            annotateColor: curve['color'],\n            mode: \"lines+markers\",\n            marker: {\n                symbol: \"circle\",\n                color: curve['color'],\n                size: 8\n            },\n            line: {\n                dash: 'solid',\n                color: curve['color'],\n                width: 2\n            },\n            visible: true\n        }, ...dataProfile\n    };\n\n    delete curveOptions.error_x;\n\n    curveOptions['error_x'] = error_x_temp.error_x;\n\n    return curveOptions;\n};\n\n// provides curve options for reliability diagrams\nconst generateReliabilityCurveOptions = function (curve, curveIndex, axisMap, dataSeries) {\n\n    const label = curve['label'];\n    const annotation = curve['annotation'];\n\n    // adjust axes for later setting of the plot options\n    const ymin = curve['ymin'];\n    const ymax = curve['ymax'];\n    const xmin = curve['xmin'];\n    const xmax = curve['xmax'];\n    const axisKey = curve['axisKey'];\n    if (axisKey in axisMap) {\n        axisMap[axisKey].axisLabel = axisKey;\n        axisMap[axisKey].ymin = ymin < axisMap[axisKey].ymin ? ymin : axisMap[axisKey].ymin;\n        axisMap[axisKey].ymax = ymax > axisMap[axisKey].ymax ? ymax : axisMap[axisKey].ymax;\n        axisMap[axisKey].xmin = xmin < axisMap[axisKey].xmin ? xmin : axisMap[axisKey].xmin;\n        axisMap[axisKey].xmax = xmax > axisMap[axisKey].xmax ? xmax : axisMap[axisKey].xmax;\n    } else {\n        axisMap[axisKey] = {\n            index: Object.keys(axisMap).length + 1,\n            xmin: xmin,\n            xmax: xmax,\n            ymin: ymin,\n            ymax: ymax,\n            axisLabel: axisKey\n        };\n    }\n\n    const axisNumber = Object.keys(axisMap).indexOf(axisKey);\n\n    var error_y_temp = {\n        error_y: {\n            array: dataSeries.error_y,\n            thickness: 1,     // set the thickness of the error bars\n            color: curve['color'],\n            visible: false, // changed later if matching\n            // width: 0\n        }\n    };\n    var curveOptions = {\n        ...{\n            label: label,\n            curveId: label,\n            name: label,\n            xaxis: \"x1\",\n            yaxis: \"y\" + (axisNumber + 1),\n            annotation: annotation,\n            annotateColor: curve['color'],\n            mode: \"lines+markers\",\n            marker: {\n                symbol: \"circle\",\n                color: curve['color'],\n                size: 8\n            },\n            line: {\n                dash: 'solid',\n                color: curve['color'],\n                width: 2\n            },\n            visible: true\n        }, ...dataSeries\n    };\n\n    delete curveOptions.error_y;\n\n    curveOptions['error_y'] = error_y_temp.error_y;\n\n    return curveOptions;\n};\n\n// provides curve options for all plot types with an independent x axis and a dependent y axis\nconst generateBarChartCurveOptions = function (curve, curveIndex, axisMap, dataBars) {\n\n    const label = curve['label'];\n    const annotation = curve['annotation'];\n\n    // adjust axes for later setting of the plot options\n    const ymin = curve['ymin'];\n    const ymax = curve['ymax'];\n    const xmin = curve['xmin'];\n    const xmax = curve['xmax'];\n    const axisKey = curve['axisKey'];\n    if (axisKey in axisMap) {\n        axisMap[axisKey].axisLabel = axisKey;\n        axisMap[axisKey].ymin = ymin < axisMap[axisKey].ymin ? ymin : axisMap[axisKey].ymin;\n        axisMap[axisKey].ymax = ymax > axisMap[axisKey].ymax ? ymax : axisMap[axisKey].ymax;\n        axisMap[axisKey].xmin = xmin < axisMap[axisKey].xmin ? xmin : axisMap[axisKey].xmin;\n        axisMap[axisKey].xmax = xmax > axisMap[axisKey].xmax ? xmax : axisMap[axisKey].xmax;\n    } else {\n        axisMap[axisKey] = {\n            index: Object.keys(axisMap).length + 1,\n            xmin: xmin,\n            xmax: xmax,\n            ymin: ymin,\n            ymax: ymax,\n            axisLabel: axisKey\n        };\n    }\n\n    const curveOptions = {\n        ...{\n            label: label,\n            curveId: label,\n            name: label,\n            annotation: annotation,\n            annotateColor: curve['color'],\n            marker: {\n                color: curve['color'],\n                line: {\n                    color: \"rgb(0,0,0)\"\n                }\n            },\n            type: 'bar',\n            visible: true\n        }, ...dataBars\n    };\n\n    return curveOptions;\n};\n\nconst generateMapCurveOptions = function (curve, dataSeries) {\n\n    const markerSizes = dataSeries.queryVal.map(function (val) {\n        return Math.ceil(Math.abs(val * 4)) + 2;\n    });\n\n    const label = curve['label'];\n\n    const curveOptions = {\n        ...{\n            label: label,\n            curveId: label,\n            name: label,\n            type: 'scattermapbox',\n            mode: 'markers',\n            marker: {\n                color: dataSeries.color,\n                size: markerSizes,\n                opacity: 0\n            },\n        }, ...dataSeries\n    };\n\n    delete curveOptions.color;\n\n    return curveOptions;\n};\n\nconst generateMapColorTextOptions = function (label, dataSeries) {\n\n    const curveOptions = {\n        ...{\n            label: label,\n            type: 'scattermapbox',\n            mode: 'markers+text',\n            marker: {\n                opacity: 0\n            },\n            textfont: {\n                family: 'sans serif',\n                // size: 18,\n                color: dataSeries.color\n            },\n            hoverinfo: 'skip',\n            visible: true\n        }, ...dataSeries\n    };\n\n    delete curveOptions.color;\n\n    return curveOptions;\n};\n\nconst generateContourCurveOptions = function (curve, axisMap, dataset) {\n\n    const label = curve['label'];\n    const annotation = curve['annotation'];\n    const unitKey = curve['unitKey'];\n\n    const curveOptions = {\n        ...{\n            label: label,\n            curveId: label,\n            name: label,\n            annotation: annotation,\n            annotateColor: curve['color'],\n            xAxisKey: curve['xAxisKey'],\n            yAxisKey: curve['yAxisKey'],\n            marker: {\n                color: curve['color'],\n            },\n            type: 'contour',\n            autocontour: false,\n            ncontours: 15,   // apparently plotly regards this as a \"less than or equal to\" field\n            contours: {\n                // these are only used if autocontour is set to false and ncontour is disregarded\n                start: dataset.zmin + (dataset.zmax - dataset.zmin) / 16,\n                end: dataset.zmax - (dataset.zmax - dataset.zmin) / 16,\n                size:  (dataset.zmax - dataset.zmin) / 16,\n                showlabels: false\n            },\n            colorscale: 'RdBu',\n            reversescale: false,\n            colorbar:{\n                title: unitKey,\n                titleside: 'right',\n                titlefont: {\n                    size: 20,\n                    family: 'Arial, sans-serif'\n                }\n            },\n            // connectgaps: true,   // this option will interpolate to fill in nulls\n            visible: true\n        }, ...dataset\n    };\n\n    return curveOptions;\n};\n\nexport default matsDataCurveOpsUtils = {\n\n    getHorizontalValueLine: getHorizontalValueLine,\n    getVerticalValueLine: getVerticalValueLine,\n    getLinearValueLine: getLinearValueLine,\n\n    generateSeriesCurveOptions: generateSeriesCurveOptions,\n    generateReliabilityCurveOptions: generateReliabilityCurveOptions,\n    generateProfileCurveOptions: generateProfileCurveOptions,\n    generateBarChartCurveOptions: generateBarChartCurveOptions,\n    generateMapCurveOptions: generateMapCurveOptions,\n    generateMapColorTextOptions: generateMapColorTextOptions,\n    generateContourCurveOptions: generateContourCurveOptions\n\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {moment} from 'meteor/momentjs:moment'\n\n// sets plot options for timeseries graphs\nconst generateSeriesPlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var xmin = axisMap[Object.keys(axisMap)[0]].xmin;\n    var xmax = axisMap[Object.keys(axisMap)[0]].xmax;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Time',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 12}\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'left', 1: 'right', 2: 'left', 3: 'right', 4: 'left', 5: 'right', 6: 'left', 7: 'right'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.1, 3: 0.9, 4: 0.2, 5: 0.8, 6: 0.3, 7: 0.7};\n\n    const yAxisNumber = Object.keys(axisMap).length;\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var ymin = axisMap[axisKey].ymin;\n        var ymax = axisMap[axisKey].ymax;\n        ymax = ymax + errorMax;\n        ymin = ymin - errorMax;\n        const yPad = ((ymax - ymin) * 0.05) !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n        xmin = axisMap[axisKey].xmin < xmin ? axisMap[axisKey].xmin : xmin;\n        xmax = axisMap[axisKey].xmax > xmax ? axisMap[axisKey].xmax : xmax;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'yaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'y',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'y',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const xPad = ((xmax - xmin) * 0.075) !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n    xmax = moment.utc(xmax + xPad * Math.ceil(yAxisNumber / 2)).format(\"YYYY-MM-DD HH:mm\");\n    xmin = moment.utc(xmin - xPad * Math.ceil(yAxisNumber / 2)).format(\"YYYY-MM-DD HH:mm\");\n    layout['xaxis']['range'] = [xmin, xmax];\n    return layout;\n};\n\n// sets plot options for profile graphs\nconst generateProfilePlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var ymin = 10;\n    var ymax = 1075;\n    const xAxisNumber = Object.keys(axisMap).length;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: xAxisNumber > 1 ? 80 : 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n    var tickVals;\n    var tickText;\n    if (matsCollections.Settings.findOne({}).appType === matsTypes.AppTypes.metexpress) {\n        tickVals = [1000, 850, 700, 600, 500, 400, 300, 250, 200, 150, 100, 50, 10];\n        tickText = ['1000', '850', '700', '600', '500', '400', '300', '250', '200', '150', '100', '50', '10'];\n    } else {\n        tickVals = [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100];\n        tickText = ['1000', '900', '800', '700', '600', '500', '400', '300', '200', '100'];\n    }\n    layout['yaxis'] = {\n        title: 'Pressure Level',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: tickVals,\n        ticktext: tickText,\n        type: 'linear',\n        autorange: 'reversed'\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'bottom', 1: 'top', 2: 'bottom', 3: 'top', 4: 'bottom', 5: 'top', 6: 'bottom', 7: 'top'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.15, 3: 0.85, 4: 0.3, 5: 0.7, 6: 0.45, 7: 0.55};\n\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < xAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var xmin = axisMap[axisKey].xmin;\n        var xmax = axisMap[axisKey].xmax;\n        xmax = xmax + errorMax;\n        xmin = xmin - errorMax;\n        axisLabel = axisMap[axisKey].axisLabel;\n        const xPad = ((xmax - xmin) * 0.05) !== 0 ? (xmax - xmin) * 0.05 : 0.05;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'xaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [xmin - xPad, xmax + xPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'xaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [xmin - xPad, xmax + xPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'x',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'xaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [xmin - xPad, xmax + xPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'x',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const yPad = ((ymax - ymin) * 0.25) !== 0 ? (ymax - ymin) * 0.25 : 0.25;\n    ymax = ymax + (yPad * Math.ceil(xAxisNumber / 2));\n    ymin = ymin - (yPad * Math.ceil(xAxisNumber / 2));\n    layout['yaxis']['range'] = [ymin, ymax];\n    return layout;\n};\n\n// sets plot options for dieoff graphs\nconst generateDieoffPlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var xmin = axisMap[Object.keys(axisMap)[0]].xmin;\n    var xmax = axisMap[Object.keys(axisMap)[0]].xmax;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Forecast Hour',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'left', 1: 'right', 2: 'left', 3: 'right', 4: 'left', 5: 'right', 6: 'left', 7: 'right'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.1, 3: 0.9, 4: 0.2, 5: 0.8, 6: 0.3, 7: 0.7};\n\n    const yAxisNumber = Object.keys(axisMap).length;\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var ymin = axisMap[axisKey].ymin;\n        var ymax = axisMap[axisKey].ymax;\n        ymax = ymax + errorMax;\n        ymin = ymin - errorMax;\n        const yPad = ((ymax - ymin) * 0.05) !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n        xmin = axisMap[axisKey].xmin < xmin ? axisMap[axisKey].xmin : xmin;\n        xmax = axisMap[axisKey].xmax > xmax ? axisMap[axisKey].xmax : xmax;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'yaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'y',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'y',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const xPad = ((xmax - xmin) * 0.075) !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n    xmax = xmax + (xPad * Math.ceil(yAxisNumber / 2));\n    xmin = xmin - (xPad * Math.ceil(yAxisNumber / 2));\n    layout['xaxis']['range'] = [xmin, xmax];\n    return layout;\n};\n\n// sets plot options for threshold graphs\nconst generateThresholdPlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var xmin = 0;\n    var xmax = 3;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Threshold',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: [0.01, 0.1, 0.25, 0.5, 1.0, 1.5, 2.0, 3.0],\n        ticktext: [\"0.01\", \"0.10\", \"0.25\", \"0.50\", \"1.00\", \"1.50\", \"2.00\", \"3.00\"]\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'left', 1: 'right', 2: 'left', 3: 'right', 4: 'left', 5: 'right', 6: 'left', 7: 'right'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.1, 3: 0.9, 4: 0.2, 5: 0.8, 6: 0.3, 7: 0.7};\n\n    const yAxisNumber = Object.keys(axisMap).length;\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var ymin = axisMap[axisKey].ymin;\n        var ymax = axisMap[axisKey].ymax;\n        ymax = ymax + errorMax;\n        ymin = ymin - errorMax;\n        const yPad = ((ymax - ymin) * 0.05) !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'yaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'y',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'y',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const xPad = ((xmax - xmin) * 0.075) !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n    xmax = xmax + (xPad * Math.ceil(yAxisNumber / 2));\n    xmin = xmin - (xPad * Math.ceil(yAxisNumber / 2));\n    layout['xaxis']['range'] = [xmin, xmax];\n    return layout;\n};\n\n// sets plot options for valid time graphs\nconst generateValidTimePlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var xmin = 0;\n    var xmax = 23;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Hour of Day',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\n        ticktext: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"]\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'left', 1: 'right', 2: 'left', 3: 'right', 4: 'left', 5: 'right', 6: 'left', 7: 'right'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.1, 3: 0.9, 4: 0.2, 5: 0.8, 6: 0.3, 7: 0.7};\n\n    const yAxisNumber = Object.keys(axisMap).length;\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var ymin = axisMap[axisKey].ymin;\n        var ymax = axisMap[axisKey].ymax;\n        ymax = ymax + errorMax;\n        ymin = ymin - errorMax;\n        const yPad = ((ymax - ymin) * 0.05) !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'yaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'y',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'y',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const xPad = ((xmax - xmin) * 0.075) !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n    xmax = xmax + (xPad * Math.ceil(yAxisNumber / 2));\n    xmin = xmin - (xPad * Math.ceil(yAxisNumber / 2));\n    layout['xaxis']['range'] = [xmin, xmax];\n    return layout;\n};\n\n// sets plot options for reliability graphs\nconst generateReliabilityPlotOptions = function (dataset) {\n    var xmin = 0;\n    var xmax = 1;\n    var ymin = 0;\n    var ymax = 1;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: true,\n        perfectLine: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Forecast Probability',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n        ticktext: [\"0.0\", \"0.1\", \"0.2\", \"0.3\", \"0.4\", \"0.5\", \"0.6\", \"0.7\", \"0.8\", \"0.9\", \"1.0\"],\n        range: [xmin, xmax]\n    };\n\n    layout['yaxis'] = {\n        title: 'Observed Relative Frequency',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n        ticktext: [\"0.0\", \"0.1\", \"0.2\", \"0.3\", \"0.4\", \"0.5\", \"0.6\", \"0.7\", \"0.8\", \"0.9\", \"1.0\"],\n        range: [ymin, ymax]\n    };\n\n    return layout;\n};\n\n\n// sets plot options for map graphs\nconst generateMapPlotOptions = function () {\n    const options = {\n        autosize: true,\n        hovermode: 'closest',\n        mapbox: {\n            bearing: 0,\n            center: {\n                lat: 39.834,\n                lon: -98.604\n            },\n            pitch: 0,\n            zoom: 3.25,\n            accesstoken: 'pk.eyJ1IjoibWF0cy1nc2QiLCJhIjoiY2pvN2l1N2MyMG9xdTN3bWR3ODV5a2E2ZiJ9.PtgcGhxaoD43N0OwJSNVMg',\n            style: 'light'\n        },\n        margin: {\n            l: 30,\n            r: 30,\n            b: 40,\n            t: 10,\n            pad: 4\n        },\n        showlegend: false,\n    };\n    return options;\n};\n\n// sets plot options for valid time graphs\nconst generateHistogramPlotOptions = function (dataset, curves, axisMap, plotBins) {\n    const axisKey = curves[0].axisKey;\n    const axisLabel = axisMap[axisKey].axisLabel;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        bargap: 0.25,\n        barmode: 'group',\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Bin',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 12},\n        tickvals: plotBins.binMeans,\n        ticktext: plotBins.binLabels,\n    };\n\n    layout['yaxis'] = {\n        title: axisLabel,\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n    };\n\n    return layout;\n\n};\n\n// sets plot options for valid time graphs\nconst generateContourPlotOptions = function (dataset, axisMap) {\n    const xAxisKey = dataset[0]['xAxisKey'];\n    const yAxisKey = dataset[0]['yAxisKey'];\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}}\n    };\n\n    layout['xaxis'] = {\n        title: xAxisKey,\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 12},\n    };\n\n    if (yAxisKey === \"Pressure level\") {\n        layout['yaxis'] = {\n            title: yAxisKey,\n            titlefont: {color: '#000000', size: 22},\n            tickfont: {color: '#000000', size: 14},\n            tickvals: [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100],\n            ticktext: ['1000', '900', '800', '700', '600', '500', '400', '300', '200', '100'],\n            range: [1100, 0],\n            type: 'linear',\n            autorange: 'reversed'\n        };\n    } else {\n        layout['yaxis'] = {\n            title: yAxisKey,\n            titlefont: {color: '#000000', size: 22},\n            tickfont: {color: '#000000', size: 14},\n        };\n    }\n    return layout;\n\n};\n\nexport default matsDataPlotOpsUtils = {\n\n    generateSeriesPlotOptions: generateSeriesPlotOptions,\n    generateProfilePlotOptions: generateProfilePlotOptions,\n    generateDieoffPlotOptions: generateDieoffPlotOptions,\n    generateThresholdPlotOptions: generateThresholdPlotOptions,\n    generateValidTimePlotOptions: generateValidTimePlotOptions,\n    generateReliabilityPlotOptions: generateReliabilityPlotOptions,\n    generateMapPlotOptions: generateMapPlotOptions,\n    generateHistogramPlotOptions: generateHistogramPlotOptions,\n    generateContourPlotOptions: generateContourPlotOptions\n\n}\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsDataUtils} from 'meteor/randyp:mats-common';\nimport {matsDataMatchUtils} from 'meteor/randyp:mats-common';\nimport {matsDataDiffUtils} from 'meteor/randyp:mats-common';\nimport {matsDataCurveOpsUtils} from 'meteor/randyp:mats-common';\nimport {matsDataPlotOpsUtils} from 'meteor/randyp:mats-common';\nimport {moment} from 'meteor/momentjs:moment'\n\nconst processDataXYCurve = function (dataset, appParams, curveInfoParams, plotParams, bookkeepingParams) {\n    // variable to store maximum error bar length\n    var errorMax = Number.MIN_VALUE;\n    var error = \"\";\n\n    const appName = matsCollections.appName.findOne({}).app;\n\n    // if matching, pare down dataset to only matching data\n    if (curveInfoParams.curvesLength > 1 && appParams.matching) {\n        if (appParams.hasLevels) {\n            dataset = matsDataMatchUtils.getMatchedDataSetWithLevels(dataset, curveInfoParams.curvesLength, appParams.plotType);\n        } else {\n            dataset = matsDataMatchUtils.getMatchedDataSet(dataset, curveInfoParams.curvesLength);\n        }\n    }\n\n    // we may need to recalculate the axis limits after unmatched data and outliers are removed\n    var axisLimitReprocessed = {};\n\n    // calculate data statistics (including error bars) for each curve\n    for (var curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n        if (appName !== \"surfrad\") {\n            axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] = axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] !== undefined;\n        }\n        var diffFrom = curveInfoParams.curves[curveIndex].diffFrom;\n        var statisticSelect = appName.indexOf(\"anomalycor\") !== -1 ? \"ACC\" : curveInfoParams.curves[curveIndex]['statistic'];\n        var data = dataset[curveIndex];\n        const label = dataset[curveIndex].label;\n\n        var di = 0;\n        var values = [];\n        var indVars = [];\n        var means = [];\n        var rawStat;\n\n        /*\n        dataset[curveIndex] is the dataset.\n        it looks like:\n\n        d = {\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            stats: [],     //pointStats\n            text: [],\n            glob_stats: {},     //curveStats\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n        */\n\n        while (di < data.x.length) {\n\n            // errorResult holds all the calculated curve stats like mean, sd, etc.\n            var errorResult;\n            if (appParams.hasLevels) {\n                errorResult = matsDataUtils.get_err(data.subVals[di], data.subSecs[di], data.subLevs[di]);\n            } else {\n                errorResult = matsDataUtils.get_err(data.subVals[di], data.subSecs[di], []);\n            }\n\n            // store raw statistic from query before recalculating that statistic to account for data removed due to matching, QC, etc.\n            rawStat = data.y[di];\n            // this ungainly if statement is because the surfrad3 database doesn't support recalculating some stats.\n            if (appName !== \"surfrad\" ||\n                !(appName === \"surfrad\" &&\n                    (statisticSelect === 'Std deviation (do not plot matched)' || statisticSelect === 'RMS (do not plot matched)') &&\n                    !appParams.matching)) {\n                if ((diffFrom === null || diffFrom === undefined) || !appParams.matching) {\n                    // assign recalculated statistic to data[di][1], which is the value to be plotted\n                    data.y[di] = errorResult.d_mean;\n                } else {\n                    if (dataset[diffFrom[0]].y[di] !== null && dataset[diffFrom[1]].y[di] !== null) {\n                        // make sure that the diff curve actually shows the difference when matching. Otherwise outlier filtering etc. can make it slightly off.\n                        data.y[di] = dataset[diffFrom[0]].y[di] - dataset[diffFrom[1]].y[di];\n                    } else {\n                        // keep the null for no data at this point\n                        data.y[di] = null;\n                    }\n                }\n            }\n            values.push(data.y[di]);\n            indVars.push(data.x[di]);\n            means.push(errorResult.d_mean);\n\n            // store error bars if matching\n            const errorBar = errorResult.stde_betsy * 1.96;\n            if (appParams.matching) {\n                errorMax = errorMax > errorBar ? errorMax : errorBar;\n                data.error_y.array[di] = errorBar;\n            } else {\n                data.error_y.array[di] = null;\n            }\n\n            // remove sub values and times to save space\n            data.subVals[di] = [];\n            data.subSecs[di] = [];\n            data.subLevs[di] = [];\n\n            // store statistics for this di datapoint\n            data.stats[di] = {\n                raw_stat: rawStat,\n                d_mean: errorResult.d_mean,\n                sd: errorResult.sd,\n                n_good: errorResult.n_good,\n                lag1: errorResult.lag1,\n                stde_betsy: errorResult.stde_betsy\n            };\n\n            // this is the tooltip, it is the last element of each dataseries element.\n            // also change the x array from epoch to date for timeseries and DMC, as we are now done with it for calculations.\n            data.text[di] = label;\n            switch (appParams.plotType) {\n                case matsTypes.PlotTypes.timeSeries:\n                    data.text[di] = data.text[di] + \"<br>time: \" + moment.utc(data.x[di]).format(\"YYYY-MM-DD HH:mm\");\n                    break;\n                case matsTypes.PlotTypes.dailyModelCycle:\n                    var fhr = ((data.x[di] / 1000) % (24 * 3600)) / 3600 - curveInfoParams.utcCycleStarts[curveIndex];\n                    fhr = fhr < 0 ? fhr + 24 : fhr;\n                    data.text[di] = data.text[di] + \"<br>time: \" + moment.utc(data.x[di]).format(\"YYYY-MM-DD HH:mm\");\n                    data.text[di] = data.text[di] + \"<br>forecast hour: \" + fhr;\n                    break;\n                case matsTypes.PlotTypes.dieoff:\n                    data.text[di] = data.text[di] + \"<br>fhr: \" + data.x[di];\n                    break;\n                case matsTypes.PlotTypes.threshold:\n                    data.text[di] = data.text[di] + \"<br>threshold: \" + data.x[di];\n                    break;\n                case matsTypes.PlotTypes.validtime:\n                    data.text[di] = data.text[di] + \"<br>hour of day: \" + data.x[di];\n                    break;\n                default:\n                    data.text[di] = data.text[di] + \"<br>\" + data.x[di];\n                    break;\n            }\n            data.text[di] = data.text[di] +\n                \"<br>\" + statisticSelect + \": \" + (data.y[di] === null ? null : data.y[di].toPrecision(4)) +\n                \"<br>sd: \" + (errorResult.sd === null ? null : errorResult.sd.toPrecision(4)) +\n                \"<br>mean: \" + (errorResult.d_mean === null ? null : errorResult.d_mean.toPrecision(4)) +\n                \"<br>n: \" + errorResult.n_good +\n                // \"<br>lag1: \" + (errorResult.lag1 === null ? null : errorResult.lag1.toPrecision(4)) +\n                // \"<br>stde: \" + errorResult.stde_betsy +\n                \"<br>errorbars: \" + Number((data.y[di]) - (errorResult.stde_betsy * 1.96)).toPrecision(4) + \" to \" + Number((data.y[di]) + (errorResult.stde_betsy * 1.96)).toPrecision(4);\n\n            di++;\n        }\n\n        // enable error bars if matching and they aren't null\n        if (appParams.matching && data.error_y.array.filter(x => x).length > 0) {\n            data.error_y.visible = true;\n        }\n\n        // get the overall stats for the text output - this uses the means not the stats.\n        const stats = matsDataUtils.get_err(values, indVars, []);\n        const filteredMeans = means.filter(x => x);\n        var miny = Math.min(...filteredMeans);\n        var maxy = Math.max(...filteredMeans);\n        if (means.indexOf(0) !== -1 && 0 < miny) {\n            miny = 0;\n        }\n        if (means.indexOf(0) !== -1 && 0 > maxy) {\n            maxy = 0;\n        }\n        stats.miny = miny;\n        stats.maxy = maxy;\n        dataset[curveIndex]['glob_stats'] = stats;\n\n        // recalculate axis options after QC and matching\n        if (appName !== \"surfrad\") {\n            const minx = Math.min(...indVars);\n            const maxx = Math.max(...indVars);\n            curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymax'] = (curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymax'] < maxy || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey]) ? maxy : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymax'];\n            curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymin'] = (curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymin'] > miny || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey]) ? miny : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['ymin'];\n            curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'] = (curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'] < maxx || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey]) ? maxx : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'];\n            curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'] = (curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'] > minx || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey]) ? minx : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'];\n        }\n\n        // recalculate curve annotation after QC and matching\n        if (stats.d_mean !== undefined && stats.d_mean !== null) {\n            dataset[curveIndex]['annotation'] = label + \"- mean = \" + stats.d_mean.toPrecision(4);\n        }\n\n        if (appParams.plotType === matsTypes.PlotTypes.timeSeries || appParams.plotType === matsTypes.PlotTypes.dailyModelCycle) {\n            data['x_epoch'] = data.x;\n            data.x = data.x.map(function (val) {\n                return moment.utc(val).format(\"YYYY-MM-DD HH:mm\");\n            });\n        }\n\n    }\n\n    // add black 0 line curve\n    // need to define the minimum and maximum x value for making the zero curve\n    const zeroLine = matsDataCurveOpsUtils.getHorizontalValueLine(curveInfoParams.xmax, curveInfoParams.xmin, 0, matsTypes.ReservedWords.zero);\n    dataset.push(zeroLine);\n\n    //add ideal value lines, if any\n    var idealValueLine;\n    var idealLabel;\n    for (var ivIdx = 0; ivIdx < curveInfoParams.idealValues.length; ivIdx++) {\n        idealLabel = \"ideal\" + ivIdx.toString();\n        idealValueLine = matsDataCurveOpsUtils.getHorizontalValueLine(curveInfoParams.xmax, curveInfoParams.xmin, curveInfoParams.idealValues[ivIdx], matsTypes.ReservedWords[idealLabel]);\n        dataset.push(idealValueLine);\n    }\n\n    // generate plot options\n    var resultOptions;\n    switch (appParams.plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.dailyModelCycle:\n            resultOptions = matsDataPlotOpsUtils.generateSeriesPlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n            break;\n        case matsTypes.PlotTypes.dieoff:\n            resultOptions = matsDataPlotOpsUtils.generateDieoffPlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n            break;\n        case matsTypes.PlotTypes.validtime:\n            resultOptions = matsDataPlotOpsUtils.generateValidTimePlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n            break;\n        case matsTypes.PlotTypes.threshold:\n            resultOptions = matsDataPlotOpsUtils.generateThresholdPlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n            break;\n        default:\n            break;\n    }\n\n    var totalProcessingFinish = moment();\n    bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n        begin: bookkeepingParams.totalProcessingStart.format(),\n        finish: totalProcessingFinish.format(),\n        duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n    };\n\n    // pass result to client-side plotting functions\n    return {\n        error: error,\n        data: dataset,\n        options: resultOptions,\n        basis: {\n            plotParams: plotParams,\n            queries: bookkeepingParams.dataRequests\n        }\n    };\n};\n\nconst processDataProfile = function (dataset, appParams, curveInfoParams, plotParams, bookkeepingParams) {\n    // variable to store maximum error bar length\n    var errorMax = Number.MIN_VALUE;\n    var error = \"\";\n\n    const appName = matsCollections.appName.findOne({}).app;\n\n    // if matching, pare down dataset to only matching data\n    if (curveInfoParams.curvesLength > 1 && appParams.matching) {\n        dataset = matsDataMatchUtils.getMatchedDataSetWithLevels(dataset, curveInfoParams.curvesLength, appParams.plotType);\n    }\n\n    // we may need to recalculate the axis limits after unmatched data and outliers are removed\n    var axisLimitReprocessed = {};\n\n    // calculate data statistics (including error bars) for each curve\n    for (var curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n        axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] = axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey] !== undefined;\n        var diffFrom = curveInfoParams.curves[curveIndex].diffFrom;\n        var statisticSelect = appName.indexOf(\"anomalycor\") !== -1 ? \"ACC\" : curveInfoParams.curves[curveIndex]['statistic'];\n        var data = dataset[curveIndex];\n        const label = dataset[curveIndex].label;\n\n        var di = 0;\n        var values = [];\n        var levels = [];\n        var means = [];\n        var rawStat;\n\n        /*\n        dataset[curveIndex] is the dataset.\n        it looks like:\n\n        d = {\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            stats: [],     //pointStats\n            text: [],\n            glob_stats: {},     //curveStats\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n        */\n\n        while (di < data.y.length) {\n\n            // errorResult holds all the calculated curve stats like mean, sd, etc.\n            var errorResult = matsDataUtils.get_err(data.subVals[di], data.subSecs[di], data.subLevs[di]);\n\n            // store raw statistic from query before recalculating that statistic to account for data removed due to matching, QC, etc.\n            rawStat = data.x[di];\n            if ((diffFrom === null || diffFrom === undefined) || !appParams.matching) {\n                // assign recalculated statistic to data[di][1], which is the value to be plotted\n                data.x[di] = errorResult.d_mean;\n            } else {\n                if (dataset[diffFrom[0]].x[di] !== null && dataset[diffFrom[1]].x[di] !== null) {\n                    // make sure that the diff curve actually shows the difference when matching. Otherwise outlier filtering etc. can make it slightly off.\n                    data.x[di] = dataset[diffFrom[0]].x[di] - dataset[diffFrom[1]].x[di];\n                } else {\n                    // keep the null for no data at this point\n                    data.x[di] = null;\n                }\n            }\n            values.push(data.x[di]);\n            levels.push(data.y[di]);\n            means.push(errorResult.d_mean);\n\n            // store error bars if matching\n            const errorBar = errorResult.stde_betsy * 1.96;\n            if (appParams.matching) {\n                errorMax = errorMax > errorBar ? errorMax : errorBar;\n                data.error_x.array[di] = errorBar;\n            } else {\n                data.error_x.array[di] = null;\n            }\n\n            // remove sub values and times to save space\n            data.subVals[di] = [];\n            data.subSecs[di] = [];\n            data.subLevs[di] = [];\n\n            // store statistics\n            data.stats[di] = {\n                raw_stat: rawStat,\n                d_mean: errorResult.d_mean,\n                sd: errorResult.sd,\n                n_good: errorResult.n_good,\n                lag1: errorResult.lag1,\n                stde_betsy: errorResult.stde_betsy\n            };\n\n            // this is the tooltip, it is the last element of each dataseries element\n            data.text[di] = label +\n                \"<br>\" + data.y[di] + \"mb\" +\n                \"<br>\" + statisticSelect + \": \" + (data.x[di] === null ? null : data.x[di].toPrecision(4)) +\n                \"<br>sd: \" + (errorResult.sd === null ? null : errorResult.sd.toPrecision(4)) +\n                \"<br>mean: \" + (errorResult.d_mean === null ? null : errorResult.d_mean.toPrecision(4)) +\n                \"<br>n: \" + errorResult.n_good +\n                // \"<br>lag1: \" + (errorResult.lag1 === null ? null : errorResult.lag1.toPrecision(4)) +\n                // \"<br>stde: \" + errorResult.stde_betsy +\n                \"<br>errorbars: \" + Number((data.x[di]) - (errorResult.stde_betsy * 1.96)).toPrecision(4) + \" to \" + Number((data.x[di]) + (errorResult.stde_betsy * 1.96)).toPrecision(4);\n\n            di++;\n        }\n\n        // enable error bars if matching and they aren't null\n        if (appParams.matching && data.error_x.array.filter(x => x).length > 0) {\n            data.error_x.visible = true;\n        }\n\n        // get the overall stats for the text output - this uses the means not the stats.\n        const stats = matsDataUtils.get_err(values.reverse(), levels.reverse(), []); // have to reverse because of data inversion\n        const filteredMeans = means.filter(x => x);\n        var minx = Math.min(...filteredMeans);\n        var maxx = Math.max(...filteredMeans);\n        if (means.indexOf(0) !== -1 && 0 < minx) {\n            minx = 0;\n        }\n        if (means.indexOf(0) !== -1 && 0 > maxx) {\n            maxx = 0;\n        }\n        stats.minx = minx;\n        stats.maxx = maxx;\n        dataset[curveIndex]['glob_stats'] = stats;\n\n        // recalculate axis options after QC and matching\n        curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'] = (curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'] < maxx || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey]) ? maxx : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmax'];\n        curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'] = (curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'] > minx || !axisLimitReprocessed[curveInfoParams.curves[curveIndex].axisKey]) ? minx : curveInfoParams.axisMap[curveInfoParams.curves[curveIndex].axisKey]['xmin'];\n\n        // recalculate curve annotation after QC and matching\n        if (stats.d_mean !== undefined && stats.d_mean !== null) {\n            dataset[curveIndex]['annotation'] = label + \"- mean = \" + stats.d_mean.toPrecision(4);\n        }\n    }\n\n    // add black 0 line curve\n    // need to define the minimum and maximum x value for making the zero curve\n    const zeroLine = matsDataCurveOpsUtils.getVerticalValueLine(1100, 0, 0, matsTypes.ReservedWords.zero);\n    dataset.push(zeroLine);\n\n    //add ideal value lines, if any\n    var idealValueLine;\n    var idealLabel;\n    for (var ivIdx = 0; ivIdx < curveInfoParams.idealValues.length; ivIdx++) {\n        idealLabel = \"ideal\" + ivIdx.toString();\n        idealValueLine = matsDataCurveOpsUtils.getVerticalValueLine(1100, 0, curveInfoParams.idealValues[ivIdx], matsTypes.ReservedWords[idealLabel]);\n        dataset.push(idealValueLine);\n    }\n\n    // generate plot options\n    const resultOptions = matsDataPlotOpsUtils.generateProfilePlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, errorMax);\n    var totalProcessingFinish = moment();\n    bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n        begin: bookkeepingParams.totalProcessingStart.format(),\n        finish: totalProcessingFinish.format(),\n        duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n    };\n\n    // pass result to client-side plotting functions\n    return {\n        error: error,\n        data: dataset,\n        options: resultOptions,\n        basis: {\n            plotParams: plotParams,\n            queries: bookkeepingParams.dataRequests\n        }\n    };\n};\n\nconst processDataReliability = function (dataset, appParams, curveInfoParams, plotParams, bookkeepingParams) {\n    var error = \"\";\n\n    // calculate data statistics (including error bars) for each curve\n    for (var curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n\n        var data = dataset[curveIndex];\n        const label = dataset[curveIndex].label;\n\n        var sample_climo = data.subVals;\n        var di = 0;\n\n        /*\n        dataset[curveIndex] is the dataset.\n        it looks like:\n\n        d = {\n            x: [],\n            y: [],\n            error_x: [],   // curveTime\n            error_y: [],   // values\n            subVals: [],   //subVals\n            subSecs: [],   //subSecs\n            subLevs: [],   //subLevs\n            stats: [],     //pointStats\n            text: [],\n            glob_stats: {},     //curveStats\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n            sum: 0\n        };\n        */\n\n        while (di < data.x.length) {\n\n            // store statistics for this di datapoint\n            data.stats[di] = {\n                prob_bin: data.x[di],\n                hit_rate: data.y[di],\n                obs_y: data.error_x[di],\n                obs_n: data.subLevs[di]\n            };\n\n            // this is the tooltip, it is the last element of each dataseries element.\n            // also change the x array from epoch to date for timeseries and DMC, as we are now done with it for calculations.\n            data.text[di] = label;\n            data.text[di] = data.text[di] + \"<br>probability bin: \" + data.x[di];\n            data.text[di] = data.text[di] + \"<br>hit rate: \" + data.y[di];\n            data.text[di] = data.text[di] + \"<br>oy: \" + data.error_x[di];\n            data.text[di] = data.text[di] + \"<br>on: \" + data.subLevs[di];\n\n            // remove sub values and times to save space\n            data.subVals[di] = [];\n            data.subSecs[di] = [];\n            data.subLevs[di] = [];\n\n            di++;\n        }\n\n        dataset[curveIndex]['glob_stats'] = {\n            sample_climo: sample_climo\n        };\n    }\n\n    // add black perfect reliability line curve\n    const perfectLine = matsDataCurveOpsUtils.getLinearValueLine(curveInfoParams.xmax, curveInfoParams.xmin, data.ymax, data.ymin, matsTypes.ReservedWords.perfectReliability);\n    dataset.push(perfectLine);\n\n    if (sample_climo >= data.ymin) {\n        var skillmin = sample_climo - ((sample_climo - data.xmin) / 2);\n    } else {\n        var skillmin = data.xmin - ((data.xmin - sample_climo) / 2);\n    }\n    if (sample_climo >= data.ymax) {\n        var skillmax = sample_climo - ((sample_climo - data.xmax) / 2);\n    } else {\n        var skillmax = data.xmax - ((data.xmax - sample_climo) / 2);\n    }\n\n\n    // add black no skill line curve\n    const noSkillLine = matsDataCurveOpsUtils.getLinearValueLine(curveInfoParams.xmax, curveInfoParams.xmin, skillmax, skillmin, matsTypes.ReservedWords.noSkill);\n    dataset.push(noSkillLine);\n\n    // add sample climo lines\n    // need to define the minimum and maximum x value for making the curves\n    const xClimoLine = matsDataCurveOpsUtils.getHorizontalValueLine(curveInfoParams.xmax, curveInfoParams.xmin, sample_climo, matsTypes.ReservedWords.zero);\n    dataset.push(xClimoLine);\n\n    const yClimoLine = matsDataCurveOpsUtils.getVerticalValueLine(curveInfoParams.xmax, curveInfoParams.xmin, sample_climo, matsTypes.ReservedWords.zero);\n    dataset.push(yClimoLine);\n\n    // generate plot options\n    var resultOptions = matsDataPlotOpsUtils.generateReliabilityPlotOptions();\n\n    var totalProcessingFinish = moment();\n    bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n        begin: bookkeepingParams.totalProcessingStart.format(),\n        finish: totalProcessingFinish.format(),\n        duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n    };\n\n    // pass result to client-side plotting functions\n    return {\n        error: error,\n        data: dataset,\n        options: resultOptions,\n        basis: {\n            plotParams: plotParams,\n            queries: bookkeepingParams.dataRequests\n        }\n    };\n};\n\nconst processDataHistogram = function (allReturnedSubStats, allReturnedSubSecs, allReturnedSubLevs, dataset, appParams, curveInfoParams, plotParams, binParams, bookkeepingParams) {\n    var error = \"\";\n    var curvesLengthSoFar = 0;\n\n    // flatten all the returned data into one stats array and one secs array in order to calculate histogram bins over the whole range.\n    const curveSubStats = [].concat.apply([], allReturnedSubStats);\n    const curveSubSecs = [].concat.apply([], allReturnedSubSecs);\n\n    var binStats;\n    if (binParams.binBounds.length === 0) {\n        binStats = matsDataUtils.calculateHistogramBins(curveSubStats, curveSubSecs, binParams).binStats;\n    } else {\n        binStats = matsDataUtils.prescribeHistogramBins(curveSubStats, curveSubSecs, binParams).binStats;\n    }\n\n    // store bin labels and x-axis positions of those labels for later when we set up the plot options\n    var plotBins = {};\n    plotBins['binMeans'] = [];\n    plotBins['binLabels'] = [];\n    for (var b_idx = 0; b_idx < binStats.binMeans.length; b_idx++) {\n        plotBins['binMeans'].push(binStats.binMeans[b_idx]);\n        plotBins['binLabels'].push(binStats.binLabels[b_idx]);\n    }\n\n    // post process curves\n    var sortedData;\n    var curve;\n    var diffFrom;\n    var label;\n    for (var curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n        curve = curveInfoParams.curves[curveIndex];\n        diffFrom = curve.diffFrom;\n        label = curve.label;\n\n        var d = {// d will contain the curve data\n            x: [], //placeholder\n            y: [], //placeholder\n            error_x: [], // unused\n            error_y: [], // unused\n            subVals: [],\n            subSecs: [],\n            subLevs: [],\n            glob_stats: {}, // placeholder\n            bin_stats: [], // placeholder\n            text: [], //placeholder\n            xmin: Number.MAX_VALUE,\n            xmax: Number.MIN_VALUE,\n            ymin: Number.MAX_VALUE,\n            ymax: Number.MIN_VALUE,\n        };\n\n        if (diffFrom == null) {\n            var postQueryStartMoment = moment();\n            if (curveInfoParams.dataFoundForCurve[curveIndex]) {\n                // sort queried data into the full set of histogram bins\n                sortedData = matsDataUtils.sortHistogramBins(allReturnedSubStats[curveIndex], allReturnedSubSecs[curveIndex], allReturnedSubLevs[curveIndex], binParams.binNum, binStats, appParams.hasLevels, d);\n                d = sortedData.d;\n            }\n        } else {\n            // this is a difference curve, so we're done with regular curves.\n            // do any matching that needs to be done.\n            if (appParams.matching && !bookkeepingParams.alreadyMatched) {\n                if (appParams.hasLevels) {\n                    dataset = matsDataMatchUtils.getMatchedDataSetHistogramWithLevels(dataset, curvesLengthSoFar, binStats);\n                } else {\n                    dataset = matsDataMatchUtils.getMatchedDataSetHistogram(dataset, curvesLengthSoFar, binStats);\n                }\n                bookkeepingParams.alreadyMatched = true;\n            }\n\n            // then take diffs\n            const diffResult = matsDataDiffUtils.getDataForDiffCurve(dataset, diffFrom, matsTypes.PlotTypes.histogram, appParams.hasLevels);\n\n            // adjust axis stats based on new data from diff curve\n            d = diffResult.dataset;\n        }\n\n        // set curve annotation to be the curve mean -- may be recalculated later\n        // also pass previously calculated axis stats to curve options\n        curve['annotation'] = \"\";\n        curve['axisKey'] = curveInfoParams.curves[curveIndex].axisKey;\n        const cOptions = matsDataCurveOpsUtils.generateBarChartCurveOptions(curve, curveIndex, curveInfoParams.axisMap, d);  // generate plot with data, curve annotation, axis labels, etc.\n        dataset.push(cOptions);\n        curvesLengthSoFar++;\n        var postQueryFinishMoment = moment();\n        bookkeepingParams.dataRequests[\"post data retrieval (query) process time - \" + curve.label] = {\n            begin: postQueryStartMoment.format(),\n            finish: postQueryFinishMoment.format(),\n            duration: moment.duration(postQueryFinishMoment.diff(postQueryStartMoment)).asSeconds() + ' seconds'\n        }\n    }  // end for curves\n\n    // if matching, pare down dataset to only matching data. Only do this if we didn't already do it while calculating diffs.\n    if (curveInfoParams.curvesLength > 1 && (appParams.matching && !bookkeepingParams.alreadyMatched)) {\n        if (appParams.hasLevels) {\n            dataset = matsDataMatchUtils.getMatchedDataSetHistogramWithLevels(dataset, curveInfoParams.curvesLength, binStats);\n        } else {\n            dataset = matsDataMatchUtils.getMatchedDataSetHistogram(dataset, curveInfoParams.curvesLength, binStats);\n        }\n    }\n\n    // calculate data statistics (including error bars) for each curve\n    for (curveIndex = 0; curveIndex < curveInfoParams.curvesLength; curveIndex++) {\n        var statisticSelect = curveInfoParams.curves[curveIndex]['statistic'];\n        diffFrom = curveInfoParams.curves[curveIndex].diffFrom;\n        var data = dataset[curveIndex];\n        label = dataset[curveIndex].label;\n\n        var di = 0;\n\n        while (di < data.x.length) {\n\n            if (curveInfoParams.yAxisFormat === 'Relative frequency') {\n                // replace the bin number with the bin relative frequency for the plotted statistic\n                data.y[di] = data.bin_stats[di].bin_rf * 100;\n            }\n\n            // remove sub values and times to save space\n            data.subVals[di] = [];\n            data.subSecs[di] = [];\n            data.subLevs[di] = [];\n\n            // this is the tooltip, it is the last element of each dataseries element\n            data.text[di] = label +\n                \"<br>\" + \"bin: \" + di + \" (\" + statisticSelect + \" values between \" + (data.bin_stats[di].binLowBound === null ? null : data.bin_stats[di].binLowBound.toPrecision(4)) + \" and \" + (data.bin_stats[di].binUpBound === null ? null : data.bin_stats[di].binUpBound.toPrecision(4)) + \")\" +\n                \"<br>\" + \"number in bin for this curve: \" + (data.y[di] === null ? null : data.y[di]) +\n                \"<br>bin mean for this curve: \" + statisticSelect + \" = \" + (data.bin_stats[di].bin_mean === null ? null : data.bin_stats[di].bin_mean.toPrecision(4)) +\n                \"<br>bin sd  for this curve: \" + statisticSelect + \" = \" + (data.bin_stats[di].bin_sd === null ? null : data.bin_stats[di].bin_sd.toPrecision(4));\n\n            di++;\n        }\n    } // end curves\n\n    // generate plot options\n    const resultOptions = matsDataPlotOpsUtils.generateHistogramPlotOptions(dataset, curveInfoParams.curves, curveInfoParams.axisMap, plotBins);\n    var totalProcessingFinish = moment();\n    bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n        begin: bookkeepingParams.totalProcessingStart.format(),\n        finish: totalProcessingFinish.format(),\n        duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n    };\n\n    // pass result to client-side plotting functions\n    return {\n        error: error,\n        data: dataset,\n        options: resultOptions,\n        basis: {\n            plotParams: plotParams,\n            queries: bookkeepingParams.dataRequests\n        }\n    };\n\n};\n\nconst processDataContour = function (dataset, curveInfoParams, plotParams, bookkeepingParams) {\n    var error = \"\";\n    const appName = matsCollections.appName.findOne({}).app;\n    var statisticSelect = appName.indexOf(\"anomalycor\") !== -1 ? \"ACC\" : curveInfoParams.curve[0]['statistic'];\n    var data = dataset[0];\n    const label = dataset[0].label;\n\n    if (data.xAxisKey.indexOf(\"Date\") !== -1) {\n        data.x = data.x.map(function (val) {\n            return moment.utc(val * 1000).format(\"YYYY-MM-DD HH:mm\");\n        });\n    } else if (data.yAxisKey.indexOf(\"Date\") !== -1) {\n        data.y = data.y.map(function (val) {\n            return moment.utc(val * 1000).format(\"YYYY-MM-DD HH:mm\");\n        });\n    }\n\n    var i;\n    var j;\n    var currX;\n    var currY;\n    var currText;\n    var currYTextArray;\n    for (j = 0; j < data.y.length; j++) {\n        currY = data.y[j];\n        currYTextArray = [];\n        for (i = 0; i < data.x.length; i++) {\n            currX = data.x[i];\n            currText = label +\n                \"<br>\" + data['xAxisKey'] + \": \" + data.x[i] +\n                \"<br>\" + data['yAxisKey'] + \": \" + data.y[j] +\n                \"<br>\" + statisticSelect + \": \" + (data.z[j][i] === undefined || data.z[j][i] === null || data.z[j][i] === 'null' ? null : data.z[j][i].toPrecision(4)) +\n                \"<br>n: \" + data['n'][j][i];\n            currYTextArray.push(currText);\n        }\n        data.text.push(currYTextArray);\n    }\n\n    // generate plot options\n    const resultOptions = matsDataPlotOpsUtils.generateContourPlotOptions(dataset, curveInfoParams.axisMap);\n\n    var totalProcessingFinish = moment();\n    bookkeepingParams.dataRequests[\"total retrieval and processing time for curve set\"] = {\n        begin: bookkeepingParams.totalProcessingStart.format(),\n        finish: totalProcessingFinish.format(),\n        duration: moment.duration(totalProcessingFinish.diff(bookkeepingParams.totalProcessingStart)).asSeconds() + ' seconds'\n    };\n\n    // pass result to client-side plotting functions\n    return {\n        error: error,\n        data: dataset,\n        options: resultOptions,\n        basis: {\n            plotParams: plotParams,\n            queries: bookkeepingParams.dataRequests\n        }\n    };\n};\n\nexport default matsDataProcessUtils = {\n\n    processDataXYCurve: processDataXYCurve,\n    processDataProfile: processDataProfile,\n    processDataReliability: processDataReliability,\n    processDataHistogram: processDataHistogram,\n    processDataContour: processDataContour\n\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {Meteor} from \"meteor/meteor\";\nimport {\n    matsCollections,\n    matsDataCurveOpsUtils,\n    matsDataDiffUtils,\n    matsDataProcessUtils,\n    matsDataQueryUtils,\n    matsDataUtils,\n    matsMethods,\n    matsParamUtils,\n    matsTypes\n} from 'meteor/randyp:mats-common';\nimport {mysql} from 'meteor/pcel:mysql';\nimport {moment} from 'meteor/momentjs:moment';\n\nconst statMvTranslation = {\n    'ACC': \"ANOM_CORR\",\n    'RMS': 'RMSE',\n    'Bias (Model - Obs)': 'ME',\n    'Model average': \"FBAR\",\n    'Obs average': \"OBAR\"\n};\n\nconst xmlBuilder = require('xmlbuilder');\n\nconst _pad = function(num, size){\n    var s = num+\"\";\n    while (s.length < size) s = \"0\" + s;\n    return s;\n}\n\nconst _title = function () {\n    try {\n        if (matsCollections.Settings === undefined || matsCollections.Settings.findOne({}, {fields: {Title: 1}}) === undefined) {\n            return \"\";\n        } else {\n            return matsCollections.Settings.findOne({}, {fields: {Title: 1}}).Title;\n        }\n    } catch (someError) {\n        return \"\";\n    }\n};\n\nconst _plotText = function (plotParams) {\n    var format = plotParams.plotFormat;\n\n    if (matsCollections.PlotParams.findOne({name: 'plotFormat'}) &&\n        matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap &&\n        matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap[plotParams.plotFormat] !== undefined) {\n        format = matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap[plotParams.plotFormat];\n    }\n    if (format === undefined) {\n        format = \"Unmatched\";\n    }\n    const plotType = (_.invert(plotParams.plotTypes))[true];\n    switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n            return \"TimeSeries \" + plotParams.dates + \" : \" + format;\n            break;\n        case matsTypes.PlotTypes.profile:\n            return \"Profile: \" + format;\n            break;\n        case matsTypes.PlotTypes.dieoff:\n            return \"DieOff: \" + format;\n            break;\n        case matsTypes.PlotTypes.threshold:\n            return \"Threshold: \" + format;\n            break;\n        case matsTypes.PlotTypes.validtime:\n            return \"ValidTime: \" + format;\n            break;\n        case matsTypes.PlotTypes.dailyModelCycle:\n            return \"DailyModelCycle \" + plotParams.dates + \" : \" + format;\n            break;\n        case matsTypes.PlotTypes.reliability:\n            return \"Reliability: \" + format;\n            break;\n        case matsTypes.PlotTypes.map:\n            return \"Map \" + plotParams.dates + \" \";\n            break;\n        case matsTypes.PlotTypes.histogram:\n            return \"Histogram: \" + format;\n            break;\n        default:\n            return \"Scatter: \" + plotParams.dates + \" : \" + format;\n    }\n}\n\nconst _componentToHex = function(c) {\n    var hex = c.toString(16);\n    return hex.length == 1 ? \"0\" + hex : hex;\n};\n\nconst _rgbToHex = function(color) {\n    const cParts = color.replace('rgb(','').replace(')','').split(',');\n    const r = Number(cParts[0]);\n    const g = Number(cParts[1]);\n    const b = Number(cParts[2]);\n    return \"#\" + _componentToHex(r) + _componentToHex(g) + _componentToHex(b);\n};\n\n\nconst _getUniqDates = function(dates, database, model, dataSource, region, variable, forecastLength, fromSecs, toSecs, validTimes ) {\n    var regionsClause = \"\";\n    if (region != null) {\n        region = Array.isArray(region) ? region : [region];\n        if (region.length > 0) {\n            const regions = region.map(function (r) {\n                return \"'\" + r + \"'\";\n            }).join(',');\n            regionsClause = \"and h.vx_mask IN(\" + regions + \")\";\n        }\n    }\n\n    // the forecast lengths appear to have sometimes been inconsistent (by format) in the varias databases\n    // so they have been sanitized for display purposes in the forecastValueMap.\n    // now we have to go get the damn ole unsanitary ones for the database.\n    var forecastLengthsClause = \"\";\n    if (forecastLength != null) {\n        forecastLength = Array.isArray(forecastLength) ? forecastLength : [forecastLength];\n        if (forecastLength.length > 0) {\n            const forecastValueMap = matsCollections.CurveParams.findOne({name: 'forecast-length'}, {valuesMap: 1})['valuesMap'][database][dataSource];\n            const forecastLengths = forecastLength.map(function (fl) {\n                return forecastValueMap[fl];\n            }).join(',');\n            forecastLengthsClause = \"and ld.fcst_lead IN (\" + forecastLengths + \")\";\n        }\n    }\n\n    var statement = \"select ld.fcst_valid_beg as avtime \" +\n        \"from \" + database + \".stat_header h, \" + database + \".line_data_sl1l2 ld \" +\n        \"where 1=1 and h.model = '\" + model + \"' \" +\n        regionsClause +\n        \"and unix_timestamp(ld.fcst_valid_beg) >= '\" + fromSecs + \"' \" +\n        \"and unix_timestamp(ld.fcst_valid_beg) <= '\" + toSecs + \"' \" +\n        forecastLengthsClause +\n        \"and h.fcst_var = '\" + variable + \"' \" +\n        \"and ld.stat_header_id = h.stat_header_id \" +\n        \"group by avtime order by avtime;\";\n\n    var rows = matsDataQueryUtils.simplePoolQueryWrapSynchronous(metadataPool, statement);\n    if (rows === undefined || rows === null || rows.length === 0) {\n        console.log(matsTypes.Messages.NO_DATA_FOUND);\n    } else {\n\n        for (var rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n            const dstrMoment = moment(rows[rowIndex].avtime);\n            const dstr = dstrMoment.format('YYYY-MM-DD HH:mm:ss').trim();\n            // apply the valid-time filter here.....\n            var valid = true;\n            if (validTimes != null && validTimes.length > 0) {\n                valid = false;\n                const momentSdiHour = Number(dstrMoment.format(\"HH\"));\n                for (var vti = 0; vti < validTimes.length; vti++) {\n                    const thisvt = Number(validTimes[vti]);\n                    if (momentSdiHour === thisvt) {\n                        // it is valid\n                        valid = true;\n                        break;\n                    }\n                }\n            }\n            if (valid === true && dates.indexOf(dstr) === -1) {\n                dates.push(dstr);\n            }\n        }\n    }\n    return dates;\n}\n\n\n// adds date elements to an element of the current xml between a start and an end date, incremented by specific seconds\n// series variables can be grouped or ungrouped.\n// e.g. grouped ...    <val>2018-11-01 00:00:00,2018-11-01 06:00:00,2018-11-01 12:00:00,2018-11-01</val>\n// e.g. ungrouped ...    <val>2018-11-01 00:00:00</val>\n//                       <val>2018-11-01 06:00:00</val>\n//                       <val>2018-11-01 12:00:00</val>\n//                       <val>2018-11-01</val>\n\n// for time series valid_beg is always ungrouped.\nconst _getSortedDatesForIndepRange = function(plotParams) {\n    const dateRange = matsDataUtils.getDateRange(plotParams.dates);\n    const fromSecs = dateRange.fromSeconds;\n    const toSecs = dateRange.toSeconds;\n    const curves = plotParams.curves;\n    // have to get all the valid dates for each curve then union them\n    // to get a complete date list\n    var dates = [];\n    for (var ci = 0; ci < curves.length; ci++) {\n        if (curves[ci]['diffFrom']) {\n            // currrently we do not do mv differencing\n            continue;\n        }\n        var curve = curves[ci];\n        const validTimes = curve['valid-time'];\n        const region = curve['region'];\n        const forecastLength = curve['forecast-length'];\n        const variable = curve['variable'];\n        //example 2018-11-06 00:00:00\n        const database = curve['database'];\n        const dataSource = curve['data-source'];\n        const model = matsCollections.CurveParams.findOne({name: 'data-source'}).optionsMap[database][dataSource][0];\n        dates = _getUniqDates(dates, database, model, dataSource, region, variable, forecastLength, fromSecs, toSecs, validTimes);\n    }\n    // sort the dates\n    const sortedDates = dates.sort(\n        function (a, b) {\n            return new moment(a) - new moment(b);\n        }\n    );\n    return sortedDates;\n}\n\nconst _getSortedHoursForIndepRange = function(plotParams) {\n    const sortedDates = _getSortedDatesForIndepRange(plotParams);\n    var hours = new Set();\n    for (var di=0;di<sortedDates.length;di++) {\n        const hour = moment(sortedDates[di]).format(\"HH\");\n        hours.add(hour);\n    }\n    return Array.from(hours).sort();\n}\n\nconst _getSortedDatesForDepRange = function(curve) {\n    var dates = [];\n    const dateRange = matsDataUtils.getDateRange(curve['curve-dates']);\n    const fromSecs = dateRange.fromSeconds;\n    const toSecs = dateRange.toSeconds;\n    const validTimes = curve['valid-time'];\n    const region = curve['region'];\n    const forecastLength = curve['forecast-length'];\n    const variable = curve['variable'];\n    //example 2018-11-06 00:00:00\n    const database = curve['database'];\n    const dataSource = curve['data-source'];\n    const model = matsCollections.CurveParams.findOne({name: 'data-source'}).optionsMap[database][dataSource][0];\n    dates = _getUniqDates(dates, database, model, dataSource, region, variable, forecastLength, fromSecs, toSecs, validTimes);\n\n    // sort the dates\n    const sortedDates = dates.sort(\n        function (a, b) {\n            return new moment(a) - new moment(b);\n        }\n    );\n    return sortedDates;\n}\n\n\n// for profiles valid_beg is always grouped.\nconst addIndepUngroupedDateElementsBetween = function (element, plotParams) {\n    const sortedDates = _getSortedDatesForIndepRange(plotParams);\n    //these must be ungrouped\n    for (var sdi = 0; sdi < sortedDates.length; sdi++) {\n        element.ele('val', {\n            'label': sortedDates[sdi],\n            'plot_val': \"\"\n        }, sortedDates[sdi]);\n    }\n}\n\n// parse the databases from the curves and add a database string\nconst addDatabaseElement = function(element, curves){\n    try {\n        databases = [];\n\n        for (var ci=0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            if (!databases.includes(curves[ci].database)) {\n                databases.push(curves[ci].database);\n            }\n        }\n        databasesStr = databases.join(\"'\");\n        element.ele('database',databasesStr);\n        return element;\n    } catch (someError) {\n        return \"\";\n    }\n};\n\n// add the required metviewer folders\nconst addFolders = function(element) {\n    try {\n        element.ele('rscript', Meteor.settings.private.MV_RSCRIPT);\n        var folders = element.ele('folders');\n        folders.ele('r_tmpl', matsMethods.MV_DIRS.HOME + \"/R_tmpl\");\n        folders.ele('r_work', matsMethods.MV_DIRS.HOME + \"/R_work\");\n        folders.ele('plots', matsMethods.MV_DIRS.PLOTSDIR);\n        folders.ele('data', matsMethods.MV_DIRS.DATADIR);\n        folders.ele('scripts', matsMethods.MV_DIRS.SCRIPTSDIR);\n        return element;\n    } catch (e) {\n    }\n};\n\n// start the plotspec\nconst startPlotSpec = function(pool, plotParams) {\n    try {\n        var xml = xmlBuilder.create('plot_spec', {version: \"1.0\", encoding: \"UTF-8\", standalone: false});\n        var connection = xml.ele('connection');\n        connection.ele('host', sumPool.config.connectionConfig.host + \":\" + sumPool.config.connectionConfig.port);\n        addDatabaseElement(connection, plotParams.curves);\n        connection.ele('user', sumPool.config.connectionConfig.user);\n        connection.ele('password', sumPool.config.connectionConfig.password);\n        const management_system = Meteor.settings.private.MV_DB_MANAGEMENT_SYSTEM != null ? Meteor.settings.private.MV_DB_MANAGEMENT_SYSTEM : \"mysql\";\n        connection.ele('management_system', management_system);\n        addFolders(xml);\n        var plot = xml.ele('plot');\n        return {xml:xml,plot:plot};\n    } catch (e) {\n    }\n};\n\nconst addPlotCi = function(element,plotParams){\n    try { //example c(\"none\",\"none\")\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push('\"none\"');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('plot_ci', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addShowSignif = function(element,plotParams){\n    try { //example c(FALSE,FALSE)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push('FALSE');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('show_signif', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addPlotDisp = function(element,plotParams){\n    try { //example c(TRUE,TRUE)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            cList.push('TRUE');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('plot_disp', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addColors = function(element,plotParams){\n    try { //  example  'c(\"#ff0000FF\",\"#8000ffFF\")'\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            var ch = _rgbToHex(curves[ci].color) + \"FF\";\n            cList.push('\"' + ch + '\"');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('colors', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addPch = function(element,plotParams){\n    try { //example c(20,20)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push('20');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('pch', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addType = function(element,plotParams){\n    try { //example c(\"b\",\"b\")\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push('\"b\"');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('type', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addLty = function(element,plotParams){\n    try { // example c(1,1)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push(1);\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('lty', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addLwd = function(element,plotParams){\n    try { // example c(1,1)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push(1);\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('lwd', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addConSeries = function(element,plotParams){\n    try { // example c(1,1)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push(1);\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('con_series', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addOrderSeries = function(element,plotParams){\n    try { // example c(1,2)\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push(ci + 1);\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('order_series', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addLegend = function(element,plotParams){\n    try { // example c(\"\",\"\")\n        var curves = plotParams.curves;\n        var cList = [];\n        var cListStr = 'c(';\n        for (var ci = 0; ci < curves.length; ci++) {\n            if (curves[ci]['diffFrom']) {\n                // currrently we do not do mv differencing\n                continue;\n            }\n            cList.push('\"\"');\n        }\n        cListStr += cList.join(',') + ')';\n        element.ele('legend', cListStr);\n    } catch (e) {\n    }\n};\n\nconst addSeries = function(plot, dependentAxes, plotParams) {\n    /***\n     data-source(models), region(vx_mask),forecast_length (fcst_lead), and pres-level(fcst_lev)\n     are series variables. Multiple selections for a given curve are MV grouped (join'd)\n     Multiple selections associated with different curves are seperate <val> tags.\n\n     All of the non grouped combinations are added which results in possibly too many curves. The redundant ones are later hidden.\n\n     They can also go on the axis that is associated with the curve that the region parameter is on.\n     In other words force a new series.\n     i.e. Y1 Series variables or Y2 Series variables\n\n     series variables can be grouped or ungrouped.\n     e.g. grouped ...    <val>2018-11-01 00:00:00,2018-11-01 06:00:00,2018-11-01 12:00:00,2018-11-01</val>\n     e.g. ungrouped ...    <val>2018-11-01 00:00:00</val>\n     <val>2018-11-01 06:00:00</val>\n     <val>2018-11-01 12:00:00</val>\n     <val>2018-11-01</val>\n     For MATS curves they are grouped for each curve and added ase series variables. This results in redundant curves in MV and so the\n     redundant curves will be hidden.\n     Curves that were assigned to different axis were figured out and assigned in getDependents and are assigned in the dependentAxes structure.\n     ***/\n    var hiddenCurves = [];\n    var sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev'};\n    const type = (_.invert(plotParams.plotTypes))[true];\n    const seriesAxisMap = {'series1':'y1', 'series2':'y2'};\n    Object.keys(seriesAxisMap).forEach(function (series) {\n        var models = [];\n        var vx_masks = [];\n        var fcst_leads = [];\n        var fcst_levls = [];\n        var seriesElem = plot.ele(series);\n        const axis = seriesAxisMap[series];\n        var initHours = new Set();\n        switch (type) {\n            case matsTypes.PlotTypes.timeSeries:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev'};\n                break;\n            case matsTypes.PlotTypes.dailyModelCycle:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev'};\n                break;\n            case matsTypes.PlotTypes.profile:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','curve-dates':'fcst_valid_beg'};\n                break;\n            case matsTypes.PlotTypes.dieoff:\n                sVars = {'data-source': 'model', 'region': 'vx_mask', 'pres-level': 'fcst_lev', 'curve-dates': 'fcst_valid_beg'};\n                for (var ci=0; ci < plotParams.curves.length;ci++) {\n                    if (curves[ci]['diffFrom']) {\n                        // currrently we do not do mv differencing\n                        continue;\n                    }\n                    const c = plotParams.curves[ci];\n                    if (c['dieoff-type'] === 'Dieoff for a specified UTC cycle init hour') {\n                        initHours.add(c['utc-cycle-start']);\n                    } else if (c.dieoff - type === matsTypes.ForecastTypes.singleCycle) {\n                        // placeholder for if issue 60313 gets resolved\n                    }\n                }\n               if (initHours.size > 0) {\n                   sVars['utc-cycle-start'] = 'init_hour';\n               }\n                break;\n            case matsTypes.PlotTypes.threshold:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev','curve-dates':'fcst_valid_beg'};\n                break;\n            case matsTypes.PlotTypes.validtime:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev','curve-dates':'fcst_valid_beg'};\n                break;\n            case matsTypes.PlotTypes.reliability:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev','curve-dates':'fcst_valid_beg'};\n                break;\n            case matsTypes.PlotTypes.histogram:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev','curve-dates':'fcst_valid_beg'};\n                break;\n            default:\n                sVars = {'data-source':'model','region':'vx_mask','forecast-length':'fcst_lead','pres-level':'fcst_lev'};\n        }\n\n        if (type === matsTypes.PlotTypes.profile) {\n            delete sVars['pres-level'];\n        } else {\n            // we only consider pressure levels when it isn't a profile\n            sVars['pres-level'] = 'fcst_lev';\n        }\n        var seriesElements = {};\n        var seriesElementValues = {};\n        for (var daci = 0; daci < dependentAxes[axis].length; daci++) {\n            const curve = dependentAxes[axis][daci];\n            const database = curve['database'];\n            const dataSource = curve['data-source'];\n                Object.keys(sVars).forEach(function(sVar) {\n                    try {\n                        // models - not multiple - ungrouped\n                        var sValues = [];\n                        switch(sVar) {\n                            case 'data-source':\n                                // convert data-source to single element array\n                                sValues = [matsParamUtils.getParameterForName(sVar).optionsMap[database][dataSource][0]];\n                                break;\n                            case 'curve-dates':\n                                sValues = _getSortedDatesForDepRange(curve);\n                                break;\n                            case 'utc-cycle-start':\n                                const v = curve['utc-cycle-start'];\n                                const paddedV = _pad(v,2);\n                                sValues = [paddedV]; // turn single selection padded value into array\n                                break;\n                            case 'forecast-length':\n                                sValues = curve[sVar];\n                                if (sValues == null || sValues.length === 0) {\n                                    sValues = matsParamUtils.getParameterForName(sVar).optionsMap[database][dataSource]; // have to assign all the fcst leads\n                                }\n                                const forecastValueMap = matsParamUtils.getParameterForName(sVar).valuesMap[database][dataSource];\n                                sValues = sValues.map(function (fl) {return forecastValueMap[fl]}).join(',');\n                                break;\n                            default:\n                                sValues = curve[sVar];\n                                if (sValues == null || sValues.length === 0) {\n                                    sValues = matsParamUtils.getParameterForName(sVar).optionsMap[database][dataSource]; // have to assign all the regions\n                                }\n                        }\n                        // check to see if this element was already added.\n                        // if not added then add the element.\n                        // if element was already added see if we need to add this value.\n                        // multiples are always grouped.\n                        if (sValues !== undefined) {\n                            sValues = Array.isArray(sValues) ? sValues : [sValues];\n                            if (sValues.length > 0) {\n                                const sValuesStr = sValues.join(',');\n                                if (sValuesStr !== undefined) {\n                                    const thisVar = sVars[sVar];\n                                    if (seriesElements[thisVar] == null) {\n                                        seriesElements[thisVar] = seriesElem.ele('field', {'name': sVars[sVar]});\n                                        seriesElementValues[thisVar] = new Set();\n                                        seriesElementValues[thisVar].add(sValuesStr);\n                                    } else {\n                                        // already exists\n                                        if (seriesElementValues[thisVar].has(sValuesStr) === false) {\n                                            seriesElementValues[thisVar].add(sValuesStr);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                } catch (error) {\n                    console.log(error)\n                    throw new Meteor.Error(error);\n                }\n            });\n        }\n        const sElementKeys = Object.keys(seriesElements);\n        for (var sei=0; sei < sElementKeys.length; sei++) {\n            const seVar = sElementKeys[sei];\n            const svars = Array.from(seriesElementValues[seVar]).sort();\n            for (var svi=0; svi < svars.length; svi++){\n                const v = svars[svi];\n                if (v !== \"undefined\") {\n                    seriesElements[seVar].ele('val', v);\n                }\n            };\n        }\n    });\n\n}\n\nconst getDependentAxis = function(plotParams) {\n    // there are two possible axis for metviewer. We want to collect all the variables\n    // into groups. We will take the two largest groups.\n    // variables and statistics go together. They are dependent variabales in MV.\n    // The variable/stat pairs always are associated with different curves, and will always be on different axis,\n    // if possible, but might be assigned an axis via an axes parameter.\n    const yaxesDefault = \"auto-by-variable\";\n    var curves = plotParams['curves'];\n    var dependentAxes = {'y1': [], 'y2': []};\n    dependentAxes['y1'].push(curves[0]);\n    var dependentAxesVariables = {'y1': [curves[0]['variable']], 'y2': []};\n    for (var ci = 1; ci < curves.length; ci++) {\n        if (curves[ci]['diffFrom']) {\n            // currrently we do not do mv differencing\n            continue;\n        }\n        if (curves[ci].yaxes != yaxesDefault) {\n            // it was assigned an axis by the axis param so sort it into its selectedYaxes\n            dependentAxes[curves[ci].yaxes].push(curves[ci]);\n        } else {\n            // sort it into an axis by its variable/stat combination\n            //     variables:\n            //     variables that share an axis are different dependent variables. Put them in dep1.\n            // unless it is a variable with multiple stats.\n            // different variable with different stats that have differing axis must go in different Y axis vars (and you can only have two of those)\n\n            const variable = curves[ci].variable;\n            if (dependentAxesVariables['y1'].includes(variable)) {\n                dependentAxes['y1'].push(curves[ci]);\n            } else {\n                dependentAxes['y2'].push(curves[ci]);\n            }\n        }\n    }\n    return dependentAxes;\n}\n\nfunction addDeps(plot, dependentAxes) {\n    var dep = plot.ele('dep');\n    const deps = {\"dep1\":\"y1\",\"dep2\":\"y2\"};\n    for (var di=0; di<Object.keys(deps).length;di++) {  // [dep1, dep2]\n        var depKey = Object.keys(deps)[di];  // dep1 or dep2\n        var depAxis = deps[depKey];\n        var subDep = dep.ele(depKey); //<dep><dep1/><dep2/>\n        var variableStatisticPairs = {};\n        for (var daci = 0; daci < dependentAxes[depAxis].length; daci++) {    //[y1,y2]\n            // record the variable-statistic pair\n            const variable = dependentAxes[depAxis][daci]['variable'];\n            const stat = statMvTranslation[dependentAxes[depAxis][daci]['statistic']];\n            if (variableStatisticPairs[variable] == null) {\n                variableStatisticPairs[variable] = [stat];\n            } else {\n                variableStatisticPairs[variable].push(stat);\n            }\n        }\n        var vars = Object.keys(variableStatisticPairs);  //['T','HGT','WIND'...]\n        for (var v = 0; v < vars.length; v++) {\n            const stats = Array.from(new Set(variableStatisticPairs[vars[v]]));\n            var depElem = subDep.ele('fcst_var', {'name': vars[v]}); //<dep><dep1><fcst_var name='T'><stat>RMS</stat></fcst_var> </dep1><dep2/>\n            for (var si=0;si<stats.length;si++) {\n                depElem.ele('stat',stats[si]);\n            }\n        }\n    }\n}\n\nfunction addAnomalycorrDeps(plot, dependentAxes) {\n    var dep = plot.ele('dep');\n    const deps = {\"dep1\":\"y1\",\"dep2\":\"y2\"};\n    for (var di=0; di<Object.keys(deps).length;di++) {  // [dep1, dep2]\n        var depKey = Object.keys(deps)[di];  // dep1 or dep2\n        var depAxis = deps[depKey];\n        var subDep = dep.ele(depKey); //<dep><dep1/><dep2/>\n        var variables = new Set();\n        for (var daci = 0; daci < dependentAxes[depAxis].length; daci++) {    //[y1,y2]\n            const variable = dependentAxes[depAxis][daci]['variable'];\n            variables.add(variable);\n        }\n        var vars = Array.from(variables);\n        for (var v = 0; v < vars.length; v++) {\n            subDep.ele('fcst_var', {'name': vars[v]}).ele('stat','ANOM_CORR');\n        }\n    }\n}\n\nconst _addSeriesLabels = function(element,dependentAxes, plotParams) {\n    const plotType = (_.invert(plotParams.plotTypes))[true];\n    var label;\n    switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n            label = \"Time\";\n            break;\n        case matsTypes.PlotTypes.dieoff:\n            label = \"Forecast Hour\";\n            break;\n        case matsTypes.PlotTypes.dailyModelCycle:\n            label = \"Time\";\n            break;\n        case matsTypes.PlotTypes.histogram:\n            label = \"Bin\";\n            break;\n        case matsTypes.PlotTypes.validtime:\n            label = \"Hour of Day\";\n            break;\n        case matsTypes.PlotTypes.reliability:\n            label = \"Reliability\";\n            break;\n        case matsTypes.PlotTypes.threshold:\n            label = \"Threshold\";\n            break;\n        case matsTypes.PlotTypes.profile:\n            var vars = new Set();\n            plotParams.curves.forEach(function(c){\n                vars.add(c.variable);\n            });\n            label = Array.from(vars).join(' - ');\n            break;\n        default:\n            label = \"Time\";\n    }\n    element.ele('x_label', label);\n\n    var y1vars = [];\n    for (var y1i=0; y1i < dependentAxes['y1'].length; y1i++) {\n        if (!y1vars.includes(dependentAxes['y1'][y1i]['variable'])) {\n            y1vars.push(dependentAxes['y1'][y1i]['variable']);\n        }\n    }\n    element.ele('y1_label', y1vars.join(','));\n    var y2vars = [];\n    for (var y2i=0; y2i < dependentAxes['y2'].length; y2i++) {\n        if (!y2vars.includes(dependentAxes['y2'][y2i]['variable'])) {\n            y2vars.push(dependentAxes['y2'][y2i]['variable']);\n        }\n    }\n    element.ele('y2_label', y2vars.join(','));\n}\n\nconst addTemplate = function(plot,templateStr)\n{\n    plot.ele('template', templateStr);\n}\n\nconst addIndepDates = function(plot, plotParams) {\n    var indep = plot.ele('indep', {'equalize': 'false', 'name': 'fcst_valid_beg'});\n    addIndepUngroupedDateElementsBetween(indep, plotParams);\n}\n\nconst addIndepLevels = function(plot, plotParams) {\n    // for profiles we use a union of all the levels available for all the data-sources\n    var indep = plot.ele('indep', {'equalize': 'false', 'name': 'fcst_lev'});\n    var curves = plotParams.curves;\n    var lvlSet = new Set(); // use a set to accumulate all the levels\n    for (var ci=0; ci<curves.length;ci++) {\n        if (curves[ci]['diffFrom']) {\n            // currrently we do not do mv differencing\n            continue;\n        }\n        const curve = curves[ci];\n        const database = curve['database'];\n        const dataSource = curve['data-source'];\n        const levelVals = matsCollections.CurveParams.findOne({name: 'data-source'})['levelsMap'][database][dataSource];\n        lvlSet.add(levelVals);\n    }\n    // only add the fcst_lev tag if there are pres-levels requested - leaving it out will get them all\n    const lvls = Array.from(lvlSet)[0];\n    for (var li=0; li<lvls.length;li++) {\n        var val = indep.ele('val',lvls[li]);\n        val.att('label',lvls[li]);\n        val.att('plot_val',\"\");\n    }\n}\n\nconst addIndepValidHours = function(plot, plotParams) {\n    // for validTimes we use a union of all the vts available for all the data-sources\n    var indep = plot.ele('indep', {'equalize': 'false', 'name': 'valid_hour'});\n    const hours = _getSortedHoursForIndepRange(plotParams);\n    for (var hi=0; hi<hours.length;hi++) {\n        var val = indep.ele('val',hours[hi]);\n        val.att('label',hours[hi]);\n        val.att('plot_val',\"\");\n    }\n}\n\nconst addIndepForecastHours = function(plot, plotParams) {\n    // for dieoffs we use a union of all the fhrs available for all the data-sources\n    var indep = plot.ele('indep', {'equalize': 'false', 'name': 'fcst_lead'});\n    var curves = plotParams.curves;\n    var leadSet = new Set(); // use a set to accumulate all the levels\n    for (var ci=0; ci<curves.length;ci++) {\n        if (curves[ci]['diffFrom']) {\n            // currrently we do not do mv differencing\n            continue;\n        }\n        const curve = curves[ci];\n        const database = curve['database'];\n        const dataSource = curve['data-source'];\n        const forecastLengths = matsCollections.CurveParams.findOne({name: 'forecast-length'})['optionsMap'][database][dataSource];\n        leadSet.add(forecastLengths);\n    }\n    const leads = Array.from(leadSet)[0];\n    for (var li=0; li<leads.length;li++) {\n        var val = indep.ele('val',leads[li]);\n        val.att('label',leads[li]);\n        val.att('plot_val',\"\");\n    }\n}\n\nconst addTmpl = function(plot, key, plotParams, dependentAxes) {\n    var tmpl = plot.ele('tmpl');\n    tmpl.ele('data_file', key + '.data');\n    tmpl.ele('plot_file', key + '.png');\n    tmpl.ele('r_file', key + '.R');\n    tmpl.ele('title', _title() + \" : \" + _plotText(plotParams) + \" \" + plotParams.plotAction);\n    _addSeriesLabels(tmpl, dependentAxes, plotParams);\n    tmpl.ele('caption');\n    tmpl.ele('job_title');\n    tmpl.ele('keep_revisions', 'false');\n    tmpl.ele('listdiffseries1', 'list()');\n    tmpl.ele('listdiffseries2', 'list()');\n}\n\nconst addPlotFix = function(plot) {\n    plot.ele('plot_fix');\n}\n\nconst addPlotCond = function(plot,plotParams)\n{\n    plot.ele('plot_cond');\n}\n\nconst addCalcStat = function(plot,statType){\n    plot.ele('calc_stat').ele(statType,true);\n} // unused for time series\n\nconst addPlotStat = function(plot,stat){\n    //Statistics --- We always do Summary with Mean - so there\n    plot.ele('plot_stat',stat);\n}\n\n\nconst addPlotCmd = function (plot){\n    plot.ele('plot_cmd');\n}\nconst addY1Lim = function(plot){\n    plot.ele('y1_lim','c()');\n}\nconst addY1Bufr = function(plot){\n    plot.ele('y1_bufr','0.04');\n}\nconst addY2Lim = function(plot) {\n    plot.ele('y2_lim','c()');\n}\n\nconst addMiscellaneous = function(plot,plotParams) {\n    plot.ele('event_equal', 'false');\n\n    const plotType = (_.invert(plotParams.plotTypes))[true];\n    switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.dailyModelCycle:\n        case matsTypes.PlotTypes.histogram:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.reliability:\n        case matsTypes.PlotTypes.threshold:\n            plot.ele('vert_plot', 'false');\n            plot.ele('x_reverse', 'false');\n            break;\n        case matsTypes.PlotTypes.profile:\n            plot.ele('vert_plot', 'true');\n            plot.ele('x_reverse', 'true');\n            break;\n        default:\n            plot.ele('vert_plot', 'false');\n            plot.ele('x_reverse', 'false');\n    }\n\n    plot.ele('num_stats', 'false');\n    plot.ele('indy1_stag', 'false');\n    plot.ele('indy2_stag', 'false');\n    plot.ele('grid_on', 'true');\n    plot.ele('sync_axes', 'false');\n    plot.ele('dump_points1', 'true');\n    plot.ele('dump_points2', 'true');\n    plot.ele('log_y1', 'false');\n    plot.ele('log_y2', 'false');\n    plot.ele('varianceinflationfactor', 'false');\n    plot.ele('plot_type', 'png16m');\n    plot.ele('plot_height', '8.5');\n    plot.ele('plot_width', '11');\n    plot.ele('plot_res', '72');\n    plot.ele('plot_units', 'in');\n    plot.ele('mar', 'c(8,4,5,4)');\n    plot.ele('mgp', 'c(1,1,0)');\n    plot.ele('cex', '1');\n    plot.ele('title_weight', '2');\n    plot.ele('title_size', '1.4');\n    plot.ele('title_offset', '-2');\n    plot.ele('title_align', '0.5');\n    plot.ele('xtlab_orient', '1');\n    plot.ele('xtlab_perp', '-0.75');\n    plot.ele('xtlab_horiz', '0.5');\n    plot.ele('xtlab_freq', '0');\n    plot.ele('xtlab_size', '1');\n    plot.ele('xlab_weight', '1');\n    plot.ele('xlab_size', '1');\n    plot.ele('xlab_offset', '2');\n    plot.ele('xlab_align', '0.5');\n    plot.ele('ytlab_orient', '1');\n    plot.ele('ytlab_perp', '0.5');\n    plot.ele('ytlab_horiz', '0.5');\n    plot.ele('ytlab_size', '1');\n    plot.ele('ylab_weight', '1');\n    plot.ele('ylab_size', '1');\n    plot.ele('ylab_offset', '-2');\n    plot.ele('ylab_align', '0.5');\n    plot.ele('grid_lty', '3');\n    plot.ele('grid_col', '#cccccc');\n    plot.ele('grid_lwd', '1');\n    plot.ele('grid_x', 'listX');\n    plot.ele('x2tlab_orient', '1');\n    plot.ele('x2tlab_perp', '1');\n    plot.ele('x2tlab_horiz', '0.5');\n    plot.ele('x2tlab_size', '0.8');\n    plot.ele('x2lab_size', '0.8');\n    plot.ele('x2lab_offset', '-0.5');\n    plot.ele('x2lab_align', '0.5');\n    plot.ele('y2tlab_orient', '1');\n    plot.ele('y2tlab_perp', '0.5');\n    plot.ele('y2tlab_horiz', '0.5');\n    plot.ele('y2tlab_size', '1');\n    plot.ele('y2lab_size', '1');\n    plot.ele('y2lab_offset', '1');\n    plot.ele('y2lab_align', '0.5');\n    plot.ele('legend_box', 'o');\n    plot.ele('legend_inset', 'c(0, -.25)');\n    plot.ele('legend_ncol', '3');\n    plot.ele('legend_size', '0.8');\n    plot.ele('caption_weight', '1');\n    plot.ele('caption_col', '#333333');\n    plot.ele('caption_size', '0.8');\n    plot.ele('caption_offset', '3');\n    plot.ele('caption_align', '0');\n    plot.ele('ci_alpha', '0.05');\n}\n\nconst endPlotSpec = function(xml) {\n    xml.end({pretty: true});\n}\n\nexport default matsPlotSpecUtils = {\n    startPlotSpec:startPlotSpec,\n    addDeps:addDeps,\n    addAnomalycorrDeps:addAnomalycorrDeps,\n    getDependentAxis:getDependentAxis,\n    addDatabaseElement:addDatabaseElement,\n    addFolders:addFolders,\n    addPlotCi:addPlotCi,\n    addShowSignif:addShowSignif,\n    addPlotDisp:addPlotDisp,\n    addColors:addColors,\n    addPch:addPch,\n    addType:addType,\n    addLty:addLty,\n    addLwd:addLwd,\n    addConSeries:addConSeries,\n    addOrderSeries:addOrderSeries,\n    addLegend:addLegend,\n    addSeries:addSeries,\n    addTemplate:addTemplate,\n    addIndepDates:addIndepDates,\n    addTmpl:addTmpl,\n    addPlotFix:addPlotFix,\n    addPlotCond:addPlotCond,\n    addCalcStat:addCalcStat,\n    addPlotStat:addPlotStat,\n    addPlotCmd:addPlotCmd,\n    addY1Lim:addY1Lim,\n    addY1Bufr:addY1Bufr,\n    addY2Lim:addY2Lim,\n    addMiscellaneous:addMiscellaneous,\n    endPlotSpec:endPlotSpec,\n    addIndepLevels:addIndepLevels,\n    addIndepForecastHours:addIndepForecastHours,\n    addIndepValidHours:addIndepValidHours\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/**\n * Created by pierce on 8/31/16.\n */\nimport './publications.js';\nimport './data_util.js';\nimport './data_query_util.js';\nimport './data_diff_util.js';\nimport './data_match_util.js';\nimport './data_curve_ops_util.js';\nimport './data_plot_ops_util.js';\nimport './data_process_util.js';\nimport './plot_spec_util.js';\nimport './cache.js';\nimport '../both';\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { Meteor } from 'meteor/meteor';\nimport {matsCollections} from 'meteor/randyp:mats-common';\n\nif (Meteor.isServer) {\n    Meteor.publish(\"CurveParams\", function () {\n        var data = matsCollections.CurveParams.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"CurveTextPatterns\", function () {\n        var data = matsCollections.CurveTextPatterns.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"ScatterAxisTextPattern\", function () {\n        var data = matsCollections.ScatterAxisTextPattern.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"SavedCurveParams\", function () {\n        var data = matsCollections.SavedCurveParams.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"PlotParams\", function () {\n        var data = matsCollections.PlotParams.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"Scatter2dParams\", function () {\n        var data = matsCollections.Scatter2dParams.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"PlotGraphFunctions\", function () {\n        var data = matsCollections.PlotGraphFunctions.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"RegionsPerModel\", function () {\n        var data = matsCollections.RegionsPerModel.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"SitesPerModel\", function () {\n        var data = matsCollections.SitesPerModel.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"RegionDescriptions\", function () {\n        var data = matsCollections.RegionDescriptions.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"Models\", function () {\n        var data = matsCollections.Models.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"FcstLensPerModel\", function () {\n        var data = matsCollections.FcstLensPerModel.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"ColorScheme\", function () {\n        var data = matsCollections.ColorScheme.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"Settings\", function () {\n        var data = matsCollections.Settings.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"CurveSettings\", function () {\n        var data = matsCollections.CurveSettings.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"SentAddresses\", function () {\n        var data = matsCollections.SentAddresses.find({userId: this.userId});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n// do not publish roles\n// Meteor.publish(\"Roles\", function () {\n//     var data = matsCollections.Roles.find({});\n//     if (data) {\n//         return data;\n//     }\n//     return this.ready();\n// });\n\n// do not publish Authorization\n// Meteor.publish(\"Authorization\", function () {\n//     var data = matsCollections.Authorization.find({});\n//     if (data) {\n//         return data;\n//     }\n//     return this.ready();\n// });\n\n// do not publish credentials\n// Meteor.publish(\"Credentials\", function () {\n//     var data = matsCollections.Credentials.find({});\n//     if (data) {\n//         return data;\n//     }\n//     return this.ready();\n// });\n\n//do not publish databases\n// Meteor.publish(\"Databases\", function () {\n//     var data = matsCollections.Databases.find({});\n//     if (data) {\n//         return data;\n//     }\n//     return this.ready();\n// });\n    Meteor.publish(\"SiteMap\", function () {\n        var data = matsCollections.SiteMap.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"StationMap\", function () {\n        var data = matsCollections.StationMap.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n    Meteor.publish(\"appName\", function () {\n        var data = matsCollections.appName.find({});\n        if (data) {\n            return data;\n        }\n        return this.ready();\n    });\n}","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {Meteor} from \"meteor/meteor\";\nimport {matsCollections} from 'meteor/randyp:mats-common';\nif (Meteor.isServer) {\n    const Results = require('node-file-cache').create({file:'fileCache', life: 8 * 3600});\n    var getResult = function (key) {\n        //console.log('asked to get result from cache for key:', key);\n        var result = Results.get(key);\n        return result === null ? undefined : result;\n    }\n    var storeResult = function (key, result) {\n        //console.log('asked to set result in cache for app: ',process.env.PWD, ' key:', key);\n        Results.set(key, result);\n        //console.log('set result in cache for app: ', process.env.PWD, 'key:', key);\n    }\n    var clear = function () {\n        //console.log('asked to clear result cache');\n        Results.clear();\n    }\n    var expireKey = function(key) {\n        //console.log('asked to clear result cache for key ', key);\n        Results.expire(key);\n    }\n}\n\n\nexport default\n    matsCache = {\n        getResult: getResult,\n        storeResult: storeResult,\n        clear: clear,\n        expireKey: expireKey\n    }\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n    var gaussianElimination = function(a, o) {\n           var i = 0, j = 0, k = 0, maxrow = 0, tmp = 0, n = a.length - 1, x = new Array(o);\n           for (i = 0; i < n; i++) {\n              maxrow = i;\n              for (j = i + 1; j < n; j++) {\n                 if (Math.abs(a[i][j]) > Math.abs(a[i][maxrow]))\n                    maxrow = j;\n              }\n              for (k = i; k < n + 1; k++) {\n                 tmp = a[k][i];\n                 a[k][i] = a[k][maxrow];\n                 a[k][maxrow] = tmp;\n              }\n              for (j = i + 1; j < n; j++) {\n                 for (k = n; k >= i; k--) {\n                    a[k][j] -= a[k][i] * a[i][j] / a[i][i];\n                 }\n              }\n           }\n           for (j = n - 1; j >= 0; j--) {\n              tmp = 0;\n              for (k = j + 1; k < n; k++)\n                 tmp += a[k][j] * x[k];\n              x[j] = (a[n][j] - tmp) / a[j][j];\n           }\n           return (x);\n    };\n\n    var methods = {\n            linear: function(data) {\n                var sum = [0, 0, 0, 0, 0], n = 0, results = [];\n\n                for (; n < data.length; n++) {\n                  if (data[n][1] != null) {\n                    sum[0] += data[n][0];\n                    sum[1] += data[n][1];\n                    sum[2] += data[n][0] * data[n][0];\n                    sum[3] += data[n][0] * data[n][1];\n                    sum[4] += data[n][1] * data[n][1];\n                  }\n                }\n\n                var gradient = (n * sum[3] - sum[0] * sum[1]) / (n * sum[2] - sum[0] * sum[0]);\n                var intercept = (sum[1] / n) - (gradient * sum[0]) / n;\n              //  var correlation = (n * sum[3] - sum[0] * sum[1]) / Math.sqrt((n * sum[2] - sum[0] * sum[0]) * (n * sum[4] - sum[1] * sum[1]));\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], data[i][0] * gradient + intercept];\n                    results.push(coordinate);\n                }\n\n                var string = 'y = ' + Math.round(gradient*100) / 100 + 'x + ' + Math.round(intercept*100) / 100;\n\n                return {equation: [gradient, intercept], points: results, string: string};\n            },\n\n            linearThroughOrigin: function(data) {\n                var sum = [0, 0], n = 0, results = [];\n\n                for (; n < data.length; n++) {\n                    if (data[n][1] != null) {\n                        sum[0] += data[n][0] * data[n][0]; //sumSqX\n                        sum[1] += data[n][0] * data[n][1]; //sumXY\n                    }\n                }\n\n                var gradient = sum[1] / sum[0];\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], data[i][0] * gradient];\n                    results.push(coordinate);\n                }\n\n                var string = 'y = ' + Math.round(gradient*100) / 100 + 'x';\n\n                return {equation: [gradient], points: results, string: string};\n            },\n\n            exponential: function(data) {\n                var sum = [0, 0, 0, 0, 0, 0], n = 0, results = [];\n\n                for (len = data.length; n < len; n++) {\n                  if (data[n][1] != null) {\n                    sum[0] += data[n][0];\n                    sum[1] += data[n][1];\n                    sum[2] += data[n][0] * data[n][0] * data[n][1];\n                    sum[3] += data[n][1] * Math.log(data[n][1]);\n                    sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n                    sum[5] += data[n][0] * data[n][1];\n                  }\n                }\n\n                var denominator = (sum[1] * sum[2] - sum[5] * sum[5]);\n                var A = Math.pow(Math.E, (sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n                var B = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], A * Math.pow(Math.E, B * data[i][0])];\n                    results.push(coordinate);\n                }\n\n                var string = 'y = ' + Math.round(A*100) / 100 + 'e^(' + Math.round(B*100) / 100 + 'x)';\n\n                return {equation: [A, B], points: results, string: string};\n            },\n\n            logarithmic: function(data) {\n                var sum = [0, 0, 0, 0], n = 0, results = [];\n\n                for (len = data.length; n < len; n++) {\n                  if (data[n][1] != null) {\n                    sum[0] += Math.log(data[n][0]);\n                    sum[1] += data[n][1] * Math.log(data[n][0]);\n                    sum[2] += data[n][1];\n                    sum[3] += Math.pow(Math.log(data[n][0]), 2);\n                  }\n                }\n\n                var B = (n * sum[1] - sum[2] * sum[0]) / (n * sum[3] - sum[0] * sum[0]);\n                var A = (sum[2] - B * sum[0]) / n;\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], A + B * Math.log(data[i][0])];\n                    results.push(coordinate);\n                }\n\n                var string = 'y = ' + Math.round(A*100) / 100 + ' + ' + Math.round(B*100) / 100 + ' ln(x)';\n\n                return {equation: [A, B], points: results, string: string};\n            },\n\n            power: function(data) {\n                var sum = [0, 0, 0, 0], n = 0, results = [];\n\n                for (len = data.length; n < len; n++) {\n                  if (data[n][1] != null) {\n                    sum[0] += Math.log(data[n][0]);\n                    sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n                    sum[2] += Math.log(data[n][1]);\n                    sum[3] += Math.pow(Math.log(data[n][0]), 2);\n                  }\n                }\n\n                var B = (n * sum[1] - sum[2] * sum[0]) / (n * sum[3] - sum[0] * sum[0]);\n                var A = Math.pow(Math.E, (sum[2] - B * sum[0]) / n);\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], A * Math.pow(data[i][0] , B)];\n                    results.push(coordinate);\n                }\n\n                 var string = 'y = ' + Math.round(A*100) / 100 + 'x^' + Math.round(B*100) / 100;\n\n                return {equation: [A, B], points: results, string: string};\n            },\n\n            polynomial: function(data, order) {\n                if(typeof order == 'undefined'){\n                    order = 2;\n                }\n                 var lhs = [], rhs = [], results = [], a = 0, b = 0, i = 0, k = order + 1;\n\n                        for (; i < k; i++) {\n                           for (var l = 0, len = data.length; l < len; l++) {\n                              if (data[l][1] != null) {\n                               a += Math.pow(data[l][0], i) * data[l][1];\n                              }\n                            }\n                            lhs.push(a), a = 0;\n                            var c = [];\n                            for (var j = 0; j < k; j++) {\n                               for (var l = 0, len = data.length; l < len; l++) {\n                                  if (data[l][1] != null) {\n                                   b += Math.pow(data[l][0], i + j);\n                                  }\n                                }\n                                c.push(b), b = 0;\n                            }\n                            rhs.push(c);\n                        }\n                rhs.push(lhs);\n\n               var equation = gaussianElimination(rhs, k);\n\n                    for (var i = 0, len = data.length; i < len; i++) {\n                        var answer = 0;\n                        for (var w = 0; w < equation.length; w++) {\n                            answer += equation[w] * Math.pow(data[i][0], w);\n                        }\n                        results.push([data[i][0], answer]);\n                    }\n\n                    var string = 'y = ';\n\n                    for(var i = equation.length-1; i >= 0; i--){\n                      if(i > 1) string += Math.round(equation[i] * Math.pow(10, i)) / Math.pow(10, i)  + 'x^' + i + ' + ';\n                      else if (i == 1) string += Math.round(equation[i]*100) / 100 + 'x' + ' + ';\n                      else string += Math.round(equation[i]*100) / 100;\n                    }\n\n                return {equation: equation, points: results, string: string};\n            },\n\n            lastvalue: function(data) {\n              var results = [];\n              var lastvalue = null;\n              for (var i = 0; i < data.length; i++) {\n                if (data[i][1]) {\n                  lastvalue = data[i][1];\n                  results.push([data[i][0], data[i][1]]);\n                }\n                else {\n                  results.push([data[i][0], lastvalue]);\n                }\n              }\n\n              return {equation: [lastvalue], points: results, string: \"\" + lastvalue};\n            }\n        };\n\n    export default  regression = function(method, data, order) {\n       if (typeof method == 'string') {\n           return methods[method](data, order);\n       }\n    };\n\n","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsCurveUtils} from 'meteor/randyp:mats-common';\nimport {matsPlotUtils} from 'meteor/randyp:mats-common';\nimport {moment} from 'meteor/momentjs:moment'\n\n// get the document id for the control button element that corresponds to the param name\nconst getControlButtonIdForParamName = function (paramName) {\n    // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n    const pname = paramName.replace(/^.axis-/, '');\n    const param = matsCollections.CurveParams.findOne({name: pname});\n    if (param !== undefined) {\n        const id = \"controlButton-\" + param.name;\n        return id;\n    }\n};\n\n// get the control Button Element that corresponds to the param name\nconst getControlElementForParamName = function (paramName) {\n    // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n    const pname = paramName.replace(/^.axis-/, '');\n    return document.getElementById(getControlButtonIdForParamName(pname));\n};\n\n// get the document element that corresponds to the param name\nconst getValueElementForParamName = function (paramName) {\n    // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n    const pname = paramName.replace(/^.axis-/, '');\n    const val = getValueIdForParamName(pname);\n    return document.getElementById(val);\n};\n\n// get the current selected value in the document element that corresponds to the param name\n// Note that the value should be reflected in the adjoining control button value textContent.\nconst getValueForParamName = function (paramName) {\n    try {\n        const elem = getValueElementForParamName(paramName);\n        return getValueElementForParamName(paramName).textContent.trim();\n    } catch (error) {\n        return undefined;\n    }\n};\n\n// get the VALUE BOX id for the element that corresponds to the param name\nconst getValueIdForParamName = function (paramName) {\n    // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n    const pname = paramName.replace(/^.axis-/, '');\n    return \"controlButton-\" + pname + \"-value\";\n};\n\n// set the VALUE BOX text for the element that corresponds to the param name\nconst setValueTextForParamName = function (paramName, text) {\n    try {\n        var text = text;\n        var param = matsCollections.CurveParams.findOne({name: paramName});\n        if (param === undefined) {\n            param = matsCollections.PlotParams.findOne({name: paramName});\n        }\n        if (param === undefined) {\n            return;\n        }\n        if (text === undefined) {\n            if (param.multiple) {\n                // .... if multi selected  get the first .. last\n                const selection = getInputElementForParamName(paramName).selectedOptions;\n                if (selection.length == 0) {\n                    text = \"\";\n                } else if (selection.length == 1) {\n                    text = selection[0].textContent;\n                } else {\n                    text = selection[0].textContent + \" .. \" + selection[selection.length - 1].textContent;\n                }\n            }\n        }\n        const elem = getValueElementForParamName(paramName);\n        if (elem.textContent !== text) {\n            elem.textContent = text;\n        }\n    } catch (error) {\n        console.log(\"Error: could not find param: \" + paramName);\n    }\n};\n\n// get the document id for the element that corresponds to the param name\nconst getInputIdForParamName = function (paramName) {\n    // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n    const pname = paramName.replace(/^.axis-/, '');\n    var param = matsCollections.CurveParams.findOne({name: pname});\n    if (param === undefined) {\n        param = matsCollections.PlotParams.findOne({name: pname});\n    }\n    if (param === undefined) {\n        param = matsCollections.Scatter2dParams.findOne({name: pname});\n        if (param === undefined) {\n            return undefined;\n        }\n    }\n    if (param.type === matsTypes.InputTypes.dateRange) {\n        return (\"element-\" + param.name).replace(/ /g, '-');\n    } else {\n        return (param.name + \"-\" + param.type).replace(/ /g, '-');\n    }\n};\n\n\n// get the parameter for the element that corresponds to the param name\nconst getParameterForName = function (paramName) {\n    // scatter axis don't really exist in matsCollections.CurveParams but they are elements\n    const pname = paramName.replace(/^.axis-/, '');\n\n    var param = matsCollections.CurveParams.findOne({name: pname});\n    if (param === undefined) {\n        param = matsCollections.PlotParams.findOne({name: pname});\n    }\n    if (param === undefined) {\n        param = matsCollections.Scatter2dParams.findOne({name: pname});\n        if (param === undefined) {\n            return undefined;\n        }\n    }\n    return (param);\n};\n\n// get the document element that corresponds to the param name\nconst getInputElementForParamName = function (paramName) {\n    const name = paramName.replace(/^.axis-/, '');\n    const id = getInputIdForParamName(name);\n    if (id === undefined) {\n        return undefined;\n    }\n    return document.getElementById(id);\n};\n\n// get a param disabledOptions list - if any.\nconst getDisabledOptionsForParamName = function (paramName) {\n    const name = paramName.replace(/^.axis-/, '');\n    const id = getInputIdForParamName(name);\n    if (id === undefined) {\n        return undefined;\n    }\n    const param = getParameterForName(name);\n    if (!param) {\n        return undefined;\n    }\n    return param.disabledOptions;\n};\n\n// set the input for the element that corresponds to the param name\n// also sets a data-mats-currentValue attribute\nconst setInputForParamName = function (paramName, value) {\n    const param = getParameterForName(paramName);\n    const id = getInputIdForParamName(paramName);\n    const idSelectorStr = \"#\" + id;\n    const idSelector = $(idSelectorStr);\n\n    // SHOULD DEAL WITH CHECKBOXES HERE\n    if (param.type === matsTypes.InputTypes.radioGroup) {\n        $(\"#\" + id + \"-\" + value).prop(\"checked\", true);\n    } else {\n        idSelector.val(value);\n        setValueTextForParamName(paramName, value);\n    }\n};\n\nconst getElementValues = function () {\n    const data = {\n        curveParams: {},\n        plotParams: {},\n        scatterParams: {}\n    };\n    const axis = ['xaxis-', 'yaxis-'];\n    var params = matsCollections.CurveParams.find({}).fetch();\n    params.forEach(function (param) {\n        var val = \"\";\n        if (param.type === matsTypes.InputTypes.radioGroup) {\n            var selector = \"input:radio[name='\" + param.name + \"']:checked\";\n            val = $(selector).val()\n        } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n            var selector = \"input[name='\" + param.name + \"']:checked\";\n            val = $(selector).map(function (_, el) {\n                return $(el).val();\n            }).get();\n        } else if (param.type === matsTypes.InputTypes.dateRange) {\n            val = getValueForParamName(param.name);\n        } else {\n            var idSelect = '#' + getInputIdForParamName(param.name);\n            val = $(idSelect).val();\n        }\n        data.curveParams[param.name] = val;\n        if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n            for (var a = 0; a < axis.length; a++) {\n                const axisStr = axis[a];\n                const name = axisStr + param.name;\n                var val = \"\";\n                if (param.type === matsTypes.InputTypes.radioGroup) {\n                    var selector = \"input:radio[name='\" + name + \"']:checked\";\n                    val = $(selector).val()\n                } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n                    var selector = \"input[name='\" + name + \"']:checked\";\n                    val = $(selector).map(function (_, el) {\n                        return $(el).val();\n                    }).get();\n                } else {\n                    var idSelect = '#' + getInputIdForParamName(name);\n                    val = $(idSelect).val();\n                }\n                data.curveParams[name] = val;\n            }\n        }\n    });\n\n    params = matsCollections.PlotParams.find({}).fetch();\n    params.forEach(function (param) {\n        var val = \"\";\n        if (param.type === matsTypes.InputTypes.radioGroup) {\n            var selector = \"input:radio[name='\" + param.name + \"']:checked\";\n            val = $(selector).val()\n        } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n            var selector = \"input[name='\" + param.name + \"']:checked\";\n            val = $(selector).map(function (_, el) {\n                return $(el).val();\n            }).get();\n        } else {\n            var idSelect = '#' + getInputIdForParamName(param.name);\n            val = $(idSelect).val();\n        }\n        data.plotParams[param.name] = val;\n    });\n\n    params = matsCollections.Scatter2dParams.find({}).fetch();\n    params.forEach(function (param) {\n        var val = \"\";\n        if (param.type === matsTypes.InputTypes.radioGroup) {\n            var selector = \"input:radio[name='\" + param.name + \"']:checked\";\n            val = $(selector).val()\n        } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n            var selector = \"input[name='\" + param.name + \"']:checked\";\n            val = $(selector).map(function (_, el) {\n                return $(el).val();\n            }).get();\n        } else {\n            var idSelect = '#' + getInputIdForParamName(param.name);\n            val = $(idSelect).val();\n        }\n        data.scatterParams[param.name] = val;\n        if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n            for (var a = 0; a < axis.length; a++) {\n                var axisStr = axis[a];\n                var name = axisStr + param.name;\n                var val = \"\";\n                if (param.type === matsTypes.InputTypes.radioGroup) {\n                    var selector = \"input:radio[name='\" + name + \"']:checked\";\n                    val = $(selector).val()\n                } else if (param.type === matsTypes.InputTypes.checkBoxGroup) {\n                    var selector = \"input[name='\" + name + \"']:checked\";\n                    val = $(selector).map(function (_, el) {\n                        return $(el).val();\n                    }).get();\n                } else {\n                    var idSelect = '#' + getInputIdForParamName(name);\n                    val = $(idSelect).val();\n                }\n                data.scatterParams[name] = val;\n            }\n        }\n    });\n    return data;\n};\n\nconst expandParams = function () {\n    const params = matsCollections.CurveParams.find({}).fetch();\n    params.forEach(function (param) {\n        if (param.type !== matsTypes.InputTypes.selectMap) {\n            const selector = \"element\" + \"-\" + param.name;\n            const elem = document.getElementById(selector);\n            if (elem) {\n                elem.style.display = \"block\";\n                const dataElem = document.getElementById(param.name + \"-\" + param.type);\n                if (dataElem && dataElem.options && dataElem.selectedIndex >= 0) {\n                    dataElem.options[dataElem.selectedIndex].scrollIntoView();\n                }\n            }\n        }\n    });\n};\n\nconst collapseParams = function () {\n    const params = matsCollections.CurveParams.find({}).fetch();\n    params.forEach(function (param) {\n        if (param.type !== matsTypes.InputTypes.selectMap) {\n            const selector = \"element\" + \"-\" + param.name;\n            if (document.getElementById(selector)) {\n                document.getElementById(selector).style.display = \"none\";\n            }\n        }\n    });\n};\n\nconst collapseParam = function (paramName) {\n    const param = matsCollections.CurveParams.findOne({name: paramName});\n    if (param === undefined || param === null) {\n        return;\n    }\n    if (param.type !== matsTypes.InputTypes.selectMap) {\n        const selector = \"element\" + \"-\" + param.name;\n        if (document.getElementById(selector)) {\n            document.getElementById(selector).style.display = \"none\";\n        }\n    }\n};\n\nconst typeSort = function (arr) {\n    if (arr === undefined) {\n        return undefined;\n    }\n    return arr.sort(function (a, b) {\n        if (isNaN(Number(a) && isNaN(Number(b)))) { // string compare\n            const A = a.toLowerCase();\n            const B = b.toLowerCase();\n            if (A < B) {\n                return -1;\n            } else if (A > B) {\n                return 1;\n            } else {\n                return 0;\n            }\n        } else if (isNaN(Number(a) || isNaN(Number(b)))) {   // number always precedes\n            if (isNaN(Number(a))) {\n                return 1;\n            } else {\n                return -1\n            }\n        } else {\n            return a - b;  // numerical compare\n        }\n    });\n};\n\nconst setDefaultForParamName = function (param) {\n    const paramName = param.name;\n    const type = param.type;\n    const defaultValue = param.default;\n    if (paramName == 'label') {\n        setInputForParamName(paramName, Session.get('NextCurveLabel'));\n    } else {\n        if (defaultValue != \"undefined\") {\n            if (type === matsTypes.InputTypes.select && (defaultValue === -1 || defaultValue === undefined || defaultValue === matsTypes.InputTypes.unused)) {\n                setInputForParamName(paramName, matsTypes.InputTypes.unused);\n            }\n            else {\n                setInputForParamName(paramName, defaultValue);\n            }\n        }\n    }\n};\n\nconst getDefaultDateRange = function(name) {\n    var dateParam = matsCollections.CurveParams.findOne({name: name});\n    if (dateParam === undefined) {\n        dateParam = matsCollections.PlotParams.findOne({name: name});\n    }\n    const startInit = dateParam.startDate;\n    const stopInit = dateParam.stopDate;\n    const dstr = dateParam.default;\n    return {startDate:startInit,stopDate:stopInit,dstr:dstr};\n};\n\nconst getMinMaxDates = function(minDate, maxDate) {\n    var minMoment = moment(minDate,\"MM/DD/YYYY HH:mm\");\n    var maxMoment = moment(maxDate, \"MM/DD/YYYY HH:mm\");\n    if (maxMoment.diff(minMoment, 'days') > 30) {\n        minDate = moment(maxMoment.subtract(30, 'days')).format(\"MM/DD/YYYY HH:mm\");\n    }\n    return {minDate:minDate,maxDate:maxDate};\n};\n\nconst setAllParamsToDefault = function () {\n    // default the superiors and refresh them so that they cause the dependent options to refresh\n    var params = matsCollections.CurveParams.find({}).fetch();\n\n    const superiors = matsCollections.CurveParams.find({\"dependentNames\": {\"$exists\": true}}).fetch();\n    superiors.forEach(function (param) {\n        setDefaultForParamName(param);\n        // actually call the refresh directly - don't use an event, because we want this all to be synchronous\n        matsSelectUtils.refresh(null, param.name);\n        // remove from params list - actually rewrite params list NOT with this param\n        params = params.filter(function (obj) {\n            return obj.name !== param.name;\n        });\n    });\n    // refresh all the non superiors to their default values\n    const nonDependents = matsCollections.CurveParams.find({\"superiorNames\": {\"$exists\": true}}).fetch();\n    nonDependents.forEach(function (param) {\n        setDefaultForParamName(param);\n        if (param.type === matsTypes.InputTypes.dateRange) {\n            const dstr = getDefaultDateRange(param.name).dstr;\n            setValueTextForParamName(param.name, dstr);\n        } else {\n            matsSelectUtils.refresh(null, param.name);\n            // remove from params list - actually rewrite params list NOT with this param\n            params = params.filter(function (obj) {\n                return obj.name !== param.name;\n            });\n        }\n    });\n    // reset everything else\n    params.forEach(function (param) {\n        if (param.type === matsTypes.InputTypes.dateRange) {\n            const dstr = getDefaultDateRange(param.name).dstr;\n            setValueTextForParamName(param.name, dstr);\n        } else if (param.type === matsTypes.InputTypes.selectMap) {\n            const targetId = param.name + '-' + param.type;\n            const targetElem = document.getElementById(targetId);\n            const resetMapEvent = new CustomEvent(\"reset\", {\n                detail: {\n                    refElement: null\n                }\n            });\n            targetElem.dispatchEvent(resetMapEvent);\n        } else {\n            setDefaultForParamName(param);\n        }\n    });\n    matsCollections.PlotParams.find({}).fetch().forEach(function (param) {\n        if (param.type === matsTypes.InputTypes.dateRange) {\n            const dstr = getDefaultDateRange(param.name).dstr;\n            setValueTextForParamName(param.name, dstr);\n        } else {\n            setDefaultForParamName(param);\n        }\n    });\n\n};\n// is the input element displaying? used by curve_param_item_group\nconst isInputElementVisible = function (paramName) {\n    const name = paramName.replace(/^.axis-/, ''); // need to acount for scatter plots params\n    const inputElement = getInputElementForParamName(name);\n    return $(inputElement).is(':visible');\n};\n\n// is the input element displaying? used by curve_param_item_group\nconst isParamVisible = function (paramName) {\n    const name = paramName.replace(/^.axis-/, ''); // need to acount for scatter plots params\n    const paramRef = \"#\" + name + \"-item\";\n    return $(paramRef).is(':visible');\n};\n\n// is the input element displaying? used by curve_param_item_group\nconst isControlButtonVisible = function (paramName) {\n    const name = paramName.replace(/^.axis-/, ''); // need to acount for scatter plots params\n    const paramRef = \"#controlButton-\" + name;\n    return $(paramRef).is(':visible');\n};\n\nconst setInputValueForParamAndtriggerChange = function (paramName, value) {\n    const elem = getInputElementForParamName(paramName);\n    elem.value = value;\n    setValueTextForParamName(paramName, elem.value);\n    $(elem).trigger('change');\n};\n\nconst getOptionsMapForParam = function (paramName) {\n    const param = matsCollections.CurveParams.findOne({name: paramName});\n    return param.optionsMap;\n};\n\nconst getOptionsForParam = function (paramName) {\n    const param = matsCollections.CurveParams.findOne({name: paramName});\n    return param.options;\n};\n\nconst getAppName = function () {\n    const app = matsCollections.appName.findOne({}).app;\n    return app;\n};\n\nconst getCurveItemValueForParamName = function (curveNumber, paramName) {\n    //MODEL-curve-0-Item\n//    const id = paramName.toString().toUpperCase() + \"-curve-\" + curveNumber + \"-Item\"; // the id of the text span for a curveItem\n//    return text = â€Œâ€Œdocument.getElementById(id).innerText;\n    // const elem = $(\"#\" + id);\n    // var text = undefined;\n    // if (elem) {\n    //     text = elem.text();\n    // }\n};\nconst visibilityControllerForParam = function (paramName) {\n    /*\n    Need to iterate all the params looking for one that has this paramName as a key in its\n    hideOtherFor map.\n    If it exists, that param is returned. Otherwise return undefined.\n     */\n    var params = matsCollections.CurveParams.find({}).fetch();\n    var found = undefined;\n    params.some(function (param) {\n        if (param.hideOtherFor) {\n            const pKeys = Object.keys(param.hideOtherFor);\n            if (pKeys.indexOf(paramName) !== -1) {\n                found = param;\n                return;\n            }\n        }\n    });\n    return found;\n}\n\nexport default matsParamUtils = {\n    getDisabledOptionsForParamName: getDisabledOptionsForParamName,\n    getControlButtonIdForParamName: getControlButtonIdForParamName,\n    getControlElementForParamName: getControlElementForParamName,\n    getValueElementForParamName: getValueElementForParamName,\n    getValueForParamName: getValueForParamName,\n    setValueTextForParamName: setValueTextForParamName,\n    getValueIdForParamName: getValueIdForParamName,\n    getInputIdForParamName: getInputIdForParamName,\n    getInputElementForParamName: getInputElementForParamName,\n    getElementValues: getElementValues,\n    setInputForParamName: setInputForParamName,\n    expandParams: expandParams,\n    collapseParams: collapseParams,\n    collapseParam: collapseParam,\n    getParameterForName: getParameterForName,\n    setDefaultForParamName: setDefaultForParamName,\n    setAllParamsToDefault: setAllParamsToDefault,\n    typeSort: typeSort,\n    isInputElementVisible: isInputElementVisible,\n    isParamVisible: isParamVisible,\n    isControlButtonVisible: isControlButtonVisible,\n    setInputValueForParamAndtriggerChange: setInputValueForParamAndtriggerChange,\n    getOptionsForParam: getOptionsForParam,\n    getOptionsMapForParam: getOptionsMapForParam,\n    getCurveItemValueForParamName: getCurveItemValueForParamName,\n    visibilityControllerForParam: visibilityControllerForParam,\n    getAppName: getAppName,\n    getDefaultDateRange:getDefaultDateRange,\n    getMinMaxDates:getMinMaxDates\n};","/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsParamUtils} from 'meteor/randyp:mats-common';\nimport {matsTypes} from 'meteor/randyp:mats-common';\n\n// determine the axisText (used in scatter_axis.js for example)\n// according to the Scatter Axis Text Patterns Pattern defined in\n// ScatterAxisTextPatterns according to plotType - and derived from\n// currently selected inputs in the document.\nconst getAxisText = function (plotType) {\n    var scatterAxisTextPattern = matsCollections.ScatterAxisTextPattern.findOne({plotType: getPlotType()});\n    var textPattern = scatterAxisTextPattern ? matsCollections.ScatterAxisTextPattern.findOne({plotType: getPlotType()}).textPattern : undefined;\n    if (scatterAxisTextPattern === undefined) {\n        return \"\";\n    }\n    var text = \"\";\n    for (var i = 0; i < scatterAxisTextPattern.length; i++) {\n        var pName = scatterAxisTextPattern[i][0];\n        var delimiter = scatterAxisTextPattern[i][1];\n        var value = matsParamUtils.getValueForParamName(pName);\n        text += value += delimiter;\n    }\n    return text;\n};\n\n// determine the curveText (used in curveItem for example) for a given curve (from Session.get('curves'))\n// that has already been added\nconst getCurveText = function (plotType, curve) {\n    var curveTextPattern = matsCollections.CurveTextPatterns.findOne({plotType: plotType}).textPattern;\n    var text = \"\";\n\n    for (var i = 0; i < curveTextPattern.length; i++) {\n        var a = curveTextPattern[i];\n        if (a === undefined || a === null || curve[a[1]] === undefined) {\n            continue;\n        }\n        text += a[0];\n        if (curve[a[1]] instanceof Array && (curve[a[1]].length > 2)) {\n            text += curve[a[1]][0] + \"..\" + curve[a[1]][curve[a[1]].length - 1];\n        } else {\n            text += curve[a[1]];\n        }\n        text += a[2];\n    }\n    return text;\n};\n\n// determine which plotType radio button is checked\nconst getPlotType = function () {\n    var buttons = document.getElementsByName('plot-type');\n    for (var i = 0, len = buttons.length; i < len; i++) {\n        if (buttons[i].checked) {\n            return buttons[i].value;\n        }\n    }\n    return \"\";    // error condition actually - shouldn't ever happen\n};\n\n// determine which plotFormat radio button is checked\nconst getPlotFormat = function () {\n    var buttons = document.getElementsByName('plotFormat');\n    if (buttons === undefined) {\n        return \"\"; // app may not have plotFormat?\n    }\n    var plotFormatParam = matsCollections.PlotParams.findOne({name: 'plotFormat'});\n    if (plotFormatParam === undefined) {\n        return \"\"; // app may not have plotFormat?\n    }\n    var optionsMap = plotFormatParam.optionsMap;\n    for (var i = 0, len = buttons.length; i < len; i++) {\n        if (buttons[i].checked) {\n            return buttons[i].value;\n        }\n    }\n    return \"\";  // error condition actually - shouldn't ever happen\n};\n\n// Determine which BestFit radio button is checked\nconst getBestFit = function () {\n    var buttons = document.getElementsByName('Fit Type');\n    var optionsMap = matsCollections.PlotParams.findOne({name: 'bestFit'}).optionsMap;\n    for (var i = 0, len = buttons.length; i < len; i++) {\n        if (buttons[i].checked) {\n            return buttons[i].value;\n        }\n    }\n    return \"\";  // error condition actually - shouldn't ever happen\n};\n\nconst containsPoint = function (pointArray, point) {\n    var lat = point[0];\n    var lon = point[1];\n    for (var i = 0; i < pointArray.length; i++) {\n        var pLat = pointArray[i][0];\n        var pLon = pointArray[i][1];\n        if (lat === pLat && lon === pLon) {\n            return true\n        }\n    }\n    return false;\n};\n\n// disable the action buttons while the query and plot routines are processing, then re-enable them afterwards\nconst disableActionButtons = function () {\n    document.getElementById('plotMatched').disabled = true;\n    document.getElementById('plotUnmatched').disabled = true;\n    document.getElementById('add').disabled = true;\n    document.getElementById('remove-all').disabled = true;\n};\nconst enableActionButtons = function () {\n    document.getElementById('plotMatched').disabled = false;\n    document.getElementById('plotUnmatched').disabled = false;\n    document.getElementById('add').disabled = false;\n    document.getElementById('remove-all').disabled = false;\n};\n\nexport default matsPlotUtils = {\n    getAxisText: getAxisText,\n    getCurveText: getCurveText,\n    getPlotType: getPlotType,\n    getPlotFormat: getPlotFormat,\n    getBestFit: getBestFit,\n    containsPoint: containsPoint,\n    disableActionButtons: disableActionButtons,\n    enableActionButtons: enableActionButtons\n};","\n/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\n/*\ngeneric Math Functions\n */\nvar isNum = function (args)\n{\n    if (args == null || args == undefined) {\n        return false;\n    }\n    args = args.toString();\n    if (args.length == 0) return false;\n\n    for (var i = 0;  i<args.length;  i++)\n    {\n        if ((args.substring(i,i+1) < \"0\" || args.substring(i, i+1) > \"9\") && args.substring(i, i+1) != \".\"&& args.substring(i, i+1) != \"-\")\n        {\n            return false;\n        }\n    }\n\n    return true;\n};\n\nvar mean = function (arr)\n{\n    var len = 0;\n    var sum = 0;\n\n    for(var i=0;i<arr.length;i++)\n    {\n        if (arr[i] == \"\"){}\n        else if (!isNum(arr[i]))\n        {\n            //alert(arr[i] + \" is not number!\");\n            console.log(\"Error: value at position: \" + i + \" is not number! Mean Calculation failed!\" );\n            return 0;\n        }\n        else\n        {\n            len = len + 1;\n            sum = sum + parseFloat(arr[i]);\n        }\n    }\n    return sum / len;\n};\n\nvar variance = function (arr)\n{\n    var len = 0;\n    var sum=0;\n    for(var i=0;i<arr.length;i++)\n    {\n        if (arr[i] == \"\"){}\n        else if (!isNum(arr[i]))\n        {\n            //alert(arr[i] + \" is not number, Variance Calculation failed!\");\n            console.log (\"value at position \" + i + \" is not number, Variance Calculation failed!\");\n            return 0;\n        }\n        else\n        {\n            len = len + 1;\n            sum = sum + parseFloat(arr[i]);\n        }\n    }\n\n    var v = 0;\n    if (len > 1)\n    {\n        var mean = sum / len;\n        for(var i=0;i<arr.length;i++)\n        {\n            if (arr[i] == \"\"){}\n            else\n            {\n                v = v + (arr[i] - mean) * (arr[i] - mean);\n            }\n        }\n\n        return v / len;\n    }\n    else\n    {\n        return 0;\n    }\n};\n\n\nvar median = function (arr)\n{\n    arr.sort(function(a,b){return a-b});\n\n    var median = 0;\n\n    if (arr.length % 2 == 1)\n    {\n        median = arr[(arr.length+1)/2 - 1];\n    }\n    else\n    {\n        median = (1 * arr[arr.length/2 - 1] + 1 * arr[arr.length/2] )/2;\n    }\n\n    return median\n};\n\nexport default matsMathUtils = {\n    isNum:isNum,\n    mean:mean,\n    variance:variance,\n    median:median\n}"]}