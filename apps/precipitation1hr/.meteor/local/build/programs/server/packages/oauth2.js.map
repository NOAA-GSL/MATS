{"version":3,"sources":["meteor://ðŸ’»app/packages/oauth2/oauth2_server.js"],"names":["OAuth","_requestHandlers","service","query","res","credentialSecret","error","oauthResult","handleOauthRequest","Random","secret","credentialToken","_credentialTokenFromQuery","_storePendingCredential","serviceName","serviceData","options","_renderOauthResults"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACAA,KAAK,CAACC,gBAAN,CAAuB,GAAvB,IAA8B,CAACC,OAAD,EAAUC,KAAV,EAAiBC,GAAjB,KAAyB;AACrD,MAAIC,gBAAJ,CADqD,CAGrD;;AACA,MAAI,CAACF,KAAK,CAACG,KAAX,EAAkB;AAChB;AAEA;AACA,UAAMC,WAAW,GAAGL,OAAO,CAACM,kBAAR,CAA2BL,KAA3B,CAApB;AACAE,oBAAgB,GAAGI,MAAM,CAACC,MAAP,EAAnB;;AAEA,UAAMC,eAAe,GAAGX,KAAK,CAACY,yBAAN,CAAgCT,KAAhC,CAAxB,CAPgB,CAShB;AACA;;;AACAH,SAAK,CAACa,uBAAN,CAA8BF,eAA9B,EAA+C;AAC7CG,iBAAW,EAAEZ,OAAO,CAACY,WADwB;AAE7CC,iBAAW,EAAER,WAAW,CAACQ,WAFoB;AAG7CC,aAAO,EAAET,WAAW,CAACS;AAHwB,KAA/C,EAIGX,gBAJH;AAKD,GApBoD,CAsBrD;AACA;;;AACAL,OAAK,CAACiB,mBAAN,CAA0Bb,GAA1B,EAA+BD,KAA/B,EAAsCE,gBAAtC;AACD,CAzBD,C","file":"/packages/oauth2.js","sourcesContent":["// connect middleware\nOAuth._requestHandlers['2'] = (service, query, res) => {\n  let credentialSecret;\n\n  // check if user authorized access\n  if (!query.error) {\n    // Prepare the login results before returning.\n\n    // Run service-specific handler.\n    const oauthResult = service.handleOauthRequest(query);\n    credentialSecret = Random.secret();\n\n    const credentialToken = OAuth._credentialTokenFromQuery(query);\n\n    // Store the login result so it can be retrieved in another\n    // browser tab by the result handler\n    OAuth._storePendingCredential(credentialToken, {\n      serviceName: service.serviceName,\n      serviceData: oauthResult.serviceData,\n      options: oauthResult.options\n    }, credentialSecret);\n  }\n\n  // Either close the window, redirect, or render nothing\n  // if all else fails\n  OAuth._renderOauthResults(res, query, credentialSecret);\n};\n"]}