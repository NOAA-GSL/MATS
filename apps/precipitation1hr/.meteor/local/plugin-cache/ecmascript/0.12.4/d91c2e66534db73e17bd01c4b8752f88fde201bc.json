{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/graphStandAlone/graphStandAlone.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/randyp:mats-common/templates/graphStandAlone/graphStandAlone.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/graphStandAlone/graphStandAlone.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/graphStandAlone/graphStandAlone.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/randyp:mats-common/templates/graphStandAlone/graphStandAlone.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet jsPDF;\nmodule.link(\"jspdf\", {\n  default(v) {\n    jsPDF = v;\n  }\n\n}, 1);\nlet html2canvas;\nmodule.link(\"html2canvas\", {\n  default(v) {\n    html2canvas = v;\n  }\n\n}, 2);\nlet matsCollections, matsCurveUtils, matsGraphUtils, matsMethods, matsParamUtils, matsPlotUtils, matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections(v) {\n    matsCollections = v;\n  },\n\n  matsCurveUtils(v) {\n    matsCurveUtils = v;\n  },\n\n  matsGraphUtils(v) {\n    matsGraphUtils = v;\n  },\n\n  matsMethods(v) {\n    matsMethods = v;\n  },\n\n  matsParamUtils(v) {\n    matsParamUtils = v;\n  },\n\n  matsPlotUtils(v) {\n    matsPlotUtils = v;\n  },\n\n  matsTypes(v) {\n    matsTypes = v;\n  }\n\n}, 3);\nlet Template;\nmodule.link(\"meteor/templating\", {\n  Template(v) {\n    Template = v;\n  }\n\n}, 4);\nlet FlowRouter;\nmodule.link(\"meteor/ostrio:flow-router-extra\", {\n  FlowRouter(v) {\n    FlowRouter = v;\n  }\n\n}, 5);\nmodule.link(\"./graphStandAlone.html\");\nvar annotation = \"\";\nvar resizeOptions;\nTemplate.GraphStandAlone.onCreated(function () {\n  // get the params for what this window will contain from the route\n  console.log(\"GraphStandAlone.onCreated\");\n  Session.set('route', FlowRouter.getRouteName());\n  Session.set(\"graphFunction\", FlowRouter.getParam('graphFunction'));\n  Session.set(\"plotResultKey\", FlowRouter.getParam('key'));\n  Session.set(\"plotParameter\", FlowRouter.getParam('matching'));\n  Session.set(\"appName\", FlowRouter.getParam('appName'));\n});\nTemplate.GraphStandAlone.onRendered(function () {\n  // the window resize event needs to also resize the graph\n  $(window).resize(function () {\n    document.getElementById('placeholder').style.width = matsGraphUtils.standAloneWidth();\n    document.getElementById('placeholder').style.height = matsGraphUtils.standAloneHeight();\n    var dataset = matsCurveUtils.getGraphResult().data;\n    Plotly.newPlot($(\"#placeholder\")[0], dataset, resizeOptions, {\n      showLink: true\n    });\n  });\n  document.getElementById('graph-container').style.backgroundColor = 'white';\n});\nTemplate.GraphStandAlone.helpers({\n  /**\n   * @return {string}\n   * @return {string}\n   */\n  graphFunction: function (params) {\n    // causes graph display routine to be processed\n    var graphFunction = FlowRouter.getParam('graphFunction');\n    var key = FlowRouter.getParam('key');\n    matsMethods.getGraphDataByKey.call({\n      resultKey: key\n    }, function (error, ret) {\n      if (error !== undefined) {\n        setError(error);\n        matsCurveUtils.resetGraphResult();\n        return false;\n      }\n\n      matsCurveUtils.setGraphResult(ret.result);\n      Session.set(\"plotResultKey\", ret.key);\n      Session.set('Curves', ret.result.basis.plotParams.curves);\n      Session.set('graphFunction', graphFunction);\n      Session.set('PlotResultsUpDated', new Date());\n      Session.set('PlotParams', ret.result.basis.plotParams);\n      var ptypes = Object.keys(ret.result.basis.plotParams.plotTypes);\n\n      for (var i = 0; i < ptypes.length; i++) {\n        if (ret.result.basis.plotParams.plotTypes[ptypes[i]] === true) {\n          Session.set('plotType', ptypes[i]);\n          break;\n        }\n      }\n\n      delete ret;\n\n      if (graphFunction) {\n        module.runSetters(eval(graphFunction))(key);\n        var plotType = Session.get('plotType');\n        var dataset = matsCurveUtils.getGraphResult().data;\n        var options = matsCurveUtils.getGraphResult().options;\n\n        if (dataset === undefined) {\n          return false;\n        } // make sure to capture the options (layout) from the old graph - which were stored in graph.js\n\n\n        matsMethods.getLayout.call({\n          resultKey: key\n        }, function (error, ret) {\n          if (error !== undefined) {\n            setError(error);\n            return false;\n          }\n\n          var mapLoadPause = 0;\n          options = ret.layout;\n\n          if (plotType === matsTypes.PlotTypes.map) {\n            options.mapbox.zoom = 2.75;\n            mapLoadPause = 1000;\n          }\n\n          resizeOptions = options; // initial plot\n\n          $(\"#legendContainer\").empty();\n          $(\"#placeholder\").empty(); // need a slight delay for plotly to load\n\n          setTimeout(function () {\n            Plotly.newPlot($(\"#placeholder\")[0], dataset, options, {\n              showLink: false\n            }); // update changes to the curve ops -- need to pause if we're doing a map so the map can finish loading before we try to edit it\n\n            setTimeout(function () {\n              const updates = ret.curveOpsUpdate.curveOpsUpdate;\n\n              for (var uidx = 0; uidx < updates.length; uidx++) {\n                var curveOpsUpdate = {};\n                var updatedKeys = Object.keys(updates[uidx]);\n\n                for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n                  var jsonHappyKey = updatedKeys[kidx]; // turn the json placeholder back into .\n\n                  var updatedKey = jsonHappyKey.split(\"____\").join(\".\");\n                  curveOpsUpdate[updatedKey] = updates[uidx][jsonHappyKey];\n                }\n\n                Plotly.restyle($(\"#placeholder\")[0], curveOpsUpdate, uidx);\n              }\n            }, mapLoadPause);\n          }, 100); // append annotations\n\n          if (plotType !== matsTypes.PlotTypes.map) {\n            annotation = \"\";\n\n            for (var i = 0; i < dataset.length; i++) {\n              if (plotType !== matsTypes.PlotTypes.histogram && dataset[i].curveId !== undefined) {\n                annotation = annotation + \"<div id='\" + dataset[i].curveId + \"-annotation' style='color:\" + dataset[i].annotateColor + \"'>\" + dataset[i].annotation + \" </div>\";\n              }\n            }\n\n            $(\"#legendContainer\").append(\"<div id='annotationContainer' style='font-size:smaller'>\" + annotation + \"</div>\");\n          }\n\n          document.getElementById(\"gsaSpinner\").style.display = \"none\";\n        });\n      }\n    });\n  },\n  graphFunctionDispay: function () {\n    return \"block\";\n  },\n  Title: function () {\n    return Session.get('appName');\n  },\n  width: function () {\n    return matsGraphUtils.standAloneWidth();\n  },\n  height: function () {\n    return matsGraphUtils.standAloneHeight();\n  },\n  curves: function () {\n    return Session.get('Curves');\n  },\n  plotName: function () {\n    return Session.get('PlotParams') === [] || Session.get('PlotParams').plotAction === undefined || Session.get('plotType') === matsTypes.PlotTypes.map ? \"\" : Session.get('PlotParams').plotAction.toUpperCase();\n  },\n  curveText: function () {\n    if (this.diffFrom === undefined) {\n      var plotType = Session.get('plotType');\n\n      if (plotType === undefined) {\n        pfuncs = matsCollections.PlotGraphFunctions.find({}).fetch();\n\n        for (var i = 0; i < pfuncs.length; i++) {\n          if (pfuncs[i].checked === true) {\n            Session.set('plotType', pfuncs[i].plotType);\n          }\n        }\n\n        plotType = Session.get('plotType');\n      }\n\n      return matsPlotUtils.getCurveText(plotType, this);\n    } else {\n      return this.label + \":  Difference\";\n    }\n  },\n  plotText: function () {\n    var p = Session.get('PlotParams');\n\n    if (p !== undefined) {\n      var format = p.plotFormat;\n\n      if (matsCollections.PlotParams.findOne({\n        name: 'plotFormat'\n      }) && matsCollections.PlotParams.findOne({\n        name: 'plotFormat'\n      }).optionsMap && matsCollections.PlotParams.findOne({\n        name: 'plotFormat'\n      }).optionsMap[p.plotFormat] !== undefined) {\n        format = matsCollections.PlotParams.findOne({\n          name: 'plotFormat'\n        }).optionsMap[p.plotFormat];\n      }\n\n      if (format === undefined) {\n        format = \"Unmatched\";\n      }\n\n      var plotType = Session.get('plotType');\n\n      switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n          return \"TimeSeries \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.profile:\n          return \"Profile: \" + format;\n\n        case matsTypes.PlotTypes.dieoff:\n          return \"DieOff: \" + format;\n\n        case matsTypes.PlotTypes.threshold:\n          return \"Threshold: \" + format;\n\n        case matsTypes.PlotTypes.validtime:\n          return \"ValidTime: \" + format;\n\n        case matsTypes.PlotTypes.dailyModelCycle:\n          return \"DailyModelCycle \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.reliability:\n          return \"Reliability: \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.map:\n          return \"Map \" + p.dates + \" \";\n\n        case matsTypes.PlotTypes.histogram:\n          return \"Histogram: \" + format;\n\n        case matsTypes.PlotTypes.contour:\n          return \"Contour \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.contourDiff:\n          return \"ContourDiff \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.scatter2d:\n          break;\n\n        default:\n          return \"Scatter: \" + p.dates + \" : \" + format;\n      }\n    } else {\n      return \"no plot params\";\n    }\n  },\n  color: function () {\n    return this.color;\n  },\n  annotateButtonText: function () {\n    var sval = this.label + \"annotateButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'hide annotation');\n    }\n\n    return Session.get(sval);\n  },\n  annotateShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.map || plotType === matsTypes.PlotTypes.histogram) {\n      return 'none';\n    } else {\n      return 'block';\n    }\n  },\n  matsplotFilemname: function () {\n    return \"matsplot-\" + moment(new Date()).format(\"DD-MM-YYYY-hh:mm:ss\");\n  },\n  image: function () {\n    var img = Session.get(\"spinner_img\");\n\n    if (img == undefined) {\n      img = \"spinner.gif\";\n      Session.set(\"spinner_img\", \"../../../../../image/spinner.gif\");\n    }\n\n    return img;\n  }\n});\nTemplate.GraphStandAlone.events({\n  'click .annotateVisibility': function (event) {\n    event.preventDefault();\n    const id = event.target.id;\n    const label = id.replace('-curve-show-hide-annotate', '');\n\n    if ($('#' + label + \"-annotation\")[0].hidden) {\n      $('#' + label + \"-annotation\")[0].style.display = \"block\";\n      $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"hide annotation\";\n      $('#' + label + \"-annotation\")[0].hidden = false;\n    } else {\n      $('#' + label + \"-annotation\")[0].style.display = \"none\";\n      $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"show annotation\";\n      $('#' + label + \"-annotation\")[0].hidden = true;\n    }\n\n    annotation = $('#annotationContainer')[0].innerHTML;\n  },\n  'click .exportpdf': function (e) {\n    $(\".previewCurveButtons\").each(function (i, obj) {\n      obj.style.display = \"none\";\n    }); //const filename  = 'MATSPlot' + moment(new Date()).format(\"DD-MM-YYYY-hh:mm:ss\") + '.pdf';\n\n    html2canvas(document.querySelector('#graph-container'), {\n      scale: 3.0\n    }).then(canvas => {\n      var h = 419.53;\n      var w = 595.28;\n      var filename = document.getElementById(\"exportFileName\").value;\n      let pdf = new jsPDF('letter', 'pt', 'a5');\n      pdf.addImage(canvas.toDataURL('image/jpeg'), 'JPEG', 0, 0, w, h);\n      pdf.save(filename);\n      $(\".previewCurveButtons\").each(function (i, obj) {\n        obj.style.display = \"block\";\n      });\n    });\n  },\n  'click .exportpng': function (e) {\n    $(\".previewCurveButtons\").each(function (i, obj) {\n      obj.style.display = \"none\";\n    });\n    html2canvas(document.querySelector('#graph-container'), {\n      scale: 3.0\n    }).then(canvas => {\n      var h = 419.53;\n      var w = 595.28;\n      var filename = document.getElementById(\"exportFileName\").value;\n      saveAs(canvas.toDataURL(), filename + '.png');\n      $(\".previewCurveButtons\").each(function (i, obj) {\n        obj.style.display = \"block\";\n      });\n    });\n\n    function saveAs(uri, filename) {\n      var link = document.createElement('a');\n\n      if (typeof link.download === 'string') {\n        link.href = uri;\n        link.download = filename; //Firefox requires the link to be in the body\n\n        document.body.appendChild(link); //simulate click\n\n        link.click(); //remove the link when done\n\n        document.body.removeChild(link);\n      } else {\n        window.open(uri);\n      }\n    }\n  }\n});","map":{"version":3,"sources":["packages/randyp:mats-common/templates/graphStandAlone/graphStandAlone.js"],"names":["Meteor","module","link","v","jsPDF","default","html2canvas","matsCollections","matsCurveUtils","matsGraphUtils","matsMethods","matsParamUtils","matsPlotUtils","matsTypes","Template","FlowRouter","annotation","resizeOptions","GraphStandAlone","onCreated","console","log","Session","set","getRouteName","getParam","onRendered","$","window","resize","document","getElementById","style","width","standAloneWidth","height","standAloneHeight","dataset","getGraphResult","data","Plotly","newPlot","showLink","backgroundColor","helpers","graphFunction","params","key","getGraphDataByKey","call","resultKey","error","ret","undefined","setError","resetGraphResult","setGraphResult","result","basis","plotParams","curves","Date","ptypes","Object","keys","plotTypes","i","length","eval","plotType","get","options","getLayout","mapLoadPause","layout","PlotTypes","map","mapbox","zoom","empty","setTimeout","updates","curveOpsUpdate","uidx","updatedKeys","kidx","jsonHappyKey","updatedKey","split","join","restyle","histogram","curveId","annotateColor","append","display","graphFunctionDispay","Title","plotName","plotAction","toUpperCase","curveText","diffFrom","pfuncs","PlotGraphFunctions","find","fetch","checked","getCurveText","label","plotText","p","format","plotFormat","PlotParams","findOne","name","optionsMap","timeSeries","dates","profile","dieoff","threshold","validtime","dailyModelCycle","reliability","contour","contourDiff","scatter2d","color","annotateButtonText","sval","annotateShowHideDisplay","matsplotFilemname","moment","image","img","events","event","preventDefault","id","target","replace","hidden","value","innerHTML","e","each","obj","querySelector","scale","then","canvas","h","w","filename","pdf","addImage","toDataURL","save","saveAs","uri","createElement","download","href","body","appendChild","click","removeChild","open"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {Meteor} from 'meteor/meteor';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\nimport {\n    matsCollections,\n    matsCurveUtils,\n    matsGraphUtils,\n    matsMethods,\n    matsParamUtils,\n    matsPlotUtils,\n    matsTypes\n} from 'meteor/randyp:mats-common';\nimport {Template} from 'meteor/templating';\nimport {FlowRouter} from 'meteor/ostrio:flow-router-extra';\nimport './graphStandAlone.html';\n\nvar annotation = \"\";\nvar resizeOptions;\n\nTemplate.GraphStandAlone.onCreated(function () {\n    // get the params for what this window will contain from the route\n    console.log(\"GraphStandAlone.onCreated\");\n    Session.set('route', FlowRouter.getRouteName());\n    Session.set(\"graphFunction\", FlowRouter.getParam('graphFunction'));\n    Session.set(\"plotResultKey\", FlowRouter.getParam('key'));\n    Session.set(\"plotParameter\", FlowRouter.getParam('matching'));\n    Session.set(\"appName\", FlowRouter.getParam('appName'));\n});\n\nTemplate.GraphStandAlone.onRendered(function () {\n    // the window resize event needs to also resize the graph\n    $(window).resize(function () {\n        document.getElementById('placeholder').style.width = matsGraphUtils.standAloneWidth();\n        document.getElementById('placeholder').style.height = matsGraphUtils.standAloneHeight();\n        var dataset = matsCurveUtils.getGraphResult().data;\n        Plotly.newPlot($(\"#placeholder\")[0], dataset, resizeOptions, {showLink: true});\n    });\n    document.getElementById('graph-container').style.backgroundColor = 'white';\n});\n\nTemplate.GraphStandAlone.helpers({\n    /**\n     * @return {string}\n     * @return {string}\n     */\n    graphFunction: function (params) {\n        // causes graph display routine to be processed\n        var graphFunction = FlowRouter.getParam('graphFunction');\n        var key = FlowRouter.getParam('key');\n        matsMethods.getGraphDataByKey.call({resultKey: key,}, function (error, ret) {\n            if (error !== undefined) {\n                setError(error);\n                matsCurveUtils.resetGraphResult();\n                return false;\n            }\n            matsCurveUtils.setGraphResult(ret.result);\n            Session.set(\"plotResultKey\", ret.key);\n            Session.set('Curves', ret.result.basis.plotParams.curves);\n            Session.set('graphFunction', graphFunction);\n            Session.set('PlotResultsUpDated', new Date());\n            Session.set('PlotParams', ret.result.basis.plotParams);\n            var ptypes = Object.keys(ret.result.basis.plotParams.plotTypes);\n            for (var i = 0; i < ptypes.length; i++) {\n                if (ret.result.basis.plotParams.plotTypes[ptypes[i]] === true) {\n                    Session.set('plotType', ptypes[i]);\n                    break;\n                }\n            }\n            delete ret;\n            if (graphFunction) {\n                eval(graphFunction)(key);\n                var plotType = Session.get('plotType');\n                var dataset = matsCurveUtils.getGraphResult().data;\n                var options = matsCurveUtils.getGraphResult().options;\n                if (dataset === undefined) {\n                    return false;\n                }\n                // make sure to capture the options (layout) from the old graph - which were stored in graph.js\n                matsMethods.getLayout.call({resultKey: key,}, function (error, ret) {\n                    if (error !== undefined) {\n                        setError(error);\n                        return false;\n                    }\n                    var mapLoadPause = 0;\n                    options = ret.layout;\n                    if (plotType === matsTypes.PlotTypes.map) {\n                        options.mapbox.zoom = 2.75;\n                        mapLoadPause = 1000;\n                    }\n                    resizeOptions = options;\n\n                    // initial plot\n                    $(\"#legendContainer\").empty();\n                    $(\"#placeholder\").empty();\n\n                    // need a slight delay for plotly to load\n                    setTimeout(function () {\n                        Plotly.newPlot($(\"#placeholder\")[0], dataset, options, {showLink: false});\n                        // update changes to the curve ops -- need to pause if we're doing a map so the map can finish loading before we try to edit it\n                        setTimeout(function() {\n                            const updates = ret.curveOpsUpdate.curveOpsUpdate;\n                            for (var uidx = 0; uidx < updates.length; uidx++) {\n                                var curveOpsUpdate = {};\n                                var updatedKeys = Object.keys(updates[uidx]);\n                                for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n                                    var jsonHappyKey = updatedKeys[kidx];\n                                    // turn the json placeholder back into .\n                                    var updatedKey = jsonHappyKey.split(\"____\").join(\".\");\n                                    curveOpsUpdate[updatedKey] = updates[uidx][jsonHappyKey];\n                                }\n                                Plotly.restyle($(\"#placeholder\")[0], curveOpsUpdate, uidx);\n                            }\n                        }, mapLoadPause);\n                    }, 100);\n\n                    // append annotations\n                    if (plotType !== matsTypes.PlotTypes.map) {\n                        annotation = \"\";\n                        for (var i = 0; i < dataset.length; i++) {\n                            if (plotType !== matsTypes.PlotTypes.histogram && dataset[i].curveId !== undefined) {\n                                annotation = annotation + \"<div id='\" + dataset[i].curveId + \"-annotation' style='color:\" + dataset[i].annotateColor + \"'>\" + dataset[i].annotation + \" </div>\";\n                            }\n                        }\n                        $(\"#legendContainer\").append(\"<div id='annotationContainer' style='font-size:smaller'>\" + annotation + \"</div>\");\n                    }\n                    document.getElementById(\"gsaSpinner\").style.display = \"none\";\n                });\n            }\n        });\n    },\n    graphFunctionDispay: function () {\n        return \"block\";\n    },\n    Title: function () {\n        return Session.get('appName');\n    },\n    width: function () {\n        return matsGraphUtils.standAloneWidth();\n    },\n    height: function () {\n        return matsGraphUtils.standAloneHeight();\n    },\n    curves: function () {\n        return Session.get('Curves');\n    },\n    plotName: function () {\n        return (Session.get('PlotParams') === [] || Session.get('PlotParams').plotAction === undefined) || Session.get('plotType') === matsTypes.PlotTypes.map ? \"\" : Session.get('PlotParams').plotAction.toUpperCase();\n    },\n    curveText: function () {\n        if (this.diffFrom === undefined) {\n            var plotType = Session.get('plotType');\n            if (plotType === undefined) {\n                pfuncs = matsCollections.PlotGraphFunctions.find({}).fetch();\n                for (var i = 0; i < pfuncs.length; i++) {\n                    if (pfuncs[i].checked === true) {\n                        Session.set('plotType', pfuncs[i].plotType);\n                    }\n                }\n                plotType = Session.get('plotType');\n            }\n            return matsPlotUtils.getCurveText(plotType, this);\n        } else {\n            return this.label + \":  Difference\";\n        }\n    },\n    plotText: function () {\n        var p = Session.get('PlotParams');\n        if (p !== undefined) {\n            var format = p.plotFormat;\n            if (matsCollections.PlotParams.findOne({name: 'plotFormat'}) &&\n                matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap &&\n                matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap[p.plotFormat] !== undefined) {\n                format = matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap[p.plotFormat];\n            }\n            if (format === undefined) {\n                format = \"Unmatched\";\n            }\n            var plotType = Session.get('plotType');\n            switch (plotType) {\n                case matsTypes.PlotTypes.timeSeries:\n                    return \"TimeSeries \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.profile:\n                    return \"Profile: \" + format;\n                case matsTypes.PlotTypes.dieoff:\n                    return \"DieOff: \" + format;\n                case matsTypes.PlotTypes.threshold:\n                    return \"Threshold: \" + format;\n                case matsTypes.PlotTypes.validtime:\n                    return \"ValidTime: \" + format;\n                case matsTypes.PlotTypes.dailyModelCycle:\n                    return \"DailyModelCycle \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.reliability:\n                    return \"Reliability: \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.map:\n                    return \"Map \" + p.dates + \" \";\n                case matsTypes.PlotTypes.histogram:\n                    return \"Histogram: \" + format;\n                case matsTypes.PlotTypes.contour:\n                    return \"Contour \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.contourDiff:\n                    return \"ContourDiff \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.scatter2d:\n                    break;\n                default:\n                    return \"Scatter: \" + p.dates + \" : \" + format;\n            }\n        } else {\n            return \"no plot params\";\n        }\n    },\n    color: function () {\n        return this.color;\n    },\n    annotateButtonText: function () {\n        var sval = this.label + \"annotateButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'hide annotation');\n        }\n        return Session.get(sval);\n    },\n    annotateShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.map || plotType === matsTypes.PlotTypes.histogram) {\n            return 'none';\n        } else {\n            return 'block';\n        }\n    },\n    matsplotFilemname: function () {\n        return \"matsplot-\" + moment(new Date()).format(\"DD-MM-YYYY-hh:mm:ss\")\n    },\n    image: function () {\n        var img = Session.get(\"spinner_img\");\n        if (img == undefined) {\n            img = \"spinner.gif\";\n            Session.set(\"spinner_img\", \"../../../../../image/spinner.gif\");\n        }\n        return img;\n    }\n});\n\nTemplate.GraphStandAlone.events({\n    'click .annotateVisibility': function (event) {\n        event.preventDefault();\n        const id = event.target.id;\n        const label = id.replace('-curve-show-hide-annotate', '');\n        if ($('#' + label + \"-annotation\")[0].hidden) {\n            $('#' + label + \"-annotation\")[0].style.display = \"block\";\n            $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"hide annotation\";\n            $('#' + label + \"-annotation\")[0].hidden = false;\n        } else {\n            $('#' + label + \"-annotation\")[0].style.display = \"none\";\n            $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"show annotation\";\n            $('#' + label + \"-annotation\")[0].hidden = true;\n        }\n        annotation = $('#annotationContainer')[0].innerHTML;\n    },\n    'click .exportpdf': function (e) {\n        $(\".previewCurveButtons\").each(function (i, obj) {\n            obj.style.display = \"none\";\n        });\n        //const filename  = 'MATSPlot' + moment(new Date()).format(\"DD-MM-YYYY-hh:mm:ss\") + '.pdf';\n        html2canvas(document.querySelector('#graph-container'), {scale: 3.0}).then(canvas => {\n            var h = 419.53;\n            var w = 595.28;\n            var filename = document.getElementById(\"exportFileName\").value;\n            let pdf = new jsPDF('letter', 'pt', 'a5');\n            pdf.addImage(canvas.toDataURL('image/jpeg'), 'JPEG', 0, 0, w, h);\n            pdf.save(filename);\n            $(\".previewCurveButtons\").each(function (i, obj) {\n                obj.style.display = \"block\";\n            });\n        });\n    },\n    'click .exportpng': function (e) {\n        $(\".previewCurveButtons\").each(function (i, obj) {\n            obj.style.display = \"none\";\n        });\n        html2canvas(document.querySelector('#graph-container'), {scale: 3.0}).then(canvas => {\n            var h = 419.53;\n            var w = 595.28;\n            var filename = document.getElementById(\"exportFileName\").value;\n            saveAs(canvas.toDataURL(), filename + '.png');\n            $(\".previewCurveButtons\").each(function (i, obj) {\n                obj.style.display = \"block\";\n            });\n        });\n\n        function saveAs(uri, filename) {\n            var link = document.createElement('a');\n            if (typeof link.download === 'string') {\n                link.href = uri;\n                link.download = filename;\n\n                //Firefox requires the link to be in the body\n                document.body.appendChild(link);\n\n                //simulate click\n                link.click();\n\n                //remove the link when done\n                document.body.removeChild(link);\n            } else {\n                window.open(uri);\n            }\n        }\n    }\n});\n\n"]},"sourceType":"script","hash":"d91c2e66534db73e17bd01c4b8752f88fde201bc"}
