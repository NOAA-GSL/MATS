{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/lib/regression.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/randyp:mats-common/lib/regression.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/lib/regression.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/lib/regression.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/randyp:mats-common/lib/regression.js"}},"code":"/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\nvar gaussianElimination = function (a, o) {\n  var i = 0,\n      j = 0,\n      k = 0,\n      maxrow = 0,\n      tmp = 0,\n      n = a.length - 1,\n      x = new Array(o);\n\n  for (i = 0; i < n; i++) {\n    maxrow = i;\n\n    for (j = i + 1; j < n; j++) {\n      if (Math.abs(a[i][j]) > Math.abs(a[i][maxrow])) maxrow = j;\n    }\n\n    for (k = i; k < n + 1; k++) {\n      tmp = a[k][i];\n      a[k][i] = a[k][maxrow];\n      a[k][maxrow] = tmp;\n    }\n\n    for (j = i + 1; j < n; j++) {\n      for (k = n; k >= i; k--) {\n        a[k][j] -= a[k][i] * a[i][j] / a[i][i];\n      }\n    }\n  }\n\n  for (j = n - 1; j >= 0; j--) {\n    tmp = 0;\n\n    for (k = j + 1; k < n; k++) tmp += a[k][j] * x[k];\n\n    x[j] = (a[n][j] - tmp) / a[j][j];\n  }\n\n  return x;\n};\n\nvar methods = {\n  linear: function (data) {\n    var sum = [0, 0, 0, 0, 0],\n        n = 0,\n        results = [];\n\n    for (; n < data.length; n++) {\n      if (data[n][1] != null) {\n        sum[0] += data[n][0];\n        sum[1] += data[n][1];\n        sum[2] += data[n][0] * data[n][0];\n        sum[3] += data[n][0] * data[n][1];\n        sum[4] += data[n][1] * data[n][1];\n      }\n    }\n\n    var gradient = (n * sum[3] - sum[0] * sum[1]) / (n * sum[2] - sum[0] * sum[0]);\n    var intercept = sum[1] / n - gradient * sum[0] / n; //  var correlation = (n * sum[3] - sum[0] * sum[1]) / Math.sqrt((n * sum[2] - sum[0] * sum[0]) * (n * sum[4] - sum[1] * sum[1]));\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var coordinate = [data[i][0], data[i][0] * gradient + intercept];\n      results.push(coordinate);\n    }\n\n    var string = 'y = ' + Math.round(gradient * 100) / 100 + 'x + ' + Math.round(intercept * 100) / 100;\n    return {\n      equation: [gradient, intercept],\n      points: results,\n      string: string\n    };\n  },\n  linearThroughOrigin: function (data) {\n    var sum = [0, 0],\n        n = 0,\n        results = [];\n\n    for (; n < data.length; n++) {\n      if (data[n][1] != null) {\n        sum[0] += data[n][0] * data[n][0]; //sumSqX\n\n        sum[1] += data[n][0] * data[n][1]; //sumXY\n      }\n    }\n\n    var gradient = sum[1] / sum[0];\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var coordinate = [data[i][0], data[i][0] * gradient];\n      results.push(coordinate);\n    }\n\n    var string = 'y = ' + Math.round(gradient * 100) / 100 + 'x';\n    return {\n      equation: [gradient],\n      points: results,\n      string: string\n    };\n  },\n  exponential: function (data) {\n    var sum = [0, 0, 0, 0, 0, 0],\n        n = 0,\n        results = [];\n\n    for (len = data.length; n < len; n++) {\n      if (data[n][1] != null) {\n        sum[0] += data[n][0];\n        sum[1] += data[n][1];\n        sum[2] += data[n][0] * data[n][0] * data[n][1];\n        sum[3] += data[n][1] * Math.log(data[n][1]);\n        sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n        sum[5] += data[n][0] * data[n][1];\n      }\n    }\n\n    var denominator = sum[1] * sum[2] - sum[5] * sum[5];\n    var A = Math.pow(Math.E, (sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n    var B = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var coordinate = [data[i][0], A * Math.pow(Math.E, B * data[i][0])];\n      results.push(coordinate);\n    }\n\n    var string = 'y = ' + Math.round(A * 100) / 100 + 'e^(' + Math.round(B * 100) / 100 + 'x)';\n    return {\n      equation: [A, B],\n      points: results,\n      string: string\n    };\n  },\n  logarithmic: function (data) {\n    var sum = [0, 0, 0, 0],\n        n = 0,\n        results = [];\n\n    for (len = data.length; n < len; n++) {\n      if (data[n][1] != null) {\n        sum[0] += Math.log(data[n][0]);\n        sum[1] += data[n][1] * Math.log(data[n][0]);\n        sum[2] += data[n][1];\n        sum[3] += Math.pow(Math.log(data[n][0]), 2);\n      }\n    }\n\n    var B = (n * sum[1] - sum[2] * sum[0]) / (n * sum[3] - sum[0] * sum[0]);\n    var A = (sum[2] - B * sum[0]) / n;\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var coordinate = [data[i][0], A + B * Math.log(data[i][0])];\n      results.push(coordinate);\n    }\n\n    var string = 'y = ' + Math.round(A * 100) / 100 + ' + ' + Math.round(B * 100) / 100 + ' ln(x)';\n    return {\n      equation: [A, B],\n      points: results,\n      string: string\n    };\n  },\n  power: function (data) {\n    var sum = [0, 0, 0, 0],\n        n = 0,\n        results = [];\n\n    for (len = data.length; n < len; n++) {\n      if (data[n][1] != null) {\n        sum[0] += Math.log(data[n][0]);\n        sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n        sum[2] += Math.log(data[n][1]);\n        sum[3] += Math.pow(Math.log(data[n][0]), 2);\n      }\n    }\n\n    var B = (n * sum[1] - sum[2] * sum[0]) / (n * sum[3] - sum[0] * sum[0]);\n    var A = Math.pow(Math.E, (sum[2] - B * sum[0]) / n);\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var coordinate = [data[i][0], A * Math.pow(data[i][0], B)];\n      results.push(coordinate);\n    }\n\n    var string = 'y = ' + Math.round(A * 100) / 100 + 'x^' + Math.round(B * 100) / 100;\n    return {\n      equation: [A, B],\n      points: results,\n      string: string\n    };\n  },\n  polynomial: function (data, order) {\n    if (typeof order == 'undefined') {\n      order = 2;\n    }\n\n    var lhs = [],\n        rhs = [],\n        results = [],\n        a = 0,\n        b = 0,\n        i = 0,\n        k = order + 1;\n\n    for (; i < k; i++) {\n      for (var l = 0, len = data.length; l < len; l++) {\n        if (data[l][1] != null) {\n          a += Math.pow(data[l][0], i) * data[l][1];\n        }\n      }\n\n      lhs.push(a), a = 0;\n      var c = [];\n\n      for (var j = 0; j < k; j++) {\n        for (var l = 0, len = data.length; l < len; l++) {\n          if (data[l][1] != null) {\n            b += Math.pow(data[l][0], i + j);\n          }\n        }\n\n        c.push(b), b = 0;\n      }\n\n      rhs.push(c);\n    }\n\n    rhs.push(lhs);\n    var equation = gaussianElimination(rhs, k);\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var answer = 0;\n\n      for (var w = 0; w < equation.length; w++) {\n        answer += equation[w] * Math.pow(data[i][0], w);\n      }\n\n      results.push([data[i][0], answer]);\n    }\n\n    var string = 'y = ';\n\n    for (var i = equation.length - 1; i >= 0; i--) {\n      if (i > 1) string += Math.round(equation[i] * Math.pow(10, i)) / Math.pow(10, i) + 'x^' + i + ' + ';else if (i == 1) string += Math.round(equation[i] * 100) / 100 + 'x' + ' + ';else string += Math.round(equation[i] * 100) / 100;\n    }\n\n    return {\n      equation: equation,\n      points: results,\n      string: string\n    };\n  },\n  lastvalue: function (data) {\n    var results = [];\n    var lastvalue = null;\n\n    for (var i = 0; i < data.length; i++) {\n      if (data[i][1]) {\n        lastvalue = data[i][1];\n        results.push([data[i][0], data[i][1]]);\n      } else {\n        results.push([data[i][0], lastvalue]);\n      }\n    }\n\n    return {\n      equation: [lastvalue],\n      points: results,\n      string: \"\" + lastvalue\n    };\n  }\n};\nmodule.exportDefault(regression = function (method, data, order) {\n  if (typeof method == 'string') {\n    return methods[method](data, order);\n  }\n});","map":{"version":3,"sources":["packages/randyp:mats-common/lib/regression.js"],"names":["gaussianElimination","a","o","i","j","k","maxrow","tmp","n","length","x","Array","Math","abs","methods","linear","data","sum","results","gradient","intercept","len","coordinate","push","string","round","equation","points","linearThroughOrigin","exponential","log","denominator","A","pow","E","B","logarithmic","power","polynomial","order","lhs","rhs","b","l","c","answer","w","lastvalue","module","exportDefault","regression","method"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n    var gaussianElimination = function(a, o) {\n           var i = 0, j = 0, k = 0, maxrow = 0, tmp = 0, n = a.length - 1, x = new Array(o);\n           for (i = 0; i < n; i++) {\n              maxrow = i;\n              for (j = i + 1; j < n; j++) {\n                 if (Math.abs(a[i][j]) > Math.abs(a[i][maxrow]))\n                    maxrow = j;\n              }\n              for (k = i; k < n + 1; k++) {\n                 tmp = a[k][i];\n                 a[k][i] = a[k][maxrow];\n                 a[k][maxrow] = tmp;\n              }\n              for (j = i + 1; j < n; j++) {\n                 for (k = n; k >= i; k--) {\n                    a[k][j] -= a[k][i] * a[i][j] / a[i][i];\n                 }\n              }\n           }\n           for (j = n - 1; j >= 0; j--) {\n              tmp = 0;\n              for (k = j + 1; k < n; k++)\n                 tmp += a[k][j] * x[k];\n              x[j] = (a[n][j] - tmp) / a[j][j];\n           }\n           return (x);\n    };\n\n    var methods = {\n            linear: function(data) {\n                var sum = [0, 0, 0, 0, 0], n = 0, results = [];\n\n                for (; n < data.length; n++) {\n                  if (data[n][1] != null) {\n                    sum[0] += data[n][0];\n                    sum[1] += data[n][1];\n                    sum[2] += data[n][0] * data[n][0];\n                    sum[3] += data[n][0] * data[n][1];\n                    sum[4] += data[n][1] * data[n][1];\n                  }\n                }\n\n                var gradient = (n * sum[3] - sum[0] * sum[1]) / (n * sum[2] - sum[0] * sum[0]);\n                var intercept = (sum[1] / n) - (gradient * sum[0]) / n;\n              //  var correlation = (n * sum[3] - sum[0] * sum[1]) / Math.sqrt((n * sum[2] - sum[0] * sum[0]) * (n * sum[4] - sum[1] * sum[1]));\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], data[i][0] * gradient + intercept];\n                    results.push(coordinate);\n                }\n\n                var string = 'y = ' + Math.round(gradient*100) / 100 + 'x + ' + Math.round(intercept*100) / 100;\n\n                return {equation: [gradient, intercept], points: results, string: string};\n            },\n\n            linearThroughOrigin: function(data) {\n                var sum = [0, 0], n = 0, results = [];\n\n                for (; n < data.length; n++) {\n                    if (data[n][1] != null) {\n                        sum[0] += data[n][0] * data[n][0]; //sumSqX\n                        sum[1] += data[n][0] * data[n][1]; //sumXY\n                    }\n                }\n\n                var gradient = sum[1] / sum[0];\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], data[i][0] * gradient];\n                    results.push(coordinate);\n                }\n\n                var string = 'y = ' + Math.round(gradient*100) / 100 + 'x';\n\n                return {equation: [gradient], points: results, string: string};\n            },\n\n            exponential: function(data) {\n                var sum = [0, 0, 0, 0, 0, 0], n = 0, results = [];\n\n                for (len = data.length; n < len; n++) {\n                  if (data[n][1] != null) {\n                    sum[0] += data[n][0];\n                    sum[1] += data[n][1];\n                    sum[2] += data[n][0] * data[n][0] * data[n][1];\n                    sum[3] += data[n][1] * Math.log(data[n][1]);\n                    sum[4] += data[n][0] * data[n][1] * Math.log(data[n][1]);\n                    sum[5] += data[n][0] * data[n][1];\n                  }\n                }\n\n                var denominator = (sum[1] * sum[2] - sum[5] * sum[5]);\n                var A = Math.pow(Math.E, (sum[2] * sum[3] - sum[5] * sum[4]) / denominator);\n                var B = (sum[1] * sum[4] - sum[5] * sum[3]) / denominator;\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], A * Math.pow(Math.E, B * data[i][0])];\n                    results.push(coordinate);\n                }\n\n                var string = 'y = ' + Math.round(A*100) / 100 + 'e^(' + Math.round(B*100) / 100 + 'x)';\n\n                return {equation: [A, B], points: results, string: string};\n            },\n\n            logarithmic: function(data) {\n                var sum = [0, 0, 0, 0], n = 0, results = [];\n\n                for (len = data.length; n < len; n++) {\n                  if (data[n][1] != null) {\n                    sum[0] += Math.log(data[n][0]);\n                    sum[1] += data[n][1] * Math.log(data[n][0]);\n                    sum[2] += data[n][1];\n                    sum[3] += Math.pow(Math.log(data[n][0]), 2);\n                  }\n                }\n\n                var B = (n * sum[1] - sum[2] * sum[0]) / (n * sum[3] - sum[0] * sum[0]);\n                var A = (sum[2] - B * sum[0]) / n;\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], A + B * Math.log(data[i][0])];\n                    results.push(coordinate);\n                }\n\n                var string = 'y = ' + Math.round(A*100) / 100 + ' + ' + Math.round(B*100) / 100 + ' ln(x)';\n\n                return {equation: [A, B], points: results, string: string};\n            },\n\n            power: function(data) {\n                var sum = [0, 0, 0, 0], n = 0, results = [];\n\n                for (len = data.length; n < len; n++) {\n                  if (data[n][1] != null) {\n                    sum[0] += Math.log(data[n][0]);\n                    sum[1] += Math.log(data[n][1]) * Math.log(data[n][0]);\n                    sum[2] += Math.log(data[n][1]);\n                    sum[3] += Math.pow(Math.log(data[n][0]), 2);\n                  }\n                }\n\n                var B = (n * sum[1] - sum[2] * sum[0]) / (n * sum[3] - sum[0] * sum[0]);\n                var A = Math.pow(Math.E, (sum[2] - B * sum[0]) / n);\n\n                for (var i = 0, len = data.length; i < len; i++) {\n                    var coordinate = [data[i][0], A * Math.pow(data[i][0] , B)];\n                    results.push(coordinate);\n                }\n\n                 var string = 'y = ' + Math.round(A*100) / 100 + 'x^' + Math.round(B*100) / 100;\n\n                return {equation: [A, B], points: results, string: string};\n            },\n\n            polynomial: function(data, order) {\n                if(typeof order == 'undefined'){\n                    order = 2;\n                }\n                 var lhs = [], rhs = [], results = [], a = 0, b = 0, i = 0, k = order + 1;\n\n                        for (; i < k; i++) {\n                           for (var l = 0, len = data.length; l < len; l++) {\n                              if (data[l][1] != null) {\n                               a += Math.pow(data[l][0], i) * data[l][1];\n                              }\n                            }\n                            lhs.push(a), a = 0;\n                            var c = [];\n                            for (var j = 0; j < k; j++) {\n                               for (var l = 0, len = data.length; l < len; l++) {\n                                  if (data[l][1] != null) {\n                                   b += Math.pow(data[l][0], i + j);\n                                  }\n                                }\n                                c.push(b), b = 0;\n                            }\n                            rhs.push(c);\n                        }\n                rhs.push(lhs);\n\n               var equation = gaussianElimination(rhs, k);\n\n                    for (var i = 0, len = data.length; i < len; i++) {\n                        var answer = 0;\n                        for (var w = 0; w < equation.length; w++) {\n                            answer += equation[w] * Math.pow(data[i][0], w);\n                        }\n                        results.push([data[i][0], answer]);\n                    }\n\n                    var string = 'y = ';\n\n                    for(var i = equation.length-1; i >= 0; i--){\n                      if(i > 1) string += Math.round(equation[i] * Math.pow(10, i)) / Math.pow(10, i)  + 'x^' + i + ' + ';\n                      else if (i == 1) string += Math.round(equation[i]*100) / 100 + 'x' + ' + ';\n                      else string += Math.round(equation[i]*100) / 100;\n                    }\n\n                return {equation: equation, points: results, string: string};\n            },\n\n            lastvalue: function(data) {\n              var results = [];\n              var lastvalue = null;\n              for (var i = 0; i < data.length; i++) {\n                if (data[i][1]) {\n                  lastvalue = data[i][1];\n                  results.push([data[i][0], data[i][1]]);\n                }\n                else {\n                  results.push([data[i][0], lastvalue]);\n                }\n              }\n\n              return {equation: [lastvalue], points: results, string: \"\" + lastvalue};\n            }\n        };\n\n    export default  regression = function(method, data, order) {\n       if (typeof method == 'string') {\n           return methods[method](data, order);\n       }\n    };\n\n"]},"sourceType":"script","hash":"6bd1df8fde81998ea6fd61863186ce9b54dee18e"}
