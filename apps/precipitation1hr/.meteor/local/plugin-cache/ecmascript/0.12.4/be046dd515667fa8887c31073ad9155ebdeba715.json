{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/boilerplate-generator/generator.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/boilerplate-generator/generator.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/boilerplate-generator/generator.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/boilerplate-generator/generator.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/boilerplate-generator/generator.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nmodule.export({\n  Boilerplate: () => Boilerplate\n});\nlet readFile;\nmodule.link(\"fs\", {\n  readFile(v) {\n    readFile = v;\n  }\n\n}, 0);\nlet createStream;\nmodule.link(\"combined-stream2\", {\n  create(v) {\n    createStream = v;\n  }\n\n}, 1);\nlet WebBrowserTemplate;\nmodule.link(\"./template-web.browser\", {\n  default(v) {\n    WebBrowserTemplate = v;\n  }\n\n}, 2);\nlet WebCordovaTemplate;\nmodule.link(\"./template-web.cordova\", {\n  default(v) {\n    WebCordovaTemplate = v;\n  }\n\n}, 3);\n\n// Copied from webapp_server\nconst readUtf8FileSync = filename => Meteor.wrapAsync(readFile)(filename, 'utf8');\n\nconst identity = value => value;\n\nfunction appendToStream(chunk, stream) {\n  if (typeof chunk === \"string\") {\n    stream.append(Buffer.from(chunk, \"utf8\"));\n  } else if (Buffer.isBuffer(chunk) || typeof chunk.read === \"function\") {\n    stream.append(chunk);\n  }\n}\n\nlet shouldWarnAboutToHTMLDeprecation = !Meteor.isProduction;\n\nclass Boilerplate {\n  constructor(arch, manifest, options = {}) {\n    const {\n      headTemplate,\n      closeTemplate\n    } = getTemplate(arch);\n    this.headTemplate = headTemplate;\n    this.closeTemplate = closeTemplate;\n    this.baseData = null;\n\n    this._generateBoilerplateFromManifest(manifest, options);\n  }\n\n  toHTML(extraData) {\n    if (shouldWarnAboutToHTMLDeprecation) {\n      shouldWarnAboutToHTMLDeprecation = false;\n      console.error(\"The Boilerplate#toHTML method has been deprecated. \" + \"Please use Boilerplate#toHTMLStream instead.\");\n      console.trace();\n    } // Calling .await() requires a Fiber.\n\n\n    return this.toHTMLAsync(extraData).await();\n  } // Returns a Promise that resolves to a string of HTML.\n\n\n  toHTMLAsync(extraData) {\n    return new Promise((resolve, reject) => {\n      const stream = this.toHTMLStream(extraData);\n      const chunks = [];\n      stream.on(\"data\", chunk => chunks.push(chunk));\n      stream.on(\"end\", () => {\n        resolve(Buffer.concat(chunks).toString(\"utf8\"));\n      });\n      stream.on(\"error\", reject);\n    });\n  } // The 'extraData' argument can be used to extend 'self.baseData'. Its\n  // purpose is to allow you to specify data that you might not know at\n  // the time that you construct the Boilerplate object. (e.g. it is used\n  // by 'webapp' to specify data that is only known at request-time).\n  // this returns a stream\n\n\n  toHTMLStream(extraData) {\n    if (!this.baseData || !this.headTemplate || !this.closeTemplate) {\n      throw new Error('Boilerplate did not instantiate correctly.');\n    }\n\n    const data = (0, _objectSpread2.default)({}, this.baseData, extraData);\n    const start = \"<!DOCTYPE html>\\n\" + this.headTemplate(data);\n    const {\n      body,\n      dynamicBody\n    } = data;\n    const end = this.closeTemplate(data);\n    const response = createStream();\n    appendToStream(start, response);\n\n    if (body) {\n      appendToStream(body, response);\n    }\n\n    if (dynamicBody) {\n      appendToStream(dynamicBody, response);\n    }\n\n    appendToStream(end, response);\n    return response;\n  } // XXX Exported to allow client-side only changes to rebuild the boilerplate\n  // without requiring a full server restart.\n  // Produces an HTML string with given manifest and boilerplateSource.\n  // Optionally takes urlMapper in case urls from manifest need to be prefixed\n  // or rewritten.\n  // Optionally takes pathMapper for resolving relative file system paths.\n  // Optionally allows to override fields of the data context.\n\n\n  _generateBoilerplateFromManifest(manifest, {\n    urlMapper = identity,\n    pathMapper = identity,\n    baseDataExtension,\n    inline\n  } = {}) {\n    const boilerplateBaseData = (0, _objectSpread2.default)({\n      css: [],\n      js: [],\n      head: '',\n      body: '',\n      meteorManifest: JSON.stringify(manifest)\n    }, baseDataExtension);\n    manifest.forEach(item => {\n      const urlPath = urlMapper(item.url);\n      const itemObj = {\n        url: urlPath\n      };\n\n      if (inline) {\n        itemObj.scriptContent = readUtf8FileSync(pathMapper(item.path));\n        itemObj.inline = true;\n      } else if (item.sri) {\n        itemObj.sri = item.sri;\n      }\n\n      if (item.type === 'css' && item.where === 'client') {\n        boilerplateBaseData.css.push(itemObj);\n      }\n\n      if (item.type === 'js' && item.where === 'client' && // Dynamic JS modules should not be loaded eagerly in the\n      // initial HTML of the app.\n      !item.path.startsWith('dynamic/')) {\n        boilerplateBaseData.js.push(itemObj);\n      }\n\n      if (item.type === 'head') {\n        boilerplateBaseData.head = readUtf8FileSync(pathMapper(item.path));\n      }\n\n      if (item.type === 'body') {\n        boilerplateBaseData.body = readUtf8FileSync(pathMapper(item.path));\n      }\n    });\n    this.baseData = boilerplateBaseData;\n  }\n\n}\n\n; // Returns a template function that, when called, produces the boilerplate\n// html as a string.\n\nfunction getTemplate(arch) {\n  const prefix = arch.split(\".\", 2).join(\".\");\n\n  if (prefix === \"web.browser\") {\n    return WebBrowserTemplate;\n  }\n\n  if (prefix === \"web.cordova\") {\n    return WebCordovaTemplate;\n  }\n\n  throw new Error(\"Unsupported arch: \" + arch);\n}","map":{"version":3,"sources":["packages/boilerplate-generator/generator.js"],"names":["module","export","Boilerplate","readFile","link","v","createStream","create","WebBrowserTemplate","default","WebCordovaTemplate","readUtf8FileSync","filename","Meteor","wrapAsync","identity","value","appendToStream","chunk","stream","append","Buffer","from","isBuffer","read","shouldWarnAboutToHTMLDeprecation","isProduction","constructor","arch","manifest","options","headTemplate","closeTemplate","getTemplate","baseData","_generateBoilerplateFromManifest","toHTML","extraData","console","error","trace","toHTMLAsync","await","Promise","resolve","reject","toHTMLStream","chunks","on","push","concat","toString","Error","data","start","body","dynamicBody","end","response","urlMapper","pathMapper","baseDataExtension","inline","boilerplateBaseData","css","js","head","meteorManifest","JSON","stringify","forEach","item","urlPath","url","itemObj","scriptContent","path","sri","type","where","startsWith","prefix","split","join"],"mappings":"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","sourcesContent":["import { readFile } from 'fs';\nimport { create as createStream } from \"combined-stream2\";\n\nimport WebBrowserTemplate from './template-web.browser';\nimport WebCordovaTemplate from './template-web.cordova';\n\n// Copied from webapp_server\nconst readUtf8FileSync = filename => Meteor.wrapAsync(readFile)(filename, 'utf8');\n\nconst identity = value => value;\n\nfunction appendToStream(chunk, stream) {\n  if (typeof chunk === \"string\") {\n    stream.append(Buffer.from(chunk, \"utf8\"));\n  } else if (Buffer.isBuffer(chunk) ||\n             typeof chunk.read === \"function\") {\n    stream.append(chunk);\n  }\n}\n\nlet shouldWarnAboutToHTMLDeprecation = ! Meteor.isProduction;\n\nexport class Boilerplate {\n  constructor(arch, manifest, options = {}) {\n    const { headTemplate, closeTemplate } = getTemplate(arch);\n    this.headTemplate = headTemplate;\n    this.closeTemplate = closeTemplate;\n    this.baseData = null;\n\n    this._generateBoilerplateFromManifest(\n      manifest,\n      options\n    );\n  }\n\n  toHTML(extraData) {\n    if (shouldWarnAboutToHTMLDeprecation) {\n      shouldWarnAboutToHTMLDeprecation = false;\n      console.error(\n        \"The Boilerplate#toHTML method has been deprecated. \" +\n          \"Please use Boilerplate#toHTMLStream instead.\"\n      );\n      console.trace();\n    }\n\n    // Calling .await() requires a Fiber.\n    return this.toHTMLAsync(extraData).await();\n  }\n\n  // Returns a Promise that resolves to a string of HTML.\n  toHTMLAsync(extraData) {\n    return new Promise((resolve, reject) => {\n      const stream = this.toHTMLStream(extraData);\n      const chunks = [];\n      stream.on(\"data\", chunk => chunks.push(chunk));\n      stream.on(\"end\", () => {\n        resolve(Buffer.concat(chunks).toString(\"utf8\"));\n      });\n      stream.on(\"error\", reject);\n    });\n  }\n\n  // The 'extraData' argument can be used to extend 'self.baseData'. Its\n  // purpose is to allow you to specify data that you might not know at\n  // the time that you construct the Boilerplate object. (e.g. it is used\n  // by 'webapp' to specify data that is only known at request-time).\n  // this returns a stream\n  toHTMLStream(extraData) {\n    if (!this.baseData || !this.headTemplate || !this.closeTemplate) {\n      throw new Error('Boilerplate did not instantiate correctly.');\n    }\n\n    const data = {...this.baseData, ...extraData};\n    const start = \"<!DOCTYPE html>\\n\" + this.headTemplate(data);\n\n    const { body, dynamicBody } = data;\n\n    const end = this.closeTemplate(data);\n    const response = createStream();\n\n    appendToStream(start, response);\n\n    if (body) {\n      appendToStream(body, response);\n    }\n\n    if (dynamicBody) {\n      appendToStream(dynamicBody, response);\n    }\n\n    appendToStream(end, response);\n\n    return response;\n  }\n\n  // XXX Exported to allow client-side only changes to rebuild the boilerplate\n  // without requiring a full server restart.\n  // Produces an HTML string with given manifest and boilerplateSource.\n  // Optionally takes urlMapper in case urls from manifest need to be prefixed\n  // or rewritten.\n  // Optionally takes pathMapper for resolving relative file system paths.\n  // Optionally allows to override fields of the data context.\n  _generateBoilerplateFromManifest(manifest, {\n    urlMapper = identity,\n    pathMapper = identity,\n    baseDataExtension,\n    inline,\n  } = {}) {\n\n    const boilerplateBaseData = {\n      css: [],\n      js: [],\n      head: '',\n      body: '',\n      meteorManifest: JSON.stringify(manifest),\n      ...baseDataExtension,\n    };\n\n    manifest.forEach(item => {\n      const urlPath = urlMapper(item.url);\n      const itemObj = { url: urlPath };\n\n      if (inline) {\n        itemObj.scriptContent = readUtf8FileSync(\n          pathMapper(item.path));\n        itemObj.inline = true;\n      } else if (item.sri) {\n        itemObj.sri = item.sri;\n      }\n\n      if (item.type === 'css' && item.where === 'client') {\n        boilerplateBaseData.css.push(itemObj);\n      }\n\n      if (item.type === 'js' && item.where === 'client' &&\n        // Dynamic JS modules should not be loaded eagerly in the\n        // initial HTML of the app.\n        !item.path.startsWith('dynamic/')) {\n        boilerplateBaseData.js.push(itemObj);\n      }\n\n      if (item.type === 'head') {\n        boilerplateBaseData.head =\n          readUtf8FileSync(pathMapper(item.path));\n      }\n\n      if (item.type === 'body') {\n        boilerplateBaseData.body =\n          readUtf8FileSync(pathMapper(item.path));\n      }\n    });\n\n    this.baseData = boilerplateBaseData;\n  }\n};\n\n// Returns a template function that, when called, produces the boilerplate\n// html as a string.\nfunction getTemplate(arch) {\n  const prefix = arch.split(\".\", 2).join(\".\");\n\n  if (prefix === \"web.browser\") {\n    return WebBrowserTemplate;\n  }\n\n  if (prefix === \"web.cordova\") {\n    return WebCordovaTemplate;\n  }\n\n  throw new Error(\"Unsupported arch: \" + arch);\n}\n"]},"sourceType":"script","hash":"be046dd515667fa8887c31073ad9155ebdeba715"}
