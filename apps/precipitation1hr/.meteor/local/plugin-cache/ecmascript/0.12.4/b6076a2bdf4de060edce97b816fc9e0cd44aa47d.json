{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/params/scatter_axis.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/randyp:mats-common/templates/params/scatter_axis.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/params/scatter_axis.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/params/scatter_axis.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/randyp:mats-common/templates/params/scatter_axis.js"}},"code":"var matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 2);\n\nvar isEditing = function () {\n  var mode = Session.get('editMode');\n  return !(mode === \"\" || mode === undefined || mode === null);\n};\n\nvar setAxisText = function (axis) {\n  Session.set(axis + 'CurveText', axis + \" \" + matsPlotUtils.getAxisText(matsPlotUtils.getPlotType()));\n  Session.set(axis + 'CurveColor', 'green');\n  Session.set('axisCurveIcon', \"fa-check\");\n};\n\nTemplate.scatter2d.helpers({\n  modeText: function () {\n    return isEditing() ? \"Editing the curve \" + Session.get('editMode') + \" (\" + Session.get('axis') + \")\" : \"Creating a new curve\";\n  },\n  creating: function () {\n    if (isEditing()) {\n      return \"none\";\n    } else {\n      return \"block\";\n    }\n  },\n  editing: function () {\n    if (isEditing()) {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  xaxisCurveText: function () {\n    if (isEditing()) {\n      setAxisText(\"xaxis\");\n    }\n\n    var t = Session.get('xaxisCurveText');\n\n    if (t) {\n      return t;\n    } else {\n      Session.set('xaxisCurveText', 'XAXIS NOT YET APPLIED');\n      return 'XAXIS NOT YET APPLIED';\n    }\n  },\n  yaxisCurveText: function () {\n    if (isEditing()) {\n      setAxisText(\"yaxis\");\n    }\n\n    var t = Session.get('yaxisCurveText');\n\n    if (t || isEditing()) {\n      return t;\n    } else {\n      Session.set('yaxisCurveText', 'YAXIS NOT YET APPLIED');\n      return 'YAXIS NOT YET APPLIED';\n    }\n  },\n  yApplyEnabled: function () {\n    var c = Session.get('xaxisCurveColor');\n\n    if (c === 'red' && !isEditing()) {\n      return \"disabled\";\n    } else {\n      return \"\";\n    }\n  },\n  xaxisCurveColor: function () {\n    var t = Session.get('xaxisCurveColor');\n\n    if (t) {\n      return t;\n    } else {\n      Session.set('xaxisCurveColor', 'red');\n      return 'red';\n    }\n  },\n  yaxisCurveColor: function () {\n    var t = Session.get('yaxisCurveColor');\n\n    if (t) {\n      return t;\n    } else {\n      Session.set('yaxisCurveColor', 'red');\n      return 'red';\n    }\n  },\n  curveIcon: function () {\n    var t = Session.get('axisCurveIcon');\n\n    if (t) {\n      return t;\n    } else {\n      Session.set('axisCurveIcon', 'fa-asterisk');\n      return 'fa-asterisk';\n    }\n  },\n  title: function () {\n    return \"Scatter Plot parameters\";\n  },\n  scatter2dParams: function () {\n    var params = matsCollections.Scatter2dParams.find({}).fetch();\n    return params;\n  },\n  scatter2dOptions: function () {\n    var options = this.options;\n    return options;\n  },\n  name: function (param) {\n    //console.log(\"name: \" + param.name);\n    var name = param.name.replace(/ /g, '-');\n    return name;\n  },\n  className: function (param) {\n    //console.log(\"name: \" + param.name);\n    var cname = param.name.replace(/ /g, '-') + \"-\" + param.type;\n    return cname;\n  },\n  type: function (param) {\n    switch (param.type) {\n      case matsTypes.InputTypes.checkBoxGroup:\n        return \"checkbox\";\n        break;\n\n      case matsTypes.InputTypes.radioGroup:\n        return \"radio\";\n        break;\n\n      case matsTypes.InputTypes.select:\n        return \"select\";\n        break;\n\n      case matsTypes.InputTypes.numberSpinner:\n        return \"number\";\n        break;\n\n      default:\n        return \"text\";\n    }\n  },\n  \"default\": function () {\n    return this.default;\n  },\n  idOption: function (param) {\n    var id = param.name + \"-\" + param.type + \"-\" + this;\n    id = id.replace(/ /g, '-');\n    return id;\n  },\n  idParam: function () {\n    var id = this.name + \"-\" + this.type;\n    id = id.replace(/ /g, '-');\n    return id;\n  },\n  plotType: function () {\n    return matsTypes.PlotTypes.scatter2d;\n  },\n  isDefault: function (param) {\n    var def = param.default;\n\n    if (def == this) {\n      return \"checked\";\n    } else {\n      return \"\";\n    }\n  },\n  displayScatter2d: function () {\n    if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  label: function (param, parent) {\n    if (parent.name === \"Fit Type\") {\n      return parent.optionsMap[this];\n    } else {\n      return this;\n    }\n  },\n  labelParam: function () {\n    return this.name;\n  },\n  log: function () {\n    console.log(this);\n  },\n  axis: function (param) {\n    var axis = Session.get('axis');\n\n    if (axis === undefined) {\n      if (param) {\n        return param.default;\n      } else {\n        return 'xaxis';\n      }\n    }\n\n    return axis;\n  },\n  isNumberSpinner: function (param) {\n    return param.type === matsTypes.InputTypes.numberSpinner;\n  },\n  hasHelp: function () {\n    return this.help !== undefined;\n  }\n});\n\nvar apply = function (axis) {\n  var elems = document.getElementsByClassName(\"data-input\");\n  var curveParams = matsCollections.CurveParams.find({}, {\n    fields: {\n      name: 1\n    }\n  }).fetch();\n\n  var curveNames = _.pluck(curveParams, \"name\");\n\n  var param_elems = _.filter(elems, function (elem) {\n    return _.contains(curveNames, elem.name);\n  });\n\n  var l = param_elems.length;\n\n  for (var i = 0; i < l; i++) {\n    var pelem = param_elems[i]; //console.log(\"pelem.type is \" + pelem.type);\n\n    var elem_id = pelem.id;\n    var target_id = axis + \"-\" + elem_id;\n    var telem = document.getElementById(target_id); // Notice that these types are not matsTypes these are javascript types\n\n    if (pelem.type === \"select-multiple\") {\n      var $options = $(\"#\" + elem_id + \" > option\").clone();\n      $(\"#\" + target_id).empty().append($options);\n      var selectedOptions = $(pelem.selectedOptions).map(function () {\n        return this.value;\n      }).get();\n\n      for (var x = 0; x < telem.options.length; x++) {\n        if ($.inArray(telem.options[x].value, selectedOptions) !== -1) {\n          telem.options[x].selected = true;\n        } else {\n          telem.options[x].selected = false;\n        }\n      }\n    } else if (pelem.type === \"select-one\") {\n      var $options = $(\"#\" + elem_id + \" > option\").clone();\n      $(\"#\" + target_id).empty().append($options);\n      telem.selectedIndex = pelem.selectedIndex;\n    } else if (pelem.type === \"radio\") {\n      // NOT SURE THIS IS RIGHT\n      //console.log(pelem.name + \" is \" + $('input[name=\"' + pelem.name + '\"]:checked').val());\n      $('input[name=\"' + telem.name + '\"]:checked');\n    } else if (pelem.type === \"button\") {\n      telem.value = pelem.value;\n    } else {\n      telem.value = pelem.value;\n    }\n  }\n\n  setAxisText(axis);\n};\n\nTemplate.scatter2d.events({\n  'click .apply-params-to-xaxis': function (event) {\n    apply('xaxis');\n  },\n  'click .apply-params-to-yaxis': function (event) {\n    apply('yaxis');\n  },\n  'change .axis-selector-radioGroup': function (event) {\n    var newAxis = event.currentTarget.value;\n    Session.set('axis', newAxis);\n    var elems = document.getElementsByClassName(\"data-input\");\n\n    var axis_elems = _.filter(elems, function (elem) {\n      return elem.name.indexOf(newAxis) > -1;\n    });\n\n    var l = axis_elems.length;\n\n    for (var i = 0; i < l; i++) {\n      var aelem = axis_elems[i];\n      var aelem_id = aelem.id; // remove the axis part at the front\n\n      var target_id = aelem_id.substring(newAxis.length + 1, aelem_id.length);\n      var telem = document.getElementById(target_id);\n\n      if (aelem.type === \"select-multiple\") {\n        $(telem).val($(aelem.selectedOptions).map(function () {\n          return this.value;\n        }).get());\n      } else if (aelem.type === \"radio\") {\n        // NOT SURE THIS IS RIGHT\n        //console.log(pelem.name + \" is \" + $('input[name=\"' + pelem.name + '\"]:checked').val());\n        $('input[name=\"' + telem.name + '\"]:checked');\n      } else if (aelem.type === \"button\") {\n        telem.value = aelem.value;\n      } else {\n        telem.value = aelem.value;\n      }\n\n      telem.dispatchEvent(new CustomEvent(\"axisRefresh\"));\n    }\n  },\n  'click .axishelp': function () {\n    $(\"#matshelp\").load(\"/help/scatter-help.html #matshelp\");\n    $(\"#helpModal\").modal('show');\n  },\n  'click .help': function () {\n    $(\"#matshelp\").load(\"/help/\" + this.help + \" #matshelp\");\n    $(\"#helpModal\").modal('show');\n  }\n});","map":{"version":3,"sources":["packages/randyp:mats-common/templates/params/scatter_axis.js"],"names":["matsTypes","module","link","v","matsCollections","matsPlotUtils","isEditing","mode","Session","get","undefined","setAxisText","axis","set","getAxisText","getPlotType","Template","scatter2d","helpers","modeText","creating","editing","xaxisCurveText","t","yaxisCurveText","yApplyEnabled","c","xaxisCurveColor","yaxisCurveColor","curveIcon","title","scatter2dParams","params","Scatter2dParams","find","fetch","scatter2dOptions","options","name","param","replace","className","cname","type","InputTypes","checkBoxGroup","radioGroup","select","numberSpinner","default","idOption","id","idParam","plotType","PlotTypes","isDefault","def","displayScatter2d","label","parent","optionsMap","labelParam","log","console","isNumberSpinner","hasHelp","help","apply","elems","document","getElementsByClassName","curveParams","CurveParams","fields","curveNames","_","pluck","param_elems","filter","elem","contains","l","length","i","pelem","elem_id","target_id","telem","getElementById","$options","$","clone","empty","append","selectedOptions","map","value","x","inArray","selected","selectedIndex","events","event","newAxis","currentTarget","axis_elems","indexOf","aelem","aelem_id","substring","val","dispatchEvent","CustomEvent","load","modal"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsTypes } from 'meteor/randyp:mats-common'; \nimport { matsCollections } from 'meteor/randyp:mats-common';\nimport { matsPlotUtils } from 'meteor/randyp:mats-common';\n\nconst isEditing = function() {\n    const mode = Session.get('editMode');\n    return !( mode === \"\" || mode === undefined || mode === null);\n};\nconst setAxisText = function(axis) {\n    Session.set(axis + 'CurveText', axis + \" \" + matsPlotUtils.getAxisText(matsPlotUtils.getPlotType()));\n    Session.set(axis + 'CurveColor', 'green');\n    Session.set('axisCurveIcon', \"fa-check\");\n};\n\nTemplate.scatter2d.helpers({\n    modeText: function() {\n        return isEditing() ? \"Editing the curve \" + Session.get('editMode') + \" (\" + Session.get('axis') + \")\": \"Creating a new curve\";\n    },\n    creating: function() {\n        if (isEditing()) {\n            return \"none\";\n        } else {\n            return \"block\";\n        }\n    },\n    editing: function() {\n        if (isEditing()) {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    xaxisCurveText: function() {\n        if (isEditing()) {\n            setAxisText(\"xaxis\");\n        }\n        const t = Session.get('xaxisCurveText');\n        if (t){\n            return t;\n        } else {\n            Session.set('xaxisCurveText', 'XAXIS NOT YET APPLIED');\n            return 'XAXIS NOT YET APPLIED';\n        }\n    },\n    yaxisCurveText: function() {\n        if (isEditing()) {\n            setAxisText(\"yaxis\");\n        }\n        const t = Session.get('yaxisCurveText');\n        if (t || isEditing()){\n            return t;\n        } else {\n            Session.set('yaxisCurveText', 'YAXIS NOT YET APPLIED');\n            return 'YAXIS NOT YET APPLIED';\n        }\n    },\n    yApplyEnabled: function() {\n        const c = Session.get('xaxisCurveColor');\n        if (c === 'red' && !isEditing()){\n            return \"disabled\";\n        } else {\n            return\"\";\n        }\n    },\n\n    xaxisCurveColor: function() {\n        const t = Session.get('xaxisCurveColor');\n        if (t){\n            return t;\n        } else {\n            Session.set('xaxisCurveColor', 'red');\n            return 'red';\n        }\n    },\n    yaxisCurveColor: function() {\n        const t = Session.get('yaxisCurveColor');\n        if (t){\n            return t;\n        } else {\n            Session.set('yaxisCurveColor', 'red');\n            return 'red';\n        }\n    },\n    curveIcon: function() {\n        const t = Session.get('axisCurveIcon');\n        if (t){\n            return t;\n        } else {\n            Session.set('axisCurveIcon', 'fa-asterisk');\n            return 'fa-asterisk';\n        }\n    },\n    title: function() {\n        return \"Scatter Plot parameters\"\n    },\n    scatter2dParams: function () {\n        const params = matsCollections.Scatter2dParams.find({}).fetch();\n        return params;\n    },\n    scatter2dOptions: function() {\n        const options = this.options;\n        return options;\n    },\n    name: function(param) {\n        //console.log(\"name: \" + param.name);\n        const name = param.name.replace(/ /g,'-');\n        return name;\n    },\n    className: function(param) {\n        //console.log(\"name: \" + param.name);\n        const cname = param.name.replace(/ /g,'-') + \"-\" + param.type;\n        return cname;\n    },\n    \n    type: function(param) {\n        switch (param.type) {\n            case matsTypes.InputTypes.checkBoxGroup:\n                return \"checkbox\";\n                break;\n            case matsTypes.InputTypes.radioGroup:\n                return \"radio\";\n                break;\n            case matsTypes.InputTypes.select:\n                return \"select\";\n                break;\n            case matsTypes.InputTypes.numberSpinner:\n                return \"number\";\n                break;\n            default:\n                return \"text\";\n        }\n    },\n    default: function() {\n        return this.default;\n    },\n    idOption: function(param) {\n        var id = param.name + \"-\" + param.type + \"-\" + this;\n        id = id.replace(/ /g,'-');\n        return id;\n    },\n    idParam: function() {\n        var id = this.name + \"-\" + this.type;\n        id = id.replace(/ /g,'-');\n        return id;\n    },\n    plotType : function() {\n      return matsTypes.PlotTypes.scatter2d;  \n    },\n    isDefault: function (param) {\n        const def = param.default;\n        if (def == this) {\n            return \"checked\";\n        } else {\n            return \"\";\n        }\n    },\n    displayScatter2d: function() {\n        if (matsPlotUtils.getPlotType() == matsTypes.PlotTypes.scatter2d) {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    label: function(param, parent) {\n        if (parent.name === \"Fit Type\") {\n            return parent.optionsMap[this];\n        } else {\n            return this;\n        }\n    },\n    labelParam: function() {\n            return this.name;\n    },\n    log: function() {\n        console.log(this);\n    },\n    axis: function(param) {\n        var axis = Session.get('axis');\n        if (axis === undefined) {\n            if (param) {\n                return param.default;\n            } else {\n                return 'xaxis';\n            }\n        }\n        return axis;\n    },\n    isNumberSpinner: function(param) {\n        return param.type === matsTypes.InputTypes.numberSpinner;\n    },\n    hasHelp: function() {\n        return this.help !== undefined;\n    }\n});\n\nconst apply = function(axis) {\n    const elems = document.getElementsByClassName(\"data-input\");\n    const curveParams = matsCollections.CurveParams.find({}, {fields: {name: 1}}).fetch();\n    const curveNames = _.pluck(curveParams, \"name\");\n    const param_elems = _.filter(elems, function (elem) {\n        return _.contains(curveNames, elem.name);\n    });\n    var l = param_elems.length;\n    for (var i = 0; i < l; i++) {\n        var pelem = param_elems[i];\n        //console.log(\"pelem.type is \" + pelem.type);\n        var elem_id = pelem.id;\n        var target_id = axis + \"-\" + elem_id;\n        var telem = document.getElementById(target_id);\n        // Notice that these types are not matsTypes these are javascript types\n        if (pelem.type === \"select-multiple\") {\n            var $options = $(\"#\" + elem_id + \" > option\").clone();\n            $(\"#\" + target_id).empty().append($options);\n            var selectedOptions = $(pelem.selectedOptions).map(function(){return(this.value)}).get();\n            for (var x =0; x < telem.options.length; x++) {\n                if ($.inArray(telem.options[x].value, selectedOptions) !== -1) {\n                    telem.options[x].selected = true;\n                } else {\n                    telem.options[x].selected = false;\n                }\n            }\n        } else if (pelem.type === \"select-one\") {\n            var $options = $(\"#\" + elem_id + \" > option\").clone();\n            $(\"#\" + target_id).empty().append($options);\n            telem.selectedIndex = pelem.selectedIndex;\n        } else if (pelem.type === \"radio\") {\n            // NOT SURE THIS IS RIGHT\n            //console.log(pelem.name + \" is \" + $('input[name=\"' + pelem.name + '\"]:checked').val());\n            $('input[name=\"' + telem.name + '\"]:checked');\n        } else if (pelem.type === \"button\") {\n            telem.value = pelem.value;\n        } else {\n            telem.value = pelem.value;\n        }\n    }\n    setAxisText(axis);\n};\n\nTemplate.scatter2d.events({\n    'click .apply-params-to-xaxis': function(event) {\n        apply('xaxis');\n    },\n    'click .apply-params-to-yaxis': function(event) {\n        apply('yaxis');\n    },\n    'change .axis-selector-radioGroup' : function(event) {\n        var newAxis = event.currentTarget.value;\n        Session.set('axis',newAxis);\n        var elems = document.getElementsByClassName(\"data-input\");\n        var axis_elems = _.filter(elems, function (elem) {\n            return elem.name.indexOf(newAxis) > -1;\n        });\n        var l = axis_elems.length;\n        for (var i = 0; i < l; i++) {\n            var aelem = axis_elems[i];\n            var aelem_id = aelem.id;\n            // remove the axis part at the front\n            var target_id = aelem_id.substring(newAxis.length+1,aelem_id.length);\n            var telem = document.getElementById(target_id);\n            if (aelem.type === \"select-multiple\") {\n                $(telem).val($(aelem.selectedOptions).map(function(){return(this.value)}).get());\n            } else if (aelem.type === \"radio\") {\n                // NOT SURE THIS IS RIGHT\n                //console.log(pelem.name + \" is \" + $('input[name=\"' + pelem.name + '\"]:checked').val());\n                $('input[name=\"' + telem.name + '\"]:checked');\n            } else if (aelem.type === \"button\") {\n                telem.value = aelem.value;\n            } else {\n                telem.value = aelem.value;\n            }\n            telem.dispatchEvent(new CustomEvent(\"axisRefresh\"));\n        }\n    },\n    'click .axishelp' : function() {\n        $(\"#matshelp\").load(\"/help/scatter-help.html #matshelp\");\n        $(\"#helpModal\").modal('show');\n    },\n    'click .help' : function() {\n        $(\"#matshelp\").load(\"/help/\" + this.help + \" #matshelp\");\n        $(\"#helpModal\").modal('show');\n    }\n});\n\n"]},"sourceType":"script","hash":"b6076a2bdf4de060edce97b816fc9e0cd44aa47d"}
