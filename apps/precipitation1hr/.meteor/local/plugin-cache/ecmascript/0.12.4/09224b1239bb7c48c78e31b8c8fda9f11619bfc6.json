{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/socket-stream-client/urls.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/socket-stream-client/urls.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/socket-stream-client/urls.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/socket-stream-client/urls.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/socket-stream-client/urls.js"}},"code":"module.export({\n  toSockjsUrl: () => toSockjsUrl,\n  toWebsocketUrl: () => toWebsocketUrl\n});\n\n// @param url {String} URL to Meteor app, eg:\n//   \"/\" or \"madewith.meteor.com\" or \"https://foo.meteor.com\"\n//   or \"ddp+sockjs://ddp--****-foo.meteor.com/sockjs\"\n// @returns {String} URL to the endpoint with the specific scheme and subPath, e.g.\n// for scheme \"http\" and subPath \"sockjs\"\n//   \"http://subdomain.meteor.com/sockjs\" or \"/sockjs\"\n//   or \"https://ddp--1234-foo.meteor.com/sockjs\"\nfunction translateUrl(url, newSchemeBase, subPath) {\n  if (!newSchemeBase) {\n    newSchemeBase = 'http';\n  }\n\n  if (subPath !== \"sockjs\" && url.startsWith(\"/\")) {\n    url = Meteor.absoluteUrl(url.substr(1));\n  }\n\n  var ddpUrlMatch = url.match(/^ddp(i?)\\+sockjs:\\/\\//);\n  var httpUrlMatch = url.match(/^http(s?):\\/\\//);\n  var newScheme;\n\n  if (ddpUrlMatch) {\n    // Remove scheme and split off the host.\n    var urlAfterDDP = url.substr(ddpUrlMatch[0].length);\n    newScheme = ddpUrlMatch[1] === 'i' ? newSchemeBase : newSchemeBase + 's';\n    var slashPos = urlAfterDDP.indexOf('/');\n    var host = slashPos === -1 ? urlAfterDDP : urlAfterDDP.substr(0, slashPos);\n    var rest = slashPos === -1 ? '' : urlAfterDDP.substr(slashPos); // In the host (ONLY!), change '*' characters into random digits. This\n    // allows different stream connections to connect to different hostnames\n    // and avoid browser per-hostname connection limits.\n\n    host = host.replace(/\\*/g, () => Math.floor(Math.random() * 10));\n    return newScheme + '://' + host + rest;\n  } else if (httpUrlMatch) {\n    newScheme = !httpUrlMatch[1] ? newSchemeBase : newSchemeBase + 's';\n    var urlAfterHttp = url.substr(httpUrlMatch[0].length);\n    url = newScheme + '://' + urlAfterHttp;\n  } // Prefix FQDNs but not relative URLs\n\n\n  if (url.indexOf('://') === -1 && !url.startsWith('/')) {\n    url = newSchemeBase + '://' + url;\n  } // XXX This is not what we should be doing: if I have a site\n  // deployed at \"/foo\", then DDP.connect(\"/\") should actually connect\n  // to \"/\", not to \"/foo\". \"/\" is an absolute path. (Contrast: if\n  // deployed at \"/foo\", it would be reasonable for DDP.connect(\"bar\")\n  // to connect to \"/foo/bar\").\n  //\n  // We should make this properly honor absolute paths rather than\n  // forcing the path to be relative to the site root. Simultaneously,\n  // we should set DDP_DEFAULT_CONNECTION_URL to include the site\n  // root. See also client_convenience.js #RationalizingRelativeDDPURLs\n\n\n  url = Meteor._relativeToSiteRootUrl(url);\n  if (url.endsWith('/')) return url + subPath;else return url + '/' + subPath;\n}\n\nfunction toSockjsUrl(url) {\n  return translateUrl(url, 'http', 'sockjs');\n}\n\nfunction toWebsocketUrl(url) {\n  return translateUrl(url, 'ws', 'websocket');\n}","map":{"version":3,"sources":["packages/socket-stream-client/urls.js"],"names":["module","export","toSockjsUrl","toWebsocketUrl","translateUrl","url","newSchemeBase","subPath","startsWith","Meteor","absoluteUrl","substr","ddpUrlMatch","match","httpUrlMatch","newScheme","urlAfterDDP","length","slashPos","indexOf","host","rest","replace","Math","floor","random","urlAfterHttp","_relativeToSiteRootUrl","endsWith"],"mappings":"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","sourcesContent":["// @param url {String} URL to Meteor app, eg:\n//   \"/\" or \"madewith.meteor.com\" or \"https://foo.meteor.com\"\n//   or \"ddp+sockjs://ddp--****-foo.meteor.com/sockjs\"\n// @returns {String} URL to the endpoint with the specific scheme and subPath, e.g.\n// for scheme \"http\" and subPath \"sockjs\"\n//   \"http://subdomain.meteor.com/sockjs\" or \"/sockjs\"\n//   or \"https://ddp--1234-foo.meteor.com/sockjs\"\nfunction translateUrl(url, newSchemeBase, subPath) {\n  if (!newSchemeBase) {\n    newSchemeBase = 'http';\n  }\n\n  if (subPath !== \"sockjs\" && url.startsWith(\"/\")) {\n    url = Meteor.absoluteUrl(url.substr(1));\n  }\n\n  var ddpUrlMatch = url.match(/^ddp(i?)\\+sockjs:\\/\\//);\n  var httpUrlMatch = url.match(/^http(s?):\\/\\//);\n  var newScheme;\n  if (ddpUrlMatch) {\n    // Remove scheme and split off the host.\n    var urlAfterDDP = url.substr(ddpUrlMatch[0].length);\n    newScheme = ddpUrlMatch[1] === 'i' ? newSchemeBase : newSchemeBase + 's';\n    var slashPos = urlAfterDDP.indexOf('/');\n    var host = slashPos === -1 ? urlAfterDDP : urlAfterDDP.substr(0, slashPos);\n    var rest = slashPos === -1 ? '' : urlAfterDDP.substr(slashPos);\n\n    // In the host (ONLY!), change '*' characters into random digits. This\n    // allows different stream connections to connect to different hostnames\n    // and avoid browser per-hostname connection limits.\n    host = host.replace(/\\*/g, () => Math.floor(Math.random() * 10));\n\n    return newScheme + '://' + host + rest;\n  } else if (httpUrlMatch) {\n    newScheme = !httpUrlMatch[1] ? newSchemeBase : newSchemeBase + 's';\n    var urlAfterHttp = url.substr(httpUrlMatch[0].length);\n    url = newScheme + '://' + urlAfterHttp;\n  }\n\n  // Prefix FQDNs but not relative URLs\n  if (url.indexOf('://') === -1 && !url.startsWith('/')) {\n    url = newSchemeBase + '://' + url;\n  }\n\n  // XXX This is not what we should be doing: if I have a site\n  // deployed at \"/foo\", then DDP.connect(\"/\") should actually connect\n  // to \"/\", not to \"/foo\". \"/\" is an absolute path. (Contrast: if\n  // deployed at \"/foo\", it would be reasonable for DDP.connect(\"bar\")\n  // to connect to \"/foo/bar\").\n  //\n  // We should make this properly honor absolute paths rather than\n  // forcing the path to be relative to the site root. Simultaneously,\n  // we should set DDP_DEFAULT_CONNECTION_URL to include the site\n  // root. See also client_convenience.js #RationalizingRelativeDDPURLs\n  url = Meteor._relativeToSiteRootUrl(url);\n\n  if (url.endsWith('/')) return url + subPath;\n  else return url + '/' + subPath;\n}\n\nexport function toSockjsUrl(url) {\n  return translateUrl(url, 'http', 'sockjs');\n}\n\nexport function toWebsocketUrl(url) {\n  return translateUrl(url, 'ws', 'websocket');\n}\n"]},"sourceType":"script","hash":"09224b1239bb7c48c78e31b8c8fda9f11619bfc6"}
