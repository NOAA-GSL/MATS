{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/reactive-dict/reactive-dict.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/reactive-dict/reactive-dict.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/reactive-dict/reactive-dict.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/reactive-dict/reactive-dict.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/reactive-dict/reactive-dict.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nmodule.export({\n  ReactiveDict: function () {\n    return ReactiveDict;\n  }\n});\nvar hasOwn = Object.prototype.hasOwnProperty; // XXX come up with a serialization method which canonicalizes object key\n// order, which would allow us to use objects as values for equals.\n\nfunction stringify(value) {\n  if (value === undefined) {\n    return 'undefined';\n  }\n\n  return EJSON.stringify(value);\n}\n\nfunction parse(serialized) {\n  if (serialized === undefined || serialized === 'undefined') {\n    return undefined;\n  }\n\n  return EJSON.parse(serialized);\n}\n\nfunction changed(v) {\n  v && v.changed();\n} // XXX COMPAT WITH 0.9.1 : accept migrationData instead of dictName\n\n\nvar ReactiveDict =\n/*#__PURE__*/\nfunction () {\n  function ReactiveDict(dictName, dictData) {\n    // this.keys: key -> value\n    this.keys = {};\n\n    if (dictName) {\n      // name given; migration will be performed\n      if (typeof dictName === 'string') {\n        // the normal case, argument is a string name.\n        // Only run migration logic on client, it will cause\n        // duplicate name errors on server during reloads.\n        // _registerDictForMigrate will throw an error on duplicate name.\n        Meteor.isClient && ReactiveDict._registerDictForMigrate(dictName, this);\n\n        var migratedData = Meteor.isClient && ReactiveDict._loadMigratedDict(dictName);\n\n        if (migratedData) {\n          // Don't stringify migrated data\n          this.keys = migratedData;\n        } else {\n          // Use _setObject to make sure values are stringified\n          this._setObject(dictData || {});\n        }\n\n        this.name = dictName;\n      } else if ((0, _typeof2.default)(dictName) === 'object') {\n        // back-compat case: dictName is actually migrationData\n        // Use _setObject to make sure values are stringified\n        this._setObject(dictName);\n      } else {\n        throw new Error(\"Invalid ReactiveDict argument: \" + dictName);\n      }\n    } else if ((0, _typeof2.default)(dictData) === 'object') {\n      this._setObject(dictData);\n    }\n\n    this.allDeps = new Tracker.Dependency();\n    this.keyDeps = {}; // key -> Dependency\n\n    this.keyValueDeps = {}; // key -> Dependency\n  } // set() began as a key/value method, but we are now overloading it\n  // to take an object of key/value pairs, similar to backbone\n  // http://backbonejs.org/#Model-set\n\n\n  var _proto = ReactiveDict.prototype;\n\n  _proto.set = function () {\n    function set(keyOrObject, value) {\n      if ((0, _typeof2.default)(keyOrObject) === 'object' && value === undefined) {\n        // Called as `dict.set({...})`\n        this._setObject(keyOrObject);\n\n        return;\n      } // the input isn't an object, so it must be a key\n      // and we resume with the rest of the function\n\n\n      var key = keyOrObject;\n      value = stringify(value);\n      var keyExisted = hasOwn.call(this.keys, key);\n      var oldSerializedValue = keyExisted ? this.keys[key] : 'undefined';\n      var isNewValue = value !== oldSerializedValue;\n      this.keys[key] = value;\n\n      if (isNewValue || !keyExisted) {\n        // Using the changed utility function here because this.allDeps might not exist yet,\n        // when setting initial data from constructor\n        changed(this.allDeps);\n      } // Don't trigger changes when setting initial data from constructor,\n      // this.KeyDeps is undefined in this case\n\n\n      if (isNewValue && this.keyDeps) {\n        changed(this.keyDeps[key]);\n\n        if (this.keyValueDeps[key]) {\n          changed(this.keyValueDeps[key][oldSerializedValue]);\n          changed(this.keyValueDeps[key][value]);\n        }\n      }\n    }\n\n    return set;\n  }();\n\n  _proto.setDefault = function () {\n    function setDefault(keyOrObject, value) {\n      if ((0, _typeof2.default)(keyOrObject) === 'object' && value === undefined) {\n        // Called as `dict.setDefault({...})`\n        this._setDefaultObject(keyOrObject);\n\n        return;\n      } // the input isn't an object, so it must be a key\n      // and we resume with the rest of the function\n\n\n      var key = keyOrObject;\n\n      if (!hasOwn.call(this.keys, key)) {\n        this.set(key, value);\n      }\n    }\n\n    return setDefault;\n  }();\n\n  _proto.get = function () {\n    function get(key) {\n      this._ensureKey(key);\n\n      this.keyDeps[key].depend();\n      return parse(this.keys[key]);\n    }\n\n    return get;\n  }();\n\n  _proto.equals = function () {\n    function equals(key, value) {\n      var _this = this;\n\n      // Mongo.ObjectID is in the 'mongo' package\n      var ObjectID = null;\n\n      if (Package.mongo) {\n        ObjectID = Package.mongo.Mongo.ObjectID;\n      } // We don't allow objects (or arrays that might include objects) for\n      // .equals, because JSON.stringify doesn't canonicalize object key\n      // order. (We can make equals have the right return value by parsing the\n      // current value and using EJSON.equals, but we won't have a canonical\n      // element of keyValueDeps[key] to store the dependency.) You can still use\n      // \"EJSON.equals(reactiveDict.get(key), value)\".\n      //\n      // XXX we could allow arrays as long as we recursively check that there\n      // are no objects\n\n\n      if (typeof value !== 'string' && typeof value !== 'number' && typeof value !== 'boolean' && typeof value !== 'undefined' && !(value instanceof Date) && !(ObjectID && value instanceof ObjectID) && value !== null) {\n        throw new Error(\"ReactiveDict.equals: value must be scalar\");\n      }\n\n      var serializedValue = stringify(value);\n\n      if (Tracker.active) {\n        this._ensureKey(key);\n\n        if (!hasOwn.call(this.keyValueDeps[key], serializedValue)) {\n          this.keyValueDeps[key][serializedValue] = new Tracker.Dependency();\n        }\n\n        var isNew = this.keyValueDeps[key][serializedValue].depend();\n\n        if (isNew) {\n          Tracker.onInvalidate(function () {\n            // clean up [key][serializedValue] if it's now empty, so we don't\n            // use O(n) memory for n = values seen ever\n            if (!_this.keyValueDeps[key][serializedValue].hasDependents()) {\n              delete _this.keyValueDeps[key][serializedValue];\n            }\n          });\n        }\n      }\n\n      var oldValue = undefined;\n\n      if (hasOwn.call(this.keys, key)) {\n        oldValue = parse(this.keys[key]);\n      }\n\n      return EJSON.equals(oldValue, value);\n    }\n\n    return equals;\n  }();\n\n  _proto.all = function () {\n    function all() {\n      var _this2 = this;\n\n      this.allDeps.depend();\n      var ret = {};\n      Object.keys(this.keys).forEach(function (key) {\n        ret[key] = parse(_this2.keys[key]);\n      });\n      return ret;\n    }\n\n    return all;\n  }();\n\n  _proto.clear = function () {\n    function clear() {\n      var _this3 = this;\n\n      var oldKeys = this.keys;\n      this.keys = {};\n      this.allDeps.changed();\n      Object.keys(oldKeys).forEach(function (key) {\n        changed(_this3.keyDeps[key]);\n\n        if (_this3.keyValueDeps[key]) {\n          changed(_this3.keyValueDeps[key][oldKeys[key]]);\n          changed(_this3.keyValueDeps[key]['undefined']);\n        }\n      });\n    }\n\n    return clear;\n  }();\n\n  _proto.delete = function () {\n    function _delete(key) {\n      var didRemove = false;\n\n      if (hasOwn.call(this.keys, key)) {\n        var oldValue = this.keys[key];\n        delete this.keys[key];\n        changed(this.keyDeps[key]);\n\n        if (this.keyValueDeps[key]) {\n          changed(this.keyValueDeps[key][oldValue]);\n          changed(this.keyValueDeps[key]['undefined']);\n        }\n\n        this.allDeps.changed();\n        didRemove = true;\n      }\n\n      return didRemove;\n    }\n\n    return _delete;\n  }();\n\n  _proto.destroy = function () {\n    function destroy() {\n      this.clear();\n\n      if (this.name && hasOwn.call(ReactiveDict._dictsToMigrate, this.name)) {\n        delete ReactiveDict._dictsToMigrate[this.name];\n      }\n    }\n\n    return destroy;\n  }();\n\n  _proto._setObject = function () {\n    function _setObject(object) {\n      var _this4 = this;\n\n      Object.keys(object).forEach(function (key) {\n        _this4.set(key, object[key]);\n      });\n    }\n\n    return _setObject;\n  }();\n\n  _proto._setDefaultObject = function () {\n    function _setDefaultObject(object) {\n      var _this5 = this;\n\n      Object.keys(object).forEach(function (key) {\n        _this5.setDefault(key, object[key]);\n      });\n    }\n\n    return _setDefaultObject;\n  }();\n\n  _proto._ensureKey = function () {\n    function _ensureKey(key) {\n      if (!(key in this.keyDeps)) {\n        this.keyDeps[key] = new Tracker.Dependency();\n        this.keyValueDeps[key] = {};\n      }\n    }\n\n    return _ensureKey;\n  }(); // Get a JSON value that can be passed to the constructor to\n  // create a new ReactiveDict with the same contents as this one\n\n\n  _proto._getMigrationData = function () {\n    function _getMigrationData() {\n      // XXX sanitize and make sure it's JSONible?\n      return this.keys;\n    }\n\n    return _getMigrationData;\n  }();\n\n  return ReactiveDict;\n}();","map":{"version":3,"sources":["packages/reactive-dict/reactive-dict.js"],"names":["module","export","ReactiveDict","hasOwn","Object","prototype","hasOwnProperty","stringify","value","undefined","EJSON","parse","serialized","changed","v","dictName","dictData","keys","Meteor","isClient","_registerDictForMigrate","migratedData","_loadMigratedDict","_setObject","name","Error","allDeps","Tracker","Dependency","keyDeps","keyValueDeps","set","keyOrObject","key","keyExisted","call","oldSerializedValue","isNewValue","setDefault","_setDefaultObject","get","_ensureKey","depend","equals","ObjectID","Package","mongo","Mongo","Date","serializedValue","active","isNew","onInvalidate","hasDependents","oldValue","all","ret","forEach","clear","oldKeys","delete","didRemove","destroy","_dictsToMigrate","object","_getMigrationData"],"mappings":"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","sourcesContent":["const hasOwn = Object.prototype.hasOwnProperty;\n\n// XXX come up with a serialization method which canonicalizes object key\n// order, which would allow us to use objects as values for equals.\nfunction stringify(value) {\n  if (value === undefined) {\n    return 'undefined';\n  }\n  return EJSON.stringify(value);\n}\n\nfunction parse(serialized) {\n  if (serialized === undefined || serialized === 'undefined') {\n    return undefined;\n  }\n  return EJSON.parse(serialized);\n}\n\nfunction changed(v) {\n  v && v.changed();\n}\n\n// XXX COMPAT WITH 0.9.1 : accept migrationData instead of dictName\nexport class ReactiveDict {\n  constructor(dictName, dictData) {\n    // this.keys: key -> value\n    this.keys = {};\n\n    if (dictName) {\n      // name given; migration will be performed\n      if (typeof dictName === 'string') {\n        // the normal case, argument is a string name.\n\n        // Only run migration logic on client, it will cause\n        // duplicate name errors on server during reloads.\n        // _registerDictForMigrate will throw an error on duplicate name.\n        Meteor.isClient && ReactiveDict._registerDictForMigrate(dictName, this);\n        const migratedData = Meteor.isClient && ReactiveDict._loadMigratedDict(dictName);\n\n        if (migratedData) {\n          // Don't stringify migrated data\n          this.keys = migratedData;\n        } else {\n          // Use _setObject to make sure values are stringified\n          this._setObject(dictData || {});\n        }\n        this.name = dictName;\n      } else if (typeof dictName === 'object') {\n        // back-compat case: dictName is actually migrationData\n        // Use _setObject to make sure values are stringified\n        this._setObject(dictName);\n      } else {\n        throw new Error(\"Invalid ReactiveDict argument: \" + dictName);\n      }\n    } else if (typeof dictData === 'object') {\n      this._setObject(dictData);\n    }\n\n    this.allDeps = new Tracker.Dependency;\n    this.keyDeps = {}; // key -> Dependency\n    this.keyValueDeps = {}; // key -> Dependency\n  }\n\n  // set() began as a key/value method, but we are now overloading it\n  // to take an object of key/value pairs, similar to backbone\n  // http://backbonejs.org/#Model-set\n  set(keyOrObject, value) {\n    if ((typeof keyOrObject === 'object') && (value === undefined)) {\n      // Called as `dict.set({...})`\n      this._setObject(keyOrObject);\n      return;\n    }\n    // the input isn't an object, so it must be a key\n    // and we resume with the rest of the function\n    const key = keyOrObject;\n\n    value = stringify(value);\n\n    const keyExisted = hasOwn.call(this.keys, key);\n    const oldSerializedValue = keyExisted ? this.keys[key] : 'undefined';\n    const isNewValue = (value !== oldSerializedValue);\n\n    this.keys[key] = value;\n\n    if (isNewValue || !keyExisted) {\n      // Using the changed utility function here because this.allDeps might not exist yet,\n      // when setting initial data from constructor\n      changed(this.allDeps);\n    }\n\n    // Don't trigger changes when setting initial data from constructor,\n    // this.KeyDeps is undefined in this case\n    if (isNewValue && this.keyDeps) {\n      changed(this.keyDeps[key]);\n      if (this.keyValueDeps[key]) {\n        changed(this.keyValueDeps[key][oldSerializedValue]);\n        changed(this.keyValueDeps[key][value]);\n      }\n    }\n  }\n\n  setDefault(keyOrObject, value) {\n    if ((typeof keyOrObject === 'object') && (value === undefined)) {\n      // Called as `dict.setDefault({...})`\n      this._setDefaultObject(keyOrObject);\n      return;\n    }\n    // the input isn't an object, so it must be a key\n    // and we resume with the rest of the function\n    const key = keyOrObject;\n\n    if (! hasOwn.call(this.keys, key)) {\n      this.set(key, value);\n    }\n  }\n\n  get(key) {\n    this._ensureKey(key);\n    this.keyDeps[key].depend();\n    return parse(this.keys[key]);\n  }\n\n  equals(key, value) {\n    // Mongo.ObjectID is in the 'mongo' package\n    let ObjectID = null;\n    if (Package.mongo) {\n      ObjectID = Package.mongo.Mongo.ObjectID;\n    }\n    // We don't allow objects (or arrays that might include objects) for\n    // .equals, because JSON.stringify doesn't canonicalize object key\n    // order. (We can make equals have the right return value by parsing the\n    // current value and using EJSON.equals, but we won't have a canonical\n    // element of keyValueDeps[key] to store the dependency.) You can still use\n    // \"EJSON.equals(reactiveDict.get(key), value)\".\n    //\n    // XXX we could allow arrays as long as we recursively check that there\n    // are no objects\n    if (typeof value !== 'string' &&\n        typeof value !== 'number' &&\n        typeof value !== 'boolean' &&\n        typeof value !== 'undefined' &&\n        !(value instanceof Date) &&\n        !(ObjectID && value instanceof ObjectID) &&\n        value !== null) {\n      throw new Error(\"ReactiveDict.equals: value must be scalar\");\n    }\n    const serializedValue = stringify(value);\n\n    if (Tracker.active) {\n      this._ensureKey(key);\n\n      if (! hasOwn.call(this.keyValueDeps[key], serializedValue)) {\n        this.keyValueDeps[key][serializedValue] = new Tracker.Dependency;\n      }\n\n      var isNew = this.keyValueDeps[key][serializedValue].depend();\n      if (isNew) {\n        Tracker.onInvalidate(() => {\n          // clean up [key][serializedValue] if it's now empty, so we don't\n          // use O(n) memory for n = values seen ever\n          if (! this.keyValueDeps[key][serializedValue].hasDependents()) {\n            delete this.keyValueDeps[key][serializedValue];\n          }\n        });\n      }\n    }\n\n    let oldValue = undefined;\n    if (hasOwn.call(this.keys, key)) {\n      oldValue = parse(this.keys[key]);\n    }\n    return EJSON.equals(oldValue, value);\n  }\n\n  all() {\n    this.allDeps.depend();\n    let ret = {};\n    Object.keys(this.keys).forEach(key => {\n      ret[key] = parse(this.keys[key]);\n    });\n    return ret;\n  }\n\n  clear() {\n    const oldKeys = this.keys;\n    this.keys = {};\n\n    this.allDeps.changed();\n\n    Object.keys(oldKeys).forEach(key => {\n      changed(this.keyDeps[key]);\n      if (this.keyValueDeps[key]) {\n        changed(this.keyValueDeps[key][oldKeys[key]]);\n        changed(this.keyValueDeps[key]['undefined']);\n      }\n    });\n  }\n\n  delete(key) {\n    let didRemove = false;\n\n    if (hasOwn.call(this.keys, key)) {\n      const oldValue = this.keys[key];\n      delete this.keys[key];\n      changed(this.keyDeps[key]);\n      if (this.keyValueDeps[key]) {\n        changed(this.keyValueDeps[key][oldValue]);\n        changed(this.keyValueDeps[key]['undefined']);\n      }\n      this.allDeps.changed();\n      didRemove = true;\n    }\n    return didRemove;\n  }\n\n  destroy() {\n    this.clear();\n    if (this.name && hasOwn.call(ReactiveDict._dictsToMigrate, this.name)) {\n      delete ReactiveDict._dictsToMigrate[this.name];\n    }\n  }\n\n  _setObject(object) {\n    Object.keys(object).forEach(key => {\n      this.set(key, object[key]);\n    });\n  }\n\n  _setDefaultObject(object) {\n    Object.keys(object).forEach(key => {\n      this.setDefault(key, object[key]);\n    });\n  }\n\n  _ensureKey(key) {\n    if (!(key in this.keyDeps)) {\n      this.keyDeps[key] = new Tracker.Dependency;\n      this.keyValueDeps[key] = {};\n    }\n  }\n\n  // Get a JSON value that can be passed to the constructor to\n  // create a new ReactiveDict with the same contents as this one\n  _getMigrationData() {\n    // XXX sanitize and make sure it's JSONible?\n    return this.keys;\n  }\n}\n"]},"sourceType":"script","hash":"bd512f6a87a27e4e198707ab503a07e00f43a349"}
