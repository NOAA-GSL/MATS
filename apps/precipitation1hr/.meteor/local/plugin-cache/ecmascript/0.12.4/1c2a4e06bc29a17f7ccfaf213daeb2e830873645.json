{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/accounts-ui-unstyled/accounts_ui.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/accounts-ui-unstyled/accounts_ui.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/accounts-ui-unstyled/accounts_ui.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/accounts-ui-unstyled/accounts_ui.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/accounts-ui-unstyled/accounts_ui.js"}},"code":"module.export({\n  passwordSignupFields: () => passwordSignupFields\n});\n\n/**\n * @summary Accounts UI\n * @namespace\n * @memberOf Accounts\n * @importFromPackage accounts-base\n */\nAccounts.ui = {\n  _options: {\n    requestPermissions: Object.create(null),\n    requestOfflineToken: Object.create(null),\n    forceApprovalPrompt: Object.create(null)\n  }\n};\nconst VALID_OPTIONS = new Set().add('passwordSignupFields').add('requestPermissions').add('requestOfflineToken').add('forceApprovalPrompt');\nconst VALID_PASSWORD_SIGNUP_FIELDS = new Set().add(\"USERNAME_AND_EMAIL\").add(\"USERNAME_AND_OPTIONAL_EMAIL\").add(\"USERNAME_ONLY\").add(\"EMAIL_ONLY\");\n\nfunction isValidPasswordSignupField(field) {\n  return VALID_PASSWORD_SIGNUP_FIELDS.has(field);\n}\n/**\n * @summary Configure the behavior of [`{{> loginButtons}}`](#accountsui).\n * @locus Client\n * @param {Object} options\n * @param {Object} options.requestPermissions Which [permissions](#requestpermissions) to request from the user for each external service.\n * @param {Object} options.requestOfflineToken To ask the user for permission to act on their behalf when offline, map the relevant external service to `true`. Currently only supported with Google. See [Meteor.loginWithExternalService](#meteor_loginwithexternalservice) for more details.\n * @param {Object} options.forceApprovalPrompt If true, forces the user to approve the app's permissions, even if previously approved. Currently only supported with Google.\n * @param {String} options.passwordSignupFields Which fields to display in the user creation form. One of '`USERNAME_AND_EMAIL`', '`USERNAME_AND_OPTIONAL_EMAIL`', '`USERNAME_ONLY`', or '`EMAIL_ONLY`' (default).\n * @importFromPackage accounts-base\n */\n\n\nAccounts.ui.config = options => {\n  Object.keys(options).forEach(key => {\n    if (!VALID_OPTIONS.has(key)) {\n      throw new Error(\"Accounts.ui.config: Invalid option: \".concat(key));\n    }\n  });\n  handlePasswordSignupFields(options);\n  handleRequestPermissions(options);\n  handleRequestOfflineToken(options);\n  handleForceApprovalPrompt(options);\n};\n\nfunction handlePasswordSignupFields(options) {\n  let {\n    passwordSignupFields\n  } = options;\n\n  if (passwordSignupFields) {\n    const reportInvalid = () => {\n      throw new Error(\"Accounts.ui.config: Invalid option for `passwordSignupFields`: \".concat(passwordSignupFields));\n    };\n\n    if (typeof passwordSignupFields === \"string\") {\n      module.runSetters(passwordSignupFields = [passwordSignupFields]);\n    } else if (!Array.isArray(passwordSignupFields)) {\n      reportInvalid();\n    }\n\n    if (passwordSignupFields.every(isValidPasswordSignupField)) {\n      if (Accounts.ui._options.passwordSignupFields) {\n        throw new Error(\"Accounts.ui.config: Can't set `passwordSignupFields` more than once\");\n      }\n\n      Object.assign(Accounts.ui._options, {\n        passwordSignupFields\n      });\n      return;\n    }\n\n    reportInvalid();\n  }\n}\n\nfunction passwordSignupFields() {\n  const {\n    passwordSignupFields\n  } = Accounts.ui._options;\n\n  if (Array.isArray(passwordSignupFields)) {\n    return passwordSignupFields;\n  }\n\n  if (typeof passwordSignupFields === 'string') {\n    return [passwordSignupFields];\n  }\n\n  return [\"EMAIL_ONLY\"];\n}\n\nfunction handleRequestPermissions(_ref) {\n  let {\n    requestPermissions\n  } = _ref;\n\n  if (requestPermissions) {\n    Object.keys(requestPermissions).forEach(service => {\n      if (Accounts.ui._options.requestPermissions[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `requestPermissions` more than once for \".concat(service));\n      }\n\n      const scope = requestPermissions[service];\n\n      if (!Array.isArray(scope)) {\n        throw new Error(\"Accounts.ui.config: Value for `requestPermissions` must be an array\");\n      }\n\n      Accounts.ui._options.requestPermissions[service] = scope;\n    });\n  }\n}\n\nfunction handleRequestOfflineToken(_ref2) {\n  let {\n    requestOfflineToken\n  } = _ref2;\n\n  if (requestOfflineToken) {\n    Object.keys(requestOfflineToken).forEach(service => {\n      if (service !== 'google') {\n        throw new Error(\"Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.\");\n      }\n\n      if (Accounts.ui._options.requestOfflineToken[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `requestOfflineToken` more than once for \".concat(service));\n      }\n\n      Accounts.ui._options.requestOfflineToken[service] = requestOfflineToken[service];\n    });\n  }\n}\n\nfunction handleForceApprovalPrompt(_ref3) {\n  let {\n    forceApprovalPrompt\n  } = _ref3;\n\n  if (forceApprovalPrompt) {\n    Object.keys(forceApprovalPrompt).forEach(service => {\n      if (service !== 'google') {\n        throw new Error(\"Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.\");\n      }\n\n      if (Accounts.ui._options.forceApprovalPrompt[service]) {\n        throw new Error(\"Accounts.ui.config: Can't set `forceApprovalPrompt` more than once for \".concat(service));\n      }\n\n      Accounts.ui._options.forceApprovalPrompt[service] = forceApprovalPrompt[service];\n    });\n  }\n}","map":{"version":3,"sources":["packages/accounts-ui-unstyled/accounts_ui.js"],"names":["module","export","passwordSignupFields","Accounts","ui","_options","requestPermissions","Object","create","requestOfflineToken","forceApprovalPrompt","VALID_OPTIONS","Set","add","VALID_PASSWORD_SIGNUP_FIELDS","isValidPasswordSignupField","field","has","config","options","keys","forEach","key","Error","handlePasswordSignupFields","handleRequestPermissions","handleRequestOfflineToken","handleForceApprovalPrompt","reportInvalid","Array","isArray","every","assign","service","scope"],"mappings":"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","sourcesContent":["/**\n * @summary Accounts UI\n * @namespace\n * @memberOf Accounts\n * @importFromPackage accounts-base\n */\nAccounts.ui = {\n  _options: {\n    requestPermissions: Object.create(null),\n    requestOfflineToken: Object.create(null),\n    forceApprovalPrompt: Object.create(null),\n  },\n};\n\nconst VALID_OPTIONS = new Set()\n  .add('passwordSignupFields')\n  .add('requestPermissions')\n  .add('requestOfflineToken')\n  .add('forceApprovalPrompt');\n\nconst VALID_PASSWORD_SIGNUP_FIELDS = new Set()\n  .add(\"USERNAME_AND_EMAIL\")\n  .add(\"USERNAME_AND_OPTIONAL_EMAIL\")\n  .add(\"USERNAME_ONLY\")\n  .add(\"EMAIL_ONLY\");\n\nfunction isValidPasswordSignupField(field) {\n  return VALID_PASSWORD_SIGNUP_FIELDS.has(field);\n}\n\n/**\n * @summary Configure the behavior of [`{{> loginButtons}}`](#accountsui).\n * @locus Client\n * @param {Object} options\n * @param {Object} options.requestPermissions Which [permissions](#requestpermissions) to request from the user for each external service.\n * @param {Object} options.requestOfflineToken To ask the user for permission to act on their behalf when offline, map the relevant external service to `true`. Currently only supported with Google. See [Meteor.loginWithExternalService](#meteor_loginwithexternalservice) for more details.\n * @param {Object} options.forceApprovalPrompt If true, forces the user to approve the app's permissions, even if previously approved. Currently only supported with Google.\n * @param {String} options.passwordSignupFields Which fields to display in the user creation form. One of '`USERNAME_AND_EMAIL`', '`USERNAME_AND_OPTIONAL_EMAIL`', '`USERNAME_ONLY`', or '`EMAIL_ONLY`' (default).\n * @importFromPackage accounts-base\n */\nAccounts.ui.config = options => {\n  Object.keys(options).forEach(key => {\n    if (!VALID_OPTIONS.has(key)) {\n      throw new Error(`Accounts.ui.config: Invalid option: ${key}`);\n    }\n  });\n\n  handlePasswordSignupFields(options);\n  handleRequestPermissions(options);\n  handleRequestOfflineToken(options);\n  handleForceApprovalPrompt(options);\n};\n\nfunction handlePasswordSignupFields(options) {\n  let { passwordSignupFields } = options;\n\n  if (passwordSignupFields) {\n    const reportInvalid = () => {\n      throw new Error(`Accounts.ui.config: Invalid option for \\`passwordSignupFields\\`: ${passwordSignupFields}`);\n    };\n\n    if (typeof passwordSignupFields === \"string\") {\n      passwordSignupFields = [passwordSignupFields];\n    } else if (!Array.isArray(passwordSignupFields)) {\n      reportInvalid();\n    }\n\n    if (passwordSignupFields.every(isValidPasswordSignupField)) {\n      if (Accounts.ui._options.passwordSignupFields) {\n        throw new Error(\"Accounts.ui.config: Can't set `passwordSignupFields` more than once\");\n      }\n      Object.assign(Accounts.ui._options, { passwordSignupFields });\n      return;\n    }\n\n    reportInvalid();\n  }\n}\n\nexport function passwordSignupFields() {\n  const { passwordSignupFields } = Accounts.ui._options;\n\n  if (Array.isArray(passwordSignupFields)) {\n    return passwordSignupFields;\n  }\n\n  if (typeof passwordSignupFields === 'string') {\n    return [passwordSignupFields];\n  }\n\n  return [\"EMAIL_ONLY\"];\n}\n\n\nfunction handleRequestPermissions({ requestPermissions }) {\n  if (requestPermissions) {\n    Object.keys(requestPermissions).forEach(service => {\n      if (Accounts.ui._options.requestPermissions[service]) {\n        throw new Error(`Accounts.ui.config: Can't set \\`requestPermissions\\` more than once for ${service}`);\n      }\n\n      const scope = requestPermissions[service];\n\n      if (!Array.isArray(scope)) {\n        throw new Error(\"Accounts.ui.config: Value for `requestPermissions` must be an array\");\n      }\n\n      Accounts.ui._options.requestPermissions[service] = scope;\n    });\n  }\n}\n\nfunction handleRequestOfflineToken({ requestOfflineToken }) {\n  if (requestOfflineToken) {\n    Object.keys(requestOfflineToken).forEach(service => {\n      if (service !== 'google') {\n        throw new Error(\"Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.\");\n      }\n\n      if (Accounts.ui._options.requestOfflineToken[service]) {\n        throw new Error(`Accounts.ui.config: Can't set \\`requestOfflineToken\\` more than once for ${service}`);\n      }\n\n      Accounts.ui._options.requestOfflineToken[service] =\n        requestOfflineToken[service];\n    });\n  }\n}\n\nfunction handleForceApprovalPrompt({ forceApprovalPrompt }) {\n  if (forceApprovalPrompt) {\n    Object.keys(forceApprovalPrompt).forEach(service => {\n      if (service !== 'google') {\n        throw new Error(\"Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.\");\n      }\n\n      if (Accounts.ui._options.forceApprovalPrompt[service]) {\n        throw new Error(`Accounts.ui.config: Can't set \\`forceApprovalPrompt\\` more than once for ${service}`);\n      }\n\n      Accounts.ui._options.forceApprovalPrompt[service] =\n        forceApprovalPrompt[service];\n    });\n  }\n}\n"]},"sourceType":"script","hash":"1c2a4e06bc29a17f7ccfaf213daeb2e830873645"}
