{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/accounts-ui-unstyled/login_buttons.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/accounts-ui-unstyled/login_buttons.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/accounts-ui-unstyled/login_buttons.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/accounts-ui-unstyled/login_buttons.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/accounts-ui-unstyled/login_buttons.js"}},"code":"module.export({\n  displayName: function () {\n    return displayName;\n  },\n  getLoginServices: function () {\n    return getLoginServices;\n  },\n  hasPasswordService: function () {\n    return hasPasswordService;\n  },\n  dropdown: function () {\n    return dropdown;\n  },\n  validateUsername: function () {\n    return validateUsername;\n  },\n  validateEmail: function () {\n    return validateEmail;\n  },\n  validatePassword: function () {\n    return validatePassword;\n  }\n});\nvar passwordSignupFields;\nmodule.link(\"./accounts_ui.js\", {\n  passwordSignupFields: function (v) {\n    passwordSignupFields = v;\n  }\n}, 0);\n// for convenience\nvar loginButtonsSession = Accounts._loginButtonsSession; // shared between dropdown and single mode\n\nTemplate.loginButtons.events({\n  'click #login-buttons-logout': function () {\n    return Meteor.logout(function () {\n      return loginButtonsSession.closeDropdown();\n    });\n  }\n});\nTemplate.registerHelper('loginButtons', function () {\n  throw new Error(\"Use {{> loginButtons}} instead of {{loginButtons}}\");\n}); //\n// helpers\n//\n\nvar displayName = function () {\n  var user = Meteor.user();\n  if (!user) return '';\n  if (user.profile && user.profile.name) return user.profile.name;\n  if (user.username) return user.username;\n  if (user.emails && user.emails[0] && user.emails[0].address) return user.emails[0].address;\n  return '';\n};\n\nvar getLoginServices = function () {\n  // First look for OAuth services.\n  var services = Package['accounts-oauth'] ? Accounts.oauth.serviceNames() : []; // Be equally kind to all login services. This also preserves\n  // backwards-compatibility. (But maybe order should be\n  // configurable?)\n\n  services.sort(); // Add password, if it's there; it must come last.\n\n  if (hasPasswordService()) services.push('password');\n  return services.map(function (name) {\n    return {\n      name: name\n    };\n  });\n};\n\nvar hasPasswordService = function () {\n  return !!Package['accounts-password'];\n};\n\nvar dropdown = function () {\n  return hasPasswordService() || getLoginServices().length > 1;\n};\n\nvar validateUsername = function (username) {\n  if (username.length >= 3) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Username must be at least 3 characters long\");\n    return false;\n  }\n};\n\nvar validateEmail = function (email) {\n  if (passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\" && email === '') return true;\n\n  if (email.includes('@')) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Invalid email\");\n    return false;\n  }\n};\n\nvar validatePassword = function (password) {\n  if (password.length >= 6) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Password must be at least 6 characters long\");\n    return false;\n  }\n};\n\n//\n// loginButtonLoggedOut template\n//\nTemplate._loginButtonsLoggedOut.helpers({\n  dropdown: dropdown,\n  services: getLoginServices,\n  singleService: function () {\n    var services = getLoginServices();\n    if (services.length !== 1) throw new Error(\"Shouldn't be rendering this template with more than one configured service\");\n    return services[0];\n  },\n  configurationLoaded: function () {\n    return Accounts.loginServicesConfigured();\n  }\n}); //\n// loginButtonsLoggedIn template\n//\n// decide whether we should show a dropdown rather than a row of\n// buttons\n\n\nTemplate._loginButtonsLoggedIn.helpers({\n  dropdown: dropdown\n}); //\n// loginButtonsLoggedInSingleLogoutButton template\n//\n\n\nTemplate._loginButtonsLoggedInSingleLogoutButton.helpers({\n  displayName: displayName\n}); //\n// loginButtonsMessage template\n//\n\n\nTemplate._loginButtonsMessages.helpers({\n  errorMessage: function () {\n    return loginButtonsSession.get('errorMessage');\n  }\n});\n\nTemplate._loginButtonsMessages.helpers({\n  infoMessage: function () {\n    return loginButtonsSession.get('infoMessage');\n  }\n}); //\n// loginButtonsLoggingInPadding template\n//\n\n\nTemplate._loginButtonsLoggingInPadding.helpers({\n  dropdown: dropdown\n});","map":{"version":3,"sources":["packages/accounts-ui-unstyled/login_buttons.js"],"names":["module","export","displayName","getLoginServices","hasPasswordService","dropdown","validateUsername","validateEmail","validatePassword","passwordSignupFields","link","v","loginButtonsSession","Accounts","_loginButtonsSession","Template","loginButtons","events","Meteor","logout","closeDropdown","registerHelper","Error","user","profile","name","username","emails","address","services","Package","oauth","serviceNames","sort","push","map","length","errorMessage","email","includes","password","_loginButtonsLoggedOut","helpers","singleService","configurationLoaded","loginServicesConfigured","_loginButtonsLoggedIn","_loginButtonsLoggedInSingleLogoutButton","_loginButtonsMessages","get","infoMessage","_loginButtonsLoggingInPadding"],"mappings":"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","sourcesContent":["import { passwordSignupFields } from './accounts_ui.js';\n\n// for convenience\nconst loginButtonsSession = Accounts._loginButtonsSession;\n\n// shared between dropdown and single mode\nTemplate.loginButtons.events({\n  'click #login-buttons-logout': () =>\n    Meteor.logout(() => loginButtonsSession.closeDropdown()),\n});\n\nTemplate.registerHelper('loginButtons', () => {\n  throw new Error(\"Use {{> loginButtons}} instead of {{loginButtons}}\");\n});\n\n//\n// helpers\n//\n\nexport const displayName = () => {\n  const user = Meteor.user();\n  if (!user)\n    return '';\n\n  if (user.profile && user.profile.name)\n    return user.profile.name;\n  if (user.username)\n    return user.username;\n  if (user.emails && user.emails[0] && user.emails[0].address)\n    return user.emails[0].address;\n\n  return '';\n};\n\n// returns an array of the login services used by this app. each\n// element of the array is an object (eg {name: 'facebook'}), since\n// that makes it useful in combination with handlebars {{#each}}.\n//\n// don't cache the output of this function: if called during startup (before\n// oauth packages load) it might not include them all.\n//\n// NOTE: It is very important to have this return password last\n// because of the way we render the different providers in\n// login_buttons_dropdown.html\nexport const getLoginServices = () => {\n  // First look for OAuth services.\n  const services = Package['accounts-oauth'] ? Accounts.oauth.serviceNames() : [];\n\n  // Be equally kind to all login services. This also preserves\n  // backwards-compatibility. (But maybe order should be\n  // configurable?)\n  services.sort();\n\n  // Add password, if it's there; it must come last.\n  if (hasPasswordService())\n    services.push('password');\n\n  return services.map(name => ({ name }));\n};\n\nexport const hasPasswordService = () => !!Package['accounts-password'];\n\nexport const dropdown = () => \n  hasPasswordService() || getLoginServices().length > 1;\n\n// XXX improve these. should this be in accounts-password instead?\n//\n// XXX these will become configurable, and will be validated on\n// the server as well.\nexport const validateUsername = username => {\n  if (username.length >= 3) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Username must be at least 3 characters long\");\n    return false;\n  }\n};\n\nexport const validateEmail = email => {\n  if (passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\" && email === '')\n    return true;\n\n  if (email.includes('@')) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Invalid email\");\n    return false;\n  }\n};\n\nexport const validatePassword = password => {\n  if (password.length >= 6) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Password must be at least 6 characters long\");\n    return false;\n  }\n};\n\n//\n// loginButtonLoggedOut template\n//\n\nTemplate._loginButtonsLoggedOut.helpers({\n  dropdown,\n  services: getLoginServices,\n  singleService: () => {\n    const services = getLoginServices();\n    if (services.length !== 1)\n      throw new Error(\n        \"Shouldn't be rendering this template with more than one configured service\");\n    return services[0];\n  },\n  configurationLoaded: () => Accounts.loginServicesConfigured(),\n});\n\n\n//\n// loginButtonsLoggedIn template\n//\n\n  // decide whether we should show a dropdown rather than a row of\n  // buttons\nTemplate._loginButtonsLoggedIn.helpers({ dropdown });\n\n\n\n//\n// loginButtonsLoggedInSingleLogoutButton template\n//\n\nTemplate._loginButtonsLoggedInSingleLogoutButton.helpers({ displayName });\n\n\n\n//\n// loginButtonsMessage template\n//\n\nTemplate._loginButtonsMessages.helpers({\n  errorMessage: () => loginButtonsSession.get('errorMessage'),\n});\n\nTemplate._loginButtonsMessages.helpers({\n  infoMessage: () => loginButtonsSession.get('infoMessage'),\n});\n\n\n//\n// loginButtonsLoggingInPadding template\n//\n\nTemplate._loginButtonsLoggingInPadding.helpers({ dropdown });\n"]},"sourceType":"script","hash":"45db29104e57be6f4ea86f90d2c8b7d1da1bc02c"}
