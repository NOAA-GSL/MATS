{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/accounts-ui-unstyled/login_buttons_session.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/accounts-ui-unstyled/login_buttons_session.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/accounts-ui-unstyled/login_buttons_session.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/accounts-ui-unstyled/login_buttons_session.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/accounts-ui-unstyled/login_buttons_session.js"}},"code":"var VALID_KEYS = ['dropdownVisible', // XXX consider replacing these with one key that has an enum for values.\n'inSignupFlow', 'inForgotPasswordFlow', 'inChangePasswordFlow', 'inMessageOnlyFlow', 'errorMessage', 'infoMessage', // dialogs with messages (info and error)\n'resetPasswordToken', 'enrollAccountToken', 'justVerifiedEmail', 'justResetPassword', 'configureLoginServiceDialogVisible', 'configureLoginServiceDialogServiceName', 'configureLoginServiceDialogSaveDisabled', 'configureOnDesktopVisible'];\n\nvar validateKey = function (key) {\n  if (!VALID_KEYS.includes(key)) throw new Error(\"Invalid key in loginButtonsSession: \" + key);\n};\n\nvar KEY_PREFIX = \"Meteor.loginButtons.\"; // XXX This should probably be package scope rather than exported\n// (there was even a comment to that effect here from before we had\n// namespacing) but accounts-ui-viewer uses it, so leave it as is for\n// now\n\nvar set = function (key, value) {\n  validateKey(key);\n  if (['errorMessage', 'infoMessage'].includes(key)) throw new Error(\"Don't set errorMessage or infoMessage directly. Instead, use errorMessage() or infoMessage().\");\n\n  _set(key, value);\n};\n\nvar _set = function (key, value) {\n  return Session.set(KEY_PREFIX + key, value);\n};\n\nvar get = function (key) {\n  validateKey(key);\n  return Session.get(KEY_PREFIX + key);\n};\n\nvar closeDropdown = function () {\n  set('inSignupFlow', false);\n  set('inForgotPasswordFlow', false);\n  set('inChangePasswordFlow', false);\n  set('inMessageOnlyFlow', false);\n  set('dropdownVisible', false);\n  resetMessages();\n};\n\nvar infoMessage = function (message) {\n  _set(\"errorMessage\", null);\n\n  _set(\"infoMessage\", message);\n\n  ensureMessageVisible();\n};\n\nvar errorMessage = function (message) {\n  _set(\"errorMessage\", message);\n\n  _set(\"infoMessage\", null);\n\n  ensureMessageVisible();\n}; // is there a visible dialog that shows messages (info and error)\n\n\nvar isMessageDialogVisible = function () {\n  return get('resetPasswordToken') || get('enrollAccountToken') || get('justVerifiedEmail');\n}; // ensure that somethings displaying a message (info or error) is\n// visible. If a dialog with messages is open, do nothing;\n// otherwise open the dropdown.\n//\n// Notably this doesn't matter when only displaying a single login\n// button since then we have an explicit message dialog\n// (_loginButtonsMessageDialog), and dropdownVisible is ignored in\n// this case.\n\n\nvar ensureMessageVisible = function () {\n  if (!isMessageDialogVisible()) set(\"dropdownVisible\", true);\n};\n\nvar resetMessages = function () {\n  _set(\"errorMessage\", null);\n\n  _set(\"infoMessage\", null);\n};\n\nvar configureService = function (name) {\n  if (Meteor.isCordova) {\n    set('configureOnDesktopVisible', true);\n  } else {\n    set('configureLoginServiceDialogVisible', true);\n    set('configureLoginServiceDialogServiceName', name);\n    set('configureLoginServiceDialogSaveDisabled', true);\n  }\n};\n\nAccounts._loginButtonsSession = {\n  set: set,\n  _set: _set,\n  get: get,\n  closeDropdown: closeDropdown,\n  infoMessage: infoMessage,\n  errorMessage: errorMessage,\n  isMessageDialogVisible: isMessageDialogVisible,\n  ensureMessageVisible: ensureMessageVisible,\n  resetMessages: resetMessages,\n  configureService: configureService\n};","map":{"version":3,"sources":["packages/accounts-ui-unstyled/login_buttons_session.js"],"names":["VALID_KEYS","validateKey","key","includes","Error","KEY_PREFIX","set","value","_set","Session","get","closeDropdown","resetMessages","infoMessage","message","ensureMessageVisible","errorMessage","isMessageDialogVisible","configureService","name","Meteor","isCordova","Accounts","_loginButtonsSession"],"mappings":"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","sourcesContent":["const VALID_KEYS = [\n  'dropdownVisible',\n\n  // XXX consider replacing these with one key that has an enum for values.\n  'inSignupFlow',\n  'inForgotPasswordFlow',\n  'inChangePasswordFlow',\n  'inMessageOnlyFlow',\n\n  'errorMessage',\n  'infoMessage',\n\n  // dialogs with messages (info and error)\n  'resetPasswordToken',\n  'enrollAccountToken',\n  'justVerifiedEmail',\n  'justResetPassword',\n\n  'configureLoginServiceDialogVisible',\n  'configureLoginServiceDialogServiceName',\n  'configureLoginServiceDialogSaveDisabled',\n  'configureOnDesktopVisible',\n];\n\nconst validateKey = key => {\n  if (!VALID_KEYS.includes(key))\n    throw new Error(`Invalid key in loginButtonsSession: ${key}`);\n};\n\nconst KEY_PREFIX = \"Meteor.loginButtons.\";\n\n// XXX This should probably be package scope rather than exported\n// (there was even a comment to that effect here from before we had\n// namespacing) but accounts-ui-viewer uses it, so leave it as is for\n// now\nconst set = (key, value) => {\n  validateKey(key);\n  if (['errorMessage', 'infoMessage'].includes(key))\n    throw new Error(\"Don't set errorMessage or infoMessage directly. Instead, use errorMessage() or infoMessage().\");\n\n  _set(key, value);\n};\n\nconst _set = (key, value) => Session.set(KEY_PREFIX + key, value);\n\nconst get = key => {\n  validateKey(key);\n  return Session.get(KEY_PREFIX + key);\n};\n\nconst closeDropdown = () => {\n  set('inSignupFlow', false);\n  set('inForgotPasswordFlow', false);\n  set('inChangePasswordFlow', false);\n  set('inMessageOnlyFlow', false);\n  set('dropdownVisible', false);\n  resetMessages();\n};\n\nconst infoMessage = message => {\n  _set(\"errorMessage\", null);\n  _set(\"infoMessage\", message);\n  ensureMessageVisible();\n};\n\nconst errorMessage = message => {\n  _set(\"errorMessage\", message);\n  _set(\"infoMessage\", null);\n  ensureMessageVisible();\n};\n\n// is there a visible dialog that shows messages (info and error)\nconst isMessageDialogVisible = () => {\n  return get('resetPasswordToken') ||\n    get('enrollAccountToken') ||\n    get('justVerifiedEmail');\n};\n\n// ensure that somethings displaying a message (info or error) is\n// visible. If a dialog with messages is open, do nothing;\n// otherwise open the dropdown.\n//\n// Notably this doesn't matter when only displaying a single login\n// button since then we have an explicit message dialog\n// (_loginButtonsMessageDialog), and dropdownVisible is ignored in\n// this case.\nconst ensureMessageVisible = () => {\n  if (!isMessageDialogVisible())\n    set(\"dropdownVisible\", true);\n};\n\nconst resetMessages = () => {\n  _set(\"errorMessage\", null);\n  _set(\"infoMessage\", null);\n};\n\nconst configureService = name => {\n  if (Meteor.isCordova) {\n    set('configureOnDesktopVisible', true);\n  } else {\n    set('configureLoginServiceDialogVisible', true);\n    set('configureLoginServiceDialogServiceName', name);\n    set('configureLoginServiceDialogSaveDisabled', true);\n  }\n};\n\nAccounts._loginButtonsSession = {\n  set,\n  _set,\n  get,\n  closeDropdown,\n  infoMessage,\n  errorMessage,\n  isMessageDialogVisible,\n  ensureMessageVisible,\n  resetMessages,\n  configureService,\n};\n"]},"sourceType":"script","hash":"750392b30938af83fb54a1561a4173b6d3051e58"}
