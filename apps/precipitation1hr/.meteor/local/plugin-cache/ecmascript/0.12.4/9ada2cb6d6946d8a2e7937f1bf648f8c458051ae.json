{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/webapp/connect.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/webapp/connect.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/webapp/connect.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/webapp/connect.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/webapp/connect.js"}},"code":"module.export({\n  connect: () => connect\n});\nlet npmConnect;\nmodule.link(\"connect\", {\n  default(v) {\n    npmConnect = v;\n  }\n\n}, 0);\n\nfunction connect(...connectArgs) {\n  const handlers = npmConnect.apply(this, connectArgs);\n  const originalUse = handlers.use; // Wrap the handlers.use method so that any provided handler functions\n  // alway run in a Fiber.\n\n  handlers.use = function use(...useArgs) {\n    const {\n      stack\n    } = this;\n    const originalLength = stack.length;\n    const result = originalUse.apply(this, useArgs); // If we just added anything to the stack, wrap each new entry.handle\n    // with a function that calls Promise.asyncApply to ensure the\n    // original handler runs in a Fiber.\n\n    for (let i = originalLength; i < stack.length; ++i) {\n      const entry = stack[i];\n      const originalHandle = entry.handle;\n\n      if (originalHandle.length >= 4) {\n        // If the original handle had four (or more) parameters, the\n        // wrapper must also have four parameters, since connect uses\n        // handle.length to dermine whether to pass the error as the first\n        // argument to the handle function.\n        entry.handle = function handle(err, req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      } else {\n        entry.handle = function handle(req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      }\n    }\n\n    return result;\n  };\n\n  return handlers;\n}","map":{"version":3,"sources":["packages/webapp/connect.js"],"names":["module","export","connect","npmConnect","link","default","v","connectArgs","handlers","apply","originalUse","use","useArgs","stack","originalLength","length","result","i","entry","originalHandle","handle","err","req","res","next","Promise","asyncApply","arguments"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIA;AAAb,CAAd;AAAqC,IAAIC,UAAJ;AAAeH,MAAM,CAACI,IAAP,CAAY,SAAZ,EAAsB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACH,IAAAA,UAAU,GAACG,CAAX;AAAa;;AAAzB,CAAtB,EAAiD,CAAjD;;AAE7C,SAASJ,OAAT,CAAiB,GAAGK,WAApB,EAAiC;AACtC,QAAMC,QAAQ,GAAGL,UAAU,CAACM,KAAX,CAAiB,IAAjB,EAAuBF,WAAvB,CAAjB;AACA,QAAMG,WAAW,GAAGF,QAAQ,CAACG,GAA7B,CAFsC,CAItC;AACA;;AACAH,EAAAA,QAAQ,CAACG,GAAT,GAAe,SAASA,GAAT,CAAa,GAAGC,OAAhB,EAAyB;AACtC,UAAM;AAAEC,MAAAA;AAAF,QAAY,IAAlB;AACA,UAAMC,cAAc,GAAGD,KAAK,CAACE,MAA7B;AACA,UAAMC,MAAM,GAAGN,WAAW,CAACD,KAAZ,CAAkB,IAAlB,EAAwBG,OAAxB,CAAf,CAHsC,CAKtC;AACA;AACA;;AACA,SAAK,IAAIK,CAAC,GAAGH,cAAb,EAA6BG,CAAC,GAAGJ,KAAK,CAACE,MAAvC,EAA+C,EAAEE,CAAjD,EAAoD;AAClD,YAAMC,KAAK,GAAGL,KAAK,CAACI,CAAD,CAAnB;AACA,YAAME,cAAc,GAAGD,KAAK,CAACE,MAA7B;;AAEA,UAAID,cAAc,CAACJ,MAAf,IAAyB,CAA7B,EAAgC;AAC9B;AACA;AACA;AACA;AACAG,QAAAA,KAAK,CAACE,MAAN,GAAe,SAASA,MAAT,CAAgBC,GAAhB,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,EAAqC;AAClD,iBAAOC,OAAO,CAACC,UAAR,CAAmBP,cAAnB,EAAmC,IAAnC,EAAyCQ,SAAzC,CAAP;AACD,SAFD;AAGD,OARD,MAQO;AACLT,QAAAA,KAAK,CAACE,MAAN,GAAe,SAASA,MAAT,CAAgBE,GAAhB,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AAC7C,iBAAOC,OAAO,CAACC,UAAR,CAAmBP,cAAnB,EAAmC,IAAnC,EAAyCQ,SAAzC,CAAP;AACD,SAFD;AAGD;AACF;;AAED,WAAOX,MAAP;AACD,GA5BD;;AA8BA,SAAOR,QAAP;AACD","sourcesContent":["import npmConnect from \"connect\";\n\nexport function connect(...connectArgs) {\n  const handlers = npmConnect.apply(this, connectArgs);\n  const originalUse = handlers.use;\n\n  // Wrap the handlers.use method so that any provided handler functions\n  // alway run in a Fiber.\n  handlers.use = function use(...useArgs) {\n    const { stack } = this;\n    const originalLength = stack.length;\n    const result = originalUse.apply(this, useArgs);\n\n    // If we just added anything to the stack, wrap each new entry.handle\n    // with a function that calls Promise.asyncApply to ensure the\n    // original handler runs in a Fiber.\n    for (let i = originalLength; i < stack.length; ++i) {\n      const entry = stack[i];\n      const originalHandle = entry.handle;\n\n      if (originalHandle.length >= 4) {\n        // If the original handle had four (or more) parameters, the\n        // wrapper must also have four parameters, since connect uses\n        // handle.length to dermine whether to pass the error as the first\n        // argument to the handle function.\n        entry.handle = function handle(err, req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      } else {\n        entry.handle = function handle(req, res, next) {\n          return Promise.asyncApply(originalHandle, this, arguments);\n        };\n      }\n    }\n\n    return result;\n  };\n\n  return handlers;\n}\n"]},"sourceType":"script","hash":"9ada2cb6d6946d8a2e7937f1bf648f8c458051ae"}
