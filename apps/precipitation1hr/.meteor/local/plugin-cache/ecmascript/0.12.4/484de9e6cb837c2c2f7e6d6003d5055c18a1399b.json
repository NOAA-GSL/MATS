{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/graph/graph.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/randyp:mats-common/templates/graph/graph.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/graph/graph.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/graph/graph.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/randyp:mats-common/templates/graph/graph.js"}},"code":"var Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Hooks;\nmodule.link(\"meteor/differential:event-hooks\", {\n  Hooks: function (v) {\n    Hooks = v;\n  }\n}, 1);\nvar matsCollections, matsCurveUtils, matsGraphUtils, matsMethods, matsParamUtils, matsPlotUtils, matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  },\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  },\n  matsGraphUtils: function (v) {\n    matsGraphUtils = v;\n  },\n  matsMethods: function (v) {\n    matsMethods = v;\n  },\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  },\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  },\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 2);\nvar pageIndex = 0;\nvar annotation = \"\";\nvar openWindows = [];\nvar xAxes = [];\nvar yAxes = [];\nvar curveOpsUpdate = [];\nTemplate.graph.onCreated(function () {\n  // the window resize event needs to also resize the graph\n  $(window).resize(function () {\n    matsGraphUtils.resizeGraph(matsPlotUtils.getPlotType());\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var options = matsCurveUtils.getGraphResult().options;\n\n    if (dataset !== undefined && options !== undefined) {\n      Plotly.newPlot($(\"#placeholder\")[0], dataset, options, {\n        showLink: true\n      });\n    }\n  });\n});\nTemplate.graph.helpers({\n  /**\n   * @return {string}\n   * @return {string}\n   */\n  graphFunction: function () {\n    // causes graph display routine to be processed\n    Session.get('PlotResultsUpDated');\n    var graphFunction = Session.get('graphFunction');\n\n    if (graphFunction) {\n      module.runSetters(eval(graphFunction))(Session.get('plotResultKey'));\n      var plotType = Session.get('plotType');\n      var dataset = matsCurveUtils.getGraphResult().data;\n      var options = matsCurveUtils.getGraphResult().options;\n      Session.set('options', options); // need to save some curve options so that the reset button can undo Plotly.restyle\n\n      switch (plotType) {\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n          //saved curve options for contours\n          Session.set('colorbarResetOpts', {\n            'colorbar.title': dataset[0].colorbar.title,\n            'autocontour': dataset[0].autocontour,\n            'ncontours': dataset[0].ncontours,\n            'contours.start': dataset[0].contours.start,\n            'contours.end': dataset[0].contours.end,\n            'contours.size': dataset[0].contours.size,\n            'reversescale': false,\n            'colorscale': JSON.stringify(dataset[0].colorscale)\n          });\n          break;\n\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.profile:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.threshold:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.dailyModelCycle:\n        case matsTypes.PlotTypes.reliability:\n          // saved curve options for line graphs\n          var lineTypeResetOpts = [];\n\n          for (var lidx = 0; lidx < dataset.length; lidx++) {\n            if (Object.values(matsTypes.ReservedWords).indexOf(dataset[lidx].label) === -1) {\n              lineTypeResetOpts.push({\n                'visible': dataset[lidx].visible,\n                'mode': dataset[lidx].mode,\n                'error_y': dataset[lidx].error_y,\n                'error_x': dataset[lidx].error_x,\n                'line.dash': dataset[lidx].line.dash,\n                'line.width': dataset[lidx].line.width,\n                'marker.symbol': dataset[lidx].marker.symbol\n              });\n            } else {\n              break;\n            }\n          }\n\n          Session.set('lineTypeResetOpts', lineTypeResetOpts);\n          break;\n\n        case matsTypes.PlotTypes.histogram:\n          // saved curve options for maps\n          var barTypeResetOpts = [];\n\n          for (var bidx = 0; bidx < dataset.length; bidx++) {\n            if (Object.values(matsTypes.ReservedWords).indexOf(dataset[bidx].label) === -1) {\n              barTypeResetOpts.push({\n                'visible': dataset[bidx].visible\n              });\n            } else {\n              break;\n            }\n          }\n\n          Session.set('barTypeResetOpts', barTypeResetOpts);\n          break;\n\n        case matsTypes.PlotTypes.map:\n          // saved curve options for maps\n          var mapResetOpts = [];\n          mapResetOpts[0] = {\n            'marker.opacity': dataset[0].marker.opacity\n          };\n\n          for (var midx = 1; midx < dataset.length; midx++) {\n            mapResetOpts.push({\n              'visible': dataset[midx].visible\n            });\n          }\n\n          Session.set('mapResetOpts', mapResetOpts);\n          break;\n\n        case matsTypes.PlotTypes.scatter2d:\n        default:\n          break;\n      } // initial plot\n\n\n      $(\"#legendContainer\").empty();\n      $(\"#placeholder\").empty();\n\n      if (!dataset || !options) {\n        return false;\n      }\n\n      Plotly.newPlot($(\"#placeholder\")[0], dataset, options, {\n        showLink: true\n      }); // append annotations\n\n      if (plotType !== matsTypes.PlotTypes.map) {\n        annotation = \"\";\n\n        for (var i = 0; i < dataset.length; i++) {\n          if (plotType !== matsTypes.PlotTypes.histogram && dataset[i].curveId !== undefined) {\n            annotation = annotation + \"<div id='\" + dataset[i].curveId + \"-annotation' style='color:\" + dataset[i].annotateColor + \"'>\" + dataset[i].annotation + \" </div>\";\n          }\n        }\n\n        $(\"#legendContainer\").append(\"<div id='annotationContainer' style='font-size:smaller'>\" + annotation + \"</div>\"); // store the existing axes.\n\n        Object.keys($(\"#placeholder\")[0].layout).filter(function (k) {\n          if (k.startsWith('xaxis')) {\n            xAxes.push(k);\n          }\n\n          if (k.startsWith('yaxis')) {\n            yAxes.push(k);\n          }\n        });\n      }\n\n      matsCurveUtils.hideSpinner();\n    }\n\n    return graphFunction;\n  },\n  Title: function () {\n    if (matsCollections.Settings === undefined || matsCollections.Settings.findOne({}, {\n      fields: {\n        Title: 1\n      }\n    }) === undefined) {\n      return \"\";\n    } else {\n      return matsCollections.Settings.findOne({}, {\n        fields: {\n          Title: 1\n        }\n      }).Title;\n    }\n  },\n  width: function () {\n    return matsGraphUtils.width(matsPlotUtils.getPlotType());\n  },\n  height: function () {\n    return matsGraphUtils.height(matsPlotUtils.getPlotType());\n  },\n  curves: function () {\n    return Session.get('Curves');\n  },\n  plotName: function () {\n    return Session.get('PlotParams') === [] || Session.get('PlotParams').plotAction === undefined || Session.get('plotType') === matsTypes.PlotTypes.map ? \"\" : Session.get('PlotParams').plotAction.toUpperCase();\n  },\n  curveText: function () {\n    if (this.diffFrom === undefined) {\n      var plotType = Session.get('plotType');\n\n      if (plotType === undefined) {\n        pfuncs = matsCollections.PlotGraphFunctions.find({}).fetch();\n\n        for (var i = 0; i < pfuncs.length; i++) {\n          if (pfuncs[i].checked === true) {\n            Session.set('plotType', pfuncs[i].plotType);\n          }\n        }\n\n        plotType = Session.get('plotType');\n      }\n\n      return matsPlotUtils.getCurveText(plotType, this);\n    } else {\n      return this.label + \":  Difference\";\n    }\n  },\n  confidenceDisplay: function () {\n    if (Session.get('plotParameter') === \"matched\") {\n      var plotType = Session.get('plotType');\n\n      switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.profile:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.threshold:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.dailyModelCycle:\n          return \"block\";\n\n        case matsTypes.PlotTypes.reliability:\n        case matsTypes.PlotTypes.map:\n        case matsTypes.PlotTypes.histogram:\n        case matsTypes.PlotTypes.scatter2d:\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n        default:\n          return \"none\";\n      }\n    } else {\n      return \"none\";\n    }\n  },\n  mvSpanDisplay: function () {\n    var updated = Session.get(\"MvResultsUpDated\");\n\n    if (Session.get(\"mvResultKey\") != null || Session.get('plotParams')['metexpress-mode'] == \"matsmv\") {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  plotText: function () {\n    var p = Session.get('PlotParams');\n\n    if (p !== undefined) {\n      var format = p.plotFormat;\n\n      if (matsCollections.PlotParams.findOne({\n        name: 'plotFormat'\n      }) && matsCollections.PlotParams.findOne({\n        name: 'plotFormat'\n      }).optionsMap && matsCollections.PlotParams.findOne({\n        name: 'plotFormat'\n      }).optionsMap[p.plotFormat] !== undefined) {\n        format = matsCollections.PlotParams.findOne({\n          name: 'plotFormat'\n        }).optionsMap[p.plotFormat];\n      }\n\n      if (format === undefined) {\n        format = \"Unmatched\";\n      }\n\n      var plotType = Session.get('plotType');\n\n      switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n          return \"TimeSeries \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.profile:\n          return \"Profile: \" + format;\n\n        case matsTypes.PlotTypes.dieoff:\n          return \"DieOff: \" + format;\n\n        case matsTypes.PlotTypes.threshold:\n          return \"Threshold: \" + format;\n\n        case matsTypes.PlotTypes.validtime:\n          return \"ValidTime: \" + format;\n\n        case matsTypes.PlotTypes.dailyModelCycle:\n          return \"DailyModelCycle \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.reliability:\n          return \"Reliability: \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.map:\n          return \"Map \" + p.dates + \" \";\n\n        case matsTypes.PlotTypes.histogram:\n          return \"Histogram: \" + format;\n\n        case matsTypes.PlotTypes.contour:\n          return \"Contour \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.contourDiff:\n          return \"ContourDiff \" + p.dates + \" : \" + format;\n\n        case matsTypes.PlotTypes.scatter2d:\n          break;\n\n        default:\n          return \"Scatter: \" + p.dates + \" : \" + format;\n      }\n    } else {\n      return \"no plot params\";\n    }\n  },\n  color: function () {\n    return this.color;\n  },\n  xAxes: function () {\n    Session.get('PlotResultsUpDated');\n    var plotType = Session.get('plotType'); // create an array like [0,1,2...] for each unique xaxis\n    // by getting the xaxis keys - filtering them to be unique, then using an Array.apply on the resulting array\n    // to assign a number to each value\n\n    var xaxis = {};\n\n    if ($(\"#placeholder\")[0] === undefined || $(\"#placeholder\")[0].layout === undefined || plotType === matsTypes.PlotTypes.map) {\n      return;\n    }\n\n    Object.keys($(\"#placeholder\")[0].layout).filter(function (k) {\n      if (k.startsWith('xaxis')) {\n        xaxis[k] = $(\"#placeholder\")[0].layout[k];\n      }\n    });\n    return Array.apply(null, {\n      length: Object.keys(xaxis).length\n    }).map(Number.call, Number);\n  },\n  yAxes: function () {\n    Session.get('PlotResultsUpDated');\n    var plotType = Session.get('plotType'); // create an array like [0,1,2...] for each unique yaxis\n    // by getting the yaxis keys - filtering them to be unique, then using an Array.apply on the resulting array\n    // to assign a number to each value\n\n    var yaxis = {};\n\n    if ($(\"#placeholder\")[0] === undefined || $(\"#placeholder\")[0].layout === undefined || plotType === matsTypes.PlotTypes.map) {\n      return;\n    }\n\n    Object.keys($(\"#placeholder\")[0].layout).filter(function (k) {\n      if (k.startsWith('yaxis')) {\n        yaxis[k] = $(\"#placeholder\")[0].layout[k];\n      }\n    });\n    return Array.apply(null, {\n      length: Object.keys(yaxis).length\n    }).map(Number.call, Number);\n  },\n  isProfile: function () {\n    return Session.get('plotType') === matsTypes.PlotTypes.profile;\n  },\n  isLinePlot: function () {\n    var plotType = Session.get('plotType');\n\n    switch (plotType) {\n      case matsTypes.PlotTypes.timeSeries:\n      case matsTypes.PlotTypes.profile:\n      case matsTypes.PlotTypes.dieoff:\n      case matsTypes.PlotTypes.threshold:\n      case matsTypes.PlotTypes.validtime:\n      case matsTypes.PlotTypes.dailyModelCycle:\n      case matsTypes.PlotTypes.reliability:\n        return true;\n\n      case matsTypes.PlotTypes.map:\n      case matsTypes.PlotTypes.histogram:\n      case matsTypes.PlotTypes.scatter2d:\n      case matsTypes.PlotTypes.contour:\n      case matsTypes.PlotTypes.contourDiff:\n      default:\n        return false;\n    }\n  },\n  isContour: function () {\n    return Session.get('plotType') === matsTypes.PlotTypes.contour || Session.get('plotType') === matsTypes.PlotTypes.contourDiff;\n  },\n  isContourDiff: function () {\n    return Session.get('plotType') === matsTypes.PlotTypes.contourDiff;\n  },\n  isNotMap: function () {\n    return Session.get('plotType') !== matsTypes.PlotTypes.map;\n  },\n  sentAddresses: function () {\n    var addresses = [];\n    var a = matsCollections.SentAddresses.find({}, {\n      fields: {\n        address: 1\n      }\n    }).fetch();\n\n    for (var i = 0; i < a.length; i++) {\n      addresses.push(a[i].address);\n    }\n\n    return addresses;\n  },\n  hideButtonText: function () {\n    var sval = this.label + \"hideButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'hide curve');\n    }\n\n    return Session.get(sval);\n  },\n  pointsButtonText: function () {\n    var sval = this.label + \"pointsButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'hide points');\n    }\n\n    return Session.get(sval);\n  },\n  errorBarButtonText: function () {\n    var sval = this.label + \"errorBarButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'hide error bars');\n    }\n\n    return Session.get(sval);\n  },\n  barChartButtonText: function () {\n    var sval = this.label + \"barChartButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'hide bars');\n    }\n\n    return Session.get(sval);\n  },\n  annotateButtonText: function () {\n    var sval = this.label + \"annotateButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'hide annotation');\n    }\n\n    return Session.get(sval);\n  },\n  heatMapButtonText: function () {\n    var sval = this.label + \"heatMapButtonText\";\n\n    if (Session.get(sval) === undefined) {\n      Session.set(sval, 'show heat map');\n    }\n\n    return Session.get(sval);\n  },\n  curveShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n\n    switch (plotType) {\n      case matsTypes.PlotTypes.timeSeries:\n      case matsTypes.PlotTypes.profile:\n      case matsTypes.PlotTypes.dieoff:\n      case matsTypes.PlotTypes.threshold:\n      case matsTypes.PlotTypes.validtime:\n      case matsTypes.PlotTypes.dailyModelCycle:\n      case matsTypes.PlotTypes.reliability:\n      case matsTypes.PlotTypes.scatter2d:\n        return \"block\";\n\n      case matsTypes.PlotTypes.map:\n      case matsTypes.PlotTypes.histogram:\n      case matsTypes.PlotTypes.contour:\n      case matsTypes.PlotTypes.contourDiff:\n      default:\n        return \"none\";\n    }\n  },\n  pointsShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n\n    switch (plotType) {\n      case matsTypes.PlotTypes.timeSeries:\n      case matsTypes.PlotTypes.profile:\n      case matsTypes.PlotTypes.dieoff:\n      case matsTypes.PlotTypes.threshold:\n      case matsTypes.PlotTypes.validtime:\n      case matsTypes.PlotTypes.dailyModelCycle:\n      case matsTypes.PlotTypes.reliability:\n      case matsTypes.PlotTypes.scatter2d:\n        return \"block\";\n\n      case matsTypes.PlotTypes.map:\n      case matsTypes.PlotTypes.histogram:\n      case matsTypes.PlotTypes.contour:\n      case matsTypes.PlotTypes.contourDiff:\n      default:\n        return \"none\";\n    }\n  },\n  errorbarsShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n    var isMatched = Session.get('plotParameter') === \"matched\";\n\n    if (isMatched) {\n      switch (plotType) {\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.profile:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.threshold:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.dailyModelCycle:\n          return \"block\";\n\n        case matsTypes.PlotTypes.reliability:\n        case matsTypes.PlotTypes.map:\n        case matsTypes.PlotTypes.histogram:\n        case matsTypes.PlotTypes.scatter2d:\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n        default:\n          return \"none\";\n      }\n    } else {\n      return \"none\";\n    }\n  },\n  barsShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.histogram) {\n      return 'block';\n    } else {\n      return 'none';\n    }\n  },\n  annotateShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.map || plotType === matsTypes.PlotTypes.histogram) {\n      return 'none';\n    } else {\n      return 'block';\n    }\n  },\n  heatMapShowHideDisplay: function () {\n    var plotType = Session.get('plotType');\n\n    if (plotType !== matsTypes.PlotTypes.map) {\n      return 'none';\n    } else {\n      return 'block';\n    }\n  },\n  xAxisControlsNumberVisibility: function () {\n    Session.get('PlotResultsUpDated');\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle || (plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && $(\"#placeholder\")[0].layout.xaxis.title.text.indexOf(\"Date\") > -1) {\n      return \"none\";\n    } else {\n      return \"block\";\n    }\n  },\n  xAxisControlsTextVisibility: function () {\n    Session.get('PlotResultsUpDated');\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle || (plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && $(\"#placeholder\")[0].layout.xaxis.title.text.indexOf(\"Date\") > -1) {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  yAxisControlsNumberVisibility: function () {\n    Session.get('PlotResultsUpDated');\n\n    if ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && $(\"#placeholder\")[0].layout.yaxis.title.text.indexOf(\"Date\") > -1) {\n      return \"none\";\n    } else {\n      return \"block\";\n    }\n  },\n  yAxisControlsTextVisibility: function () {\n    Session.get('PlotResultsUpDated');\n\n    if ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && $(\"#placeholder\")[0].layout.yaxis.title.text.indexOf(\"Date\") > -1) {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  displayReplotZoom: function () {\n    // the replot to zoom function is only really appropriate for downsampled graphs which are\n    // only possible in timeseries or dailymodelcycle plots\n    Session.get(\"PlotParams\");\n    Session.get('PlotResultsUpDated');\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle) {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  metApp: function () {\n    Session.get(\"PlotParams\");\n    Session.get('PlotResultsUpDated');\n\n    if (matsCollections.Settings.findOne({}).appType && matsCollections.Settings.findOne({}).appType === matsTypes.AppTypes.metexpress && Session.get('PlotParams')['metexpress-mode'] == \"matsmv\") {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  mvFiles: function () {\n    var updated = Session.get('MvResultsUpDated');\n    var key = Session.get('mvResultKey');\n    var mvs = Session.get('mvs');\n\n    if (mvs != null) {\n      return mvs;\n    } else {\n      return [];\n    }\n  },\n  mvDisabled: function () {\n    var updated = Session.get('MvResultsUpDated');\n\n    if (Session.get('mvs') == null || Session.get('PlotParams')['metexpress-mode'] == \"mats\") {\n      return \"none\";\n    } else {\n      return \"block\";\n    }\n  },\n  mvLoading: function () {\n    var updated = Session.get('MvResultsUpDated');\n\n    if (Session.get('mvs') == null && Session.get('PlotParams')['metexpress-mode'] == \"matsmv\") {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  }\n});\nTemplate.graph.events({\n  'click .mvCtrlButton': function () {\n    var mvWindow = window.open(this.url, \"mv\", \"height=200,width=200\");\n    setTimeout(function () {\n      mvWindow.reload();\n    }, 500);\n  },\n  'click .back': function () {\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.contourDiff) {\n      var oldCurves = Session.get('oldCurves');\n      Session.set('Curves', oldCurves);\n    }\n\n    matsPlotUtils.enableActionButtons();\n    matsGraphUtils.setDefaultView();\n    matsCurveUtils.resetPlotResultData();\n    return false;\n  },\n  'click .header': function (event) {\n    document.getElementById('graph-control').style.display = 'block'; // document.getElementById('showAdministration').style.display = 'block';\n\n    document.getElementById('navbar').style.display = 'block';\n    document.getElementById('footnav').style.display = 'block';\n    var ctbgElems = $('*[id^=\"curve-text-buttons-grp\"]');\n\n    for (var i = 0; i < ctbgElems.length; i++) {\n      ctbgElems[i].style.display = 'block';\n    }\n  },\n  'click .preview': function () {\n    // capture the layout\n    var layout = $(\"#placeholder\")[0].layout;\n    var key = Session.get('plotResultKey');\n    matsMethods.saveLayout.call({\n      resultKey: key,\n      layout: layout,\n      curveOpsUpdate: {\n        curveOpsUpdate: curveOpsUpdate\n      }\n    }, function (error) {\n      if (error !== undefined) {\n        setError(error);\n      }\n    }); // open a new window with a standAlone graph of the current graph\n\n    var h = Math.max(document.documentElement.clientHeight, window.innerWidth || 0) * .5;\n    var w = h * 1.3;\n    var wind = window.open(window.location + \"/preview/\" + Session.get(\"graphFunction\") + \"/\" + Session.get(\"plotResultKey\") + \"/\" + Session.get('plotParameter') + \"/\" + matsCollections.Settings.findOne({}, {\n      fields: {\n        Title: 1\n      }\n    }).Title, \"_blank\", \"status=no,titlebar=no,toolbar=no,scrollbars=no,menubar=no,resizable=yes\", \"height=\" + h + \",width=\" + w);\n    setTimeout(function () {\n      wind.resizeTo(w, h);\n    }, 500);\n    openWindows.push(wind);\n  },\n  'click .closeapp': function () {\n    for (var widx = 0; widx < openWindows.length; widx++) {\n      openWindows[widx].close();\n    }\n\n    openWindows = [];\n  },\n  'click .reload': function () {\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var options = matsCurveUtils.getGraphResult().options;\n    var graphFunction = Session.get('graphFunction');\n    window[graphFunction](dataset, options);\n  },\n  'click .plotButton': function () {\n    matsGraphUtils.setGraphView(Session.get('plotType'));\n    var graphView = document.getElementById('graphView');\n    Session.set('graphViewMode', matsTypes.PlotView.graph);\n    matsCurveUtils.hideSpinner();\n  },\n  'click .textButton': function () {\n    matsGraphUtils.setTextView(Session.get('plotType'));\n    Session.set('graphViewMode', matsTypes.PlotView.text);\n    Session.set(\"pageIndex\", 0);\n    Session.set(\"newPageIndex\", 1);\n    Session.set('textRefreshNeeded', true);\n  },\n  'click .export': function () {\n    document.getElementById('text_export').click();\n  },\n  'click .sentAddresses': function (event) {\n    var address = event.currentTarget.options[event.currentTarget.selectedIndex].value;\n    document.getElementById(\"sendAddress\").value = address;\n  },\n  'click .share': function () {\n    // show address modal\n    if (!Meteor.user()) {\n      setError(new Error(\"You must be logged in to use the 'share' feature\"));\n      return false;\n    }\n\n    $(\"#sendModal\").modal('show');\n  },\n  'click .basis': function () {\n    window.open(window.location + \"/JSON/\" + Session.get(\"graphFunction\") + \"/\" + Session.get(\"plotResultKey\") + \"/\" + Session.get('plotParameter') + \"/\" + matsCollections.Settings.findOne({}, {\n      fields: {\n        Title: 1\n      }\n    }).Title, \"_blank\", \"resizable=yes\");\n  },\n  'click .axisLimitButton': function () {\n    $(\"#axisLimitModal\").modal('show');\n  },\n  'click .lineTypeButton': function () {\n    $(\"#lineTypeModal\").modal('show');\n  },\n  'click .colorbarButton': function () {\n    $(\"#colorbarModal\").modal('show');\n  },\n  'click .axisYScale': function () {\n    // get all yaxes and change their scales\n    var newOpts = {};\n    var yAxis;\n\n    for (var k = 0; k < yAxes.length; k++) {\n      yAxis = yAxes[k];\n      newOpts[yAxis + '.type'] = $(\"#placeholder\")[0].layout[yAxis].type === 'linear' ? 'log' : 'linear';\n    }\n\n    Plotly.relayout($(\"#placeholder\")[0], newOpts);\n  },\n  'click .firstPageButton': function () {\n    var pageIndex = Session.get(\"pageIndex\"); // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n\n    if (!Number.isNaN(pageIndex)) {\n      Session.set(\"pageIndex\", 0);\n      Session.set(\"newPageIndex\", 1);\n      Session.set('textRefreshNeeded', true);\n    }\n  },\n  'click .previousTenPageButton': function () {\n    var pageIndex = Session.get(\"pageIndex\"); // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n\n    if (!Number.isNaN(pageIndex)) {\n      var pageTextDirection = Session.get(\"pageTextDirection\"); // if the navigation direction is changing, you have to increment the page index an additional time,\n      // or you just move to the other end of the current page, and nothing appears to change.\n\n      if (pageTextDirection !== undefined && pageTextDirection === -1) {\n        Session.set(\"newPageIndex\", pageIndex - 10);\n      } else {\n        Session.set(\"newPageIndex\", pageIndex - 11);\n      }\n\n      Session.set('textRefreshNeeded', true);\n    }\n  },\n  'click .previousPageButton': function () {\n    var pageIndex = Session.get(\"pageIndex\"); // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n\n    if (!Number.isNaN(pageIndex)) {\n      var pageTextDirection = Session.get(\"pageTextDirection\"); // if the navigation direction is changing, you have to increment the page index an additional time,\n      // or you just move to the other end of the current page, and nothing appears to change.\n\n      if (pageTextDirection !== undefined && pageTextDirection === -1) {\n        Session.set(\"newPageIndex\", pageIndex - 1);\n      } else {\n        Session.set(\"newPageIndex\", pageIndex - 2);\n      }\n\n      Session.set('textRefreshNeeded', true);\n    }\n  },\n  'click .nextPageButton': function () {\n    var pageIndex = Session.get(\"pageIndex\"); // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n\n    if (!Number.isNaN(pageIndex)) {\n      var pageTextDirection = Session.get(\"pageTextDirection\"); // if the navigation direction is changing, you have to increment the page index an additional time,\n      // or you just move to the other end of the current page, and nothing appears to change.\n\n      if (pageTextDirection !== undefined && pageTextDirection === 1) {\n        Session.set(\"newPageIndex\", pageIndex + 1);\n      } else {\n        Session.set(\"newPageIndex\", pageIndex + 2);\n      }\n\n      Session.set('textRefreshNeeded', true);\n    }\n  },\n  'click .nextTenPageButton': function () {\n    var pageIndex = Session.get(\"pageIndex\"); // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n\n    if (!Number.isNaN(pageIndex)) {\n      var pageTextDirection = Session.get(\"pageTextDirection\"); // if the navigation direction is changing, you have to increment the page index an additional time,\n      // or you just move to the other end of the current page, and nothing appears to change.\n\n      if (pageTextDirection !== undefined && pageTextDirection === 1) {\n        Session.set(\"newPageIndex\", pageIndex + 10);\n      } else {\n        Session.set(\"newPageIndex\", pageIndex + 11);\n      }\n\n      Session.set('textRefreshNeeded', true);\n    }\n  },\n  'click .lastPageButton': function () {\n    var pageIndex = Session.get(\"pageIndex\"); // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n\n    if (!Number.isNaN(pageIndex)) {\n      Session.set(\"newPageIndex\", -2000);\n      Session.set('textRefreshNeeded', true);\n    }\n  },\n  'click .replotZoomButton': function () {\n    var plotType = Session.get('plotType');\n\n    if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle) {\n      var newDateRange = moment.utc($(\"#placeholder\")[0].layout['xaxis'].range[0]).format('M/DD/YYYY HH:mm') + \" - \" + moment.utc($(\"#placeholder\")[0].layout['xaxis'].range[1]).format('M/DD/YYYY HH:mm');\n      console.log(newDateRange);\n      document.getElementById('controlButton-dates-value').innerHTML = newDateRange;\n      var params = Session.get('params');\n      var actionId = \"plotUnmatched\";\n\n      if (params.plotAction === \"matched\") {\n        actionId = plotMatched;\n      }\n\n      document.getElementById(\"plot-curves\").click();\n    }\n  },\n  'click .reCacheButton': function () {\n    var plotType = Session.get('plotType');\n    var params = Session.get('params');\n    var actionId = \"plotUnmatched\";\n\n    if (params.plotAction === \"matched\") {\n      actionId = plotMatched;\n    }\n\n    Session.set('expireKey', true);\n    document.getElementById(\"plot-curves\").click();\n  },\n  'click .curveVisibility': function (event) {\n    event.preventDefault();\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var id = event.target.id;\n    var label = id.replace('-curve-show-hide', '');\n    var myDataIdx = dataset.findIndex(function (d) {\n      return d.curveId === label;\n    });\n\n    if (dataset[myDataIdx].x.length > 0) {\n      var update;\n\n      if (dataset[myDataIdx].visible) {\n        if (dataset[myDataIdx].mode === \"lines\") {\n          // in line mode, lines are visible, so make nothing visible\n          update = {\n            visible: !dataset[myDataIdx].visible\n          };\n          $('#' + label + \"-curve-show-hide\")[0].value = \"show curve\";\n        } else if (dataset[myDataIdx].mode === \"lines+markers\") {\n          // in line and point mode, lines and points are visible, so make nothing visible\n          update = {\n            visible: !dataset[myDataIdx].visible\n          };\n          $('#' + label + \"-curve-show-hide\")[0].value = \"show curve\";\n          $('#' + label + \"-curve-show-hide-points\")[0].value = \"show points\";\n        } else if (dataset[myDataIdx].mode === \"markers\") {\n          // in point mode, points are visible, so make lines and points visible\n          update = {\n            mode: \"lines+markers\"\n          };\n          $('#' + label + \"-curve-show-hide\")[0].value = \"hide curve\";\n        }\n      } else {\n        if (dataset[myDataIdx].mode === \"lines\") {\n          // in line mode, nothing is visible, so make lines visible\n          update = {\n            visible: !dataset[myDataIdx].visible\n          };\n          $('#' + label + \"-curve-show-hide\")[0].value = \"hide curve\";\n        } else if (dataset[myDataIdx].mode === \"lines+markers\") {\n          // in line and point mode, nothing is visible, so make lines and points visible\n          update = {\n            visible: !dataset[myDataIdx].visible\n          };\n          $('#' + label + \"-curve-show-hide\")[0].value = \"hide curve\";\n          $('#' + label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n        }\n      }\n    }\n\n    Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx); // save the updates in case we want to pass them to a pop-out window.\n\n    curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n    var updatedKeys = Object.keys(update);\n\n    for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n      var updatedKey = updatedKeys[kidx]; // json doesn't like . to be in keys, so replace it with a placeholder\n\n      var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n      curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n    }\n  },\n  'click .pointsVisibility': function (event) {\n    event.preventDefault();\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var id = event.target.id;\n    var label = id.replace('-curve-show-hide-points', '');\n    var myDataIdx = dataset.findIndex(function (d) {\n      return d.curveId === label;\n    });\n\n    if (dataset[myDataIdx].x.length > 0) {\n      var update;\n\n      if (dataset[myDataIdx].visible) {\n        if (dataset[myDataIdx].mode === \"lines\") {\n          // lines are visible, so make lines and points visible\n          update = {\n            mode: \"lines+markers\"\n          };\n          $('#' + label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n        } else if (dataset[myDataIdx].mode === \"lines+markers\") {\n          // lines and points are visible, so make only lines visible\n          update = {\n            mode: \"lines\"\n          };\n          $('#' + label + \"-curve-show-hide-points\")[0].value = \"show points\";\n        } else if (dataset[myDataIdx].mode === \"markers\") {\n          // points are visible, so make nothing visible\n          update = {\n            visible: !dataset[myDataIdx].visible,\n            mode: \"lines\"\n          };\n          $('#' + label + \"-curve-show-hide-points\")[0].value = \"show points\";\n        }\n      } else {\n        // nothing is visible, so make points visible\n        update = {\n          visible: !dataset[myDataIdx].visible,\n          mode: \"markers\"\n        };\n        $('#' + label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n      }\n    }\n\n    Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx); // save the updates in case we want to pass them to a pop-out window.\n\n    curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n    var updatedKeys = Object.keys(update);\n\n    for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n      var updatedKey = updatedKeys[kidx]; // json doesn't like . to be in keys, so replace it with a placeholder\n\n      var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n      curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n    }\n  },\n  'click .errorBarVisibility': function (event) {\n    event.preventDefault();\n    var plotType = Session.get('plotType');\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var id = event.target.id;\n    var label = id.replace('-curve-show-hide-errorbars', '');\n    var myDataIdx = dataset.findIndex(function (d) {\n      return d.curveId === label;\n    });\n\n    if (dataset[myDataIdx].x.length > 0) {\n      var update;\n\n      if (plotType !== matsTypes.PlotTypes.profile) {\n        update = {\n          error_y: dataset[myDataIdx].error_y\n        };\n        update.error_y.visible = !update.error_y.visible;\n\n        if (update.error_y.visible) {\n          $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"hide error bars\";\n        } else {\n          $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"show error bars\";\n        }\n      } else {\n        update = {\n          error_x: dataset[myDataIdx].error_x\n        };\n        update.error_x.visible = !update.error_x.visible;\n\n        if (update.error_x.visible) {\n          $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"hide error bars\";\n        } else {\n          $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"show error bars\";\n        }\n      }\n    }\n\n    Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx); // save the updates in case we want to pass them to a pop-out window.\n\n    curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n    var updatedKeys = Object.keys(update);\n\n    for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n      var updatedKey = updatedKeys[kidx]; // json doesn't like . to be in keys, so replace it with a placeholder\n\n      var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n      curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n    }\n  },\n  'click .barVisibility': function (event) {\n    event.preventDefault();\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var id = event.target.id;\n    var label = id.replace('-curve-show-hide-bars', '');\n    var myDataIdx = dataset.findIndex(function (d) {\n      return d.curveId === label;\n    });\n\n    if (dataset[myDataIdx].x.length > 0) {\n      var update = {\n        visible: !dataset[myDataIdx].visible\n      };\n\n      if (update.visible) {\n        $('#' + label + \"-curve-show-hide-bars\")[0].value = \"hide bars\";\n      } else {\n        $('#' + label + \"-curve-show-hide-bars\")[0].value = \"show bars\";\n      }\n    }\n\n    Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx); // save the updates in case we want to pass them to a pop-out window.\n\n    curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n    var updatedKeys = Object.keys(update);\n\n    for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n      var updatedKey = updatedKeys[kidx]; // json doesn't like . to be in keys, so replace it with a placeholder\n\n      var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n      curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n    }\n  },\n  'click .annotateVisibility': function (event) {\n    event.preventDefault();\n    var id = event.target.id;\n    var label = id.replace('-curve-show-hide-annotate', '');\n\n    if ($('#' + label + \"-annotation\")[0].hidden) {\n      $('#' + label + \"-annotation\")[0].style.display = \"block\";\n      $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"hide annotation\";\n      $('#' + label + \"-annotation\")[0].hidden = false;\n    } else {\n      $('#' + label + \"-annotation\")[0].style.display = \"none\";\n      $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"show annotation\";\n      $('#' + label + \"-annotation\")[0].hidden = true;\n    }\n\n    annotation = $('#annotationContainer')[0].innerHTML;\n  },\n  'click .heatMapVisibility': function (event) {\n    event.preventDefault();\n    var dataset = matsCurveUtils.getGraphResult().data;\n\n    if (dataset[0].lat.length > 0) {\n      var update;\n      var didx;\n\n      if (dataset[0].marker.opacity === 0) {\n        update = {\n          'marker.opacity': 1\n        };\n        Plotly.restyle($(\"#placeholder\")[0], update, 0); // save the updates in case we want to pass them to a pop-out window.\n\n        curveOpsUpdate[0] = curveOpsUpdate[0] === undefined ? {} : curveOpsUpdate[0];\n        curveOpsUpdate[0]['marker____opacity'] = update['marker.opacity'];\n        update = {\n          'visible': false\n        };\n\n        for (didx = 1; didx < dataset.length; didx++) {\n          Plotly.restyle($(\"#placeholder\")[0], update, didx); // save the updates in case we want to pass them to a pop-out window.\n\n          curveOpsUpdate[didx] = curveOpsUpdate[didx] === undefined ? {} : curveOpsUpdate[didx];\n          curveOpsUpdate[didx]['visible'] = update['visible'];\n        }\n\n        $('#' + label + \"-curve-show-hide-heatmap\")[0].value = \"hide heat map\";\n      } else {\n        update = {\n          'marker.opacity': 0\n        };\n        Plotly.restyle($(\"#placeholder\")[0], update, 0); // save the updates in case we want to pass them to a pop-out window.\n\n        curveOpsUpdate[0] = curveOpsUpdate[0] === undefined ? {} : curveOpsUpdate[0];\n        curveOpsUpdate[0]['marker____opacity'] = update['marker.opacity'];\n        update = {\n          'visible': true\n        };\n\n        for (didx = 1; didx < dataset.length; didx++) {\n          Plotly.restyle($(\"#placeholder\")[0], update, didx); // save the updates in case we want to pass them to a pop-out window.\n\n          curveOpsUpdate[didx] = curveOpsUpdate[didx] === undefined ? {} : curveOpsUpdate[didx];\n          curveOpsUpdate[didx]['visible'] = update['visible'];\n        }\n\n        $('#' + label + \"-curve-show-hide-heatmap\")[0].value = \"show heat map\";\n      }\n    }\n  },\n  // add refresh button\n  'click #refresh-plot': function (event) {\n    event.preventDefault();\n    var plotType = Session.get('plotType');\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var options = Session.get('options');\n\n    if (curveOpsUpdate.length === 0) {\n      // we just need a relayout\n      Plotly.relayout($(\"#placeholder\")[0], options);\n    } else {\n      // we need both a relayout and a restyle\n      curveOpsUpdate = [];\n\n      switch (plotType) {\n        case matsTypes.PlotTypes.contour:\n        case matsTypes.PlotTypes.contourDiff:\n          // restyle for contour plots\n          Plotly.restyle($(\"#placeholder\")[0], Session.get('colorbarResetOpts'), 0);\n          break;\n\n        case matsTypes.PlotTypes.timeSeries:\n        case matsTypes.PlotTypes.profile:\n        case matsTypes.PlotTypes.dieoff:\n        case matsTypes.PlotTypes.threshold:\n        case matsTypes.PlotTypes.validtime:\n        case matsTypes.PlotTypes.dailyModelCycle:\n        case matsTypes.PlotTypes.reliability:\n          // restyle for line plots\n          var lineTypeResetOpts = Session.get('lineTypeResetOpts');\n\n          for (var lidx = 0; lidx < lineTypeResetOpts.length; lidx++) {\n            Plotly.restyle($(\"#placeholder\")[0], lineTypeResetOpts[lidx], lidx);\n            $('#' + dataset[lidx].label + \"-curve-show-hide\")[0].value = \"hide curve\";\n            $('#' + dataset[lidx].label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n            $('#' + dataset[lidx].label + \"-curve-show-hide-errorbars\")[0].value = \"hide error bars\";\n          }\n\n          break;\n\n        case matsTypes.PlotTypes.histogram:\n          // restyle for bar plots\n          var barTypeResetOpts = Session.get('barTypeResetOpts');\n\n          for (var bidx = 0; bidx < barTypeResetOpts.length; bidx++) {\n            Plotly.restyle($(\"#placeholder\")[0], barTypeResetOpts[bidx], bidx);\n            $('#' + dataset[bidx].label + \"-curve-show-hide-bars\")[0].value = \"hide bars\";\n          }\n\n          break;\n\n        case matsTypes.PlotTypes.map:\n          // restyle for maps\n          var mapResetOpts = Session.get('mapResetOpts');\n\n          for (var midx = 0; midx < mapResetOpts.length; midx++) {\n            Plotly.restyle($(\"#placeholder\")[0], mapResetOpts[midx], midx);\n          }\n\n          $('#' + dataset[0].label + \"-curve-show-hide-heatmap\")[0].value = \"show heat map\";\n          break;\n\n        case matsTypes.PlotTypes.scatter2d:\n        default:\n          break;\n      }\n\n      Plotly.relayout($(\"#placeholder\")[0], options);\n    }\n  },\n  // add axis customization modal submit button\n  'click #axisSubmit': function (event) {\n    event.preventDefault();\n    var plotType = Session.get('plotType');\n    var changeYScaleBack = false;\n    var newOpts = {}; // get input axis limits and labels\n\n    $(\"input[id^=x][id$=AxisLabel]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.title'] = elem.value;\n      }\n    });\n\n    if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle || (plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && $(\"#placeholder\")[0].layout.xaxis.title.text.indexOf(\"Date\") > -1) {\n      $(\"input[id^=x][id$=AxisMinText]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n        }\n      });\n      $(\"input[id^=x][id$=AxisMaxText]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n        }\n      });\n    } else {\n      $(\"input[id^=x][id$=AxisMin]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n        }\n      });\n      $(\"input[id^=x][id$=AxisMax]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n        }\n      });\n    }\n\n    $(\"input[id^=y][id$=AxisLabel]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.title'] = elem.value;\n      }\n    });\n\n    if ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && $(\"#placeholder\")[0].layout.xaxis.title.text.indexOf(\"Date\") > -1) {\n      $(\"input[id^=y][id$=AxisMinText]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n        }\n      });\n      $(\"input[id^=y][id$=AxisMaxText]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n        }\n      });\n    } else {\n      $(\"input[id^=y][id$=AxisMin]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          if (plotType === matsTypes.PlotTypes.profile) {\n            newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value; // plotly can't seem to set axis limits on a log axis, so this needs to be changed to linear\n\n            if ($(\"#placeholder\")[0].layout['yaxis' + (index === 0 ? \"\" : index + 1)].type === 'log') {\n              $(\"#axisYScale\").click();\n              changeYScaleBack = true;\n            }\n          } else {\n            newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n          }\n        }\n      });\n      $(\"input[id^=y][id$=AxisMax]\").get().forEach(function (elem, index) {\n        if (elem.value !== undefined && elem.value !== \"\") {\n          if (plotType === matsTypes.PlotTypes.profile) {\n            newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value; // plotly can't seem to set axis limits on a log axis, so this needs to be changed to linear\n\n            if ($(\"#placeholder\")[0].layout['yaxis' + (index === 0 ? \"\" : index + 1)].type === 'log') {\n              $(\"#axisYScale\").click();\n              changeYScaleBack = true;\n            }\n          } else {\n            newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n          }\n        }\n      });\n    }\n\n    Plotly.relayout($(\"#placeholder\")[0], newOpts); // if needed, restore the log axis\n\n    if (changeYScaleBack) {\n      $(\"#axisYScale\").click();\n    }\n\n    $(\"#axisLimitModal\").modal('hide');\n  },\n  // add line style modal submit button\n  'click #lineTypeSubmit': function (event) {\n    event.preventDefault();\n    var plotType = Session.get('plotType');\n    var updates = []; // get input line style change\n\n    $(\"[id$=LineStyle]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        updates[index] = updates[index] === undefined ? {} : updates[index];\n        updates[index]['line.dash'] = elem.value;\n      }\n    });\n    $(\"input[id$=LineWeight]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        updates[index] = updates[index] === undefined ? {} : updates[index];\n        updates[index]['line.width'] = elem.value;\n      }\n    });\n    $(\"[id$=LineMarker]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        updates[index] = updates[index] === undefined ? {} : updates[index];\n        updates[index]['marker.symbol'] = elem.value;\n      }\n    });\n\n    for (var uidx = 0; uidx < updates.length; uidx++) {\n      // apply new settings\n      Plotly.restyle($(\"#placeholder\")[0], updates[uidx], uidx);\n    }\n\n    $(\"#lineTypeModal\").modal('hide'); // save the updates in case we want to pass them to a pop-out window.\n\n    for (uidx = 0; uidx < updates.length; uidx++) {\n      curveOpsUpdate[uidx] = curveOpsUpdate[uidx] === undefined ? {} : curveOpsUpdate[uidx];\n      var updatedKeys = Object.keys(updates[uidx]);\n\n      for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n        var updatedKey = updatedKeys[kidx]; // json doesn't like . to be in keys, so replace it with a placeholder\n\n        var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n        curveOpsUpdate[uidx][jsonHappyKey] = updates[uidx][updatedKey];\n      }\n    }\n  },\n  // add colorbar customization modal submit button\n  'click #colorbarSubmit': function (event) {\n    event.preventDefault();\n    var dataset = matsCurveUtils.getGraphResult().data;\n    var update = {}; // get new formatting\n\n    $(\"input[id=colorbarLabel]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        update['colorbar.title'] = elem.value;\n        update['colorbar.titleside'] = 'right';\n        update['colorbar.titlefont'] = {\n          size: 16,\n          family: 'Arial, sans-serif'\n        };\n      }\n    });\n    $(\"input[id=colorbarMin]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        update['autocontour'] = false;\n        update['contours.start'] = elem.value;\n      }\n    });\n    $(\"input[id=colorbarMax]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        update['autocontour'] = false;\n        update['contours.end'] = elem.value;\n      }\n    });\n    $(\"input[id=colorbarNumber]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        update['autocontour'] = false;\n        update['ncontours'] = elem.value; // sadly plotly regards this as a \"less than or equal to\" value, so we have to manually set contour size\n\n        var isStartDefined = update['contours.start'] !== undefined;\n        var isEndDefined = update['contours.end'] !== undefined;\n        var startVal = isStartDefined ? update['contours.start'] : dataset[0].zmin + (dataset[0].zmax - dataset[0].zmin) / 16;\n        var endVal = isEndDefined ? update['contours.end'] : dataset[0].zmax - (dataset[0].zmax - dataset[0].zmin) / 16;\n        update['contours.size'] = (endVal - startVal) / (Number(update['ncontours']) - 1);\n      }\n    });\n    $(\"input[id=colorbarStep]\").get().forEach(function (elem, index) {\n      if (elem.value !== undefined && elem.value !== \"\") {\n        if (update['ncontours'] === undefined) {\n          update['autocontour'] = false;\n          update['contours.size'] = elem.value;\n        }\n      }\n    });\n    $(\"input[id=colorbarReverse]\").get().forEach(function (elem, index) {\n      if (elem && elem.checked) {\n        update['reversescale'] = true;\n      } else {\n        update['reversescale'] = false;\n      }\n    });\n    var elem = document.getElementById(\"colormapSelect\");\n\n    if (elem !== undefined && elem.value !== undefined) {\n      update['colorscale'] = elem.value;\n    } // apply new settings\n\n\n    Plotly.restyle($(\"#placeholder\")[0], update, 0);\n    $(\"#colorbarModal\").modal('hide'); // save the updates in case we want to pass them to a pop-out window.\n\n    curveOpsUpdate[0] = curveOpsUpdate[0] === undefined ? {} : curveOpsUpdate[0];\n    var updatedKeys = Object.keys(update);\n\n    for (var uidx = 0; uidx < updatedKeys.length; uidx++) {\n      var updatedKey = updatedKeys[uidx]; // json doesn't like . to be in keys, so replace it with a placeholder\n\n      var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n      curveOpsUpdate[0][jsonHappyKey] = update[updatedKey];\n    }\n  }\n});","map":{"version":3,"sources":["packages/randyp:mats-common/templates/graph/graph.js"],"names":["Meteor","module","link","v","Hooks","matsCollections","matsCurveUtils","matsGraphUtils","matsMethods","matsParamUtils","matsPlotUtils","matsTypes","pageIndex","annotation","openWindows","xAxes","yAxes","curveOpsUpdate","Template","graph","onCreated","$","window","resize","resizeGraph","getPlotType","dataset","getGraphResult","data","options","undefined","Plotly","newPlot","showLink","helpers","graphFunction","Session","get","eval","plotType","set","PlotTypes","contour","contourDiff","colorbar","title","autocontour","ncontours","contours","start","end","size","JSON","stringify","colorscale","timeSeries","profile","dieoff","threshold","validtime","dailyModelCycle","reliability","lineTypeResetOpts","lidx","length","Object","values","ReservedWords","indexOf","label","push","visible","mode","error_y","error_x","line","dash","width","marker","symbol","histogram","barTypeResetOpts","bidx","map","mapResetOpts","opacity","midx","scatter2d","empty","i","curveId","annotateColor","append","keys","layout","filter","k","startsWith","hideSpinner","Title","Settings","findOne","fields","height","curves","plotName","plotAction","toUpperCase","curveText","diffFrom","pfuncs","PlotGraphFunctions","find","fetch","checked","getCurveText","confidenceDisplay","mvSpanDisplay","updated","plotText","p","format","plotFormat","PlotParams","name","optionsMap","dates","color","xaxis","Array","apply","Number","call","yaxis","isProfile","isLinePlot","isContour","isContourDiff","isNotMap","sentAddresses","addresses","a","SentAddresses","address","hideButtonText","sval","pointsButtonText","errorBarButtonText","barChartButtonText","annotateButtonText","heatMapButtonText","curveShowHideDisplay","pointsShowHideDisplay","errorbarsShowHideDisplay","isMatched","barsShowHideDisplay","annotateShowHideDisplay","heatMapShowHideDisplay","xAxisControlsNumberVisibility","text","xAxisControlsTextVisibility","yAxisControlsNumberVisibility","yAxisControlsTextVisibility","displayReplotZoom","metApp","appType","AppTypes","metexpress","mvFiles","key","mvs","mvDisabled","mvLoading","events","mvWindow","open","url","setTimeout","reload","oldCurves","enableActionButtons","setDefaultView","resetPlotResultData","event","document","getElementById","style","display","ctbgElems","saveLayout","resultKey","error","setError","h","Math","max","documentElement","clientHeight","innerWidth","w","wind","location","resizeTo","widx","close","setGraphView","graphView","PlotView","setTextView","click","currentTarget","selectedIndex","value","user","Error","modal","newOpts","yAxis","type","relayout","isNaN","pageTextDirection","newDateRange","moment","utc","range","console","log","innerHTML","params","actionId","plotMatched","preventDefault","id","target","replace","myDataIdx","findIndex","d","x","update","restyle","updatedKeys","kidx","updatedKey","jsonHappyKey","split","join","hidden","lat","didx","changeYScaleBack","forEach","elem","index","updates","uidx","family","isStartDefined","isEndDefined","startVal","zmin","zmax","endVal"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {Meteor} from 'meteor/meteor';\nimport {Hooks} from 'meteor/differential:event-hooks';\nimport {\n    matsCollections,\n    matsCurveUtils,\n    matsGraphUtils,\n    matsMethods,\n    matsParamUtils,\n    matsPlotUtils,\n    matsTypes\n} from 'meteor/randyp:mats-common';\n\nvar pageIndex = 0;\nvar annotation = \"\";\nvar openWindows = [];\nvar xAxes = [];\nvar yAxes = [];\nvar curveOpsUpdate = [];\n\nTemplate.graph.onCreated(function () {\n    // the window resize event needs to also resize the graph\n    $(window).resize(function () {\n        matsGraphUtils.resizeGraph(matsPlotUtils.getPlotType());\n        var dataset = matsCurveUtils.getGraphResult().data;\n        var options = matsCurveUtils.getGraphResult().options;\n        if (dataset !== undefined && options !== undefined) {\n            Plotly.newPlot($(\"#placeholder\")[0], dataset, options, {showLink: true});\n        }\n    });\n});\n\nTemplate.graph.helpers({\n    /**\n     * @return {string}\n     * @return {string}\n     */\n    graphFunction: function () {\n        // causes graph display routine to be processed\n        Session.get('PlotResultsUpDated');\n        var graphFunction = Session.get('graphFunction');\n        if (graphFunction) {\n            eval(graphFunction)(Session.get('plotResultKey'));\n            var plotType = Session.get('plotType');\n            var dataset = matsCurveUtils.getGraphResult().data;\n            var options = matsCurveUtils.getGraphResult().options;\n            Session.set('options', options);\n\n            // need to save some curve options so that the reset button can undo Plotly.restyle\n            switch (plotType) {\n                case matsTypes.PlotTypes.contour:\n                case matsTypes.PlotTypes.contourDiff:\n                    //saved curve options for contours\n                    Session.set('colorbarResetOpts', {\n                        'colorbar.title': dataset[0].colorbar.title,\n                        'autocontour': dataset[0].autocontour,\n                        'ncontours': dataset[0].ncontours,\n                        'contours.start': dataset[0].contours.start,\n                        'contours.end': dataset[0].contours.end,\n                        'contours.size': dataset[0].contours.size,\n                        'reversescale': false,\n                        'colorscale': JSON.stringify(dataset[0].colorscale)\n                    });\n                    break;\n                case matsTypes.PlotTypes.timeSeries:\n                case matsTypes.PlotTypes.profile:\n                case matsTypes.PlotTypes.dieoff:\n                case matsTypes.PlotTypes.threshold:\n                case matsTypes.PlotTypes.validtime:\n                case matsTypes.PlotTypes.dailyModelCycle:\n                case matsTypes.PlotTypes.reliability:\n                    // saved curve options for line graphs\n                    var lineTypeResetOpts = [];\n                    for (var lidx = 0; lidx < dataset.length; lidx++) {\n                        if (Object.values(matsTypes.ReservedWords).indexOf(dataset[lidx].label) === -1) {\n                            lineTypeResetOpts.push({\n                                'visible': dataset[lidx].visible,\n                                'mode': dataset[lidx].mode,\n                                'error_y': dataset[lidx].error_y,\n                                'error_x': dataset[lidx].error_x,\n                                'line.dash': dataset[lidx].line.dash,\n                                'line.width': dataset[lidx].line.width,\n                                'marker.symbol': dataset[lidx].marker.symbol,\n                            });\n                        } else {\n                            break;\n                        }\n                    }\n                    Session.set('lineTypeResetOpts', lineTypeResetOpts);\n                    break;\n                case matsTypes.PlotTypes.histogram:\n                    // saved curve options for maps\n                    var barTypeResetOpts = [];\n                    for (var bidx = 0; bidx < dataset.length; bidx++) {\n                        if (Object.values(matsTypes.ReservedWords).indexOf(dataset[bidx].label) === -1) {\n                            barTypeResetOpts.push({\n                                'visible': dataset[bidx].visible,\n                            });\n                        } else {\n                            break;\n                        }\n                    }\n                    Session.set('barTypeResetOpts', barTypeResetOpts);\n                    break;\n                case matsTypes.PlotTypes.map:\n                    // saved curve options for maps\n                    var mapResetOpts = [];\n                    mapResetOpts[0] = {\n                        'marker.opacity': dataset[0].marker.opacity,\n                    };\n                    for (var midx = 1; midx < dataset.length; midx++) {\n                        mapResetOpts.push({\n                            'visible': dataset[midx].visible,\n                        });\n                    }\n                    Session.set('mapResetOpts', mapResetOpts);\n                    break;\n                case matsTypes.PlotTypes.scatter2d:\n                default:\n                    break;\n            }\n\n            // initial plot\n            $(\"#legendContainer\").empty();\n            $(\"#placeholder\").empty();\n            if (!dataset || !options) {\n                return false;\n            }\n            Plotly.newPlot($(\"#placeholder\")[0], dataset, options, {showLink: true});\n\n            // append annotations\n            if (plotType !== matsTypes.PlotTypes.map) {\n                annotation = \"\";\n                for (var i = 0; i < dataset.length; i++) {\n                    if (plotType !== matsTypes.PlotTypes.histogram && dataset[i].curveId !== undefined) {\n                        annotation = annotation + \"<div id='\" + dataset[i].curveId + \"-annotation' style='color:\" + dataset[i].annotateColor + \"'>\" + dataset[i].annotation + \" </div>\";\n                    }\n                }\n                $(\"#legendContainer\").append(\"<div id='annotationContainer' style='font-size:smaller'>\" + annotation + \"</div>\");\n\n                // store the existing axes.\n                Object.keys($(\"#placeholder\")[0].layout).filter(function (k) {\n                    if (k.startsWith('xaxis')) {\n                        xAxes.push(k);\n                    }\n                    if (k.startsWith('yaxis')) {\n                        yAxes.push(k);\n                    }\n                });\n            }\n            matsCurveUtils.hideSpinner();\n        }\n        return graphFunction;\n    },\n    Title: function () {\n        if (matsCollections.Settings === undefined || matsCollections.Settings.findOne({}, {fields: {Title: 1}}) === undefined) {\n            return \"\";\n        } else {\n            return matsCollections.Settings.findOne({}, {fields: {Title: 1}}).Title;\n        }\n    },\n    width: function () {\n        return matsGraphUtils.width(matsPlotUtils.getPlotType());\n    },\n    height: function () {\n        return matsGraphUtils.height(matsPlotUtils.getPlotType());\n    },\n    curves: function () {\n        return Session.get('Curves');\n    },\n    plotName: function () {\n        return (Session.get('PlotParams') === [] || Session.get('PlotParams').plotAction === undefined) || Session.get('plotType') === matsTypes.PlotTypes.map ? \"\" : Session.get('PlotParams').plotAction.toUpperCase();\n    },\n    curveText: function () {\n        if (this.diffFrom === undefined) {\n            var plotType = Session.get('plotType');\n            if (plotType === undefined) {\n                pfuncs = matsCollections.PlotGraphFunctions.find({}).fetch();\n                for (var i = 0; i < pfuncs.length; i++) {\n                    if (pfuncs[i].checked === true) {\n                        Session.set('plotType', pfuncs[i].plotType);\n                    }\n                }\n                plotType = Session.get('plotType');\n            }\n            return matsPlotUtils.getCurveText(plotType, this);\n        } else {\n            return this.label + \":  Difference\";\n        }\n    },\n    confidenceDisplay: function () {\n        if (Session.get('plotParameter') === \"matched\") {\n            var plotType = Session.get('plotType');\n            switch (plotType) {\n                case matsTypes.PlotTypes.timeSeries:\n                case matsTypes.PlotTypes.profile:\n                case matsTypes.PlotTypes.dieoff:\n                case matsTypes.PlotTypes.threshold:\n                case matsTypes.PlotTypes.validtime:\n                case matsTypes.PlotTypes.dailyModelCycle:\n                    return \"block\";\n                case matsTypes.PlotTypes.reliability:\n                case matsTypes.PlotTypes.map:\n                case matsTypes.PlotTypes.histogram:\n                case matsTypes.PlotTypes.scatter2d:\n                case matsTypes.PlotTypes.contour:\n                case matsTypes.PlotTypes.contourDiff:\n                default:\n                    return \"none\";\n            }\n        } else {\n            return \"none\";\n        }\n    },\n    mvSpanDisplay: function () {\n        var updated = Session.get(\"MvResultsUpDated\");\n        if (Session.get(\"mvResultKey\") != null || Session.get('plotParams')['metexpress-mode'] == \"matsmv\") {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n\n    plotText: function () {\n        var p = Session.get('PlotParams');\n        if (p !== undefined) {\n            var format = p.plotFormat;\n            if (matsCollections.PlotParams.findOne({name: 'plotFormat'}) &&\n                matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap &&\n                matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap[p.plotFormat] !== undefined) {\n                format = matsCollections.PlotParams.findOne({name: 'plotFormat'}).optionsMap[p.plotFormat];\n            }\n            if (format === undefined) {\n                format = \"Unmatched\";\n            }\n            var plotType = Session.get('plotType');\n            switch (plotType) {\n                case matsTypes.PlotTypes.timeSeries:\n                    return \"TimeSeries \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.profile:\n                    return \"Profile: \" + format;\n                case matsTypes.PlotTypes.dieoff:\n                    return \"DieOff: \" + format;\n                case matsTypes.PlotTypes.threshold:\n                    return \"Threshold: \" + format;\n                case matsTypes.PlotTypes.validtime:\n                    return \"ValidTime: \" + format;\n                case matsTypes.PlotTypes.dailyModelCycle:\n                    return \"DailyModelCycle \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.reliability:\n                    return \"Reliability: \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.map:\n                    return \"Map \" + p.dates + \" \";\n                case matsTypes.PlotTypes.histogram:\n                    return \"Histogram: \" + format;\n                case matsTypes.PlotTypes.contour:\n                    return \"Contour \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.contourDiff:\n                    return \"ContourDiff \" + p.dates + \" : \" + format;\n                case matsTypes.PlotTypes.scatter2d:\n                    break;\n                default:\n                    return \"Scatter: \" + p.dates + \" : \" + format;\n            }\n        } else {\n            return \"no plot params\";\n        }\n    },\n    color: function () {\n        return this.color;\n    },\n    xAxes: function () {\n        Session.get('PlotResultsUpDated');\n        var plotType = Session.get('plotType');\n        // create an array like [0,1,2...] for each unique xaxis\n        // by getting the xaxis keys - filtering them to be unique, then using an Array.apply on the resulting array\n        // to assign a number to each value\n        var xaxis = {};\n        if ($(\"#placeholder\")[0] === undefined || $(\"#placeholder\")[0].layout === undefined || plotType === matsTypes.PlotTypes.map) {\n            return;\n        }\n        Object.keys($(\"#placeholder\")[0].layout).filter(function (k) {\n            if (k.startsWith('xaxis')) {\n                xaxis[k] = $(\"#placeholder\")[0].layout[k];\n            }\n        });\n        return Array.apply(null, {length: Object.keys(xaxis).length}).map(Number.call, Number);\n    },\n    yAxes: function () {\n        Session.get('PlotResultsUpDated');\n        var plotType = Session.get('plotType');\n        // create an array like [0,1,2...] for each unique yaxis\n        // by getting the yaxis keys - filtering them to be unique, then using an Array.apply on the resulting array\n        // to assign a number to each value\n        var yaxis = {};\n        if ($(\"#placeholder\")[0] === undefined || $(\"#placeholder\")[0].layout === undefined || plotType === matsTypes.PlotTypes.map) {\n            return;\n        }\n        Object.keys($(\"#placeholder\")[0].layout).filter(function (k) {\n            if (k.startsWith('yaxis')) {\n                yaxis[k] = $(\"#placeholder\")[0].layout[k];\n            }\n        });\n        return Array.apply(null, {length: Object.keys(yaxis).length}).map(Number.call, Number);\n    },\n    isProfile: function () {\n        return (Session.get('plotType') === matsTypes.PlotTypes.profile)\n    },\n    isLinePlot: function () {\n        var plotType = Session.get('plotType');\n        switch (plotType) {\n            case matsTypes.PlotTypes.timeSeries:\n            case matsTypes.PlotTypes.profile:\n            case matsTypes.PlotTypes.dieoff:\n            case matsTypes.PlotTypes.threshold:\n            case matsTypes.PlotTypes.validtime:\n            case matsTypes.PlotTypes.dailyModelCycle:\n            case matsTypes.PlotTypes.reliability:\n                return true;\n            case matsTypes.PlotTypes.map:\n            case matsTypes.PlotTypes.histogram:\n            case matsTypes.PlotTypes.scatter2d:\n            case matsTypes.PlotTypes.contour:\n            case matsTypes.PlotTypes.contourDiff:\n            default:\n                return false;\n        }\n    },\n    isContour: function () {\n        return (Session.get('plotType') === matsTypes.PlotTypes.contour || Session.get('plotType') === matsTypes.PlotTypes.contourDiff)\n    },\n    isContourDiff: function () {\n        return (Session.get('plotType') === matsTypes.PlotTypes.contourDiff)\n    },\n    isNotMap: function () {\n        return (Session.get('plotType') !== matsTypes.PlotTypes.map)\n    },\n    sentAddresses: function () {\n        var addresses = [];\n        var a = matsCollections.SentAddresses.find({}, {fields: {address: 1}}).fetch();\n        for (var i = 0; i < a.length; i++) {\n            addresses.push(a[i].address);\n        }\n        return addresses;\n    },\n    hideButtonText: function () {\n        var sval = this.label + \"hideButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'hide curve');\n        }\n        return Session.get(sval);\n    },\n    pointsButtonText: function () {\n        var sval = this.label + \"pointsButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'hide points');\n        }\n        return Session.get(sval);\n    },\n    errorBarButtonText: function () {\n        var sval = this.label + \"errorBarButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'hide error bars');\n        }\n        return Session.get(sval);\n    },\n    barChartButtonText: function () {\n        var sval = this.label + \"barChartButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'hide bars');\n        }\n        return Session.get(sval);\n    },\n    annotateButtonText: function () {\n        var sval = this.label + \"annotateButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'hide annotation');\n        }\n        return Session.get(sval);\n    },\n    heatMapButtonText: function () {\n        var sval = this.label + \"heatMapButtonText\";\n        if (Session.get(sval) === undefined) {\n            Session.set(sval, 'show heat map');\n        }\n        return Session.get(sval);\n    },\n    curveShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        switch (plotType) {\n            case matsTypes.PlotTypes.timeSeries:\n            case matsTypes.PlotTypes.profile:\n            case matsTypes.PlotTypes.dieoff:\n            case matsTypes.PlotTypes.threshold:\n            case matsTypes.PlotTypes.validtime:\n            case matsTypes.PlotTypes.dailyModelCycle:\n            case matsTypes.PlotTypes.reliability:\n            case matsTypes.PlotTypes.scatter2d:\n                return \"block\";\n            case matsTypes.PlotTypes.map:\n            case matsTypes.PlotTypes.histogram:\n            case matsTypes.PlotTypes.contour:\n            case matsTypes.PlotTypes.contourDiff:\n            default:\n                return \"none\";\n        }\n    },\n    pointsShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        switch (plotType) {\n            case matsTypes.PlotTypes.timeSeries:\n            case matsTypes.PlotTypes.profile:\n            case matsTypes.PlotTypes.dieoff:\n            case matsTypes.PlotTypes.threshold:\n            case matsTypes.PlotTypes.validtime:\n            case matsTypes.PlotTypes.dailyModelCycle:\n            case matsTypes.PlotTypes.reliability:\n            case matsTypes.PlotTypes.scatter2d:\n                return \"block\";\n            case matsTypes.PlotTypes.map:\n            case matsTypes.PlotTypes.histogram:\n            case matsTypes.PlotTypes.contour:\n            case matsTypes.PlotTypes.contourDiff:\n            default:\n                return \"none\";\n        }\n    },\n    errorbarsShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        var isMatched = Session.get('plotParameter') === \"matched\";\n        if (isMatched) {\n            switch (plotType) {\n                case matsTypes.PlotTypes.timeSeries:\n                case matsTypes.PlotTypes.profile:\n                case matsTypes.PlotTypes.dieoff:\n                case matsTypes.PlotTypes.threshold:\n                case matsTypes.PlotTypes.validtime:\n                case matsTypes.PlotTypes.dailyModelCycle:\n                    return \"block\";\n                case matsTypes.PlotTypes.reliability:\n                case matsTypes.PlotTypes.map:\n                case matsTypes.PlotTypes.histogram:\n                case matsTypes.PlotTypes.scatter2d:\n                case matsTypes.PlotTypes.contour:\n                case matsTypes.PlotTypes.contourDiff:\n                default:\n                    return \"none\";\n            }\n        } else {\n            return \"none\";\n        }\n    },\n    barsShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.histogram) {\n            return 'block';\n        } else {\n            return 'none';\n        }\n    },\n    annotateShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.map || plotType === matsTypes.PlotTypes.histogram) {\n            return 'none';\n        } else {\n            return 'block';\n        }\n    },\n    heatMapShowHideDisplay: function () {\n        var plotType = Session.get('plotType');\n        if (plotType !== matsTypes.PlotTypes.map) {\n            return 'none';\n        } else {\n            return 'block';\n        }\n    },\n    xAxisControlsNumberVisibility: function () {\n        Session.get('PlotResultsUpDated');\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle ||\n            ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && ($(\"#placeholder\")[0].layout.xaxis.title.text).indexOf(\"Date\") > -1)) {\n            return \"none\";\n        } else {\n            return \"block\";\n        }\n    },\n    xAxisControlsTextVisibility: function () {\n        Session.get('PlotResultsUpDated');\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle ||\n            ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && ($(\"#placeholder\")[0].layout.xaxis.title.text).indexOf(\"Date\") > -1)) {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    yAxisControlsNumberVisibility: function () {\n        Session.get('PlotResultsUpDated');\n        if ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && ($(\"#placeholder\")[0].layout.yaxis.title.text).indexOf(\"Date\") > -1) {\n            return \"none\";\n        } else {\n            return \"block\";\n        }\n    },\n    yAxisControlsTextVisibility: function () {\n        Session.get('PlotResultsUpDated');\n        if ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && ($(\"#placeholder\")[0].layout.yaxis.title.text).indexOf(\"Date\") > -1) {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    displayReplotZoom: function () {\n        // the replot to zoom function is only really appropriate for downsampled graphs which are\n        // only possible in timeseries or dailymodelcycle plots\n        Session.get(\"PlotParams\");\n        Session.get('PlotResultsUpDated');\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle) {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    metApp: function () {\n        Session.get(\"PlotParams\");\n        Session.get('PlotResultsUpDated');\n        if (matsCollections.Settings.findOne({}).appType && matsCollections.Settings.findOne({}).appType === matsTypes.AppTypes.metexpress && Session.get('PlotParams')['metexpress-mode'] == \"matsmv\") {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    mvFiles: function () {\n        var updated = Session.get('MvResultsUpDated');\n        var key = Session.get('mvResultKey');\n        var mvs = Session.get('mvs');\n        if (mvs != null) {\n            return mvs;\n        } else {\n            return [];\n        }\n    },\n    mvDisabled: function () {\n        var updated = Session.get('MvResultsUpDated');\n        if (Session.get('mvs') == null || Session.get('PlotParams')['metexpress-mode'] == \"mats\") {\n            return \"none\";\n        } else {\n            return \"block\";\n        }\n    },\n    mvLoading: function () {\n        var updated = Session.get('MvResultsUpDated');\n        if (Session.get('mvs') == null && Session.get('PlotParams')['metexpress-mode'] == \"matsmv\") {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    }\n});\n\nTemplate.graph.events({\n    'click .mvCtrlButton': function () {\n        var mvWindow = window.open(this.url, \"mv\", \"height=200,width=200\");\n        setTimeout(function () {\n            mvWindow.reload();\n        }, 500);\n\n    },\n    'click .back': function () {\n        const plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.contourDiff) {\n            const oldCurves = Session.get('oldCurves');\n            Session.set('Curves', oldCurves);\n        }\n        matsPlotUtils.enableActionButtons();\n        matsGraphUtils.setDefaultView();\n        matsCurveUtils.resetPlotResultData();\n        return false;\n    },\n\n    'click .header': function (event) {\n        document.getElementById('graph-control').style.display = 'block';\n        // document.getElementById('showAdministration').style.display = 'block';\n        document.getElementById('navbar').style.display = 'block';\n        document.getElementById('footnav').style.display = 'block';\n\n        var ctbgElems = $('*[id^=\"curve-text-buttons-grp\"]');\n        for (var i = 0; i < ctbgElems.length; i++) {\n            ctbgElems[i].style.display = 'block';\n        }\n    },\n    'click .preview': function () {\n        // capture the layout\n        const layout = $(\"#placeholder\")[0].layout;\n        var key = Session.get('plotResultKey');\n        matsMethods.saveLayout.call({\n            resultKey: key,\n            layout: layout,\n            curveOpsUpdate: {curveOpsUpdate: curveOpsUpdate}\n        }, function (error) {\n            if (error !== undefined) {\n                setError(error);\n            }\n        });\n        // open a new window with a standAlone graph of the current graph\n        var h = Math.max(document.documentElement.clientHeight, window.innerWidth || 0) * .5;\n        var w = h * 1.3;\n        var wind = window.open(window.location + \"/preview/\" + Session.get(\"graphFunction\") + \"/\" + Session.get(\"plotResultKey\") + \"/\" + Session.get('plotParameter') + \"/\" + matsCollections.Settings.findOne({}, {fields: {Title: 1}}).Title, \"_blank\", \"status=no,titlebar=no,toolbar=no,scrollbars=no,menubar=no,resizable=yes\", \"height=\" + h + \",width=\" + w);\n        setTimeout(function () {\n            wind.resizeTo(w, h);\n        }, 500);\n        openWindows.push(wind);\n    },\n    'click .closeapp': function () {\n        for (var widx = 0; widx < openWindows.length; widx++) {\n            openWindows[widx].close();\n        }\n        openWindows = [];\n    },\n    'click .reload': function () {\n        var dataset = matsCurveUtils.getGraphResult().data;\n        var options = matsCurveUtils.getGraphResult().options;\n        var graphFunction = Session.get('graphFunction');\n        window[graphFunction](dataset, options);\n    },\n    'click .plotButton': function () {\n        matsGraphUtils.setGraphView(Session.get('plotType'));\n        var graphView = document.getElementById('graphView');\n        Session.set('graphViewMode', matsTypes.PlotView.graph);\n        matsCurveUtils.hideSpinner();\n    },\n    'click .textButton': function () {\n        matsGraphUtils.setTextView(Session.get('plotType'));\n        Session.set('graphViewMode', matsTypes.PlotView.text);\n        Session.set(\"pageIndex\", 0);\n        Session.set(\"newPageIndex\", 1);\n        Session.set('textRefreshNeeded', true);\n    },\n    'click .export': function () {\n        document.getElementById('text_export').click();\n    },\n    'click .sentAddresses': function (event) {\n        var address = event.currentTarget.options[event.currentTarget.selectedIndex].value;\n        document.getElementById(\"sendAddress\").value = address;\n    },\n    'click .share': function () {\n        // show address modal\n        if (!Meteor.user()) {\n            setError(new Error(\"You must be logged in to use the 'share' feature\"));\n            return false;\n        }\n        $(\"#sendModal\").modal('show');\n    },\n    'click .basis': function () {\n        window.open(window.location + \"/JSON/\" + Session.get(\"graphFunction\") + \"/\" + Session.get(\"plotResultKey\") + \"/\" + Session.get('plotParameter') + \"/\" + matsCollections.Settings.findOne({}, {fields: {Title: 1}}).Title, \"_blank\", \"resizable=yes\");\n    },\n    'click .axisLimitButton': function () {\n        $(\"#axisLimitModal\").modal('show');\n    },\n    'click .lineTypeButton': function () {\n        $(\"#lineTypeModal\").modal('show');\n    },\n    'click .colorbarButton': function () {\n        $(\"#colorbarModal\").modal('show');\n    },\n    'click .axisYScale': function () {\n        // get all yaxes and change their scales\n        var newOpts = {};\n        var yAxis;\n        for (var k = 0; k < yAxes.length; k++) {\n            yAxis = yAxes[k];\n            newOpts[yAxis + '.type'] = $(\"#placeholder\")[0].layout[yAxis].type === 'linear' ? 'log' : 'linear';\n        }\n        Plotly.relayout($(\"#placeholder\")[0], newOpts);\n    },\n    'click .firstPageButton': function () {\n        var pageIndex = Session.get(\"pageIndex\");\n        // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n        if (!Number.isNaN(pageIndex)) {\n            Session.set(\"pageIndex\", 0);\n            Session.set(\"newPageIndex\", 1);\n            Session.set('textRefreshNeeded', true);\n        }\n    },\n    'click .previousTenPageButton': function () {\n        var pageIndex = Session.get(\"pageIndex\");\n        // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n        if (!Number.isNaN(pageIndex)) {\n            var pageTextDirection = Session.get(\"pageTextDirection\");\n            // if the navigation direction is changing, you have to increment the page index an additional time,\n            // or you just move to the other end of the current page, and nothing appears to change.\n            if (pageTextDirection !== undefined && pageTextDirection === -1) {\n                Session.set(\"newPageIndex\", pageIndex - 10);\n            } else {\n                Session.set(\"newPageIndex\", pageIndex - 11);\n            }\n            Session.set('textRefreshNeeded', true);\n        }\n    },\n    'click .previousPageButton': function () {\n        var pageIndex = Session.get(\"pageIndex\");\n        // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n        if (!Number.isNaN(pageIndex)) {\n            var pageTextDirection = Session.get(\"pageTextDirection\");\n            // if the navigation direction is changing, you have to increment the page index an additional time,\n            // or you just move to the other end of the current page, and nothing appears to change.\n            if (pageTextDirection !== undefined && pageTextDirection === -1) {\n                Session.set(\"newPageIndex\", pageIndex - 1);\n            } else {\n                Session.set(\"newPageIndex\", pageIndex - 2);\n            }\n            Session.set('textRefreshNeeded', true);\n        }\n    },\n    'click .nextPageButton': function () {\n        var pageIndex = Session.get(\"pageIndex\");\n        // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n        if (!Number.isNaN(pageIndex)) {\n            var pageTextDirection = Session.get(\"pageTextDirection\");\n            // if the navigation direction is changing, you have to increment the page index an additional time,\n            // or you just move to the other end of the current page, and nothing appears to change.\n            if (pageTextDirection !== undefined && pageTextDirection === 1) {\n                Session.set(\"newPageIndex\", pageIndex + 1);\n            } else {\n                Session.set(\"newPageIndex\", pageIndex + 2);\n            }\n            Session.set('textRefreshNeeded', true);\n        }\n    },\n    'click .nextTenPageButton': function () {\n        var pageIndex = Session.get(\"pageIndex\");\n        // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n        if (!Number.isNaN(pageIndex)) {\n            var pageTextDirection = Session.get(\"pageTextDirection\");\n            // if the navigation direction is changing, you have to increment the page index an additional time,\n            // or you just move to the other end of the current page, and nothing appears to change.\n            if (pageTextDirection !== undefined && pageTextDirection === 1) {\n                Session.set(\"newPageIndex\", pageIndex + 10);\n            } else {\n                Session.set(\"newPageIndex\", pageIndex + 11);\n            }\n            Session.set('textRefreshNeeded', true);\n        }\n    },\n    'click .lastPageButton': function () {\n        var pageIndex = Session.get(\"pageIndex\");\n        // if pageIndex is NaN, it means we only have one page and these buttons shouldn't do anything\n        if (!Number.isNaN(pageIndex)) {\n            Session.set(\"newPageIndex\", -2000);\n            Session.set('textRefreshNeeded', true);\n        }\n    },\n    'click .replotZoomButton': function () {\n        var plotType = Session.get('plotType');\n        if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle) {\n            var newDateRange = moment.utc($(\"#placeholder\")[0].layout['xaxis'].range[0]).format('M/DD/YYYY HH:mm') + \" - \" + moment.utc($(\"#placeholder\")[0].layout['xaxis'].range[1]).format('M/DD/YYYY HH:mm');\n            console.log(newDateRange);\n            document.getElementById('controlButton-dates-value').innerHTML = newDateRange;\n            var params = Session.get('params');\n            var actionId = \"plotUnmatched\";\n            if (params.plotAction === \"matched\") {\n                actionId = plotMatched;\n            }\n            document.getElementById(\"plot-curves\").click();\n        }\n    },\n    'click .reCacheButton': function () {\n        var plotType = Session.get('plotType');\n        var params = Session.get('params');\n        var actionId = \"plotUnmatched\";\n        if (params.plotAction === \"matched\") {\n            actionId = plotMatched;\n        }\n        Session.set('expireKey', true);\n        document.getElementById(\"plot-curves\").click();\n    },\n    'click .curveVisibility': function (event) {\n        event.preventDefault();\n        var dataset = matsCurveUtils.getGraphResult().data;\n        const id = event.target.id;\n        const label = id.replace('-curve-show-hide', '');\n        const myDataIdx = dataset.findIndex(function (d) {\n            return d.curveId === label;\n        });\n        if (dataset[myDataIdx].x.length > 0) {\n            var update;\n            if (dataset[myDataIdx].visible) {\n                if (dataset[myDataIdx].mode === \"lines\") {                  // in line mode, lines are visible, so make nothing visible\n                    update = {\n                        visible: !dataset[myDataIdx].visible\n                    };\n                    $('#' + label + \"-curve-show-hide\")[0].value = \"show curve\";\n                } else if (dataset[myDataIdx].mode === \"lines+markers\") {   // in line and point mode, lines and points are visible, so make nothing visible\n                    update = {\n                        visible: !dataset[myDataIdx].visible\n                    };\n                    $('#' + label + \"-curve-show-hide\")[0].value = \"show curve\";\n                    $('#' + label + \"-curve-show-hide-points\")[0].value = \"show points\";\n                } else if (dataset[myDataIdx].mode === \"markers\") {         // in point mode, points are visible, so make lines and points visible\n                    update = {\n                        mode: \"lines+markers\"\n                    };\n                    $('#' + label + \"-curve-show-hide\")[0].value = \"hide curve\";\n                }\n            } else {\n                if (dataset[myDataIdx].mode === \"lines\") {                  // in line mode, nothing is visible, so make lines visible\n                    update = {\n                        visible: !dataset[myDataIdx].visible\n                    };\n                    $('#' + label + \"-curve-show-hide\")[0].value = \"hide curve\";\n                } else if (dataset[myDataIdx].mode === \"lines+markers\") {   // in line and point mode, nothing is visible, so make lines and points visible\n                    update = {\n                        visible: !dataset[myDataIdx].visible\n                    };\n                    $('#' + label + \"-curve-show-hide\")[0].value = \"hide curve\";\n                    $('#' + label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n                }\n            }\n        }\n        Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx);\n        // save the updates in case we want to pass them to a pop-out window.\n        curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n        var updatedKeys = Object.keys(update);\n        for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n            var updatedKey = updatedKeys[kidx];\n            // json doesn't like . to be in keys, so replace it with a placeholder\n            var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n            curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n        }\n    },\n    'click .pointsVisibility': function (event) {\n        event.preventDefault();\n        var dataset = matsCurveUtils.getGraphResult().data;\n        const id = event.target.id;\n        const label = id.replace('-curve-show-hide-points', '');\n        const myDataIdx = dataset.findIndex(function (d) {\n            return d.curveId === label;\n        });\n        if (dataset[myDataIdx].x.length > 0) {\n            var update;\n            if (dataset[myDataIdx].visible) {\n                if (dataset[myDataIdx].mode === \"lines\") {                  // lines are visible, so make lines and points visible\n                    update = {\n                        mode: \"lines+markers\"\n                    };\n                    $('#' + label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n                } else if (dataset[myDataIdx].mode === \"lines+markers\") {   // lines and points are visible, so make only lines visible\n                    update = {\n                        mode: \"lines\"\n                    };\n                    $('#' + label + \"-curve-show-hide-points\")[0].value = \"show points\";\n                } else if (dataset[myDataIdx].mode === \"markers\") {         // points are visible, so make nothing visible\n                    update = {\n                        visible: !dataset[myDataIdx].visible,\n                        mode: \"lines\"\n                    };\n                    $('#' + label + \"-curve-show-hide-points\")[0].value = \"show points\";\n                }\n            } else {                                                        // nothing is visible, so make points visible\n                update = {\n                    visible: !dataset[myDataIdx].visible,\n                    mode: \"markers\"\n                };\n                $('#' + label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n            }\n        }\n        Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx);\n        // save the updates in case we want to pass them to a pop-out window.\n        curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n        var updatedKeys = Object.keys(update);\n        for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n            var updatedKey = updatedKeys[kidx];\n            // json doesn't like . to be in keys, so replace it with a placeholder\n            var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n            curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n        }\n    },\n    'click .errorBarVisibility': function (event) {\n        event.preventDefault();\n        var plotType = Session.get('plotType');\n        var dataset = matsCurveUtils.getGraphResult().data;\n        const id = event.target.id;\n        const label = id.replace('-curve-show-hide-errorbars', '');\n        const myDataIdx = dataset.findIndex(function (d) {\n            return d.curveId === label;\n        });\n        if (dataset[myDataIdx].x.length > 0) {\n            var update;\n            if (plotType !== matsTypes.PlotTypes.profile) {\n                update = {\n                    error_y: dataset[myDataIdx].error_y\n                };\n                update.error_y.visible = !update.error_y.visible;\n                if (update.error_y.visible) {\n                    $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"hide error bars\";\n                } else {\n                    $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"show error bars\";\n                }\n            } else {\n                update = {\n                    error_x: dataset[myDataIdx].error_x\n                };\n                update.error_x.visible = !update.error_x.visible;\n                if (update.error_x.visible) {\n                    $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"hide error bars\";\n                } else {\n                    $('#' + label + \"-curve-show-hide-errorbars\")[0].value = \"show error bars\";\n                }\n            }\n        }\n        Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx);\n        // save the updates in case we want to pass them to a pop-out window.\n        curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n        var updatedKeys = Object.keys(update);\n        for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n            var updatedKey = updatedKeys[kidx];\n            // json doesn't like . to be in keys, so replace it with a placeholder\n            var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n            curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n        }\n    },\n    'click .barVisibility': function (event) {\n        event.preventDefault();\n        var dataset = matsCurveUtils.getGraphResult().data;\n        const id = event.target.id;\n        const label = id.replace('-curve-show-hide-bars', '');\n        const myDataIdx = dataset.findIndex(function (d) {\n            return d.curveId === label;\n        });\n        if (dataset[myDataIdx].x.length > 0) {\n            var update = {\n                visible: !dataset[myDataIdx].visible\n            };\n            if (update.visible) {\n                $('#' + label + \"-curve-show-hide-bars\")[0].value = \"hide bars\";\n            } else {\n                $('#' + label + \"-curve-show-hide-bars\")[0].value = \"show bars\";\n            }\n        }\n        Plotly.restyle($(\"#placeholder\")[0], update, myDataIdx);\n        // save the updates in case we want to pass them to a pop-out window.\n        curveOpsUpdate[myDataIdx] = curveOpsUpdate[myDataIdx] === undefined ? {} : curveOpsUpdate[myDataIdx];\n        var updatedKeys = Object.keys(update);\n        for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n            var updatedKey = updatedKeys[kidx];\n            // json doesn't like . to be in keys, so replace it with a placeholder\n            var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n            curveOpsUpdate[myDataIdx][jsonHappyKey] = update[updatedKey];\n        }\n    },\n    'click .annotateVisibility': function (event) {\n        event.preventDefault();\n        const id = event.target.id;\n        const label = id.replace('-curve-show-hide-annotate', '');\n        if ($('#' + label + \"-annotation\")[0].hidden) {\n            $('#' + label + \"-annotation\")[0].style.display = \"block\";\n            $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"hide annotation\";\n            $('#' + label + \"-annotation\")[0].hidden = false;\n        } else {\n            $('#' + label + \"-annotation\")[0].style.display = \"none\";\n            $('#' + label + \"-curve-show-hide-annotate\")[0].value = \"show annotation\";\n            $('#' + label + \"-annotation\")[0].hidden = true;\n        }\n        annotation = $('#annotationContainer')[0].innerHTML;\n    },\n    'click .heatMapVisibility': function (event) {\n        event.preventDefault();\n        var dataset = matsCurveUtils.getGraphResult().data;\n        if (dataset[0].lat.length > 0) {\n            var update;\n            var didx;\n            if (dataset[0].marker.opacity === 0) {\n                update = {\n                    'marker.opacity': 1\n                };\n                Plotly.restyle($(\"#placeholder\")[0], update, 0);\n                // save the updates in case we want to pass them to a pop-out window.\n                curveOpsUpdate[0] = curveOpsUpdate[0] === undefined ? {} : curveOpsUpdate[0];\n                curveOpsUpdate[0]['marker____opacity'] = update['marker.opacity'];\n                update = {\n                    'visible': false\n                };\n                for (didx = 1; didx < dataset.length; didx++) {\n                    Plotly.restyle($(\"#placeholder\")[0], update, didx);\n                    // save the updates in case we want to pass them to a pop-out window.\n                    curveOpsUpdate[didx] = curveOpsUpdate[didx] === undefined ? {} : curveOpsUpdate[didx];\n                    curveOpsUpdate[didx]['visible'] = update['visible'];\n                }\n                $('#' + label + \"-curve-show-hide-heatmap\")[0].value = \"hide heat map\";\n            } else {\n                update = {\n                    'marker.opacity': 0\n                };\n                Plotly.restyle($(\"#placeholder\")[0], update, 0);\n                // save the updates in case we want to pass them to a pop-out window.\n                curveOpsUpdate[0] = curveOpsUpdate[0] === undefined ? {} : curveOpsUpdate[0];\n                curveOpsUpdate[0]['marker____opacity'] = update['marker.opacity'];\n                update = {\n                    'visible': true\n                };\n                for (didx = 1; didx < dataset.length; didx++) {\n                    Plotly.restyle($(\"#placeholder\")[0], update, didx);\n                    // save the updates in case we want to pass them to a pop-out window.\n                    curveOpsUpdate[didx] = curveOpsUpdate[didx] === undefined ? {} : curveOpsUpdate[didx];\n                    curveOpsUpdate[didx]['visible'] = update['visible'];\n                }\n                $('#' + label + \"-curve-show-hide-heatmap\")[0].value = \"show heat map\";\n\n            }\n        }\n    },\n    // add refresh button\n    'click #refresh-plot': function (event) {\n        event.preventDefault();\n        var plotType = Session.get('plotType');\n        var dataset = matsCurveUtils.getGraphResult().data;\n        var options = Session.get('options');\n        if (curveOpsUpdate.length === 0) {\n            // we just need a relayout\n            Plotly.relayout($(\"#placeholder\")[0], options);\n        } else {\n            // we need both a relayout and a restyle\n            curveOpsUpdate = [];\n            switch (plotType) {\n                case matsTypes.PlotTypes.contour:\n                case matsTypes.PlotTypes.contourDiff:\n                    // restyle for contour plots\n                    Plotly.restyle($(\"#placeholder\")[0], Session.get('colorbarResetOpts'), 0);\n                    break;\n                case matsTypes.PlotTypes.timeSeries:\n                case matsTypes.PlotTypes.profile:\n                case matsTypes.PlotTypes.dieoff:\n                case matsTypes.PlotTypes.threshold:\n                case matsTypes.PlotTypes.validtime:\n                case matsTypes.PlotTypes.dailyModelCycle:\n                case matsTypes.PlotTypes.reliability:\n                    // restyle for line plots\n                    const lineTypeResetOpts = Session.get('lineTypeResetOpts');\n                    for (var lidx = 0; lidx < lineTypeResetOpts.length; lidx++) {\n                        Plotly.restyle($(\"#placeholder\")[0], lineTypeResetOpts[lidx], lidx);\n                        $('#' + dataset[lidx].label + \"-curve-show-hide\")[0].value = \"hide curve\";\n                        $('#' + dataset[lidx].label + \"-curve-show-hide-points\")[0].value = \"hide points\";\n                        $('#' + dataset[lidx].label + \"-curve-show-hide-errorbars\")[0].value = \"hide error bars\";\n                    }\n                    break;\n                case matsTypes.PlotTypes.histogram:\n                    // restyle for bar plots\n                    const barTypeResetOpts = Session.get('barTypeResetOpts');\n                    for (var bidx = 0; bidx < barTypeResetOpts.length; bidx++) {\n                        Plotly.restyle($(\"#placeholder\")[0], barTypeResetOpts[bidx], bidx);\n                        $('#' + dataset[bidx].label + \"-curve-show-hide-bars\")[0].value = \"hide bars\";\n                    }\n                    break;\n                case matsTypes.PlotTypes.map:\n                    // restyle for maps\n                    const mapResetOpts = Session.get('mapResetOpts');\n                    for (var midx = 0; midx < mapResetOpts.length; midx++) {\n                        Plotly.restyle($(\"#placeholder\")[0], mapResetOpts[midx], midx);\n                    }\n                    $('#' + dataset[0].label + \"-curve-show-hide-heatmap\")[0].value = \"show heat map\";\n                    break;\n                case matsTypes.PlotTypes.scatter2d:\n                default:\n                    break;\n            }\n            Plotly.relayout($(\"#placeholder\")[0], options);\n        }\n    },\n    // add axis customization modal submit button\n    'click #axisSubmit': function (event) {\n        event.preventDefault();\n        var plotType = Session.get('plotType');\n        var changeYScaleBack = false;\n        var newOpts = {};\n        // get input axis limits and labels\n        $(\"input[id^=x][id$=AxisLabel]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.title'] = elem.value;\n            }\n        });\n        if (plotType === matsTypes.PlotTypes.timeSeries || plotType === matsTypes.PlotTypes.dailyModelCycle ||\n            ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && ($(\"#placeholder\")[0].layout.xaxis.title.text).indexOf(\"Date\") > -1)) {\n            $(\"input[id^=x][id$=AxisMinText]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n                }\n            });\n            $(\"input[id^=x][id$=AxisMaxText]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n                }\n            });\n        } else {\n            $(\"input[id^=x][id$=AxisMin]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n                }\n            });\n            $(\"input[id^=x][id$=AxisMax]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    newOpts['xaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n                }\n            });\n        }\n        $(\"input[id^=y][id$=AxisLabel]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.title'] = elem.value;\n            }\n        });\n        if ((plotType === matsTypes.PlotTypes.contour || plotType === matsTypes.PlotTypes.contourDiff) && ($(\"#placeholder\")[0].layout.xaxis.title.text).indexOf(\"Date\") > -1) {\n            $(\"input[id^=y][id$=AxisMinText]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n                }\n            });\n            $(\"input[id^=y][id$=AxisMaxText]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n                }\n            });\n        } else {\n            $(\"input[id^=y][id$=AxisMin]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    if (plotType === matsTypes.PlotTypes.profile) {\n                        newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n                        // plotly can't seem to set axis limits on a log axis, so this needs to be changed to linear\n                        if ($(\"#placeholder\")[0].layout['yaxis' + (index === 0 ? \"\" : index + 1)].type === 'log') {\n                            $(\"#axisYScale\").click();\n                            changeYScaleBack = true;\n                        }\n                    } else {\n                        newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n                    }\n                }\n            });\n            $(\"input[id^=y][id$=AxisMax]\").get().forEach(function (elem, index) {\n                if (elem.value !== undefined && elem.value !== \"\") {\n                    if (plotType === matsTypes.PlotTypes.profile) {\n                        newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[0]'] = elem.value;\n                        // plotly can't seem to set axis limits on a log axis, so this needs to be changed to linear\n                        if ($(\"#placeholder\")[0].layout['yaxis' + (index === 0 ? \"\" : index + 1)].type === 'log') {\n                            $(\"#axisYScale\").click();\n                            changeYScaleBack = true;\n                        }\n                    } else {\n                        newOpts['yaxis' + (index === 0 ? \"\" : index + 1) + '.range[1]'] = elem.value;\n                    }\n                }\n            });\n        }\n        Plotly.relayout($(\"#placeholder\")[0], newOpts);\n        // if needed, restore the log axis\n        if (changeYScaleBack) {\n            $(\"#axisYScale\").click();\n        }\n        $(\"#axisLimitModal\").modal('hide');\n    },\n    // add line style modal submit button\n    'click #lineTypeSubmit': function (event) {\n        event.preventDefault();\n        var plotType = Session.get('plotType');\n        var updates = [];\n        // get input line style change\n        $(\"[id$=LineStyle]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                updates[index] = updates[index] === undefined ? {} : updates[index];\n                updates[index]['line.dash'] = elem.value;\n            }\n        });\n        $(\"input[id$=LineWeight]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                updates[index] = updates[index] === undefined ? {} : updates[index];\n                updates[index]['line.width'] = elem.value;\n            }\n        });\n        $(\"[id$=LineMarker]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                updates[index] = updates[index] === undefined ? {} : updates[index];\n                updates[index]['marker.symbol'] = elem.value;\n            }\n        });\n        for (var uidx = 0; uidx < updates.length; uidx++) {\n            // apply new settings\n            Plotly.restyle($(\"#placeholder\")[0], updates[uidx], uidx);\n        }\n        $(\"#lineTypeModal\").modal('hide');\n        // save the updates in case we want to pass them to a pop-out window.\n        for (uidx = 0; uidx < updates.length; uidx++) {\n            curveOpsUpdate[uidx] = curveOpsUpdate[uidx] === undefined ? {} : curveOpsUpdate[uidx];\n            var updatedKeys = Object.keys(updates[uidx]);\n            for (var kidx = 0; kidx < updatedKeys.length; kidx++) {\n                var updatedKey = updatedKeys[kidx];\n                // json doesn't like . to be in keys, so replace it with a placeholder\n                var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n                curveOpsUpdate[uidx][jsonHappyKey] = updates[uidx][updatedKey];\n            }\n        }\n    },\n    // add colorbar customization modal submit button\n    'click #colorbarSubmit': function (event) {\n        event.preventDefault();\n        var dataset = matsCurveUtils.getGraphResult().data;\n        var update = {};\n        // get new formatting\n        $(\"input[id=colorbarLabel]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                update['colorbar.title'] = elem.value;\n                update['colorbar.titleside'] = 'right';\n                update['colorbar.titlefont'] = {size: 16, family: 'Arial, sans-serif'};\n            }\n        });\n        $(\"input[id=colorbarMin]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                update['autocontour'] = false;\n                update['contours.start'] = elem.value;\n            }\n        });\n        $(\"input[id=colorbarMax]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                update['autocontour'] = false;\n                update['contours.end'] = elem.value;\n            }\n        });\n        $(\"input[id=colorbarNumber]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                update['autocontour'] = false;\n                update['ncontours'] = elem.value;   // sadly plotly regards this as a \"less than or equal to\" value, so we have to manually set contour size\n                const isStartDefined = update['contours.start'] !== undefined;\n                const isEndDefined = update['contours.end'] !== undefined;\n                const startVal = isStartDefined ? update['contours.start'] : dataset[0].zmin+(dataset[0].zmax-dataset[0].zmin)/16;\n                const endVal = isEndDefined ? update['contours.end'] : dataset[0].zmax-(dataset[0].zmax-dataset[0].zmin)/16;\n                update['contours.size'] = (endVal - startVal) / (Number(update['ncontours']) - 1);\n            }\n        });\n        $(\"input[id=colorbarStep]\").get().forEach(function (elem, index) {\n            if (elem.value !== undefined && elem.value !== \"\") {\n                if (update['ncontours'] === undefined) {\n                    update['autocontour'] = false;\n                    update['contours.size'] = elem.value;\n                }\n            }\n        });\n        $(\"input[id=colorbarReverse]\").get().forEach(function (elem, index) {\n            if (elem && elem.checked) {\n                update['reversescale'] = true;\n            } else {\n                update['reversescale'] = false;\n            }\n        });\n        var elem = document.getElementById(\"colormapSelect\");\n        if (elem !== undefined && elem.value !== undefined) {\n            update['colorscale'] = elem.value;\n        }\n        // apply new settings\n        Plotly.restyle($(\"#placeholder\")[0], update, 0);\n        $(\"#colorbarModal\").modal('hide');\n        // save the updates in case we want to pass them to a pop-out window.\n        curveOpsUpdate[0] = curveOpsUpdate[0] === undefined ? {} : curveOpsUpdate[0];\n        const updatedKeys = Object.keys(update);\n        for (var uidx = 0; uidx < updatedKeys.length; uidx++) {\n            var updatedKey = updatedKeys[uidx];\n            // json doesn't like . to be in keys, so replace it with a placeholder\n            var jsonHappyKey = updatedKey.split(\".\").join(\"____\");\n            curveOpsUpdate[0][jsonHappyKey] = update[updatedKey];\n        }\n    }\n});\n\n"]},"sourceType":"script","hash":"484de9e6cb837c2c2f7e6d6003d5055c18a1399b"}
