{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/imports/startup/server/data_plot_ops_util.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/randyp:mats-common/imports/startup/server/data_plot_ops_util.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/imports/startup/server/data_plot_ops_util.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/imports/startup/server/data_plot_ops_util.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/randyp:mats-common/imports/startup/server/data_plot_ops_util.js"}},"code":"var matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 0);\nvar matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 1);\nvar moment;\nmodule.link(\"meteor/momentjs:moment\", {\n  moment: function (v) {\n    moment = v;\n  }\n}, 2);\n\n// sets plot options for timeseries graphs\nvar generateSeriesPlotOptions = function (dataset, curves, axisMap, errorMax) {\n  var xmin = axisMap[Object.keys(axisMap)[0]].xmin;\n  var xmax = axisMap[Object.keys(axisMap)[0]].xmax;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  layout['xaxis'] = {\n    title: 'Time',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 12\n    }\n  };\n  var axisAnchor = {\n    0: 'x',\n    1: 'x',\n    2: 'free',\n    3: 'free',\n    4: 'free',\n    5: 'free',\n    6: 'free',\n    7: 'free'\n  };\n  var axisSide = {\n    0: 'left',\n    1: 'right',\n    2: 'left',\n    3: 'right',\n    4: 'left',\n    5: 'right',\n    6: 'left',\n    7: 'right'\n  };\n  var axisPosition = {\n    0: 0,\n    1: 1,\n    2: 0.1,\n    3: 0.9,\n    4: 0.2,\n    5: 0.8,\n    6: 0.3,\n    7: 0.7\n  };\n  var yAxisNumber = Object.keys(axisMap).length;\n  var axisKey;\n  var axisIdx;\n  var axisLabel;\n\n  for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n    axisKey = Object.keys(axisMap)[axisIdx];\n    var ymin = axisMap[axisKey].ymin;\n    var ymax = axisMap[axisKey].ymax;\n    ymax = ymax + errorMax;\n    ymin = ymin - errorMax;\n    var yPad = (ymax - ymin) * 0.05 !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n    xmin = axisMap[axisKey].xmin < xmin ? axisMap[axisKey].xmin : xmin;\n    xmax = axisMap[axisKey].xmax > xmax ? axisMap[axisKey].xmax : xmax;\n    axisLabel = axisMap[axisKey].axisLabel;\n    var axisObjectKey;\n\n    if (axisIdx === 0) {\n      axisObjectKey = 'yaxis';\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        zeroline: false\n      };\n    } else if (axisIdx < Object.keys(axisPosition).length) {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[axisIdx],\n        overlaying: 'y',\n        side: axisSide[axisIdx],\n        position: axisPosition[axisIdx],\n        zeroline: false\n      };\n    } else {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n        overlaying: 'y',\n        side: axisSide[Object.keys(axisPosition).length - 1],\n        position: axisPosition[Object.keys(axisPosition).length - 1],\n        zeroline: false\n      };\n    }\n  }\n\n  var xPad = (xmax - xmin) * 0.075 !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n  xmax = moment.utc(xmax + xPad * Math.ceil(yAxisNumber / 2)).format(\"YYYY-MM-DD HH:mm\");\n  xmin = moment.utc(xmin - xPad * Math.ceil(yAxisNumber / 2)).format(\"YYYY-MM-DD HH:mm\");\n  layout['xaxis']['range'] = [xmin, xmax];\n  return layout;\n}; // sets plot options for profile graphs\n\n\nvar generateProfilePlotOptions = function (dataset, curves, axisMap, errorMax) {\n  var ymin = 10;\n  var ymax = 1075;\n  var xAxisNumber = Object.keys(axisMap).length;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: xAxisNumber > 1 ? 80 : 20,\n      pad: 4\n    },\n    zeroline: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  var tickVals;\n  var tickText;\n\n  if (matsCollections.Settings.findOne({}).appType === matsTypes.AppTypes.metexpress) {\n    tickVals = [1000, 850, 700, 600, 500, 400, 300, 250, 200, 150, 100, 50, 10];\n    tickText = ['1000', '850', '700', '600', '500', '400', '300', '250', '200', '150', '100', '50', '10'];\n  } else {\n    tickVals = [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100];\n    tickText = ['1000', '900', '800', '700', '600', '500', '400', '300', '200', '100'];\n  }\n\n  layout['yaxis'] = {\n    title: 'Pressure Level',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    },\n    tickvals: tickVals,\n    ticktext: tickText,\n    type: 'linear',\n    autorange: 'reversed'\n  };\n  var axisAnchor = {\n    0: 'x',\n    1: 'x',\n    2: 'free',\n    3: 'free',\n    4: 'free',\n    5: 'free',\n    6: 'free',\n    7: 'free'\n  };\n  var axisSide = {\n    0: 'bottom',\n    1: 'top',\n    2: 'bottom',\n    3: 'top',\n    4: 'bottom',\n    5: 'top',\n    6: 'bottom',\n    7: 'top'\n  };\n  var axisPosition = {\n    0: 0,\n    1: 1,\n    2: 0.15,\n    3: 0.85,\n    4: 0.3,\n    5: 0.7,\n    6: 0.45,\n    7: 0.55\n  };\n  var axisKey;\n  var axisIdx;\n  var axisLabel;\n\n  for (axisIdx = 0; axisIdx < xAxisNumber; axisIdx++) {\n    axisKey = Object.keys(axisMap)[axisIdx];\n    var xmin = axisMap[axisKey].xmin;\n    var xmax = axisMap[axisKey].xmax;\n    xmax = xmax + errorMax;\n    xmin = xmin - errorMax;\n    axisLabel = axisMap[axisKey].axisLabel;\n    var xPad = (xmax - xmin) * 0.05 !== 0 ? (xmax - xmin) * 0.05 : 0.05;\n    axisLabel = axisMap[axisKey].axisLabel;\n    var axisObjectKey;\n\n    if (axisIdx === 0) {\n      axisObjectKey = 'xaxis';\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [xmin - xPad, xmax + xPad],\n        zeroline: false\n      };\n    } else if (axisIdx < Object.keys(axisPosition).length) {\n      axisObjectKey = 'xaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [xmin - xPad, xmax + xPad],\n        anchor: axisAnchor[axisIdx],\n        overlaying: 'x',\n        side: axisSide[axisIdx],\n        position: axisPosition[axisIdx],\n        zeroline: false\n      };\n    } else {\n      axisObjectKey = 'xaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [xmin - xPad, xmax + xPad],\n        anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n        overlaying: 'x',\n        side: axisSide[Object.keys(axisPosition).length - 1],\n        position: axisPosition[Object.keys(axisPosition).length - 1],\n        zeroline: false\n      };\n    }\n  }\n\n  var yPad = (ymax - ymin) * 0.25 !== 0 ? (ymax - ymin) * 0.25 : 0.25;\n  ymax = ymax + yPad * Math.ceil(xAxisNumber / 2);\n  ymin = ymin - yPad * Math.ceil(xAxisNumber / 2);\n  layout['yaxis']['range'] = [ymin, ymax];\n  return layout;\n}; // sets plot options for dieoff graphs\n\n\nvar generateDieoffPlotOptions = function (dataset, curves, axisMap, errorMax) {\n  var xmin = axisMap[Object.keys(axisMap)[0]].xmin;\n  var xmax = axisMap[Object.keys(axisMap)[0]].xmax;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  layout['xaxis'] = {\n    title: 'Forecast Hour',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    }\n  };\n  var axisAnchor = {\n    0: 'x',\n    1: 'x',\n    2: 'free',\n    3: 'free',\n    4: 'free',\n    5: 'free',\n    6: 'free',\n    7: 'free'\n  };\n  var axisSide = {\n    0: 'left',\n    1: 'right',\n    2: 'left',\n    3: 'right',\n    4: 'left',\n    5: 'right',\n    6: 'left',\n    7: 'right'\n  };\n  var axisPosition = {\n    0: 0,\n    1: 1,\n    2: 0.1,\n    3: 0.9,\n    4: 0.2,\n    5: 0.8,\n    6: 0.3,\n    7: 0.7\n  };\n  var yAxisNumber = Object.keys(axisMap).length;\n  var axisKey;\n  var axisIdx;\n  var axisLabel;\n\n  for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n    axisKey = Object.keys(axisMap)[axisIdx];\n    var ymin = axisMap[axisKey].ymin;\n    var ymax = axisMap[axisKey].ymax;\n    ymax = ymax + errorMax;\n    ymin = ymin - errorMax;\n    var yPad = (ymax - ymin) * 0.05 !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n    xmin = axisMap[axisKey].xmin < xmin ? axisMap[axisKey].xmin : xmin;\n    xmax = axisMap[axisKey].xmax > xmax ? axisMap[axisKey].xmax : xmax;\n    axisLabel = axisMap[axisKey].axisLabel;\n    var axisObjectKey;\n\n    if (axisIdx === 0) {\n      axisObjectKey = 'yaxis';\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        zeroline: false\n      };\n    } else if (axisIdx < Object.keys(axisPosition).length) {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[axisIdx],\n        overlaying: 'y',\n        side: axisSide[axisIdx],\n        position: axisPosition[axisIdx],\n        zeroline: false\n      };\n    } else {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n        overlaying: 'y',\n        side: axisSide[Object.keys(axisPosition).length - 1],\n        position: axisPosition[Object.keys(axisPosition).length - 1],\n        zeroline: false\n      };\n    }\n  }\n\n  var xPad = (xmax - xmin) * 0.075 !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n  xmax = xmax + xPad * Math.ceil(yAxisNumber / 2);\n  xmin = xmin - xPad * Math.ceil(yAxisNumber / 2);\n  layout['xaxis']['range'] = [xmin, xmax];\n  return layout;\n}; // sets plot options for threshold graphs\n\n\nvar generateThresholdPlotOptions = function (dataset, curves, axisMap, errorMax) {\n  var xmin = 0;\n  var xmax = 3;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  layout['xaxis'] = {\n    title: 'Threshold',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    },\n    tickvals: [0.01, 0.1, 0.25, 0.5, 1.0, 1.5, 2.0, 3.0],\n    ticktext: [\"0.01\", \"0.10\", \"0.25\", \"0.50\", \"1.00\", \"1.50\", \"2.00\", \"3.00\"]\n  };\n  var axisAnchor = {\n    0: 'x',\n    1: 'x',\n    2: 'free',\n    3: 'free',\n    4: 'free',\n    5: 'free',\n    6: 'free',\n    7: 'free'\n  };\n  var axisSide = {\n    0: 'left',\n    1: 'right',\n    2: 'left',\n    3: 'right',\n    4: 'left',\n    5: 'right',\n    6: 'left',\n    7: 'right'\n  };\n  var axisPosition = {\n    0: 0,\n    1: 1,\n    2: 0.1,\n    3: 0.9,\n    4: 0.2,\n    5: 0.8,\n    6: 0.3,\n    7: 0.7\n  };\n  var yAxisNumber = Object.keys(axisMap).length;\n  var axisKey;\n  var axisIdx;\n  var axisLabel;\n\n  for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n    axisKey = Object.keys(axisMap)[axisIdx];\n    var ymin = axisMap[axisKey].ymin;\n    var ymax = axisMap[axisKey].ymax;\n    ymax = ymax + errorMax;\n    ymin = ymin - errorMax;\n    var yPad = (ymax - ymin) * 0.05 !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n    axisLabel = axisMap[axisKey].axisLabel;\n    var axisObjectKey;\n\n    if (axisIdx === 0) {\n      axisObjectKey = 'yaxis';\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        zeroline: false\n      };\n    } else if (axisIdx < Object.keys(axisPosition).length) {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[axisIdx],\n        overlaying: 'y',\n        side: axisSide[axisIdx],\n        position: axisPosition[axisIdx],\n        zeroline: false\n      };\n    } else {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n        overlaying: 'y',\n        side: axisSide[Object.keys(axisPosition).length - 1],\n        position: axisPosition[Object.keys(axisPosition).length - 1],\n        zeroline: false\n      };\n    }\n  }\n\n  var xPad = (xmax - xmin) * 0.075 !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n  xmax = xmax + xPad * Math.ceil(yAxisNumber / 2);\n  xmin = xmin - xPad * Math.ceil(yAxisNumber / 2);\n  layout['xaxis']['range'] = [xmin, xmax];\n  return layout;\n}; // sets plot options for valid time graphs\n\n\nvar generateValidTimePlotOptions = function (dataset, curves, axisMap, errorMax) {\n  var xmin = 0;\n  var xmax = 23;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  layout['xaxis'] = {\n    title: 'Hour of Day',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    },\n    tickvals: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\n    ticktext: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"]\n  };\n  var axisAnchor = {\n    0: 'x',\n    1: 'x',\n    2: 'free',\n    3: 'free',\n    4: 'free',\n    5: 'free',\n    6: 'free',\n    7: 'free'\n  };\n  var axisSide = {\n    0: 'left',\n    1: 'right',\n    2: 'left',\n    3: 'right',\n    4: 'left',\n    5: 'right',\n    6: 'left',\n    7: 'right'\n  };\n  var axisPosition = {\n    0: 0,\n    1: 1,\n    2: 0.1,\n    3: 0.9,\n    4: 0.2,\n    5: 0.8,\n    6: 0.3,\n    7: 0.7\n  };\n  var yAxisNumber = Object.keys(axisMap).length;\n  var axisKey;\n  var axisIdx;\n  var axisLabel;\n\n  for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n    axisKey = Object.keys(axisMap)[axisIdx];\n    var ymin = axisMap[axisKey].ymin;\n    var ymax = axisMap[axisKey].ymax;\n    ymax = ymax + errorMax;\n    ymin = ymin - errorMax;\n    var yPad = (ymax - ymin) * 0.05 !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n    axisLabel = axisMap[axisKey].axisLabel;\n    var axisObjectKey;\n\n    if (axisIdx === 0) {\n      axisObjectKey = 'yaxis';\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        zeroline: false\n      };\n    } else if (axisIdx < Object.keys(axisPosition).length) {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[axisIdx],\n        overlaying: 'y',\n        side: axisSide[axisIdx],\n        position: axisPosition[axisIdx],\n        zeroline: false\n      };\n    } else {\n      axisObjectKey = 'yaxis' + (axisIdx + 1);\n      layout[axisObjectKey] = {\n        title: axisLabel,\n        titlefont: {\n          color: '#000000',\n          size: 22\n        },\n        tickfont: {\n          color: '#000000',\n          size: 14\n        },\n        range: [ymin - yPad, ymax + yPad],\n        anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n        overlaying: 'y',\n        side: axisSide[Object.keys(axisPosition).length - 1],\n        position: axisPosition[Object.keys(axisPosition).length - 1],\n        zeroline: false\n      };\n    }\n  }\n\n  var xPad = (xmax - xmin) * 0.075 !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n  xmax = xmax + xPad * Math.ceil(yAxisNumber / 2);\n  xmin = xmin - xPad * Math.ceil(yAxisNumber / 2);\n  layout['xaxis']['range'] = [xmin, xmax];\n  return layout;\n}; // sets plot options for reliability graphs\n\n\nvar generateReliabilityPlotOptions = function (dataset) {\n  var xmin = 0;\n  var xmax = 1;\n  var ymin = 0;\n  var ymax = 1;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: true,\n    perfectLine: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  layout['xaxis'] = {\n    title: 'Forecast Probability',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    },\n    tickvals: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n    ticktext: [\"0.0\", \"0.1\", \"0.2\", \"0.3\", \"0.4\", \"0.5\", \"0.6\", \"0.7\", \"0.8\", \"0.9\", \"1.0\"],\n    range: [xmin, xmax]\n  };\n  layout['yaxis'] = {\n    title: 'Observed Relative Frequency',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    },\n    tickvals: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n    ticktext: [\"0.0\", \"0.1\", \"0.2\", \"0.3\", \"0.4\", \"0.5\", \"0.6\", \"0.7\", \"0.8\", \"0.9\", \"1.0\"],\n    range: [ymin, ymax]\n  };\n  return layout;\n}; // sets plot options for map graphs\n\n\nvar generateMapPlotOptions = function () {\n  var options = {\n    autosize: true,\n    hovermode: 'closest',\n    mapbox: {\n      bearing: 0,\n      center: {\n        lat: 39.834,\n        lon: -98.604\n      },\n      pitch: 0,\n      zoom: 3.25,\n      accesstoken: 'pk.eyJ1IjoibWF0cy1nc2QiLCJhIjoiY2pvN2l1N2MyMG9xdTN3bWR3ODV5a2E2ZiJ9.PtgcGhxaoD43N0OwJSNVMg',\n      style: 'light'\n    },\n    margin: {\n      l: 30,\n      r: 30,\n      b: 40,\n      t: 10,\n      pad: 4\n    },\n    showlegend: false\n  };\n  return options;\n}; // sets plot options for valid time graphs\n\n\nvar generateHistogramPlotOptions = function (dataset, curves, axisMap, plotBins) {\n  var axisKey = curves[0].axisKey;\n  var axisLabel = axisMap[axisKey].axisLabel;\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: false,\n    bargap: 0.25,\n    barmode: 'group',\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    },\n    showlegend: false\n  };\n  layout['xaxis'] = {\n    title: 'Bin',\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 12\n    },\n    tickvals: plotBins.binMeans,\n    ticktext: plotBins.binLabels\n  };\n  layout['yaxis'] = {\n    title: axisLabel,\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 14\n    }\n  };\n  return layout;\n}; // sets plot options for valid time graphs\n\n\nvar generateContourPlotOptions = function (dataset, axisMap) {\n  var xAxisKey = dataset[0]['xAxisKey'];\n  var yAxisKey = dataset[0]['yAxisKey'];\n  var layout = {\n    margin: {\n      l: 80,\n      r: 80,\n      b: 80,\n      t: 20,\n      pad: 4\n    },\n    zeroline: false,\n    hovermode: 'closest',\n    hoverlabel: {\n      'font': {\n        'size': 14,\n        'family': 'Arial',\n        'color': '#FFFFFF'\n      }\n    }\n  };\n  layout['xaxis'] = {\n    title: xAxisKey,\n    titlefont: {\n      color: '#000000',\n      size: 22\n    },\n    tickfont: {\n      color: '#000000',\n      size: 12\n    }\n  };\n\n  if (yAxisKey === \"Pressure level\") {\n    layout['yaxis'] = {\n      title: yAxisKey,\n      titlefont: {\n        color: '#000000',\n        size: 22\n      },\n      tickfont: {\n        color: '#000000',\n        size: 14\n      },\n      tickvals: [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100],\n      ticktext: ['1000', '900', '800', '700', '600', '500', '400', '300', '200', '100'],\n      range: [1100, 0],\n      type: 'linear',\n      autorange: 'reversed'\n    };\n  } else {\n    layout['yaxis'] = {\n      title: yAxisKey,\n      titlefont: {\n        color: '#000000',\n        size: 22\n      },\n      tickfont: {\n        color: '#000000',\n        size: 14\n      }\n    };\n  }\n\n  return layout;\n};\n\nmodule.exportDefault(matsDataPlotOpsUtils = {\n  generateSeriesPlotOptions: generateSeriesPlotOptions,\n  generateProfilePlotOptions: generateProfilePlotOptions,\n  generateDieoffPlotOptions: generateDieoffPlotOptions,\n  generateThresholdPlotOptions: generateThresholdPlotOptions,\n  generateValidTimePlotOptions: generateValidTimePlotOptions,\n  generateReliabilityPlotOptions: generateReliabilityPlotOptions,\n  generateMapPlotOptions: generateMapPlotOptions,\n  generateHistogramPlotOptions: generateHistogramPlotOptions,\n  generateContourPlotOptions: generateContourPlotOptions\n});","map":{"version":3,"sources":["packages/randyp:mats-common/imports/startup/server/data_plot_ops_util.js"],"names":["matsCollections","module","link","v","matsTypes","moment","generateSeriesPlotOptions","dataset","curves","axisMap","errorMax","xmin","Object","keys","xmax","layout","margin","l","r","b","t","pad","zeroline","hovermode","hoverlabel","showlegend","title","titlefont","color","size","tickfont","axisAnchor","axisSide","axisPosition","yAxisNumber","length","axisKey","axisIdx","axisLabel","ymin","ymax","yPad","axisObjectKey","range","anchor","overlaying","side","position","xPad","utc","Math","ceil","format","generateProfilePlotOptions","xAxisNumber","tickVals","tickText","Settings","findOne","appType","AppTypes","metexpress","tickvals","ticktext","type","autorange","generateDieoffPlotOptions","generateThresholdPlotOptions","generateValidTimePlotOptions","generateReliabilityPlotOptions","perfectLine","generateMapPlotOptions","options","autosize","mapbox","bearing","center","lat","lon","pitch","zoom","accesstoken","style","generateHistogramPlotOptions","plotBins","bargap","barmode","binMeans","binLabels","generateContourPlotOptions","xAxisKey","yAxisKey","exportDefault","matsDataPlotOpsUtils"],"mappings":"AAAA,IAAIA,eAAJ;AAAoBC,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACF,EAAAA,eAAD,YAAiBG,CAAjB,EAAmB;AAACH,IAAAA,eAAe,GAACG,CAAhB;AAAkB;AAAtC,CAAxC,EAAgF,CAAhF;AAAmF,IAAIC,SAAJ;AAAcH,MAAM,CAACC,IAAP,CAAY,2BAAZ,EAAwC;AAACE,EAAAA,SAAD,YAAWD,CAAX,EAAa;AAACC,IAAAA,SAAS,GAACD,CAAV;AAAY;AAA1B,CAAxC,EAAoE,CAApE;AAAuE,IAAIE,MAAJ;AAAWJ,MAAM,CAACC,IAAP,CAAY,wBAAZ,EAAqC;AAACG,EAAAA,MAAD,YAAQF,CAAR,EAAU;AAACE,IAAAA,MAAM,GAACF,CAAP;AAAS;AAApB,CAArC,EAA2D,CAA3D;;AAQvM;AACA,IAAMG,yBAAyB,GAAG,UAAUC,OAAV,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8C;AAC5E,MAAIC,IAAI,GAAGF,OAAO,CAACG,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB,CAArB,CAAD,CAAP,CAAiCE,IAA5C;AACA,MAAIG,IAAI,GAAGL,OAAO,CAACG,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB,CAArB,CAAD,CAAP,CAAiCK,IAA5C;AAEA,MAAIC,MAAM,GAAG;AACTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,CAAC,EAAE,EADC;AAEJC,MAAAA,CAAC,EAAE,EAFC;AAGJC,MAAAA,CAAC,EAAE,EAHC;AAIJC,MAAAA,CAAC,EAAE,EAJC;AAKJC,MAAAA,GAAG,EAAE;AALD,KADC;AAQTC,IAAAA,QAAQ,EAAE,KARD;AASTC,IAAAA,SAAS,EAAE,SATF;AAUTC,IAAAA,UAAU,EAAE;AAAC,cAAQ;AAAC,gBAAQ,EAAT;AAAa,kBAAU,OAAvB;AAAgC,iBAAS;AAAzC;AAAT,KAVH;AAWTC,IAAAA,UAAU,EAAE;AAXH,GAAb;AAcAV,EAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB;AACdW,IAAAA,KAAK,EAAE,MADO;AAEdC,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAFG;AAGdC,IAAAA,QAAQ,EAAE;AAACF,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB;AAHI,GAAlB;AAMA,MAAME,UAAU,GAAG;AAAC,OAAG,GAAJ;AAAS,OAAG,GAAZ;AAAiB,OAAG,MAApB;AAA4B,OAAG,MAA/B;AAAuC,OAAG,MAA1C;AAAkD,OAAG,MAArD;AAA6D,OAAG,MAAhE;AAAwE,OAAG;AAA3E,GAAnB;AACA,MAAMC,QAAQ,GAAG;AAAC,OAAG,MAAJ;AAAY,OAAG,OAAf;AAAwB,OAAG,MAA3B;AAAmC,OAAG,OAAtC;AAA+C,OAAG,MAAlD;AAA0D,OAAG,OAA7D;AAAsE,OAAG,MAAzE;AAAiF,OAAG;AAApF,GAAjB;AACA,MAAMC,YAAY,GAAG;AAAC,OAAG,CAAJ;AAAO,OAAG,CAAV;AAAa,OAAG,GAAhB;AAAqB,OAAG,GAAxB;AAA6B,OAAG,GAAhC;AAAqC,OAAG,GAAxC;AAA6C,OAAG,GAAhD;AAAqD,OAAG;AAAxD,GAArB;AAEA,MAAMC,WAAW,GAAGtB,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB0B,MAAzC;AACA,MAAIC,OAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,SAAJ;;AACA,OAAKD,OAAO,GAAG,CAAf,EAAkBA,OAAO,GAAGH,WAA5B,EAAyCG,OAAO,EAAhD,EAAoD;AAChDD,IAAAA,OAAO,GAAGxB,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB4B,OAArB,CAAV;AACA,QAAIE,IAAI,GAAG9B,OAAO,CAAC2B,OAAD,CAAP,CAAiBG,IAA5B;AACA,QAAIC,IAAI,GAAG/B,OAAO,CAAC2B,OAAD,CAAP,CAAiBI,IAA5B;AACAA,IAAAA,IAAI,GAAGA,IAAI,GAAG9B,QAAd;AACA6B,IAAAA,IAAI,GAAGA,IAAI,GAAG7B,QAAd;AACA,QAAM+B,IAAI,GAAI,CAACD,IAAI,GAAGD,IAAR,IAAgB,IAAjB,KAA2B,CAA3B,GAA+B,CAACC,IAAI,GAAGD,IAAR,IAAgB,IAA/C,GAAsD,IAAnE;AACA5B,IAAAA,IAAI,GAAGF,OAAO,CAAC2B,OAAD,CAAP,CAAiBzB,IAAjB,GAAwBA,IAAxB,GAA+BF,OAAO,CAAC2B,OAAD,CAAP,CAAiBzB,IAAhD,GAAuDA,IAA9D;AACAG,IAAAA,IAAI,GAAGL,OAAO,CAAC2B,OAAD,CAAP,CAAiBtB,IAAjB,GAAwBA,IAAxB,GAA+BL,OAAO,CAAC2B,OAAD,CAAP,CAAiBtB,IAAhD,GAAuDA,IAA9D;AACAwB,IAAAA,SAAS,GAAG7B,OAAO,CAAC2B,OAAD,CAAP,CAAiBE,SAA7B;AACA,QAAII,aAAJ;;AACA,QAAIL,OAAO,KAAK,CAAhB,EAAmB;AACfK,MAAAA,aAAa,GAAG,OAAhB;AACA3B,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAACJ,IAAI,GAAGE,IAAR,EAAcD,IAAI,GAAGC,IAArB,CAJa;AAKpBnB,QAAAA,QAAQ,EAAE;AALU,OAAxB;AAOH,KATD,MASO,IAAIe,OAAO,GAAGzB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAAxC,EAAgD;AACnDO,MAAAA,aAAa,GAAG,WAAWL,OAAO,GAAG,CAArB,CAAhB;AACAtB,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAACJ,IAAI,GAAGE,IAAR,EAAcD,IAAI,GAAGC,IAArB,CAJa;AAKpBG,QAAAA,MAAM,EAAEb,UAAU,CAACM,OAAD,CALE;AAMpBQ,QAAAA,UAAU,EAAE,GANQ;AAOpBC,QAAAA,IAAI,EAAEd,QAAQ,CAACK,OAAD,CAPM;AAQpBU,QAAAA,QAAQ,EAAEd,YAAY,CAACI,OAAD,CARF;AASpBf,QAAAA,QAAQ,EAAE;AATU,OAAxB;AAWH,KAbM,MAaA;AACHoB,MAAAA,aAAa,GAAG,WAAWL,OAAO,GAAG,CAArB,CAAhB;AACAtB,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAACJ,IAAI,GAAGE,IAAR,EAAcD,IAAI,GAAGC,IAArB,CAJa;AAKpBG,QAAAA,MAAM,EAAEb,UAAU,CAACnB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CALE;AAMpBU,QAAAA,UAAU,EAAE,GANQ;AAOpBC,QAAAA,IAAI,EAAEd,QAAQ,CAACpB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CAPM;AAQpBY,QAAAA,QAAQ,EAAEd,YAAY,CAACrB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CARF;AASpBb,QAAAA,QAAQ,EAAE;AATU,OAAxB;AAWH;AACJ;;AACD,MAAM0B,IAAI,GAAI,CAAClC,IAAI,GAAGH,IAAR,IAAgB,KAAjB,KAA4B,CAA5B,GAAgC,CAACG,IAAI,GAAGH,IAAR,IAAgB,KAAhD,GAAwD,KAArE;AACAG,EAAAA,IAAI,GAAGT,MAAM,CAAC4C,GAAP,CAAWnC,IAAI,GAAGkC,IAAI,GAAGE,IAAI,CAACC,IAAL,CAAUjB,WAAW,GAAG,CAAxB,CAAzB,EAAqDkB,MAArD,CAA4D,kBAA5D,CAAP;AACAzC,EAAAA,IAAI,GAAGN,MAAM,CAAC4C,GAAP,CAAWtC,IAAI,GAAGqC,IAAI,GAAGE,IAAI,CAACC,IAAL,CAAUjB,WAAW,GAAG,CAAxB,CAAzB,EAAqDkB,MAArD,CAA4D,kBAA5D,CAAP;AACArC,EAAAA,MAAM,CAAC,OAAD,CAAN,CAAgB,OAAhB,IAA2B,CAACJ,IAAD,EAAOG,IAAP,CAA3B;AACA,SAAOC,MAAP;AACH,CArFD,C,CAuFA;;;AACA,IAAMsC,0BAA0B,GAAG,UAAU9C,OAAV,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8C;AAC7E,MAAI6B,IAAI,GAAG,EAAX;AACA,MAAIC,IAAI,GAAG,IAAX;AACA,MAAMc,WAAW,GAAG1C,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB0B,MAAzC;AAEA,MAAIpB,MAAM,GAAG;AACTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,CAAC,EAAE,EADC;AAEJC,MAAAA,CAAC,EAAE,EAFC;AAGJC,MAAAA,CAAC,EAAE,EAHC;AAIJC,MAAAA,CAAC,EAAEkC,WAAW,GAAG,CAAd,GAAkB,EAAlB,GAAuB,EAJtB;AAKJjC,MAAAA,GAAG,EAAE;AALD,KADC;AAQTC,IAAAA,QAAQ,EAAE,KARD;AASTC,IAAAA,SAAS,EAAE,SATF;AAUTC,IAAAA,UAAU,EAAE;AAAC,cAAQ;AAAC,gBAAQ,EAAT;AAAa,kBAAU,OAAvB;AAAgC,iBAAS;AAAzC;AAAT,KAVH;AAWTC,IAAAA,UAAU,EAAE;AAXH,GAAb;AAaA,MAAI8B,QAAJ;AACA,MAAIC,QAAJ;;AACA,MAAIxD,eAAe,CAACyD,QAAhB,CAAyBC,OAAzB,CAAiC,EAAjC,EAAqCC,OAArC,KAAiDvD,SAAS,CAACwD,QAAV,CAAmBC,UAAxE,EAAoF;AAChFN,IAAAA,QAAQ,GAAG,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,EAAzD,EAA6D,EAA7D,CAAX;AACAC,IAAAA,QAAQ,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,KAArC,EAA4C,KAA5C,EAAmD,KAAnD,EAA0D,KAA1D,EAAiE,KAAjE,EAAwE,KAAxE,EAA+E,IAA/E,EAAqF,IAArF,CAAX;AACH,GAHD,MAGO;AACHD,IAAAA,QAAQ,GAAG,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,CAAX;AACAC,IAAAA,QAAQ,GAAG,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,KAArC,EAA4C,KAA5C,EAAmD,KAAnD,EAA0D,KAA1D,EAAiE,KAAjE,CAAX;AACH;;AACDzC,EAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB;AACdW,IAAAA,KAAK,EAAE,gBADO;AAEdC,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAFG;AAGdC,IAAAA,QAAQ,EAAE;AAACF,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAHI;AAIdiC,IAAAA,QAAQ,EAAEP,QAJI;AAKdQ,IAAAA,QAAQ,EAAEP,QALI;AAMdQ,IAAAA,IAAI,EAAE,QANQ;AAOdC,IAAAA,SAAS,EAAE;AAPG,GAAlB;AAUA,MAAMlC,UAAU,GAAG;AAAC,OAAG,GAAJ;AAAS,OAAG,GAAZ;AAAiB,OAAG,MAApB;AAA4B,OAAG,MAA/B;AAAuC,OAAG,MAA1C;AAAkD,OAAG,MAArD;AAA6D,OAAG,MAAhE;AAAwE,OAAG;AAA3E,GAAnB;AACA,MAAMC,QAAQ,GAAG;AAAC,OAAG,QAAJ;AAAc,OAAG,KAAjB;AAAwB,OAAG,QAA3B;AAAqC,OAAG,KAAxC;AAA+C,OAAG,QAAlD;AAA4D,OAAG,KAA/D;AAAsE,OAAG,QAAzE;AAAmF,OAAG;AAAtF,GAAjB;AACA,MAAMC,YAAY,GAAG;AAAC,OAAG,CAAJ;AAAO,OAAG,CAAV;AAAa,OAAG,IAAhB;AAAsB,OAAG,IAAzB;AAA+B,OAAG,GAAlC;AAAuC,OAAG,GAA1C;AAA+C,OAAG,IAAlD;AAAwD,OAAG;AAA3D,GAArB;AAEA,MAAIG,OAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,SAAJ;;AACA,OAAKD,OAAO,GAAG,CAAf,EAAkBA,OAAO,GAAGiB,WAA5B,EAAyCjB,OAAO,EAAhD,EAAoD;AAChDD,IAAAA,OAAO,GAAGxB,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB4B,OAArB,CAAV;AACA,QAAI1B,IAAI,GAAGF,OAAO,CAAC2B,OAAD,CAAP,CAAiBzB,IAA5B;AACA,QAAIG,IAAI,GAAGL,OAAO,CAAC2B,OAAD,CAAP,CAAiBtB,IAA5B;AACAA,IAAAA,IAAI,GAAGA,IAAI,GAAGJ,QAAd;AACAC,IAAAA,IAAI,GAAGA,IAAI,GAAGD,QAAd;AACA4B,IAAAA,SAAS,GAAG7B,OAAO,CAAC2B,OAAD,CAAP,CAAiBE,SAA7B;AACA,QAAMU,IAAI,GAAI,CAAClC,IAAI,GAAGH,IAAR,IAAgB,IAAjB,KAA2B,CAA3B,GAA+B,CAACG,IAAI,GAAGH,IAAR,IAAgB,IAA/C,GAAsD,IAAnE;AACA2B,IAAAA,SAAS,GAAG7B,OAAO,CAAC2B,OAAD,CAAP,CAAiBE,SAA7B;AACA,QAAII,aAAJ;;AACA,QAAIL,OAAO,KAAK,CAAhB,EAAmB;AACfK,MAAAA,aAAa,GAAG,OAAhB;AACA3B,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAAChC,IAAI,GAAGqC,IAAR,EAAclC,IAAI,GAAGkC,IAArB,CAJa;AAKpB1B,QAAAA,QAAQ,EAAE;AALU,OAAxB;AAOH,KATD,MASO,IAAIe,OAAO,GAAGzB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAAxC,EAAgD;AACnDO,MAAAA,aAAa,GAAG,WAAWL,OAAO,GAAG,CAArB,CAAhB;AACAtB,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAAChC,IAAI,GAAGqC,IAAR,EAAclC,IAAI,GAAGkC,IAArB,CAJa;AAKpBJ,QAAAA,MAAM,EAAEb,UAAU,CAACM,OAAD,CALE;AAMpBQ,QAAAA,UAAU,EAAE,GANQ;AAOpBC,QAAAA,IAAI,EAAEd,QAAQ,CAACK,OAAD,CAPM;AAQpBU,QAAAA,QAAQ,EAAEd,YAAY,CAACI,OAAD,CARF;AASpBf,QAAAA,QAAQ,EAAE;AATU,OAAxB;AAWH,KAbM,MAaA;AACHoB,MAAAA,aAAa,GAAG,WAAWL,OAAO,GAAG,CAArB,CAAhB;AACAtB,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAAChC,IAAI,GAAGqC,IAAR,EAAclC,IAAI,GAAGkC,IAArB,CAJa;AAKpBJ,QAAAA,MAAM,EAAEb,UAAU,CAACnB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CALE;AAMpBU,QAAAA,UAAU,EAAE,GANQ;AAOpBC,QAAAA,IAAI,EAAEd,QAAQ,CAACpB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CAPM;AAQpBY,QAAAA,QAAQ,EAAEd,YAAY,CAACrB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CARF;AASpBb,QAAAA,QAAQ,EAAE;AATU,OAAxB;AAWH;AACJ;;AACD,MAAMmB,IAAI,GAAI,CAACD,IAAI,GAAGD,IAAR,IAAgB,IAAjB,KAA2B,CAA3B,GAA+B,CAACC,IAAI,GAAGD,IAAR,IAAgB,IAA/C,GAAsD,IAAnE;AACAC,EAAAA,IAAI,GAAGA,IAAI,GAAIC,IAAI,GAAGS,IAAI,CAACC,IAAL,CAAUG,WAAW,GAAG,CAAxB,CAAtB;AACAf,EAAAA,IAAI,GAAGA,IAAI,GAAIE,IAAI,GAAGS,IAAI,CAACC,IAAL,CAAUG,WAAW,GAAG,CAAxB,CAAtB;AACAvC,EAAAA,MAAM,CAAC,OAAD,CAAN,CAAgB,OAAhB,IAA2B,CAACwB,IAAD,EAAOC,IAAP,CAA3B;AACA,SAAOzB,MAAP;AACH,CAhGD,C,CAkGA;;;AACA,IAAMmD,yBAAyB,GAAG,UAAU3D,OAAV,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8C;AAC5E,MAAIC,IAAI,GAAGF,OAAO,CAACG,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB,CAArB,CAAD,CAAP,CAAiCE,IAA5C;AACA,MAAIG,IAAI,GAAGL,OAAO,CAACG,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB,CAArB,CAAD,CAAP,CAAiCK,IAA5C;AAEA,MAAIC,MAAM,GAAG;AACTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,CAAC,EAAE,EADC;AAEJC,MAAAA,CAAC,EAAE,EAFC;AAGJC,MAAAA,CAAC,EAAE,EAHC;AAIJC,MAAAA,CAAC,EAAE,EAJC;AAKJC,MAAAA,GAAG,EAAE;AALD,KADC;AAQTC,IAAAA,QAAQ,EAAE,KARD;AASTC,IAAAA,SAAS,EAAE,SATF;AAUTC,IAAAA,UAAU,EAAE;AAAC,cAAQ;AAAC,gBAAQ,EAAT;AAAa,kBAAU,OAAvB;AAAgC,iBAAS;AAAzC;AAAT,KAVH;AAWTC,IAAAA,UAAU,EAAE;AAXH,GAAb;AAcAV,EAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB;AACdW,IAAAA,KAAK,EAAE,eADO;AAEdC,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAFG;AAGdC,IAAAA,QAAQ,EAAE;AAACF,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB;AAHI,GAAlB;AAMA,MAAME,UAAU,GAAG;AAAC,OAAG,GAAJ;AAAS,OAAG,GAAZ;AAAiB,OAAG,MAApB;AAA4B,OAAG,MAA/B;AAAuC,OAAG,MAA1C;AAAkD,OAAG,MAArD;AAA6D,OAAG,MAAhE;AAAwE,OAAG;AAA3E,GAAnB;AACA,MAAMC,QAAQ,GAAG;AAAC,OAAG,MAAJ;AAAY,OAAG,OAAf;AAAwB,OAAG,MAA3B;AAAmC,OAAG,OAAtC;AAA+C,OAAG,MAAlD;AAA0D,OAAG,OAA7D;AAAsE,OAAG,MAAzE;AAAiF,OAAG;AAApF,GAAjB;AACA,MAAMC,YAAY,GAAG;AAAC,OAAG,CAAJ;AAAO,OAAG,CAAV;AAAa,OAAG,GAAhB;AAAqB,OAAG,GAAxB;AAA6B,OAAG,GAAhC;AAAqC,OAAG,GAAxC;AAA6C,OAAG,GAAhD;AAAqD,OAAG;AAAxD,GAArB;AAEA,MAAMC,WAAW,GAAGtB,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB0B,MAAzC;AACA,MAAIC,OAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,SAAJ;;AACA,OAAKD,OAAO,GAAG,CAAf,EAAkBA,OAAO,GAAGH,WAA5B,EAAyCG,OAAO,EAAhD,EAAoD;AAChDD,IAAAA,OAAO,GAAGxB,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB4B,OAArB,CAAV;AACA,QAAIE,IAAI,GAAG9B,OAAO,CAAC2B,OAAD,CAAP,CAAiBG,IAA5B;AACA,QAAIC,IAAI,GAAG/B,OAAO,CAAC2B,OAAD,CAAP,CAAiBI,IAA5B;AACAA,IAAAA,IAAI,GAAGA,IAAI,GAAG9B,QAAd;AACA6B,IAAAA,IAAI,GAAGA,IAAI,GAAG7B,QAAd;AACA,QAAM+B,IAAI,GAAI,CAACD,IAAI,GAAGD,IAAR,IAAgB,IAAjB,KAA2B,CAA3B,GAA+B,CAACC,IAAI,GAAGD,IAAR,IAAgB,IAA/C,GAAsD,IAAnE;AACA5B,IAAAA,IAAI,GAAGF,OAAO,CAAC2B,OAAD,CAAP,CAAiBzB,IAAjB,GAAwBA,IAAxB,GAA+BF,OAAO,CAAC2B,OAAD,CAAP,CAAiBzB,IAAhD,GAAuDA,IAA9D;AACAG,IAAAA,IAAI,GAAGL,OAAO,CAAC2B,OAAD,CAAP,CAAiBtB,IAAjB,GAAwBA,IAAxB,GAA+BL,OAAO,CAAC2B,OAAD,CAAP,CAAiBtB,IAAhD,GAAuDA,IAA9D;AACAwB,IAAAA,SAAS,GAAG7B,OAAO,CAAC2B,OAAD,CAAP,CAAiBE,SAA7B;AACA,QAAII,aAAJ;;AACA,QAAIL,OAAO,KAAK,CAAhB,EAAmB;AACfK,MAAAA,aAAa,GAAG,OAAhB;AACA3B,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAACJ,IAAI,GAAGE,IAAR,EAAcD,IAAI,GAAGC,IAArB,CAJa;AAKpBnB,QAAAA,QAAQ,EAAE;AALU,OAAxB;AAOH,KATD,MASO,IAAIe,OAAO,GAAGzB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAAxC,EAAgD;AACnDO,MAAAA,aAAa,GAAG,WAAWL,OAAO,GAAG,CAArB,CAAhB;AACAtB,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAACJ,IAAI,GAAGE,IAAR,EAAcD,IAAI,GAAGC,IAArB,CAJa;AAKpBG,QAAAA,MAAM,EAAEb,UAAU,CAACM,OAAD,CALE;AAMpBQ,QAAAA,UAAU,EAAE,GANQ;AAOpBC,QAAAA,IAAI,EAAEd,QAAQ,CAACK,OAAD,CAPM;AAQpBU,QAAAA,QAAQ,EAAEd,YAAY,CAACI,OAAD,CARF;AASpBf,QAAAA,QAAQ,EAAE;AATU,OAAxB;AAWH,KAbM,MAaA;AACHoB,MAAAA,aAAa,GAAG,WAAWL,OAAO,GAAG,CAArB,CAAhB;AACAtB,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAACJ,IAAI,GAAGE,IAAR,EAAcD,IAAI,GAAGC,IAArB,CAJa;AAKpBG,QAAAA,MAAM,EAAEb,UAAU,CAACnB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CALE;AAMpBU,QAAAA,UAAU,EAAE,GANQ;AAOpBC,QAAAA,IAAI,EAAEd,QAAQ,CAACpB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CAPM;AAQpBY,QAAAA,QAAQ,EAAEd,YAAY,CAACrB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CARF;AASpBb,QAAAA,QAAQ,EAAE;AATU,OAAxB;AAWH;AACJ;;AACD,MAAM0B,IAAI,GAAI,CAAClC,IAAI,GAAGH,IAAR,IAAgB,KAAjB,KAA4B,CAA5B,GAAgC,CAACG,IAAI,GAAGH,IAAR,IAAgB,KAAhD,GAAwD,KAArE;AACAG,EAAAA,IAAI,GAAGA,IAAI,GAAIkC,IAAI,GAAGE,IAAI,CAACC,IAAL,CAAUjB,WAAW,GAAG,CAAxB,CAAtB;AACAvB,EAAAA,IAAI,GAAGA,IAAI,GAAIqC,IAAI,GAAGE,IAAI,CAACC,IAAL,CAAUjB,WAAW,GAAG,CAAxB,CAAtB;AACAnB,EAAAA,MAAM,CAAC,OAAD,CAAN,CAAgB,OAAhB,IAA2B,CAACJ,IAAD,EAAOG,IAAP,CAA3B;AACA,SAAOC,MAAP;AACH,CArFD,C,CAuFA;;;AACA,IAAMoD,4BAA4B,GAAG,UAAU5D,OAAV,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8C;AAC/E,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIG,IAAI,GAAG,CAAX;AAEA,MAAIC,MAAM,GAAG;AACTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,CAAC,EAAE,EADC;AAEJC,MAAAA,CAAC,EAAE,EAFC;AAGJC,MAAAA,CAAC,EAAE,EAHC;AAIJC,MAAAA,CAAC,EAAE,EAJC;AAKJC,MAAAA,GAAG,EAAE;AALD,KADC;AAQTC,IAAAA,QAAQ,EAAE,KARD;AASTC,IAAAA,SAAS,EAAE,SATF;AAUTC,IAAAA,UAAU,EAAE;AAAC,cAAQ;AAAC,gBAAQ,EAAT;AAAa,kBAAU,OAAvB;AAAgC,iBAAS;AAAzC;AAAT,KAVH;AAWTC,IAAAA,UAAU,EAAE;AAXH,GAAb;AAcAV,EAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB;AACdW,IAAAA,KAAK,EAAE,WADO;AAEdC,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAFG;AAGdC,IAAAA,QAAQ,EAAE;AAACF,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAHI;AAIdiC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,IAAZ,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,GAA5B,EAAiC,GAAjC,EAAsC,GAAtC,CAJI;AAKdC,IAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,EAAiC,MAAjC,EAAyC,MAAzC,EAAiD,MAAjD,EAAyD,MAAzD;AALI,GAAlB;AAQA,MAAMhC,UAAU,GAAG;AAAC,OAAG,GAAJ;AAAS,OAAG,GAAZ;AAAiB,OAAG,MAApB;AAA4B,OAAG,MAA/B;AAAuC,OAAG,MAA1C;AAAkD,OAAG,MAArD;AAA6D,OAAG,MAAhE;AAAwE,OAAG;AAA3E,GAAnB;AACA,MAAMC,QAAQ,GAAG;AAAC,OAAG,MAAJ;AAAY,OAAG,OAAf;AAAwB,OAAG,MAA3B;AAAmC,OAAG,OAAtC;AAA+C,OAAG,MAAlD;AAA0D,OAAG,OAA7D;AAAsE,OAAG,MAAzE;AAAiF,OAAG;AAApF,GAAjB;AACA,MAAMC,YAAY,GAAG;AAAC,OAAG,CAAJ;AAAO,OAAG,CAAV;AAAa,OAAG,GAAhB;AAAqB,OAAG,GAAxB;AAA6B,OAAG,GAAhC;AAAqC,OAAG,GAAxC;AAA6C,OAAG,GAAhD;AAAqD,OAAG;AAAxD,GAArB;AAEA,MAAMC,WAAW,GAAGtB,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB0B,MAAzC;AACA,MAAIC,OAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,SAAJ;;AACA,OAAKD,OAAO,GAAG,CAAf,EAAkBA,OAAO,GAAGH,WAA5B,EAAyCG,OAAO,EAAhD,EAAoD;AAChDD,IAAAA,OAAO,GAAGxB,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB4B,OAArB,CAAV;AACA,QAAIE,IAAI,GAAG9B,OAAO,CAAC2B,OAAD,CAAP,CAAiBG,IAA5B;AACA,QAAIC,IAAI,GAAG/B,OAAO,CAAC2B,OAAD,CAAP,CAAiBI,IAA5B;AACAA,IAAAA,IAAI,GAAGA,IAAI,GAAG9B,QAAd;AACA6B,IAAAA,IAAI,GAAGA,IAAI,GAAG7B,QAAd;AACA,QAAM+B,IAAI,GAAI,CAACD,IAAI,GAAGD,IAAR,IAAgB,IAAjB,KAA2B,CAA3B,GAA+B,CAACC,IAAI,GAAGD,IAAR,IAAgB,IAA/C,GAAsD,IAAnE;AACAD,IAAAA,SAAS,GAAG7B,OAAO,CAAC2B,OAAD,CAAP,CAAiBE,SAA7B;AACA,QAAII,aAAJ;;AACA,QAAIL,OAAO,KAAK,CAAhB,EAAmB;AACfK,MAAAA,aAAa,GAAG,OAAhB;AACA3B,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAACJ,IAAI,GAAGE,IAAR,EAAcD,IAAI,GAAGC,IAArB,CAJa;AAKpBnB,QAAAA,QAAQ,EAAE;AALU,OAAxB;AAOH,KATD,MASO,IAAIe,OAAO,GAAGzB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAAxC,EAAgD;AACnDO,MAAAA,aAAa,GAAG,WAAWL,OAAO,GAAG,CAArB,CAAhB;AACAtB,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAACJ,IAAI,GAAGE,IAAR,EAAcD,IAAI,GAAGC,IAArB,CAJa;AAKpBG,QAAAA,MAAM,EAAEb,UAAU,CAACM,OAAD,CALE;AAMpBQ,QAAAA,UAAU,EAAE,GANQ;AAOpBC,QAAAA,IAAI,EAAEd,QAAQ,CAACK,OAAD,CAPM;AAQpBU,QAAAA,QAAQ,EAAEd,YAAY,CAACI,OAAD,CARF;AASpBf,QAAAA,QAAQ,EAAE;AATU,OAAxB;AAWH,KAbM,MAaA;AACHoB,MAAAA,aAAa,GAAG,WAAWL,OAAO,GAAG,CAArB,CAAhB;AACAtB,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAACJ,IAAI,GAAGE,IAAR,EAAcD,IAAI,GAAGC,IAArB,CAJa;AAKpBG,QAAAA,MAAM,EAAEb,UAAU,CAACnB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CALE;AAMpBU,QAAAA,UAAU,EAAE,GANQ;AAOpBC,QAAAA,IAAI,EAAEd,QAAQ,CAACpB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CAPM;AAQpBY,QAAAA,QAAQ,EAAEd,YAAY,CAACrB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CARF;AASpBb,QAAAA,QAAQ,EAAE;AATU,OAAxB;AAWH;AACJ;;AACD,MAAM0B,IAAI,GAAI,CAAClC,IAAI,GAAGH,IAAR,IAAgB,KAAjB,KAA4B,CAA5B,GAAgC,CAACG,IAAI,GAAGH,IAAR,IAAgB,KAAhD,GAAwD,KAArE;AACAG,EAAAA,IAAI,GAAGA,IAAI,GAAIkC,IAAI,GAAGE,IAAI,CAACC,IAAL,CAAUjB,WAAW,GAAG,CAAxB,CAAtB;AACAvB,EAAAA,IAAI,GAAGA,IAAI,GAAIqC,IAAI,GAAGE,IAAI,CAACC,IAAL,CAAUjB,WAAW,GAAG,CAAxB,CAAtB;AACAnB,EAAAA,MAAM,CAAC,OAAD,CAAN,CAAgB,OAAhB,IAA2B,CAACJ,IAAD,EAAOG,IAAP,CAA3B;AACA,SAAOC,MAAP;AACH,CArFD,C,CAuFA;;;AACA,IAAMqD,4BAA4B,GAAG,UAAU7D,OAAV,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,QAApC,EAA8C;AAC/E,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIG,IAAI,GAAG,EAAX;AAEA,MAAIC,MAAM,GAAG;AACTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,CAAC,EAAE,EADC;AAEJC,MAAAA,CAAC,EAAE,EAFC;AAGJC,MAAAA,CAAC,EAAE,EAHC;AAIJC,MAAAA,CAAC,EAAE,EAJC;AAKJC,MAAAA,GAAG,EAAE;AALD,KADC;AAQTC,IAAAA,QAAQ,EAAE,KARD;AASTC,IAAAA,SAAS,EAAE,SATF;AAUTC,IAAAA,UAAU,EAAE;AAAC,cAAQ;AAAC,gBAAQ,EAAT;AAAa,kBAAU,OAAvB;AAAgC,iBAAS;AAAzC;AAAT,KAVH;AAWTC,IAAAA,UAAU,EAAE;AAXH,GAAb;AAcAV,EAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB;AACdW,IAAAA,KAAK,EAAE,aADO;AAEdC,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAFG;AAGdC,IAAAA,QAAQ,EAAE;AAACF,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAHI;AAIdiC,IAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,EAA3C,EAA+C,EAA/C,EAAmD,EAAnD,EAAuD,EAAvD,EAA2D,EAA3D,EAA+D,EAA/D,EAAmE,EAAnE,EAAuE,EAAvE,EAA2E,EAA3E,EAA+E,EAA/E,EAAmF,EAAnF,CAJI;AAKdC,IAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,IAAnD,EAAyD,IAAzD,EAA+D,IAA/D,EAAqE,IAArE,EAA2E,IAA3E,EAAiF,IAAjF,EAAuF,IAAvF,EAA6F,IAA7F,EAAmG,IAAnG,EAAyG,IAAzG,EAA+G,IAA/G,EAAqH,IAArH,EAA2H,IAA3H,EAAiI,IAAjI;AALI,GAAlB;AAQA,MAAMhC,UAAU,GAAG;AAAC,OAAG,GAAJ;AAAS,OAAG,GAAZ;AAAiB,OAAG,MAApB;AAA4B,OAAG,MAA/B;AAAuC,OAAG,MAA1C;AAAkD,OAAG,MAArD;AAA6D,OAAG,MAAhE;AAAwE,OAAG;AAA3E,GAAnB;AACA,MAAMC,QAAQ,GAAG;AAAC,OAAG,MAAJ;AAAY,OAAG,OAAf;AAAwB,OAAG,MAA3B;AAAmC,OAAG,OAAtC;AAA+C,OAAG,MAAlD;AAA0D,OAAG,OAA7D;AAAsE,OAAG,MAAzE;AAAiF,OAAG;AAApF,GAAjB;AACA,MAAMC,YAAY,GAAG;AAAC,OAAG,CAAJ;AAAO,OAAG,CAAV;AAAa,OAAG,GAAhB;AAAqB,OAAG,GAAxB;AAA6B,OAAG,GAAhC;AAAqC,OAAG,GAAxC;AAA6C,OAAG,GAAhD;AAAqD,OAAG;AAAxD,GAArB;AAEA,MAAMC,WAAW,GAAGtB,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB0B,MAAzC;AACA,MAAIC,OAAJ;AACA,MAAIC,OAAJ;AACA,MAAIC,SAAJ;;AACA,OAAKD,OAAO,GAAG,CAAf,EAAkBA,OAAO,GAAGH,WAA5B,EAAyCG,OAAO,EAAhD,EAAoD;AAChDD,IAAAA,OAAO,GAAGxB,MAAM,CAACC,IAAP,CAAYJ,OAAZ,EAAqB4B,OAArB,CAAV;AACA,QAAIE,IAAI,GAAG9B,OAAO,CAAC2B,OAAD,CAAP,CAAiBG,IAA5B;AACA,QAAIC,IAAI,GAAG/B,OAAO,CAAC2B,OAAD,CAAP,CAAiBI,IAA5B;AACAA,IAAAA,IAAI,GAAGA,IAAI,GAAG9B,QAAd;AACA6B,IAAAA,IAAI,GAAGA,IAAI,GAAG7B,QAAd;AACA,QAAM+B,IAAI,GAAI,CAACD,IAAI,GAAGD,IAAR,IAAgB,IAAjB,KAA2B,CAA3B,GAA+B,CAACC,IAAI,GAAGD,IAAR,IAAgB,IAA/C,GAAsD,IAAnE;AACAD,IAAAA,SAAS,GAAG7B,OAAO,CAAC2B,OAAD,CAAP,CAAiBE,SAA7B;AACA,QAAII,aAAJ;;AACA,QAAIL,OAAO,KAAK,CAAhB,EAAmB;AACfK,MAAAA,aAAa,GAAG,OAAhB;AACA3B,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAACJ,IAAI,GAAGE,IAAR,EAAcD,IAAI,GAAGC,IAArB,CAJa;AAKpBnB,QAAAA,QAAQ,EAAE;AALU,OAAxB;AAOH,KATD,MASO,IAAIe,OAAO,GAAGzB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAAxC,EAAgD;AACnDO,MAAAA,aAAa,GAAG,WAAWL,OAAO,GAAG,CAArB,CAAhB;AACAtB,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAACJ,IAAI,GAAGE,IAAR,EAAcD,IAAI,GAAGC,IAArB,CAJa;AAKpBG,QAAAA,MAAM,EAAEb,UAAU,CAACM,OAAD,CALE;AAMpBQ,QAAAA,UAAU,EAAE,GANQ;AAOpBC,QAAAA,IAAI,EAAEd,QAAQ,CAACK,OAAD,CAPM;AAQpBU,QAAAA,QAAQ,EAAEd,YAAY,CAACI,OAAD,CARF;AASpBf,QAAAA,QAAQ,EAAE;AATU,OAAxB;AAWH,KAbM,MAaA;AACHoB,MAAAA,aAAa,GAAG,WAAWL,OAAO,GAAG,CAArB,CAAhB;AACAtB,MAAAA,MAAM,CAAC2B,aAAD,CAAN,GAAwB;AACpBhB,QAAAA,KAAK,EAAEY,SADa;AAEpBX,QAAAA,SAAS,EAAE;AAACC,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAFS;AAGpBC,QAAAA,QAAQ,EAAE;AAACF,UAAAA,KAAK,EAAE,SAAR;AAAmBC,UAAAA,IAAI,EAAE;AAAzB,SAHU;AAIpBc,QAAAA,KAAK,EAAE,CAACJ,IAAI,GAAGE,IAAR,EAAcD,IAAI,GAAGC,IAArB,CAJa;AAKpBG,QAAAA,MAAM,EAAEb,UAAU,CAACnB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CALE;AAMpBU,QAAAA,UAAU,EAAE,GANQ;AAOpBC,QAAAA,IAAI,EAAEd,QAAQ,CAACpB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CAPM;AAQpBY,QAAAA,QAAQ,EAAEd,YAAY,CAACrB,MAAM,CAACC,IAAP,CAAYoB,YAAZ,EAA0BE,MAA1B,GAAmC,CAApC,CARF;AASpBb,QAAAA,QAAQ,EAAE;AATU,OAAxB;AAWH;AACJ;;AACD,MAAM0B,IAAI,GAAI,CAAClC,IAAI,GAAGH,IAAR,IAAgB,KAAjB,KAA4B,CAA5B,GAAgC,CAACG,IAAI,GAAGH,IAAR,IAAgB,KAAhD,GAAwD,KAArE;AACAG,EAAAA,IAAI,GAAGA,IAAI,GAAIkC,IAAI,GAAGE,IAAI,CAACC,IAAL,CAAUjB,WAAW,GAAG,CAAxB,CAAtB;AACAvB,EAAAA,IAAI,GAAGA,IAAI,GAAIqC,IAAI,GAAGE,IAAI,CAACC,IAAL,CAAUjB,WAAW,GAAG,CAAxB,CAAtB;AACAnB,EAAAA,MAAM,CAAC,OAAD,CAAN,CAAgB,OAAhB,IAA2B,CAACJ,IAAD,EAAOG,IAAP,CAA3B;AACA,SAAOC,MAAP;AACH,CArFD,C,CAuFA;;;AACA,IAAMsD,8BAA8B,GAAG,UAAU9D,OAAV,EAAmB;AACtD,MAAII,IAAI,GAAG,CAAX;AACA,MAAIG,IAAI,GAAG,CAAX;AACA,MAAIyB,IAAI,GAAG,CAAX;AACA,MAAIC,IAAI,GAAG,CAAX;AAEA,MAAIzB,MAAM,GAAG;AACTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,CAAC,EAAE,EADC;AAEJC,MAAAA,CAAC,EAAE,EAFC;AAGJC,MAAAA,CAAC,EAAE,EAHC;AAIJC,MAAAA,CAAC,EAAE,EAJC;AAKJC,MAAAA,GAAG,EAAE;AALD,KADC;AAQTC,IAAAA,QAAQ,EAAE,IARD;AASTgD,IAAAA,WAAW,EAAE,KATJ;AAUT/C,IAAAA,SAAS,EAAE,SAVF;AAWTC,IAAAA,UAAU,EAAE;AAAC,cAAQ;AAAC,gBAAQ,EAAT;AAAa,kBAAU,OAAvB;AAAgC,iBAAS;AAAzC;AAAT,KAXH;AAYTC,IAAAA,UAAU,EAAE;AAZH,GAAb;AAeAV,EAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB;AACdW,IAAAA,KAAK,EAAE,sBADO;AAEdC,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAFG;AAGdC,IAAAA,QAAQ,EAAE;AAACF,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAHI;AAIdiC,IAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,CAJI;AAKdC,IAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,CALI;AAMdpB,IAAAA,KAAK,EAAE,CAAChC,IAAD,EAAOG,IAAP;AANO,GAAlB;AASAC,EAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB;AACdW,IAAAA,KAAK,EAAE,6BADO;AAEdC,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAFG;AAGdC,IAAAA,QAAQ,EAAE;AAACF,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAHI;AAIdiC,IAAAA,QAAQ,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,CAJI;AAKdC,IAAAA,QAAQ,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,CALI;AAMdpB,IAAAA,KAAK,EAAE,CAACJ,IAAD,EAAOC,IAAP;AANO,GAAlB;AASA,SAAOzB,MAAP;AACH,CAxCD,C,CA2CA;;;AACA,IAAMwD,sBAAsB,GAAG,YAAY;AACvC,MAAMC,OAAO,GAAG;AACZC,IAAAA,QAAQ,EAAE,IADE;AAEZlD,IAAAA,SAAS,EAAE,SAFC;AAGZmD,IAAAA,MAAM,EAAE;AACJC,MAAAA,OAAO,EAAE,CADL;AAEJC,MAAAA,MAAM,EAAE;AACJC,QAAAA,GAAG,EAAE,MADD;AAEJC,QAAAA,GAAG,EAAE,CAAC;AAFF,OAFJ;AAMJC,MAAAA,KAAK,EAAE,CANH;AAOJC,MAAAA,IAAI,EAAE,IAPF;AAQJC,MAAAA,WAAW,EAAE,4FART;AASJC,MAAAA,KAAK,EAAE;AATH,KAHI;AAcZlE,IAAAA,MAAM,EAAE;AACJC,MAAAA,CAAC,EAAE,EADC;AAEJC,MAAAA,CAAC,EAAE,EAFC;AAGJC,MAAAA,CAAC,EAAE,EAHC;AAIJC,MAAAA,CAAC,EAAE,EAJC;AAKJC,MAAAA,GAAG,EAAE;AALD,KAdI;AAqBZI,IAAAA,UAAU,EAAE;AArBA,GAAhB;AAuBA,SAAO+C,OAAP;AACH,CAzBD,C,CA2BA;;;AACA,IAAMW,4BAA4B,GAAG,UAAU5E,OAAV,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC2E,QAApC,EAA8C;AAC/E,MAAMhD,OAAO,GAAG5B,MAAM,CAAC,CAAD,CAAN,CAAU4B,OAA1B;AACA,MAAME,SAAS,GAAG7B,OAAO,CAAC2B,OAAD,CAAP,CAAiBE,SAAnC;AAEA,MAAIvB,MAAM,GAAG;AACTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,CAAC,EAAE,EADC;AAEJC,MAAAA,CAAC,EAAE,EAFC;AAGJC,MAAAA,CAAC,EAAE,EAHC;AAIJC,MAAAA,CAAC,EAAE,EAJC;AAKJC,MAAAA,GAAG,EAAE;AALD,KADC;AAQTC,IAAAA,QAAQ,EAAE,KARD;AAST+D,IAAAA,MAAM,EAAE,IATC;AAUTC,IAAAA,OAAO,EAAE,OAVA;AAWT/D,IAAAA,SAAS,EAAE,SAXF;AAYTC,IAAAA,UAAU,EAAE;AAAC,cAAQ;AAAC,gBAAQ,EAAT;AAAa,kBAAU,OAAvB;AAAgC,iBAAS;AAAzC;AAAT,KAZH;AAaTC,IAAAA,UAAU,EAAE;AAbH,GAAb;AAgBAV,EAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB;AACdW,IAAAA,KAAK,EAAE,KADO;AAEdC,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAFG;AAGdC,IAAAA,QAAQ,EAAE;AAACF,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAHI;AAIdiC,IAAAA,QAAQ,EAAEsB,QAAQ,CAACG,QAJL;AAKdxB,IAAAA,QAAQ,EAAEqB,QAAQ,CAACI;AALL,GAAlB;AAQAzE,EAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB;AACdW,IAAAA,KAAK,EAAEY,SADO;AAEdX,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAFG;AAGdC,IAAAA,QAAQ,EAAE;AAACF,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB;AAHI,GAAlB;AAMA,SAAOd,MAAP;AAEH,CApCD,C,CAsCA;;;AACA,IAAM0E,0BAA0B,GAAG,UAAUlF,OAAV,EAAmBE,OAAnB,EAA4B;AAC3D,MAAMiF,QAAQ,GAAGnF,OAAO,CAAC,CAAD,CAAP,CAAW,UAAX,CAAjB;AACA,MAAMoF,QAAQ,GAAGpF,OAAO,CAAC,CAAD,CAAP,CAAW,UAAX,CAAjB;AAEA,MAAIQ,MAAM,GAAG;AACTC,IAAAA,MAAM,EAAE;AACJC,MAAAA,CAAC,EAAE,EADC;AAEJC,MAAAA,CAAC,EAAE,EAFC;AAGJC,MAAAA,CAAC,EAAE,EAHC;AAIJC,MAAAA,CAAC,EAAE,EAJC;AAKJC,MAAAA,GAAG,EAAE;AALD,KADC;AAQTC,IAAAA,QAAQ,EAAE,KARD;AASTC,IAAAA,SAAS,EAAE,SATF;AAUTC,IAAAA,UAAU,EAAE;AAAC,cAAQ;AAAC,gBAAQ,EAAT;AAAa,kBAAU,OAAvB;AAAgC,iBAAS;AAAzC;AAAT;AAVH,GAAb;AAaAT,EAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB;AACdW,IAAAA,KAAK,EAAEgE,QADO;AAEd/D,IAAAA,SAAS,EAAE;AAACC,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB,KAFG;AAGdC,IAAAA,QAAQ,EAAE;AAACF,MAAAA,KAAK,EAAE,SAAR;AAAmBC,MAAAA,IAAI,EAAE;AAAzB;AAHI,GAAlB;;AAMA,MAAI8D,QAAQ,KAAK,gBAAjB,EAAmC;AAC/B5E,IAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB;AACdW,MAAAA,KAAK,EAAEiE,QADO;AAEdhE,MAAAA,SAAS,EAAE;AAACC,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,IAAI,EAAE;AAAzB,OAFG;AAGdC,MAAAA,QAAQ,EAAE;AAACF,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,IAAI,EAAE;AAAzB,OAHI;AAIdiC,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,GAAtB,EAA2B,GAA3B,EAAgC,GAAhC,EAAqC,GAArC,EAA0C,GAA1C,EAA+C,GAA/C,CAJI;AAKdC,MAAAA,QAAQ,EAAE,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,EAAuB,KAAvB,EAA8B,KAA9B,EAAqC,KAArC,EAA4C,KAA5C,EAAmD,KAAnD,EAA0D,KAA1D,EAAiE,KAAjE,CALI;AAMdpB,MAAAA,KAAK,EAAE,CAAC,IAAD,EAAO,CAAP,CANO;AAOdqB,MAAAA,IAAI,EAAE,QAPQ;AAQdC,MAAAA,SAAS,EAAE;AARG,KAAlB;AAUH,GAXD,MAWO;AACHlD,IAAAA,MAAM,CAAC,OAAD,CAAN,GAAkB;AACdW,MAAAA,KAAK,EAAEiE,QADO;AAEdhE,MAAAA,SAAS,EAAE;AAACC,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,IAAI,EAAE;AAAzB,OAFG;AAGdC,MAAAA,QAAQ,EAAE;AAACF,QAAAA,KAAK,EAAE,SAAR;AAAmBC,QAAAA,IAAI,EAAE;AAAzB;AAHI,KAAlB;AAKH;;AACD,SAAOd,MAAP;AAEH,CA3CD;;AA3jBAd,MAAM,CAAC2F,aAAP,CAwmBeC,oBAAoB,GAAG;AAElCvF,EAAAA,yBAAyB,EAAEA,yBAFO;AAGlC+C,EAAAA,0BAA0B,EAAEA,0BAHM;AAIlCa,EAAAA,yBAAyB,EAAEA,yBAJO;AAKlCC,EAAAA,4BAA4B,EAAEA,4BALI;AAMlCC,EAAAA,4BAA4B,EAAEA,4BANI;AAOlCC,EAAAA,8BAA8B,EAAEA,8BAPE;AAQlCE,EAAAA,sBAAsB,EAAEA,sBARU;AASlCY,EAAAA,4BAA4B,EAAEA,4BATI;AAUlCM,EAAAA,0BAA0B,EAAEA;AAVM,CAxmBtC","sourcesContent":["/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsCollections} from 'meteor/randyp:mats-common';\nimport {matsTypes} from 'meteor/randyp:mats-common';\nimport {moment} from 'meteor/momentjs:moment'\n\n// sets plot options for timeseries graphs\nconst generateSeriesPlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var xmin = axisMap[Object.keys(axisMap)[0]].xmin;\n    var xmax = axisMap[Object.keys(axisMap)[0]].xmax;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Time',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 12}\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'left', 1: 'right', 2: 'left', 3: 'right', 4: 'left', 5: 'right', 6: 'left', 7: 'right'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.1, 3: 0.9, 4: 0.2, 5: 0.8, 6: 0.3, 7: 0.7};\n\n    const yAxisNumber = Object.keys(axisMap).length;\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var ymin = axisMap[axisKey].ymin;\n        var ymax = axisMap[axisKey].ymax;\n        ymax = ymax + errorMax;\n        ymin = ymin - errorMax;\n        const yPad = ((ymax - ymin) * 0.05) !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n        xmin = axisMap[axisKey].xmin < xmin ? axisMap[axisKey].xmin : xmin;\n        xmax = axisMap[axisKey].xmax > xmax ? axisMap[axisKey].xmax : xmax;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'yaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'y',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'y',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const xPad = ((xmax - xmin) * 0.075) !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n    xmax = moment.utc(xmax + xPad * Math.ceil(yAxisNumber / 2)).format(\"YYYY-MM-DD HH:mm\");\n    xmin = moment.utc(xmin - xPad * Math.ceil(yAxisNumber / 2)).format(\"YYYY-MM-DD HH:mm\");\n    layout['xaxis']['range'] = [xmin, xmax];\n    return layout;\n};\n\n// sets plot options for profile graphs\nconst generateProfilePlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var ymin = 10;\n    var ymax = 1075;\n    const xAxisNumber = Object.keys(axisMap).length;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: xAxisNumber > 1 ? 80 : 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n    var tickVals;\n    var tickText;\n    if (matsCollections.Settings.findOne({}).appType === matsTypes.AppTypes.metexpress) {\n        tickVals = [1000, 850, 700, 600, 500, 400, 300, 250, 200, 150, 100, 50, 10];\n        tickText = ['1000', '850', '700', '600', '500', '400', '300', '250', '200', '150', '100', '50', '10'];\n    } else {\n        tickVals = [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100];\n        tickText = ['1000', '900', '800', '700', '600', '500', '400', '300', '200', '100'];\n    }\n    layout['yaxis'] = {\n        title: 'Pressure Level',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: tickVals,\n        ticktext: tickText,\n        type: 'linear',\n        autorange: 'reversed'\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'bottom', 1: 'top', 2: 'bottom', 3: 'top', 4: 'bottom', 5: 'top', 6: 'bottom', 7: 'top'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.15, 3: 0.85, 4: 0.3, 5: 0.7, 6: 0.45, 7: 0.55};\n\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < xAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var xmin = axisMap[axisKey].xmin;\n        var xmax = axisMap[axisKey].xmax;\n        xmax = xmax + errorMax;\n        xmin = xmin - errorMax;\n        axisLabel = axisMap[axisKey].axisLabel;\n        const xPad = ((xmax - xmin) * 0.05) !== 0 ? (xmax - xmin) * 0.05 : 0.05;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'xaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [xmin - xPad, xmax + xPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'xaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [xmin - xPad, xmax + xPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'x',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'xaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [xmin - xPad, xmax + xPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'x',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const yPad = ((ymax - ymin) * 0.25) !== 0 ? (ymax - ymin) * 0.25 : 0.25;\n    ymax = ymax + (yPad * Math.ceil(xAxisNumber / 2));\n    ymin = ymin - (yPad * Math.ceil(xAxisNumber / 2));\n    layout['yaxis']['range'] = [ymin, ymax];\n    return layout;\n};\n\n// sets plot options for dieoff graphs\nconst generateDieoffPlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var xmin = axisMap[Object.keys(axisMap)[0]].xmin;\n    var xmax = axisMap[Object.keys(axisMap)[0]].xmax;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Forecast Hour',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'left', 1: 'right', 2: 'left', 3: 'right', 4: 'left', 5: 'right', 6: 'left', 7: 'right'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.1, 3: 0.9, 4: 0.2, 5: 0.8, 6: 0.3, 7: 0.7};\n\n    const yAxisNumber = Object.keys(axisMap).length;\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var ymin = axisMap[axisKey].ymin;\n        var ymax = axisMap[axisKey].ymax;\n        ymax = ymax + errorMax;\n        ymin = ymin - errorMax;\n        const yPad = ((ymax - ymin) * 0.05) !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n        xmin = axisMap[axisKey].xmin < xmin ? axisMap[axisKey].xmin : xmin;\n        xmax = axisMap[axisKey].xmax > xmax ? axisMap[axisKey].xmax : xmax;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'yaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'y',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'y',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const xPad = ((xmax - xmin) * 0.075) !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n    xmax = xmax + (xPad * Math.ceil(yAxisNumber / 2));\n    xmin = xmin - (xPad * Math.ceil(yAxisNumber / 2));\n    layout['xaxis']['range'] = [xmin, xmax];\n    return layout;\n};\n\n// sets plot options for threshold graphs\nconst generateThresholdPlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var xmin = 0;\n    var xmax = 3;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Threshold',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: [0.01, 0.1, 0.25, 0.5, 1.0, 1.5, 2.0, 3.0],\n        ticktext: [\"0.01\", \"0.10\", \"0.25\", \"0.50\", \"1.00\", \"1.50\", \"2.00\", \"3.00\"]\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'left', 1: 'right', 2: 'left', 3: 'right', 4: 'left', 5: 'right', 6: 'left', 7: 'right'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.1, 3: 0.9, 4: 0.2, 5: 0.8, 6: 0.3, 7: 0.7};\n\n    const yAxisNumber = Object.keys(axisMap).length;\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var ymin = axisMap[axisKey].ymin;\n        var ymax = axisMap[axisKey].ymax;\n        ymax = ymax + errorMax;\n        ymin = ymin - errorMax;\n        const yPad = ((ymax - ymin) * 0.05) !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'yaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'y',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'y',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const xPad = ((xmax - xmin) * 0.075) !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n    xmax = xmax + (xPad * Math.ceil(yAxisNumber / 2));\n    xmin = xmin - (xPad * Math.ceil(yAxisNumber / 2));\n    layout['xaxis']['range'] = [xmin, xmax];\n    return layout;\n};\n\n// sets plot options for valid time graphs\nconst generateValidTimePlotOptions = function (dataset, curves, axisMap, errorMax) {\n    var xmin = 0;\n    var xmax = 23;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Hour of Day',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23],\n        ticktext: [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\"]\n    };\n\n    const axisAnchor = {0: 'x', 1: 'x', 2: 'free', 3: 'free', 4: 'free', 5: 'free', 6: 'free', 7: 'free'};\n    const axisSide = {0: 'left', 1: 'right', 2: 'left', 3: 'right', 4: 'left', 5: 'right', 6: 'left', 7: 'right'};\n    const axisPosition = {0: 0, 1: 1, 2: 0.1, 3: 0.9, 4: 0.2, 5: 0.8, 6: 0.3, 7: 0.7};\n\n    const yAxisNumber = Object.keys(axisMap).length;\n    var axisKey;\n    var axisIdx;\n    var axisLabel;\n    for (axisIdx = 0; axisIdx < yAxisNumber; axisIdx++) {\n        axisKey = Object.keys(axisMap)[axisIdx];\n        var ymin = axisMap[axisKey].ymin;\n        var ymax = axisMap[axisKey].ymax;\n        ymax = ymax + errorMax;\n        ymin = ymin - errorMax;\n        const yPad = ((ymax - ymin) * 0.05) !== 0 ? (ymax - ymin) * 0.05 : 0.05;\n        axisLabel = axisMap[axisKey].axisLabel;\n        var axisObjectKey;\n        if (axisIdx === 0) {\n            axisObjectKey = 'yaxis';\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                zeroline: false\n            };\n        } else if (axisIdx < Object.keys(axisPosition).length) {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[axisIdx],\n                overlaying: 'y',\n                side: axisSide[axisIdx],\n                position: axisPosition[axisIdx],\n                zeroline: false\n            };\n        } else {\n            axisObjectKey = 'yaxis' + (axisIdx + 1);\n            layout[axisObjectKey] = {\n                title: axisLabel,\n                titlefont: {color: '#000000', size: 22},\n                tickfont: {color: '#000000', size: 14},\n                range: [ymin - yPad, ymax + yPad],\n                anchor: axisAnchor[Object.keys(axisPosition).length - 1],\n                overlaying: 'y',\n                side: axisSide[Object.keys(axisPosition).length - 1],\n                position: axisPosition[Object.keys(axisPosition).length - 1],\n                zeroline: false\n            };\n        }\n    }\n    const xPad = ((xmax - xmin) * 0.075) !== 0 ? (xmax - xmin) * 0.075 : 0.075;\n    xmax = xmax + (xPad * Math.ceil(yAxisNumber / 2));\n    xmin = xmin - (xPad * Math.ceil(yAxisNumber / 2));\n    layout['xaxis']['range'] = [xmin, xmax];\n    return layout;\n};\n\n// sets plot options for reliability graphs\nconst generateReliabilityPlotOptions = function (dataset) {\n    var xmin = 0;\n    var xmax = 1;\n    var ymin = 0;\n    var ymax = 1;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: true,\n        perfectLine: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Forecast Probability',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n        ticktext: [\"0.0\", \"0.1\", \"0.2\", \"0.3\", \"0.4\", \"0.5\", \"0.6\", \"0.7\", \"0.8\", \"0.9\", \"1.0\"],\n        range: [xmin, xmax]\n    };\n\n    layout['yaxis'] = {\n        title: 'Observed Relative Frequency',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n        tickvals: [0.0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0],\n        ticktext: [\"0.0\", \"0.1\", \"0.2\", \"0.3\", \"0.4\", \"0.5\", \"0.6\", \"0.7\", \"0.8\", \"0.9\", \"1.0\"],\n        range: [ymin, ymax]\n    };\n\n    return layout;\n};\n\n\n// sets plot options for map graphs\nconst generateMapPlotOptions = function () {\n    const options = {\n        autosize: true,\n        hovermode: 'closest',\n        mapbox: {\n            bearing: 0,\n            center: {\n                lat: 39.834,\n                lon: -98.604\n            },\n            pitch: 0,\n            zoom: 3.25,\n            accesstoken: 'pk.eyJ1IjoibWF0cy1nc2QiLCJhIjoiY2pvN2l1N2MyMG9xdTN3bWR3ODV5a2E2ZiJ9.PtgcGhxaoD43N0OwJSNVMg',\n            style: 'light'\n        },\n        margin: {\n            l: 30,\n            r: 30,\n            b: 40,\n            t: 10,\n            pad: 4\n        },\n        showlegend: false,\n    };\n    return options;\n};\n\n// sets plot options for valid time graphs\nconst generateHistogramPlotOptions = function (dataset, curves, axisMap, plotBins) {\n    const axisKey = curves[0].axisKey;\n    const axisLabel = axisMap[axisKey].axisLabel;\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        bargap: 0.25,\n        barmode: 'group',\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}},\n        showlegend: false\n    };\n\n    layout['xaxis'] = {\n        title: 'Bin',\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 12},\n        tickvals: plotBins.binMeans,\n        ticktext: plotBins.binLabels,\n    };\n\n    layout['yaxis'] = {\n        title: axisLabel,\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 14},\n    };\n\n    return layout;\n\n};\n\n// sets plot options for valid time graphs\nconst generateContourPlotOptions = function (dataset, axisMap) {\n    const xAxisKey = dataset[0]['xAxisKey'];\n    const yAxisKey = dataset[0]['yAxisKey'];\n\n    var layout = {\n        margin: {\n            l: 80,\n            r: 80,\n            b: 80,\n            t: 20,\n            pad: 4\n        },\n        zeroline: false,\n        hovermode: 'closest',\n        hoverlabel: {'font': {'size': 14, 'family': 'Arial', 'color': '#FFFFFF'}}\n    };\n\n    layout['xaxis'] = {\n        title: xAxisKey,\n        titlefont: {color: '#000000', size: 22},\n        tickfont: {color: '#000000', size: 12},\n    };\n\n    if (yAxisKey === \"Pressure level\") {\n        layout['yaxis'] = {\n            title: yAxisKey,\n            titlefont: {color: '#000000', size: 22},\n            tickfont: {color: '#000000', size: 14},\n            tickvals: [1000, 900, 800, 700, 600, 500, 400, 300, 200, 100],\n            ticktext: ['1000', '900', '800', '700', '600', '500', '400', '300', '200', '100'],\n            range: [1100, 0],\n            type: 'linear',\n            autorange: 'reversed'\n        };\n    } else {\n        layout['yaxis'] = {\n            title: yAxisKey,\n            titlefont: {color: '#000000', size: 22},\n            tickfont: {color: '#000000', size: 14},\n        };\n    }\n    return layout;\n\n};\n\nexport default matsDataPlotOpsUtils = {\n\n    generateSeriesPlotOptions: generateSeriesPlotOptions,\n    generateProfilePlotOptions: generateProfilePlotOptions,\n    generateDieoffPlotOptions: generateDieoffPlotOptions,\n    generateThresholdPlotOptions: generateThresholdPlotOptions,\n    generateValidTimePlotOptions: generateValidTimePlotOptions,\n    generateReliabilityPlotOptions: generateReliabilityPlotOptions,\n    generateMapPlotOptions: generateMapPlotOptions,\n    generateHistogramPlotOptions: generateHistogramPlotOptions,\n    generateContourPlotOptions: generateContourPlotOptions\n\n}\n"]},"sourceType":"script","hash":"7a961024d2486fcbe3976ac7372d560fe0917d92"}
