{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/curves/curve_list.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/randyp:mats-common/templates/curves/curve_list.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/curves/curve_list.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/curves/curve_list.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/randyp:mats-common/templates/curves/curve_list.js"}},"code":"var matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 1);\nvar matsMethods;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsMethods: function (v) {\n    matsMethods = v;\n  }\n}, 2);\nvar matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 3);\nvar matsPlotUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsPlotUtils: function (v) {\n    matsPlotUtils = v;\n  }\n}, 4);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 5);\nTemplate.curveList.helpers({\n  displayPlotUnMatched: function () {\n    // scatter plots can't match\n    if (Session.get('plotType') === matsTypes.PlotTypes.scatter2d) {\n      return \"none\";\n    } // don't allow plotting when editing\n\n\n    var mode = Session.get(\"editMode\");\n\n    if (mode === undefined || mode === \"\") {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  displayPlotMatched: function () {\n    // don't allow plotting when editing\n    var mode = Session.get(\"editMode\");\n\n    if (mode === undefined || mode === \"\") {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  displaySaveSettings: function () {\n    // don't allow saving settings when editing\n    var mode = Session.get(\"editMode\");\n\n    if (mode === undefined || mode === \"\") {\n      return \"block\";\n    } else {\n      return \"none\";\n    }\n  },\n  curves: function () {\n    return Session.get('Curves');\n  },\n  displayCurves: function () {\n    if (Session.get('Curves') === undefined || Session.get('Curves').length === 0) {\n      return \"none\";\n    } else {\n      return \"block\";\n    }\n  },\n  log: function () {\n    console.log(this);\n  },\n  averagesDisabled: function () {\n    var curves = Session.get('Curves');\n\n    if (curves === undefined || curves.length == 0 || Session.get('plotType') !== matsTypes.PlotTypes.timeSeries) {\n      return \"\";\n    }\n\n    var average = curves[0].average;\n\n    for (var i = 0; i < curves.length; i++) {\n      if (average != curves[i].average) {\n        return \"disabled\";\n      }\n    }\n  },\n  disabledPlotsHidden: function () {\n    var curves = Session.get('Curves');\n\n    if (curves === undefined || curves.length == 0 || Session.get('plotType') !== matsTypes.PlotTypes.timeSeries) {\n      return \"none\";\n    }\n\n    var average = curves[0].average;\n\n    for (var i = 0; i < curves.length; i++) {\n      if (average != curves[i].average) {\n        return \"block\";\n      }\n    }\n\n    return \"none\";\n  },\n  identicalContourDisabled: function () {\n    var curves = Session.get('Curves');\n\n    if (curves === undefined || curves.length == 0 || Session.get('plotType') !== matsTypes.PlotTypes.contour) {\n      return \"\";\n    }\n\n    var xAxis = curves[0]['x-axis-parameter'];\n    var yAxis = curves[0]['y-axis-parameter'];\n\n    if (xAxis === yAxis) {\n      return \"disabled\";\n    }\n\n    return \"\";\n  },\n  identicalContourHidden: function () {\n    var curves = Session.get('Curves');\n\n    if (curves === undefined || curves.length == 0 || Session.get('plotType') !== matsTypes.PlotTypes.contour) {\n      return \"none\";\n    }\n\n    var xAxis = curves[0]['x-axis-parameter'];\n    var yAxis = curves[0]['y-axis-parameter'];\n\n    if (xAxis === yAxis) {\n      return \"block\";\n    }\n\n    return \"none\";\n  },\n  mismatchContourDiffDisabled: function () {\n    var curves = Session.get('Curves');\n\n    if (curves === undefined || curves.length < 2 || Session.get('plotType') !== matsTypes.PlotTypes.contourDiff) {\n      return \"\";\n    }\n\n    var xAxis0 = curves[0]['x-axis-parameter'];\n    var yAxis0 = curves[0]['y-axis-parameter'];\n    var xAxis1 = curves[1]['x-axis-parameter'];\n    var yAxis1 = curves[1]['y-axis-parameter'];\n\n    if (xAxis0 !== xAxis1 || yAxis0 !== yAxis1) {\n      return \"disabled\";\n    }\n\n    return \"\";\n  },\n  mismatchContourDiffHidden: function () {\n    var curves = Session.get('Curves');\n\n    if (curves === undefined || curves.length < 2 || Session.get('plotType') !== matsTypes.PlotTypes.contourDiff) {\n      return \"none\";\n    }\n\n    var xAxis0 = curves[0]['x-axis-parameter'];\n    var yAxis0 = curves[0]['y-axis-parameter'];\n    var xAxis1 = curves[1]['x-axis-parameter'];\n    var yAxis1 = curves[1]['y-axis-parameter'];\n\n    if (xAxis0 !== xAxis1 || yAxis0 !== yAxis1) {\n      return \"block\";\n    }\n\n    return \"none\";\n  },\n  editMode: function () {\n    if (Session.get('editMode') === '') {\n      return '';\n    } else {\n      return \"Changing \" + Session.get('editMode');\n    }\n  },\n  matchedLabel: function () {\n    if (Session.get('matchName' === undefined)) {\n      if (setMatchName) {\n        setMatchName();\n      } else {\n        Session.set('matchName', 'plot matched');\n      }\n    } else {\n      Session.set('matchName', 'plot matched');\n    }\n\n    return Session.get('matchName');\n  }\n});\nTemplate.curveList.events({\n  'click .remove-all': function () {\n    if (Session.get(\"confirmRemoveAll\")) {\n      matsCurveUtils.clearAllUsed();\n      matsParamUtils.setAllParamsToDefault();\n      Session.set(\"editMode\", \"\");\n      Session.set(\"paramWellColor\", \"#f5f5f5\"); // default grey\n\n      Session.set(\"lastUpdate\", Date.now());\n      Session.set(\"confirmRemoveAll\", \"\");\n      return false;\n    } else {\n      if (Session.get(\"Curves\").length > 0) {\n        $(\"#modal-confirm-remove-all\").modal();\n      }\n    }\n  },\n  'click .confirm-remove-all': function () {\n    Session.set(\"confirmRemoveAll\", Date.now());\n    $(\"#remove-all\").trigger('click');\n  },\n  'click .plot-curves-unmatched': function (event) {\n    document.getElementById(\"spinner\").style.display = \"block\";\n    matsPlotUtils.disableActionButtons();\n    event.preventDefault(); // trigger the submit on the plot_list plot_list.js - click .submit-params\n\n    Session.set('plotParameter', matsTypes.PlotActions.unmatched);\n    document.getElementById(\"plot-curves\").click();\n    return false;\n  },\n  'click .plot-curves-matched': function (event) {\n    document.getElementById(\"spinner\").style.display = \"block\";\n    matsPlotUtils.disableActionButtons();\n    event.preventDefault(); // trigger the submit on the plot_list plot_list.js - click .submit-params\n\n    Session.set('plotParameter', matsTypes.PlotActions.matched);\n    document.getElementById(\"plot-curves\").click();\n    return false;\n  },\n  'click .save-settings': function (event) {\n    event.preventDefault();\n    document.getElementById(\"save-settings\").click();\n    return false;\n  }\n});","map":{"version":3,"sources":["packages/randyp:mats-common/templates/curves/curve_list.js"],"names":["matsTypes","module","link","v","matsCollections","matsMethods","matsCurveUtils","matsPlotUtils","matsParamUtils","Template","curveList","helpers","displayPlotUnMatched","Session","get","PlotTypes","scatter2d","mode","undefined","displayPlotMatched","displaySaveSettings","curves","displayCurves","length","log","console","averagesDisabled","timeSeries","average","i","disabledPlotsHidden","identicalContourDisabled","contour","xAxis","yAxis","identicalContourHidden","mismatchContourDiffDisabled","contourDiff","xAxis0","yAxis0","xAxis1","yAxis1","mismatchContourDiffHidden","editMode","matchedLabel","setMatchName","set","events","clearAllUsed","setAllParamsToDefault","Date","now","$","modal","trigger","event","document","getElementById","style","display","disableActionButtons","preventDefault","PlotActions","unmatched","click","matched"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport {matsTypes} from \"meteor/randyp:mats-common\";\nimport {matsCollections} from \"meteor/randyp:mats-common\";\nimport {matsMethods} from \"meteor/randyp:mats-common\";\nimport {matsCurveUtils} from 'meteor/randyp:mats-common';\nimport {matsPlotUtils} from 'meteor/randyp:mats-common';\nimport {matsParamUtils} from 'meteor/randyp:mats-common';\n\nTemplate.curveList.helpers({\n    displayPlotUnMatched: function() {\n        // scatter plots can't match\n        if (Session.get('plotType') === matsTypes.PlotTypes.scatter2d) {\n            return \"none\";\n        }\n        // don't allow plotting when editing\n        const mode = Session.get(\"editMode\");\n        if (mode === undefined || mode === \"\") {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    displayPlotMatched: function() {\n        // don't allow plotting when editing\n        const mode = Session.get(\"editMode\");\n        if (mode === undefined || mode === \"\") {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    displaySaveSettings: function() {\n        // don't allow saving settings when editing\n        const mode = Session.get(\"editMode\");\n        if (mode === undefined || mode === \"\") {\n            return \"block\";\n        } else {\n            return \"none\";\n        }\n    },\n    curves: function () {\n        return Session.get('Curves');\n    },\n    displayCurves: function () {\n        if (Session.get('Curves') === undefined || Session.get('Curves').length === 0) {\n            return \"none\";\n        } else {\n            return \"block\";\n        }\n    },\n    log: function () {\n        console.log(this);\n    },\n    averagesDisabled: function () {\n        var curves = Session.get('Curves');\n        if (curves === undefined || curves.length == 0 || (Session.get('plotType') !== matsTypes.PlotTypes.timeSeries)) {\n            return \"\";\n        }\n        var average = curves[0].average;\n        for (var i = 0; i < curves.length; i++) {\n            if (average != curves[i].average) {\n                return \"disabled\";\n            }\n        }\n    },\n    disabledPlotsHidden: function () {\n        var curves = Session.get('Curves');\n        if (curves === undefined || curves.length == 0 || (Session.get('plotType') !== matsTypes.PlotTypes.timeSeries)) {\n            return \"none\";\n        }\n        var average = curves[0].average;\n        for (var i = 0; i < curves.length; i++) {\n            if (average != curves[i].average) {\n                return \"block\";\n            }\n        }\n        return \"none\"\n    },\n    identicalContourDisabled: function () {\n        var curves = Session.get('Curves');\n        if (curves === undefined || curves.length == 0 || (Session.get('plotType') !== matsTypes.PlotTypes.contour)) {\n            return \"\";\n        }\n        var xAxis = curves[0]['x-axis-parameter'];\n        var yAxis = curves[0]['y-axis-parameter'];\n        if (xAxis === yAxis) {\n            return \"disabled\";\n        }\n        return \"\";\n    },\n    identicalContourHidden: function () {\n        var curves = Session.get('Curves');\n        if (curves === undefined || curves.length == 0 || (Session.get('plotType') !== matsTypes.PlotTypes.contour)) {\n            return \"none\";\n        }\n        var xAxis = curves[0]['x-axis-parameter'];\n        var yAxis = curves[0]['y-axis-parameter'];\n        if (xAxis === yAxis) {\n            return \"block\";\n        }\n        return \"none\"\n    },\n    mismatchContourDiffDisabled: function () {\n        var curves = Session.get('Curves');\n        if (curves === undefined || curves.length < 2 || (Session.get('plotType') !== matsTypes.PlotTypes.contourDiff)) {\n            return \"\";\n        }\n        var xAxis0 = curves[0]['x-axis-parameter'];\n        var yAxis0 = curves[0]['y-axis-parameter'];\n        var xAxis1 = curves[1]['x-axis-parameter'];\n        var yAxis1 = curves[1]['y-axis-parameter'];\n        if (xAxis0 !== xAxis1 || yAxis0 !== yAxis1) {\n            return \"disabled\";\n        }\n        return \"\";\n    },\n    mismatchContourDiffHidden: function () {\n        var curves = Session.get('Curves');\n        if (curves === undefined || curves.length < 2 || (Session.get('plotType') !== matsTypes.PlotTypes.contourDiff)) {\n            return \"none\";\n        }\n        var xAxis0 = curves[0]['x-axis-parameter'];\n        var yAxis0 = curves[0]['y-axis-parameter'];\n        var xAxis1 = curves[1]['x-axis-parameter'];\n        var yAxis1 = curves[1]['y-axis-parameter'];\n        if (xAxis0 !== xAxis1 || yAxis0 !== yAxis1) {\n            return \"block\";\n        }\n        return \"none\"\n    },\n    editMode: function() {\n        if (Session.get('editMode') === '') {\n            return '';\n        } else {\n            return \"Changing \" + Session.get('editMode');\n        }\n    },\n    matchedLabel: function() {\n        if (Session.get('matchName'  === undefined)) {\n            if (setMatchName) {\n                setMatchName();\n            } else {\n                Session.set('matchName','plot matched');\n            }\n        } else {\n            Session.set('matchName','plot matched');\n        }\n        return Session.get('matchName');\n    }\n});\n\nTemplate.curveList.events({\n    'click .remove-all': function () {\n        if (Session.get(\"confirmRemoveAll\")) {\n            matsCurveUtils.clearAllUsed();\n            matsParamUtils.setAllParamsToDefault();\n            Session.set(\"editMode\", \"\");\n            Session.set(\"paramWellColor\", \"#f5f5f5\");  // default grey\n            Session.set(\"lastUpdate\", Date.now());\n            Session.set(\"confirmRemoveAll\",\"\");\n            return false;\n        } else {\n            if (Session.get(\"Curves\").length > 0 ) {\n                $(\"#modal-confirm-remove-all\").modal();\n            }\n        }\n    },\n    'click .confirm-remove-all': function () {\n        Session.set(\"confirmRemoveAll\", Date.now());\n        $(\"#remove-all\").trigger('click');\n    },\n    'click .plot-curves-unmatched': function (event) {\n        document.getElementById(\"spinner\").style.display = \"block\";\n        matsPlotUtils.disableActionButtons();\n        event.preventDefault();\n        // trigger the submit on the plot_list plot_list.js - click .submit-params\n        Session.set('plotParameter', matsTypes.PlotActions.unmatched);\n        document.getElementById(\"plot-curves\").click();\n        return false;\n    },\n    'click .plot-curves-matched': function (event) {\n        document.getElementById(\"spinner\").style.display = \"block\";\n        matsPlotUtils.disableActionButtons();\n        event.preventDefault();\n        // trigger the submit on the plot_list plot_list.js - click .submit-params\n        Session.set('plotParameter', matsTypes.PlotActions.matched);\n        document.getElementById(\"plot-curves\").click();\n        return false;\n    },\n    'click .save-settings': function (event) {\n        event.preventDefault();\n        document.getElementById(\"save-settings\").click();\n        return false;\n    }\n});"]},"sourceType":"script","hash":"10ae2914b5f915e43caadd96c75cd3d98e519af7"}
