{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/ostrio:flow-router-extra/client/active.route.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/ostrio:flow-router-extra/client/active.route.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/ostrio:flow-router-extra/client/active.route.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/ostrio:flow-router-extra/client/active.route.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ostrio:flow-router-extra/client/active.route.js"}},"code":"let Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\n\nlet _helpers;\n\nmodule.link(\"./../lib/_helpers.js\", {\n  _helpers(v) {\n    _helpers = v;\n  }\n\n}, 1);\nlet check, Match;\nmodule.link(\"meteor/check\", {\n  check(v) {\n    check = v;\n  },\n\n  Match(v) {\n    Match = v;\n  }\n\n}, 2);\nlet ReactiveDict;\nmodule.link(\"meteor/reactive-dict\", {\n  ReactiveDict(v) {\n    ReactiveDict = v;\n  }\n\n}, 3);\nlet Template;\n\nif (Package.templating) {\n  Template = Package.templating.Template;\n}\n\nconst init = FlowRouter => {\n  // Active Route\n  // https://github.com/meteor-activeroute/legacy\n  // zimme:active-route\n  // License (MIT License): https://github.com/meteor-activeroute/legacy/blob/master/LICENSE.md\n  // Lib\n  const errorMessages = {\n    noSupportedRouter: 'No supported router installed. Please install flow-router.',\n    invalidRouteNameArgument: 'Invalid argument, must be String or RegExp.',\n    invalidRouteParamsArgument: 'Invalid argument, must be Object.'\n  };\n\n  const checkRouteOrPath = arg => {\n    try {\n      return check(arg, Match.OneOf(RegExp, String));\n    } catch (e) {\n      throw new Error(errorMessages.invalidRouteNameArgument);\n    }\n  };\n\n  const checkParams = arg => {\n    try {\n      return check(arg, Object);\n    } catch (e) {\n      throw new Error(errorMessages.invalidRouteParamsArgument);\n    }\n  };\n\n  const config = new ReactiveDict('activeRouteConfig');\n  config.setDefault({\n    activeClass: 'active',\n    caseSensitive: true,\n    disabledClass: 'disabled'\n  });\n\n  const test = (_value, _pattern) => {\n    let value = _value;\n    let pattern = _pattern;\n\n    if (!value) {\n      return false;\n    }\n\n    if (Match.test(pattern, RegExp)) {\n      return value.search(pattern) > -1;\n    }\n\n    if (Match.test(pattern, String)) {\n      if (config.equals('caseSensitive', false)) {\n        value = value.toLowerCase();\n        pattern = pattern.toLowerCase();\n      }\n\n      return value === pattern;\n    }\n\n    return false;\n  };\n\n  const ActiveRoute = {\n    config() {\n      return this.configure.apply(this, arguments);\n    },\n\n    configure(options) {\n      if (!Meteor.isServer) {\n        config.set(options);\n      }\n    },\n\n    name(routeName) {\n      let routeParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      if (Meteor.isServer) {\n        return void 0;\n      }\n\n      checkRouteOrPath(routeName);\n      checkParams(routeParams);\n      let currentPath;\n      let currentRouteName;\n      let path;\n\n      if (!_helpers.isEmpty(routeParams) && Match.test(routeName, String)) {\n        FlowRouter.watchPathChange();\n        currentPath = FlowRouter.current().path;\n        path = FlowRouter.path(routeName, routeParams);\n      } else {\n        currentRouteName = FlowRouter.getRouteName();\n      }\n\n      return test(currentPath || currentRouteName, path || routeName);\n    },\n\n    path(path) {\n      if (Meteor.isServer) {\n        return void 0;\n      }\n\n      checkRouteOrPath(path);\n      FlowRouter.watchPathChange();\n      return test(FlowRouter.current().path, path);\n    }\n\n  }; // Client\n\n  const isActive = function (type) {\n    let inverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let helperName;\n    helperName = 'is';\n\n    if (inverse) {\n      helperName += 'Not';\n    }\n\n    helperName += 'Active' + type;\n    return function () {\n      let _options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      let _attributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      let options = _helpers.isObject(_options) ? _options.hash || _options : _options;\n      let attributes = _helpers.isObject(_attributes) ? _attributes.hash || _attributes : _attributes;\n\n      if (Match.test(options, String)) {\n        if (config.equals('regex', true)) {\n          options = {\n            regex: options\n          };\n        } else if (type === 'Path') {\n          options = {\n            path: options\n          };\n        } else {\n          options = {\n            name: options\n          };\n        }\n      }\n\n      options = _helpers.extend(options, attributes);\n      const pattern = Match.ObjectIncluding({\n        class: Match.Optional(String),\n        className: Match.Optional(String),\n        regex: Match.Optional(Match.OneOf(RegExp, String)),\n        name: Match.Optional(String),\n        path: Match.Optional(String)\n      });\n      check(options, pattern);\n      let regex = options.regex;\n      let name = options.name;\n      let path = options.path;\n      let className = options.class ? options.class : options.className;\n\n      if (type === 'Path') {\n        name = null;\n      } else {\n        path = null;\n      }\n\n      if (!(regex || name || path)) {\n        const t = (type === 'Route' ? 'name' : type).toLowerCase();\n\n        Meteor._debug('Invalid argument, ' + helperName + ' takes \"' + t + '\", ' + (t + '=\"' + t + '\" or regex=\"regex\"'));\n\n        return false;\n      }\n\n      if (Match.test(regex, String)) {\n        if (config.equals('caseSensitive', false)) {\n          regex = new RegExp(regex, 'i');\n        } else {\n          regex = new RegExp(regex);\n        }\n      }\n\n      if (!_helpers.isRegExp(regex)) {\n        regex = name || path;\n      }\n\n      if (inverse) {\n        if (!_helpers.isString(className)) {\n          className = config.get('disabledClass');\n        }\n      } else {\n        if (!_helpers.isString(className)) {\n          className = config.get('activeClass');\n        }\n      }\n\n      let isPath;\n      let result;\n\n      if (type === 'Path') {\n        isPath = true;\n      }\n\n      if (isPath) {\n        result = ActiveRoute.path(regex);\n      } else {\n        options = _helpers.extend(attributes.data, attributes);\n        result = ActiveRoute.name(regex, _helpers.omit(options, ['class', 'className', 'data', 'regex', 'name', 'path']));\n      }\n\n      if (inverse) {\n        result = !result;\n      }\n\n      if (result) {\n        return className;\n      }\n\n      return false;\n    };\n  };\n\n  const arHelpers = {\n    isActiveRoute: isActive('Route'),\n    isActivePath: isActive('Path'),\n    isNotActiveRoute: isActive('Route', true),\n    isNotActivePath: isActive('Path', true)\n  }; // If blaze is in use, register global helpers\n\n  if (Template) {\n    var _arr = Object.entries(arHelpers);\n\n    for (var _i = 0; _i < _arr.length; _i++) {\n      const [name, helper] = _arr[_i];\n      Template.registerHelper(name, helper);\n    }\n  } // FlowRouter Helpers\n  // arillo:flow-router-helpers\n  // https://github.com/arillo/meteor-flow-router-helpers\n  // License (MIT License): https://github.com/arillo/meteor-flow-router-helpers/blob/master/LICENCE\n\n\n  const subsReady = function () {\n    for (var _len = arguments.length, _subs = new Array(_len), _key = 0; _key < _len; _key++) {\n      _subs[_key] = arguments[_key];\n    }\n\n    let subs = _subs.slice(0, -1);\n\n    if (subs.length === 1) {\n      return FlowRouter.subsReady();\n    }\n\n    return subs.filter((memo, sub) => {\n      if (_helpers.isString(sub)) {\n        return memo && FlowRouter.subsReady(sub);\n      }\n    }, true);\n  };\n\n  const pathFor = function (_path) {\n    let _view = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      hash: {}\n    };\n\n    let path = _path;\n    let view = _view;\n\n    if (!path) {\n      throw new Error('no path defined');\n    }\n\n    if (!view.hash) {\n      view = {\n        hash: view\n      };\n    }\n\n    if (path.hash && path.hash.route) {\n      view = path;\n      path = view.hash.route;\n      delete view.hash.route;\n    }\n\n    const query = view.hash.query ? FlowRouter._qs.parse(view.hash.query) : {};\n    const hashBang = view.hash.hash ? view.hash.hash : '';\n    return FlowRouter.path(path, view.hash, query) + (hashBang ? '#' + hashBang : '');\n  };\n\n  const urlFor = (path, view) => {\n    return Meteor.absoluteUrl(pathFor(path, view).substr(1));\n  };\n\n  const param = name => {\n    return FlowRouter.getParam(name);\n  };\n\n  const queryParam = key => {\n    return FlowRouter.getQueryParam(key);\n  };\n\n  const currentRouteName = () => {\n    return FlowRouter.getRouteName();\n  };\n\n  const currentRouteOption = optionName => {\n    return FlowRouter.current().route.options[optionName];\n  };\n\n  const isSubReady = sub => {\n    if (sub) {\n      return FlowRouter.subsReady(sub);\n    }\n\n    return FlowRouter.subsReady();\n  };\n\n  const frHelpers = {\n    subsReady: subsReady,\n    pathFor: pathFor,\n    urlFor: urlFor,\n    param: param,\n    queryParam: queryParam,\n    currentRouteName: currentRouteName,\n    isSubReady: isSubReady,\n    currentRouteOption: currentRouteOption\n  };\n  let FlowRouterHelpers;\n\n  if (Meteor.isServer) {\n    FlowRouterHelpers = {\n      pathFor: pathFor,\n      urlFor: urlFor\n    };\n  } else {\n    FlowRouterHelpers = frHelpers; // If blaze is in use, register global helpers\n\n    if (Template) {\n      var _arr2 = Object.entries(frHelpers);\n\n      for (var _i2 = 0; _i2 < _arr2.length; _i2++) {\n        const [name, helper] = _arr2[_i2];\n        Template.registerHelper(name, helper);\n      }\n    }\n  }\n\n  return Object.assign({}, ActiveRoute, FlowRouterHelpers);\n};\n\nmodule.exportDefault(init);","map":{"version":3,"sources":["packages/ostrio:flow-router-extra/client/active.route.js"],"names":["Meteor","module","link","v","_helpers","check","Match","ReactiveDict","Template","Package","templating","init","FlowRouter","errorMessages","noSupportedRouter","invalidRouteNameArgument","invalidRouteParamsArgument","checkRouteOrPath","arg","OneOf","RegExp","String","e","Error","checkParams","Object","config","setDefault","activeClass","caseSensitive","disabledClass","test","_value","_pattern","value","pattern","search","equals","toLowerCase","ActiveRoute","configure","apply","arguments","options","isServer","set","name","routeName","routeParams","currentPath","currentRouteName","path","isEmpty","watchPathChange","current","getRouteName","isActive","type","inverse","helperName","_options","_attributes","isObject","hash","attributes","regex","extend","ObjectIncluding","class","Optional","className","t","_debug","isRegExp","isString","get","isPath","result","data","omit","arHelpers","isActiveRoute","isActivePath","isNotActiveRoute","isNotActivePath","entries","helper","registerHelper","subsReady","_subs","subs","slice","length","filter","memo","sub","pathFor","_path","_view","view","route","query","_qs","parse","hashBang","urlFor","absoluteUrl","substr","param","getParam","queryParam","key","getQueryParam","currentRouteOption","optionName","isSubReady","frHelpers","FlowRouterHelpers","assign","exportDefault"],"mappings":"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","sourcesContent":["import { Meteor }       from 'meteor/meteor';\nimport { _helpers }     from './../lib/_helpers.js';\nimport { check, Match } from 'meteor/check';\nimport { ReactiveDict } from 'meteor/reactive-dict';\n\nlet Template;\nif (Package.templating) {\n  Template = Package.templating.Template;\n}\n\nconst init = (FlowRouter) => {\n  // Active Route\n  // https://github.com/meteor-activeroute/legacy\n  // zimme:active-route\n  // License (MIT License): https://github.com/meteor-activeroute/legacy/blob/master/LICENSE.md\n  // Lib\n  const errorMessages = {\n    noSupportedRouter: 'No supported router installed. Please install flow-router.',\n    invalidRouteNameArgument: 'Invalid argument, must be String or RegExp.',\n    invalidRouteParamsArgument: 'Invalid argument, must be Object.'\n  };\n\n  const checkRouteOrPath = (arg) => {\n    try {\n      return check(arg, Match.OneOf(RegExp, String));\n    } catch (e) {\n      throw new Error(errorMessages.invalidRouteNameArgument);\n    }\n  };\n\n  const checkParams = (arg) => {\n    try {\n      return check(arg, Object);\n    } catch (e) {\n      throw new Error(errorMessages.invalidRouteParamsArgument);\n    }\n  };\n\n  const config = new ReactiveDict('activeRouteConfig');\n  config.setDefault({\n    activeClass: 'active',\n    caseSensitive: true,\n    disabledClass: 'disabled'\n  });\n\n  const test = (_value, _pattern) => {\n    let value = _value;\n    let pattern = _pattern;\n    if (!value) {\n      return false;\n    }\n\n    if (Match.test(pattern, RegExp)) {\n      return value.search(pattern) > -1;\n    }\n\n    if (Match.test(pattern, String)) {\n      if (config.equals('caseSensitive', false)) {\n        value = value.toLowerCase();\n        pattern = pattern.toLowerCase();\n      }\n      return (value === pattern);\n    }\n\n    return false;\n  };\n\n  const ActiveRoute = {\n    config() {\n      return this.configure.apply(this, arguments);\n    },\n    configure(options) {\n      if (!Meteor.isServer) {\n        config.set(options);\n      }\n    },\n    name(routeName, routeParams = {}) {\n      if (Meteor.isServer) {\n        return void 0;\n      }\n      checkRouteOrPath(routeName);\n      checkParams(routeParams);\n\n      let currentPath;\n      let currentRouteName;\n      let path;\n      if (!_helpers.isEmpty(routeParams) && Match.test(routeName, String)) {\n        FlowRouter.watchPathChange();\n        currentPath = FlowRouter.current().path;\n        path = FlowRouter.path(routeName, routeParams);\n      } else {\n        currentRouteName = FlowRouter.getRouteName();\n      }\n      return test(currentPath || currentRouteName, path || routeName);\n    },\n    path(path) {\n      if (Meteor.isServer) {\n        return void 0;\n      }\n      checkRouteOrPath(path);\n\n      FlowRouter.watchPathChange();\n      return test(FlowRouter.current().path, path);\n    }\n  };\n\n  // Client\n  const isActive = (type, inverse = false) => {\n    let helperName;\n\n    helperName = 'is';\n    if (inverse) {\n      helperName += 'Not';\n    }\n    helperName += 'Active' + type;\n\n    return (_options = {}, _attributes = {}) => {\n      let options    = (_helpers.isObject(_options)) ? (_options.hash || _options) : _options;\n      let attributes = (_helpers.isObject(_attributes)) ? (_attributes.hash || _attributes) : _attributes;\n\n      if (Match.test(options, String)) {\n        if (config.equals('regex', true)) {\n          options = {\n            regex: options\n          };\n        } else if (type === 'Path') {\n          options = {\n            path: options\n          };\n        } else {\n          options = {\n            name: options\n          };\n        }\n      }\n      options = _helpers.extend(options, attributes);\n      const pattern = Match.ObjectIncluding({\n        class: Match.Optional(String),\n        className: Match.Optional(String),\n        regex: Match.Optional(Match.OneOf(RegExp, String)),\n        name: Match.Optional(String),\n        path: Match.Optional(String)\n      });\n      check(options, pattern);\n\n      let regex     = options.regex;\n      let name      = options.name;\n      let path      = options.path;\n      let className = options.class ? options.class : options.className;\n      if (type === 'Path') {\n        name = null;\n      } else {\n        path = null;\n      }\n\n      if (!(regex || name || path)) {\n        const t = (type === 'Route' ? 'name' : type).toLowerCase();\n        Meteor._debug(('Invalid argument, ' + helperName + ' takes \"' + t + '\", ') + (t + '=\"' + t + '\" or regex=\"regex\"'));\n        return false;\n      }\n\n      if (Match.test(regex, String)) {\n        if (config.equals('caseSensitive', false)) {\n          regex = new RegExp(regex, 'i');\n        } else {\n          regex = new RegExp(regex);\n        }\n      }\n\n      if (!_helpers.isRegExp(regex)) {\n        regex = name || path;\n      }\n\n      if (inverse) {\n        if (!_helpers.isString(className)) {\n          className = config.get('disabledClass');\n        }\n      } else {\n        if (!_helpers.isString(className)) {\n          className = config.get('activeClass');\n        }\n      }\n\n      let isPath;\n      let result;\n      if (type === 'Path') {\n        isPath = true;\n      }\n\n      if (isPath) {\n        result = ActiveRoute.path(regex);\n      } else {\n        options = _helpers.extend(attributes.data, attributes);\n        result = ActiveRoute.name(regex, _helpers.omit(options, ['class', 'className', 'data', 'regex', 'name', 'path']));\n      }\n\n      if (inverse) {\n        result = !result;\n      }\n\n      if (result) {\n        return className;\n      }\n      return false;\n    };\n  };\n\n  const arHelpers = {\n    isActiveRoute: isActive('Route'),\n    isActivePath: isActive('Path'),\n    isNotActiveRoute: isActive('Route', true),\n    isNotActivePath: isActive('Path', true)\n  };\n\n  // If blaze is in use, register global helpers\n  if (Template) {\n    for (const [name, helper] of Object.entries(arHelpers)) {\n      Template.registerHelper(name, helper);\n    }\n  }\n\n  // FlowRouter Helpers\n  // arillo:flow-router-helpers\n  // https://github.com/arillo/meteor-flow-router-helpers\n  // License (MIT License): https://github.com/arillo/meteor-flow-router-helpers/blob/master/LICENCE\n  const subsReady = (..._subs) => {\n    let subs = _subs.slice(0, -1);\n    if (subs.length === 1) {\n      return FlowRouter.subsReady();\n    }\n\n    return subs.filter((memo, sub) => {\n      if (_helpers.isString(sub)) {\n        return memo && FlowRouter.subsReady(sub);\n      }\n    }, true);\n  };\n\n  const pathFor = (_path, _view = {hash: {}}) => {\n    let path = _path;\n    let view = _view;\n    if (!path) {\n      throw new Error('no path defined');\n    }\n\n    if (!view.hash) {\n      view = {\n        hash: view\n      };\n    }\n\n    if (path.hash && path.hash.route) {\n      view = path;\n      path = view.hash.route;\n      delete view.hash.route;\n    }\n    const query    = view.hash.query ? FlowRouter._qs.parse(view.hash.query) : {};\n    const hashBang = view.hash.hash ? view.hash.hash : '';\n    return FlowRouter.path(path, view.hash, query) + (hashBang ? '#' + hashBang : '');\n  };\n\n  const urlFor = (path, view) => {\n    return Meteor.absoluteUrl(pathFor(path, view).substr(1));\n  };\n\n  const param = (name) => {\n    return FlowRouter.getParam(name);\n  };\n\n  const queryParam = (key) => {\n    return FlowRouter.getQueryParam(key);\n  };\n\n  const currentRouteName = () => {\n    return FlowRouter.getRouteName();\n  };\n\n  const currentRouteOption = (optionName) => {\n    return FlowRouter.current().route.options[optionName];\n  };\n\n  const isSubReady = (sub) => {\n    if (sub) {\n      return FlowRouter.subsReady(sub);\n    }\n    return FlowRouter.subsReady();\n  };\n\n  const frHelpers = {\n    subsReady: subsReady,\n    pathFor: pathFor,\n    urlFor: urlFor,\n    param: param,\n    queryParam: queryParam,\n    currentRouteName: currentRouteName,\n    isSubReady: isSubReady,\n    currentRouteOption: currentRouteOption\n  };\n\n  let FlowRouterHelpers;\n\n  if (Meteor.isServer) {\n    FlowRouterHelpers = {\n      pathFor: pathFor,\n      urlFor: urlFor\n    };\n  } else {\n    FlowRouterHelpers = frHelpers;\n    // If blaze is in use, register global helpers\n    if (Template) {\n      for (const [name, helper] of Object.entries(frHelpers)) {\n        Template.registerHelper(name, helper);\n      }\n    }\n  }\n\n  return Object.assign({}, ActiveRoute, FlowRouterHelpers);\n};\n\nexport default init;\n"]},"sourceType":"script","hash":"e7f92e01e05cf7e2ff182a11eeed22e939360cc4"}
