{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/common/item.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser.legacy"},"sourceFileName":"packages/randyp:mats-common/templates/common/item.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/common/item.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/common/item.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/randyp:mats-common/templates/common/item.js"}},"code":"var matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes: function (v) {\n    matsTypes = v;\n  }\n}, 0);\nvar matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils: function (v) {\n    matsCurveUtils = v;\n  }\n}, 1);\nvar matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils: function (v) {\n    matsParamUtils = v;\n  }\n}, 2);\nvar matsCollections;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCollections: function (v) {\n    matsCollections = v;\n  }\n}, 3);\nTemplate.item.helpers({\n  cbname: function () {\n    if (this.controlButtonText !== undefined) {\n      return this.controlButtonText.toUpperCase();\n    }\n\n    return this.name.toUpperCase();\n  },\n  textValue: function () {\n    Session.get('lastUpdate');\n\n    if (this.name === \"label\") {\n      // label is handled specially\n      return;\n    }\n\n    if (matsParamUtils.getInputElementForParamName(this.name)) {\n      return this.default;\n    }\n\n    if (this.value) {\n      return this.value;\n    } else {\n      if (this.type === matsTypes.InputTypes.select && (this.default === -1 || this.default === undefined || this.default === matsTypes.InputTypes.unused)) {\n        return matsTypes.InputTypes.unused;\n      } else {\n        return this.default;\n      }\n    }\n  },\n  hasHelp: function () {\n    return this.help !== undefined;\n  },\n  isSelect: function () {\n    /* A selectOrderEnforced differs from a select\n        only in that the options - other than the default first option -\n        must be chosen in order. In other words if the user attempts to select\n        the second option prior to selecting the first option a validation error occurs.\n     */\n    return typeof this.type !== 'undefined' && (this.type == matsTypes.InputTypes.select || this.type == matsTypes.InputTypes.selectOrderEnforced);\n  },\n  isSelectMap: function () {\n    return typeof this.type !== 'undefined' && this.type == matsTypes.InputTypes.selectMap;\n  },\n  isInput: function () {\n    return typeof this.type !== 'undefined' && this.type == matsTypes.InputTypes.textInput;\n  },\n  isSpinner: function () {\n    return typeof this.type !== 'undefined' && this.type == matsTypes.InputTypes.numberSpinner;\n  },\n  isDateRange: function () {\n    return typeof this.type !== 'undefined' && this.type == matsTypes.InputTypes.dateRange;\n  },\n  isCheckBoxGroup: function () {\n    return typeof this.type !== 'undefined' && this.type == matsTypes.InputTypes.checkBoxGroup;\n  },\n  isRadioGroup: function () {\n    return typeof this.type !== 'undefined' && this.type == matsTypes.InputTypes.radioGroup;\n  },\n  controlButton: function () {\n    return matsTypes.InputTypes.controlButton + \"-\" + this.name;\n  },\n  resetButton: function () {\n    return matsTypes.InputTypes.resetButton + \"-\" + this.type;\n  },\n  element: function () {\n    return matsTypes.InputTypes.element + \"-\" + this.name;\n  },\n  display: function () {\n    if (this.hidden) {\n      return \"none;margin-top: 1.5em;\";\n    }\n\n    if (this.displayPriority !== undefined && this.displayPriority > Session.get('displayPriority')) {\n      return \"none;margin-top: 1.5em;\";\n    } else {\n      return \"block;margin-top: 1.5em;\";\n    }\n  },\n  controlButtonVisibility: function () {\n    if (this.controlButtonCovered) {\n      return \"block;\";\n    } else {\n      return \"none\";\n    }\n  },\n  elementHidden: function () {\n    if (this.controlButtonCovered) {\n      return \"none\";\n    } else {\n      return \"block\";\n    }\n  }\n});\nTemplate.item.events({\n  'click .control-button': function (event) {\n    Session.set(\"elementChanged\", Date.now());\n    var elem = document.getElementById(matsTypes.InputTypes.element + \"-\" + this.name);\n\n    if (elem === undefined) {\n      return false;\n    }\n\n    if (elem !== null && elem.style.display === \"block\") {\n      elem.style.display = \"none\";\n    } else {\n      matsParamUtils.collapseParams();\n\n      if (elem !== null) {\n        elem.style.display = \"block\";\n\n        if (this.type == matsTypes.InputTypes.select) {\n          var s = document.getElementById(this.name + '-' + this.type);\n          var ref = \"#\" + this.name + \"-\" + this.type;\n          $(ref).select2(\"open\"); // need to foricibly open the selector for the select2\n        }\n\n        if (this.type == matsTypes.InputTypes.selectMap) {\n          $(\"#mapModal\").modal('show');\n          window.dispatchEvent(new Event('resize'));\n        }\n      }\n    }\n  },\n  'click .data-input': function (event) {\n    Session.set(\"elementChanged\", Date.now());\n\n    if (this.displayPriority !== undefined) {\n      Session.set('displayPriority', this.displayPriority + 1);\n    }\n\n    var formats = Object.keys(matsTypes.PlotFormats);\n\n    if ($.inArray(this, formats) !== -1) {\n      Session.set('diffStatus', this);\n    }\n\n    if (this.multiple !== true && this.type !== matsTypes.InputTypes.numberSpinner && this.type !== matsTypes.InputTypes.textInput) {\n      // not too cool to collapse when trying to do a multi-select, a textInput, or a numberspinner\n      matsParamUtils.collapseParam(this.name);\n    }\n  },\n  'change .data-input': function (event) {\n    Session.set(\"elementChanged\", Date.now());\n    event.target.checkValidity();\n\n    if (this.type !== matsTypes.InputTypes.numberSpinner) {\n      event.target.checkValidity();\n      var elem = document.getElementById(matsTypes.InputTypes.element + \"-\" + this.name);\n\n      if (elem === undefined) {\n        return false;\n      }\n\n      if (elem !== null && elem.style.display === \"block\" && this.multiple !== true) {\n        elem.style.display = \"none\";\n      } else {\n        if (elem !== null) {\n          elem.style.display = \"block\";\n        }\n      }\n    }\n\n    var curveItem = Session.get(\"editMode\") === undefined && Session.get(\"editMode\") === \"\" ? undefined : document.getElementById(\"curveItem-\" + Session.get(\"editMode\"));\n\n    if (curveItem) {\n      $('#save').trigger('click');\n    }\n  },\n  'click .help': function () {\n    var helpref = Session.get(\"app\").helpref;\n    $(\"#matshelp\").load(helpref + \"/\" + this.help + \" #matshelp\");\n    $(\"#helpModal\").modal('show');\n  },\n  'invalid': function (event) {\n    if (this.type === matsTypes.InputTypes.numberSpinner) {\n      var param = matsCollections.CurveParams.findOne({\n        name: event.currentTarget.name\n      });\n\n      if (param === undefined) {\n        return;\n      }\n\n      setError(new Error('invalid value (' + event.currentTarget.value + ') for ' + event.currentTarget.name + \" it must be between \" + event.currentTarget.min + \" and \" + event.currentTarget.max + \" -- resetting to default value: \" + default_value));\n    } else {\n      var errMsg = Session.get('errorMessage');\n\n      if (errMsg === \"\") {\n        errMsg = 'invalid value (' + event.currentTarget.value + ') for ' + event.currentTarget.name;\n      }\n\n      setError(new Error(errMsg));\n    }\n\n    var default_value = matsCollections.CurveParams.findOne({\n      name: event.currentTarget.name\n    }).default;\n    event.currentTarget.value = default_value;\n  }\n});","map":{"version":3,"sources":["packages/randyp:mats-common/templates/common/item.js"],"names":["matsTypes","module","link","v","matsCurveUtils","matsParamUtils","matsCollections","Template","item","helpers","cbname","controlButtonText","undefined","toUpperCase","name","textValue","Session","get","getInputElementForParamName","default","value","type","InputTypes","select","unused","hasHelp","help","isSelect","selectOrderEnforced","isSelectMap","selectMap","isInput","textInput","isSpinner","numberSpinner","isDateRange","dateRange","isCheckBoxGroup","checkBoxGroup","isRadioGroup","radioGroup","controlButton","resetButton","element","display","hidden","displayPriority","controlButtonVisibility","controlButtonCovered","elementHidden","events","event","set","Date","now","elem","document","getElementById","style","collapseParams","s","ref","$","select2","modal","window","dispatchEvent","Event","formats","Object","keys","PlotFormats","inArray","multiple","collapseParam","target","checkValidity","curveItem","trigger","helpref","load","param","CurveParams","findOne","currentTarget","setError","Error","min","max","default_value","errMsg"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsTypes } from 'meteor/randyp:mats-common';\nimport { matsCurveUtils } from  'meteor/randyp:mats-common';\nimport {matsParamUtils } from 'meteor/randyp:mats-common';\nimport {matsCollections } from 'meteor/randyp:mats-common';\n\nTemplate.item.helpers({\n    cbname: function() {\n        if (this.controlButtonText !== undefined) {\n            return this.controlButtonText.toUpperCase();\n        }\n        return this.name.toUpperCase();\n    },\n    textValue: function() {\n        Session.get('lastUpdate');\n        if (this.name === \"label\") {  // label is handled specially\n            return;\n        }\n        if (matsParamUtils.getInputElementForParamName(this.name)) {\n            return this.default;\n        }\n        if (this.value) {\n            return this.value;\n        } else {\n            if (this.type === matsTypes.InputTypes.select && (this.default === -1 || this.default === undefined || this.default === matsTypes.InputTypes.unused)) {\n                return matsTypes.InputTypes.unused;\n            } else {\n                return this.default;\n            }\n        }\n    },\n    hasHelp: function() {\n      return this.help !== undefined;\n    },\n    isSelect: function () {\n        /* A selectOrderEnforced differs from a select\n            only in that the options - other than the default first option -\n            must be chosen in order. In other words if the user attempts to select\n            the second option prior to selecting the first option a validation error occurs.\n         */\n        return ((typeof this.type !== 'undefined') &&\n            ((this.type == matsTypes.InputTypes.select) ||(this.type == matsTypes.InputTypes.selectOrderEnforced)));\n    },\n    isSelectMap: function () {\n        return ((typeof this.type !== 'undefined') && (this.type == matsTypes.InputTypes.selectMap));\n    },\n    isInput: function () {\n        return ((typeof this.type !== 'undefined')  && (this.type == matsTypes.InputTypes.textInput));\n    },\n    isSpinner: function () {\n        return ((typeof this.type !== 'undefined') && (this.type == matsTypes.InputTypes.numberSpinner));\n    },\n    isDateRange: function () {\n        return ((typeof this.type !== 'undefined') && (this.type == matsTypes.InputTypes.dateRange));\n    },\n    isCheckBoxGroup: function () {\n        return ((typeof this.type !== 'undefined') && (this.type == matsTypes.InputTypes.checkBoxGroup));\n    },\n    isRadioGroup: function () {\n        return ((typeof this.type !== 'undefined') && (this.type == matsTypes.InputTypes.radioGroup));\n    },\n    controlButton: function() {\n        return matsTypes.InputTypes.controlButton + \"-\" + this.name;\n    },\n    resetButton: function() {\n        return matsTypes.InputTypes.resetButton + \"-\" + this.type;\n    },\n    element: function() {\n        return matsTypes.InputTypes.element + \"-\" + this.name;\n    },\n    display: function() {\n        if (this.hidden) {\n            return \"none;margin-top: 1.5em;\";\n        }\n        if (this.displayPriority !== undefined && this.displayPriority > Session.get('displayPriority')){\n            return \"none;margin-top: 1.5em;\";\n        }\n        else {\n            return \"block;margin-top: 1.5em;\";\n        }\n    },\n    controlButtonVisibility: function() {\n        if (this.controlButtonCovered) {\n            return \"block;\";\n        } else {\n            return \"none\";\n        }\n    },\n    elementHidden: function() {\n        if (this.controlButtonCovered) {\n            return \"none\";\n        } else {\n            return \"block\";\n        }\n    }\n});\n\nTemplate.item.events({\n    'click .control-button': function (event) {\n        Session.set(\"elementChanged\", Date.now());\n        var elem = document.getElementById(matsTypes.InputTypes.element + \"-\" + this.name);\n        if (elem === undefined) {\n            return false;\n        }\n        if (elem !== null && elem.style.display === \"block\") {\n            elem.style.display = \"none\";\n        } else {\n            matsParamUtils.collapseParams();\n            if (elem !== null) {\n                elem.style.display = \"block\";\n                if (this.type == matsTypes.InputTypes.select) {\n                    var s = document.getElementById(this.name + '-' + this.type);\n                    const ref = \"#\" + this.name + \"-\" + this.type;\n                    $(ref).select2(\"open\");   // need to foricibly open the selector for the select2\n                }\n                if (this.type == matsTypes.InputTypes.selectMap) {\n                    $(\"#mapModal\").modal('show');\n                    window.dispatchEvent(new Event('resize'));\n                }\n            }\n        }\n    },\n    'click .data-input': function (event) {\n        Session.set(\"elementChanged\", Date.now());\n        if (this.displayPriority !== undefined) {\n            Session.set('displayPriority', this.displayPriority + 1);\n        }\n        var formats = Object.keys(matsTypes.PlotFormats);\n        if ($.inArray(this,formats) !== -1){\n            Session.set('diffStatus',this);\n        }\n        if (this.multiple !== true && this.type !== matsTypes.InputTypes.numberSpinner && this.type !== matsTypes.InputTypes.textInput) {\n            // not too cool to collapse when trying to do a multi-select, a textInput, or a numberspinner\n                matsParamUtils.collapseParam(this.name);\n        }\n    },\n    'change .data-input': function (event) {\n        Session.set(\"elementChanged\", Date.now());\n        event.target.checkValidity();\n        if (this.type !== matsTypes.InputTypes.numberSpinner) {\n            event.target.checkValidity();\n            var elem = document.getElementById(matsTypes.InputTypes.element + \"-\" + this.name);\n            if (elem === undefined) {\n                return false;\n            }\n            if (elem !== null && elem.style.display === \"block\" && this.multiple !== true) {\n                elem.style.display = \"none\";\n            } else {\n                if (elem !== null) {\n                    elem.style.display = \"block\";\n                }\n            }\n         }\n        const curveItem = (Session.get(\"editMode\") === undefined && Session.get(\"editMode\") === \"\") ? undefined : document.getElementById(\"curveItem-\" + Session.get(\"editMode\"));\n        if (curveItem) {\n            $('#save').trigger('click');\n        }\n\n    },\n\n    'click .help' : function() {\n        var helpref = Session.get(\"app\").helpref;\n        $(\"#matshelp\").load(helpref + \"/\" + this.help + \" #matshelp\");\n        $(\"#helpModal\").modal('show');\n    },\n    'invalid' : function(event) {\n        if (this.type === matsTypes.InputTypes.numberSpinner) {\n            const param = matsCollections.CurveParams.findOne( {name: event.currentTarget.name} );\n            if (param === undefined) {\n                return;\n            }\n            setError(new Error('invalid value (' + event.currentTarget.value + ') for ' + event.currentTarget.name + \" it must be between \" + event.currentTarget.min + \" and \" + event.currentTarget.max + \" -- resetting to default value: \" + default_value));\n        } else {\n            var errMsg = Session.get('errorMessage');\n            if (errMsg === \"\") {\n                errMsg = 'invalid value (' + event.currentTarget.value + ') for ' + event.currentTarget.name;\n            }\n            setError(new Error(errMsg));\n        }\n        const default_value = matsCollections.CurveParams.findOne( {name: event.currentTarget.name} ).default;\n        event.currentTarget.value = default_value;\n    }\n});\n\n\n"]},"sourceType":"script","hash":"81999d06f822d5f9aeb0531b848ba0958669cfa3"}
