{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/common/text_input.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/randyp:mats-common/templates/common/text_input.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/common/text_input.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/randyp:mats-common/templates/common/text_input.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/randyp:mats-common/templates/common/text_input.js"}},"code":"let matsCurveUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsCurveUtils(v) {\n    matsCurveUtils = v;\n  }\n\n}, 0);\nlet matsParamUtils;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsParamUtils(v) {\n    matsParamUtils = v;\n  }\n\n}, 1);\nlet matsTypes;\nmodule.link(\"meteor/randyp:mats-common\", {\n  matsTypes(v) {\n    matsTypes = v;\n  }\n\n}, 2);\nTemplate.textInput.helpers({\n  defaultTextInput: function () {\n    if (this.name == 'label') {\n      // labels are handled specially\n      var label;\n      var input = document.getElementById('label-textInput');\n      var value = document.getElementById('controlButton-label-value');\n\n      if (input && value) {\n        if (label !== input.value || label != value.textContent) {\n          if (!Session.get('NextCurveLabel')) {\n            label = matsCurveUtils.getNextCurveLabel();\n          } else {\n            label = Session.get('NextCurveLabel');\n          }\n\n          input.value = label;\n          value.textContent = label;\n          return label;\n        }\n      } else {\n        // must be initialization\n        label = matsCurveUtils.getNextCurveLabel();\n        return label;\n      }\n    } else {\n      return this.default;\n    }\n  }\n});\nTemplate.textInput.events({\n  'click, blur': function (event) {\n    try {\n      // label is handled differently - special case because of NextCurveLabel stored in Session\n      const text = event.currentTarget.value;\n\n      if (event.target.name == \"label\" && Session.get('NextCurveLabel') == text) {} else {\n        matsParamUtils.setValueTextForParamName(event.target.name, text);\n      }\n    } catch (error) {\n      matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n    }\n  },\n  'change': function (event) {\n    try {\n      // label is handled differently - special case because of NextCurveLabel stored in Session\n      const text = event.currentTarget.value;\n\n      if (Object.values(matsTypes.ReservedWords).indexOf(text) === -1) {\n        matsParamUtils.setValueTextForParamName(event.target.name, text);\n        Session.set(\"NextCurveLabel\", text);\n      } else {\n        console.log(\"that curve label is not allowed\");\n        setTimeout(function () {\n          matsParamUtils.setValueTextForParamName(event.target.name, \"LabelNotAllowed\");\n        }, 10);\n      }\n    } catch (error) {\n      matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n    }\n  }\n});","map":{"version":3,"sources":["packages/randyp:mats-common/templates/common/text_input.js"],"names":["matsCurveUtils","module","link","v","matsParamUtils","matsTypes","Template","textInput","helpers","defaultTextInput","name","label","input","document","getElementById","value","textContent","Session","get","getNextCurveLabel","default","events","event","text","currentTarget","target","setValueTextForParamName","error","Object","values","ReservedWords","indexOf","set","console","log","setTimeout"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2019 Colorado State University and Regents of the University of Colorado. All rights reserved.\n */\n\nimport { matsCurveUtils } from 'meteor/randyp:mats-common';\nimport { matsParamUtils } from 'meteor/randyp:mats-common'\nimport { matsTypes } from 'meteor/randyp:mats-common'\nTemplate.textInput.helpers({\n    defaultTextInput: function() {\n        if (this.name == 'label') {   // labels are handled specially\n            var label;\n            var input = document.getElementById('label-textInput');\n            var value = document.getElementById('controlButton-label-value');\n            if (input && value) {\n                if (label !== input.value || label != value.textContent) {\n                    if (!Session.get('NextCurveLabel')) {\n                        label = matsCurveUtils.getNextCurveLabel();\n                    } else {\n                        label = Session.get('NextCurveLabel');\n                    }\n                    input.value = label;\n                    value.textContent = label;\n                    return label;\n                }\n            } else {\n                // must be initialization\n                label = matsCurveUtils.getNextCurveLabel();\n                return label;\n            }\n        } else {\n            return this.default;\n        }\n    }\n});\n\nTemplate.textInput.events({\n    'click, blur': function (event) {\n        try {\n            // label is handled differently - special case because of NextCurveLabel stored in Session\n            const text = event.currentTarget.value;\n            if (event.target.name == \"label\" && Session.get('NextCurveLabel') == text) {\n            } else {\n                matsParamUtils.setValueTextForParamName(event.target.name, text);\n            }\n        } catch (error){\n            matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n        }\n    },\n    'change': function (event) {\n        try {\n            // label is handled differently - special case because of NextCurveLabel stored in Session\n            const text = event.currentTarget.value;\n            if (Object.values(matsTypes.ReservedWords).indexOf(text) === -1) {\n                matsParamUtils.setValueTextForParamName(event.target.name, text);\n                Session.set(\"NextCurveLabel\", text);\n            } else {\n                console.log(\"that curve label is not allowed\");\n                setTimeout(function (){\n                    matsParamUtils.setValueTextForParamName(event.target.name, \"LabelNotAllowed\");\n                }, 10);\n            }\n        } catch (error){\n            matsParamUtils.setValueTextForParamName(event.target.name, \"\");\n        }\n    }\n});\n\n"]},"sourceType":"script","hash":"34015b1c5983f8883f751a91df88f155f15b7b56"}
