{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/oauth/pending_credentials.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/oauth/pending_credentials.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/oauth/pending_credentials.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/oauth/pending_credentials.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/oauth/pending_credentials.js"}},"code":"//\n// When an oauth request is made, Meteor receives oauth credentials\n// in one browser tab, and temporarily persists them while that\n// tab is closed, then retrieves them in the browser tab that\n// initiated the credential request.\n//\n// _pendingCredentials is the storage mechanism used to share the\n// credential between the 2 tabs\n//\n// Collection containing pending credentials of oauth credential requests\n// Has key, credential, and createdAt fields.\nOAuth._pendingCredentials = new Mongo.Collection(\"meteor_oauth_pendingCredentials\", {\n  _preventAutopublish: true\n});\n\nOAuth._pendingCredentials._ensureIndex('key', {\n  unique: 1\n});\n\nOAuth._pendingCredentials._ensureIndex('credentialSecret');\n\nOAuth._pendingCredentials._ensureIndex('createdAt'); // Periodically clear old entries that were never retrieved\n\n\nconst _cleanStaleResults = () => {\n  // Remove credentials older than 1 minute\n  const timeCutoff = new Date();\n  timeCutoff.setMinutes(timeCutoff.getMinutes() - 1);\n\n  OAuth._pendingCredentials.remove({\n    createdAt: {\n      $lt: timeCutoff\n    }\n  });\n};\n\nconst _cleanupHandle = Meteor.setInterval(_cleanStaleResults, 60 * 1000); // Stores the key and credential in the _pendingCredentials collection.\n// Will throw an exception if `key` is not a string.\n//\n// @param key {string}\n// @param credential {Object}   The credential to store\n// @param credentialSecret {string} A secret that must be presented in\n//   addition to the `key` to retrieve the credential\n//\n\n\nOAuth._storePendingCredential = (key, credential, credentialSecret = null) => {\n  check(key, String);\n  check(credentialSecret, Match.Maybe(String));\n\n  if (credential instanceof Error) {\n    credential = storableError(credential);\n  } else {\n    credential = OAuth.sealSecret(credential);\n  } // We do an upsert here instead of an insert in case the user happens\n  // to somehow send the same `state` parameter twice during an OAuth\n  // login; we don't want a duplicate key error.\n\n\n  OAuth._pendingCredentials.upsert({\n    key\n  }, {\n    key,\n    credential,\n    credentialSecret,\n    createdAt: new Date()\n  });\n}; // Retrieves and removes a credential from the _pendingCredentials collection\n//\n// @param key {string}\n// @param credentialSecret {string}\n//\n\n\nOAuth._retrievePendingCredential = (key, credentialSecret = null) => {\n  check(key, String);\n\n  const pendingCredential = OAuth._pendingCredentials.findOne({\n    key,\n    credentialSecret\n  });\n\n  if (pendingCredential) {\n    OAuth._pendingCredentials.remove({\n      _id: pendingCredential._id\n    });\n\n    if (pendingCredential.credential.error) return recreateError(pendingCredential.credential.error);else return OAuth.openSecret(pendingCredential.credential);\n  } else {\n    return undefined;\n  }\n}; // Convert an Error into an object that can be stored in mongo\n// Note: A Meteor.Error is reconstructed as a Meteor.Error\n// All other error classes are reconstructed as a plain Error.\n// TODO: Can we do this more simply with EJSON?\n\n\nconst storableError = error => {\n  const plainObject = {};\n  Object.getOwnPropertyNames(error).forEach(key => plainObject[key] = error[key]); // Keep track of whether it's a Meteor.Error\n\n  if (error instanceof Meteor.Error) {\n    plainObject['meteorError'] = true;\n  }\n\n  return {\n    error: plainObject\n  };\n}; // Create an error from the error format stored in mongo\n\n\nconst recreateError = errorDoc => {\n  let error;\n\n  if (errorDoc.meteorError) {\n    error = new Meteor.Error();\n    delete errorDoc.meteorError;\n  } else {\n    error = new Error();\n  }\n\n  Object.getOwnPropertyNames(errorDoc).forEach(key => error[key] = errorDoc[key]);\n  return error;\n};","map":{"version":3,"sources":["packages/oauth/pending_credentials.js"],"names":["OAuth","_pendingCredentials","Mongo","Collection","_preventAutopublish","_ensureIndex","unique","_cleanStaleResults","timeCutoff","Date","setMinutes","getMinutes","remove","createdAt","$lt","_cleanupHandle","Meteor","setInterval","_storePendingCredential","key","credential","credentialSecret","check","String","Match","Maybe","Error","storableError","sealSecret","upsert","_retrievePendingCredential","pendingCredential","findOne","_id","error","recreateError","openSecret","undefined","plainObject","Object","getOwnPropertyNames","forEach","errorDoc","meteorError"],"mappings":"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","sourcesContent":["//\n// When an oauth request is made, Meteor receives oauth credentials\n// in one browser tab, and temporarily persists them while that\n// tab is closed, then retrieves them in the browser tab that\n// initiated the credential request.\n//\n// _pendingCredentials is the storage mechanism used to share the\n// credential between the 2 tabs\n//\n\n\n// Collection containing pending credentials of oauth credential requests\n// Has key, credential, and createdAt fields.\nOAuth._pendingCredentials = new Mongo.Collection(\n  \"meteor_oauth_pendingCredentials\", {\n    _preventAutopublish: true\n  });\n\nOAuth._pendingCredentials._ensureIndex('key', {unique: 1});\nOAuth._pendingCredentials._ensureIndex('credentialSecret');\nOAuth._pendingCredentials._ensureIndex('createdAt');\n\n\n\n// Periodically clear old entries that were never retrieved\nconst _cleanStaleResults = () => {\n  // Remove credentials older than 1 minute\n  const timeCutoff = new Date();\n  timeCutoff.setMinutes(timeCutoff.getMinutes() - 1);\n  OAuth._pendingCredentials.remove({ createdAt: { $lt: timeCutoff } });\n};\nconst _cleanupHandle = Meteor.setInterval(_cleanStaleResults, 60 * 1000);\n\n\n// Stores the key and credential in the _pendingCredentials collection.\n// Will throw an exception if `key` is not a string.\n//\n// @param key {string}\n// @param credential {Object}   The credential to store\n// @param credentialSecret {string} A secret that must be presented in\n//   addition to the `key` to retrieve the credential\n//\nOAuth._storePendingCredential = (key, credential, credentialSecret = null) => {\n  check(key, String);\n  check(credentialSecret, Match.Maybe(String));\n\n  if (credential instanceof Error) {\n    credential = storableError(credential);\n  } else {\n    credential = OAuth.sealSecret(credential);\n  }\n\n  // We do an upsert here instead of an insert in case the user happens\n  // to somehow send the same `state` parameter twice during an OAuth\n  // login; we don't want a duplicate key error.\n  OAuth._pendingCredentials.upsert({\n    key,\n  }, {\n    key,\n    credential,\n    credentialSecret,\n    createdAt: new Date()\n  });\n};\n\n\n// Retrieves and removes a credential from the _pendingCredentials collection\n//\n// @param key {string}\n// @param credentialSecret {string}\n//\nOAuth._retrievePendingCredential = (key, credentialSecret = null) => {\n  check(key, String);\n\n  const pendingCredential = OAuth._pendingCredentials.findOne({\n    key,\n    credentialSecret,\n  });\n\n  if (pendingCredential) {\n    OAuth._pendingCredentials.remove({ _id: pendingCredential._id });\n    if (pendingCredential.credential.error)\n      return recreateError(pendingCredential.credential.error);\n    else\n      return OAuth.openSecret(pendingCredential.credential);\n  } else {\n    return undefined;\n  }\n};\n\n\n// Convert an Error into an object that can be stored in mongo\n// Note: A Meteor.Error is reconstructed as a Meteor.Error\n// All other error classes are reconstructed as a plain Error.\n// TODO: Can we do this more simply with EJSON?\nconst storableError = error => {\n  const plainObject = {};\n  Object.getOwnPropertyNames(error).forEach(\n    key => plainObject[key] = error[key]\n  );\n\n  // Keep track of whether it's a Meteor.Error\n  if(error instanceof Meteor.Error) {\n    plainObject['meteorError'] = true;\n  }\n\n  return { error: plainObject };\n};\n\n// Create an error from the error format stored in mongo\nconst recreateError = errorDoc => {\n  let error;\n\n  if (errorDoc.meteorError) {\n    error = new Meteor.Error();\n    delete errorDoc.meteorError;\n  } else {\n    error = new Error();\n  }\n\n  Object.getOwnPropertyNames(errorDoc).forEach(key =>\n    error[key] = errorDoc[key]\n  );\n\n  return error;\n};\n"]},"sourceType":"script","hash":"34fc36ea82feb243bb3dfbd632e894d9354a4fc8"}
