{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/ostrio:flow-router-extra/server/router.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"os.osx.x86_64"},"sourceFileName":"packages/ostrio:flow-router-extra/server/router.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/ostrio:flow-router-extra/server/router.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/ostrio:flow-router-extra/server/router.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ostrio:flow-router-extra/server/router.js"}},"code":"let page;\nmodule.link(\"page\", {\n  default(v) {\n    page = v;\n  }\n\n}, 0);\nlet Route;\nmodule.link(\"./route.js\", {\n  default(v) {\n    Route = v;\n  }\n\n}, 1);\nlet Group;\nmodule.link(\"./group.js\", {\n  default(v) {\n    Group = v;\n  }\n\n}, 2);\nlet Meteor;\nmodule.link(\"meteor/meteor\", {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 3);\n\nlet _helpers;\n\nmodule.link(\"../lib/_helpers.js\", {\n  _helpers(v) {\n    _helpers = v;\n  }\n\n}, 4);\n\nconst qs = require('qs');\n\nclass Router {\n  constructor() {\n    this.pathRegExp = /(:[\\w\\(\\)\\\\\\+\\*\\.\\?\\[\\]\\-]+)+/g;\n    this._routes = [];\n    this._routesMap = {};\n    this._current = {};\n    this._specialChars = ['/', '%', '+'];\n\n    this._encodeParam = param => {\n      const paramArr = param.split('');\n      let _param = '';\n\n      for (let i = 0; i < paramArr.length; i++) {\n        if (this._specialChars.includes(paramArr[i])) {\n          _param += encodeURIComponent(encodeURIComponent(paramArr[i]));\n        } else {\n          try {\n            _param += encodeURIComponent(paramArr[i]);\n          } catch (e) {\n            _param += paramArr[i];\n          }\n        }\n      }\n\n      return _param;\n    };\n\n    this.subscriptions = Function.prototype; // holds onRoute callbacks\n\n    this._onRouteCallbacks = [];\n    this.triggers = {\n      enter() {// client only\n      },\n\n      exit() {// client only\n      }\n\n    };\n  }\n\n  matchPath(path) {\n    const params = {};\n\n    const route = this._routes.find(r => {\n      const pageRoute = new page.Route(r.pathDef);\n      return pageRoute.match(path, params);\n    });\n\n    if (!route) {\n      return null;\n    }\n\n    return {\n      params: _helpers.clone(params),\n      route: _helpers.clone(route)\n    };\n  }\n\n  setCurrent(current) {\n    this._current = current;\n  }\n\n  route(pathDef, options = {}) {\n    if (!/^\\/.*/.test(pathDef) && pathDef !== '*') {\n      throw new Error('route\\'s path must start with \"/\"');\n    }\n\n    const route = new Route(this, pathDef, options);\n\n    this._routes.push(route);\n\n    if (options.name) {\n      this._routesMap[options.name] = route;\n    }\n\n    this._triggerRouteRegister(route);\n\n    return route;\n  }\n\n  group(options) {\n    return new Group(this, options);\n  }\n\n  path(_pathDef, fields = {}, queryParams) {\n    let pathDef = _pathDef;\n\n    if (this._routesMap[pathDef]) {\n      pathDef = this._routesMap[pathDef].path;\n    }\n\n    let path = pathDef.replace(this.pathRegExp, _key => {\n      const firstRegexpChar = _key.indexOf('('); // get the content behind : and (\\\\d+/)\n\n\n      let key = _key.substring(1, firstRegexpChar > 0 ? firstRegexpChar : undefined); // remove +?*\n\n\n      key = key.replace(/[\\+\\*\\?]+/g, '');\n\n      if (fields[key]) {\n        return this._encodeParam(`${fields[key]}`);\n      }\n\n      return '';\n    });\n    path = path.replace(/\\/\\/+/g, '/'); // Replace multiple slashes with single slash\n    // remove trailing slash\n    // but keep the root slash if it's the only one\n\n    path = path.match(/^\\/{1}$/) ? path : path.replace(/\\/$/, '');\n    const strQueryParams = qs.stringify(queryParams || {});\n\n    if (strQueryParams) {\n      path += `?${strQueryParams}`;\n    }\n\n    return path;\n  }\n\n  onRouteRegister(cb) {\n    this._onRouteCallbacks.push(cb);\n  }\n\n  _triggerRouteRegister(currentRoute) {\n    // We should only need to send a safe set of fields on the route\n    // object.\n    // This is not to hide what's inside the route object, but to show\n    // these are the public APIs\n    const routePublicApi = _helpers.pick(currentRoute, ['name', 'pathDef', 'path']);\n\n    routePublicApi.options = _helpers.omit(currentRoute.options, ['triggersEnter', 'triggersExit', 'action', 'subscriptions', 'name']);\n\n    this._onRouteCallbacks.forEach(cb => {\n      cb(routePublicApi);\n    });\n  }\n\n  go() {// client only\n  }\n\n  current() {\n    // client only\n    return this._current;\n  }\n\n  middleware() {// client only\n  }\n\n  getState() {// client only\n  }\n\n  getAllStates() {// client only\n  }\n\n  getRouteName() {\n    return this._current.route ? this._current.route.name : undefined;\n  }\n\n  getQueryParam(key) {\n    return this._current.query ? this._current.queryParams[key] : undefined;\n  }\n\n  setState() {// client only\n  }\n\n  setParams() {}\n\n  removeState() {// client only\n  }\n\n  clearStates() {// client only\n  }\n\n  ready() {// client only\n  }\n\n  initialize() {// client only\n  }\n\n  wait() {// client only\n  }\n\n  url() {\n    // We need to remove the leading base path, or \"/\", as it will be inserted\n    // automatically by `Meteor.absoluteUrl` as documented in:\n    // http://docs.meteor.com/#/full/meteor_absoluteurl\n    return Meteor.absoluteUrl(this.path.apply(this, arguments).replace(new RegExp('^' + ('/' + (this._basePath || '') + '/').replace(/\\/\\/+/g, '/')), ''));\n  }\n\n}\n\nmodule.exportDefault(Router);","map":{"version":3,"sources":["packages/ostrio:flow-router-extra/server/router.js"],"names":["page","module","link","default","v","Route","Group","Meteor","_helpers","qs","require","Router","constructor","pathRegExp","_routes","_routesMap","_current","_specialChars","_encodeParam","param","paramArr","split","_param","i","length","includes","encodeURIComponent","e","subscriptions","Function","prototype","_onRouteCallbacks","triggers","enter","exit","matchPath","path","params","route","find","r","pageRoute","pathDef","match","clone","setCurrent","current","options","test","Error","push","name","_triggerRouteRegister","group","_pathDef","fields","queryParams","replace","_key","firstRegexpChar","indexOf","key","substring","undefined","strQueryParams","stringify","onRouteRegister","cb","currentRoute","routePublicApi","pick","omit","forEach","go","middleware","getState","getAllStates","getRouteName","getQueryParam","query","setState","setParams","removeState","clearStates","ready","initialize","wait","url","absoluteUrl","apply","arguments","RegExp","_basePath","exportDefault"],"mappings":"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","sourcesContent":["import page         from 'page';\nimport Route        from './route.js';\nimport Group        from './group.js';\nimport { Meteor }   from 'meteor/meteor';\nimport { _helpers } from '../lib/_helpers.js';\n\nconst qs = require('qs');\n\nclass Router {\n  constructor() {\n    this.pathRegExp = /(:[\\w\\(\\)\\\\\\+\\*\\.\\?\\[\\]\\-]+)+/g;\n    this._routes = [];\n    this._routesMap = {};\n    this._current = {};\n    this._specialChars = ['/', '%', '+'];\n    this._encodeParam = param => {\n      const paramArr = param.split('');\n      let _param = '';\n      for (let i = 0; i < paramArr.length; i++) {\n        if (this._specialChars.includes(paramArr[i])) {\n          _param += encodeURIComponent(encodeURIComponent(paramArr[i]));\n        } else {\n          try {\n            _param += encodeURIComponent(paramArr[i]);\n          } catch (e) {\n            _param += paramArr[i];\n          }\n        }\n      }\n      return _param;\n    };\n    this.subscriptions = Function.prototype;\n\n    // holds onRoute callbacks\n    this._onRouteCallbacks = [];\n\n    this.triggers = {\n      enter() {\n        // client only\n      },\n      exit() {\n        // client only\n      }\n    };\n  }\n\n  matchPath(path) {\n    const params = {};\n    const route = this._routes.find(r => {\n      const pageRoute = new page.Route(r.pathDef);\n      return pageRoute.match(path, params);\n    });\n    if (!route) {\n      return null;\n    }\n\n    return {\n      params: _helpers.clone(params),\n      route: _helpers.clone(route),\n    };\n  }\n\n  setCurrent(current) {\n    this._current = current;\n  }\n\n  route(pathDef, options = {}) {\n    if (!/^\\/.*/.test(pathDef) && pathDef !== '*') {\n      throw new Error('route\\'s path must start with \"/\"');\n    }\n\n    const route = new Route(this, pathDef, options);\n    this._routes.push(route);\n\n    if (options.name) {\n      this._routesMap[options.name] = route;\n    }\n\n    this._triggerRouteRegister(route);\n    return route;\n  }\n\n  group(options) {\n    return new Group(this, options);\n  }\n\n  path(_pathDef, fields = {}, queryParams) {\n    let pathDef = _pathDef;\n    if (this._routesMap[pathDef]) {\n      pathDef = this._routesMap[pathDef].path;\n    }\n\n    let path = pathDef.replace(this.pathRegExp, (_key) => {\n      const firstRegexpChar = _key.indexOf('(');\n      // get the content behind : and (\\\\d+/)\n      let key = _key.substring(1, firstRegexpChar > 0 ? firstRegexpChar : undefined);\n      // remove +?*\n      key = key.replace(/[\\+\\*\\?]+/g, '');\n\n      if (fields[key]) {\n        return this._encodeParam(`${fields[key]}`);\n      }\n\n      return '';\n    });\n\n    path = path.replace(/\\/\\/+/g, '/'); // Replace multiple slashes with single slash\n\n    // remove trailing slash\n    // but keep the root slash if it's the only one\n    path = path.match(/^\\/{1}$/) ? path : path.replace(/\\/$/, '');\n\n    const strQueryParams = qs.stringify(queryParams || {});\n    if (strQueryParams) {\n      path += `?${strQueryParams}`;\n    }\n\n    return path;\n  }\n\n  onRouteRegister(cb) {\n    this._onRouteCallbacks.push(cb);\n  }\n\n  _triggerRouteRegister(currentRoute) {\n    // We should only need to send a safe set of fields on the route\n    // object.\n    // This is not to hide what's inside the route object, but to show\n    // these are the public APIs\n    const routePublicApi = _helpers.pick(currentRoute, [\n      'name',\n      'pathDef',\n      'path',\n    ]);\n    routePublicApi.options = _helpers.omit(currentRoute.options, [\n      'triggersEnter',\n      'triggersExit',\n      'action',\n      'subscriptions',\n      'name',\n    ]);\n\n    this._onRouteCallbacks.forEach(cb => {\n      cb(routePublicApi);\n    });\n  }\n\n  go() {\n    // client only\n  }\n\n  current() {\n    // client only\n    return this._current;\n  }\n\n  middleware() {\n    // client only\n  }\n\n  getState() {\n    // client only\n  }\n\n  getAllStates() {\n    // client only\n  }\n\n  getRouteName() {\n    return this._current.route ? this._current.route.name : undefined;\n  }\n\n  getQueryParam(key) {\n    return this._current.query ? this._current.queryParams[key] : undefined;\n  }\n\n  setState() {\n    // client only\n  }\n\n  setParams() {}\n\n  removeState() {\n    // client only\n  }\n\n  clearStates() {\n    // client only\n  }\n\n  ready() {\n    // client only\n  }\n\n  initialize() {\n    // client only\n  }\n\n  wait() {\n    // client only\n  }\n\n  url() {\n    // We need to remove the leading base path, or \"/\", as it will be inserted\n    // automatically by `Meteor.absoluteUrl` as documented in:\n    // http://docs.meteor.com/#/full/meteor_absoluteurl\n    return Meteor.absoluteUrl(this.path.apply(this, arguments).replace(new RegExp('^' + ('/' + (this._basePath || '') + '/').replace(/\\/\\/+/g, '/')), ''));\n  }\n}\n\nexport default Router;\n"]},"sourceType":"script","hash":"1ecc1705aed7fbc3a2cb8c93b60354377400a78a"}
