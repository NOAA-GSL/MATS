{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/ddp-common/heartbeat.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"caller":{"name":"meteor","arch":"web.browser"},"sourceFileName":"packages/ddp-common/heartbeat.js","filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/ddp-common/heartbeat.js","passPerPreset":false,"envName":"development","cwd":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","root":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"transform-react-jsx","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"transform-react-display-name","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/Users/jeffrey.a.hamilton/WebstormProjects/MATS_for_EMB/apps/precipitation1hr/packages/ddp-common/heartbeat.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/ddp-common/heartbeat.js"}},"code":"// Heartbeat options:\n//   heartbeatInterval: interval to send pings, in milliseconds.\n//   heartbeatTimeout: timeout to close the connection if a reply isn't\n//     received, in milliseconds.\n//   sendPing: function to call to send a ping on the connection.\n//   onTimeout: function to call to close the connection.\nDDPCommon.Heartbeat = class Heartbeat {\n  constructor(options) {\n    this.heartbeatInterval = options.heartbeatInterval;\n    this.heartbeatTimeout = options.heartbeatTimeout;\n    this._sendPing = options.sendPing;\n    this._onTimeout = options.onTimeout;\n    this._seenPacket = false;\n    this._heartbeatIntervalHandle = null;\n    this._heartbeatTimeoutHandle = null;\n  }\n\n  stop() {\n    this._clearHeartbeatIntervalTimer();\n\n    this._clearHeartbeatTimeoutTimer();\n  }\n\n  start() {\n    this.stop();\n\n    this._startHeartbeatIntervalTimer();\n  }\n\n  _startHeartbeatIntervalTimer() {\n    this._heartbeatIntervalHandle = Meteor.setInterval(() => this._heartbeatIntervalFired(), this.heartbeatInterval);\n  }\n\n  _startHeartbeatTimeoutTimer() {\n    this._heartbeatTimeoutHandle = Meteor.setTimeout(() => this._heartbeatTimeoutFired(), this.heartbeatTimeout);\n  }\n\n  _clearHeartbeatIntervalTimer() {\n    if (this._heartbeatIntervalHandle) {\n      Meteor.clearInterval(this._heartbeatIntervalHandle);\n      this._heartbeatIntervalHandle = null;\n    }\n  }\n\n  _clearHeartbeatTimeoutTimer() {\n    if (this._heartbeatTimeoutHandle) {\n      Meteor.clearTimeout(this._heartbeatTimeoutHandle);\n      this._heartbeatTimeoutHandle = null;\n    }\n  } // The heartbeat interval timer is fired when we should send a ping.\n\n\n  _heartbeatIntervalFired() {\n    // don't send ping if we've seen a packet since we last checked,\n    // *or* if we have already sent a ping and are awaiting a timeout.\n    // That shouldn't happen, but it's possible if\n    // `this.heartbeatInterval` is smaller than\n    // `this.heartbeatTimeout`.\n    if (!this._seenPacket && !this._heartbeatTimeoutHandle) {\n      this._sendPing(); // Set up timeout, in case a pong doesn't arrive in time.\n\n\n      this._startHeartbeatTimeoutTimer();\n    }\n\n    this._seenPacket = false;\n  } // The heartbeat timeout timer is fired when we sent a ping, but we\n  // timed out waiting for the pong.\n\n\n  _heartbeatTimeoutFired() {\n    this._heartbeatTimeoutHandle = null;\n\n    this._onTimeout();\n  }\n\n  messageReceived() {\n    // Tell periodic checkin that we have seen a packet, and thus it\n    // does not need to send a ping this cycle.\n    this._seenPacket = true; // If we were waiting for a pong, we got it.\n\n    if (this._heartbeatTimeoutHandle) {\n      this._clearHeartbeatTimeoutTimer();\n    }\n  }\n\n};","map":{"version":3,"sources":["packages/ddp-common/heartbeat.js"],"names":["DDPCommon","Heartbeat","constructor","options","heartbeatInterval","heartbeatTimeout","_sendPing","sendPing","_onTimeout","onTimeout","_seenPacket","_heartbeatIntervalHandle","_heartbeatTimeoutHandle","stop","_clearHeartbeatIntervalTimer","_clearHeartbeatTimeoutTimer","start","_startHeartbeatIntervalTimer","Meteor","setInterval","_heartbeatIntervalFired","_startHeartbeatTimeoutTimer","setTimeout","_heartbeatTimeoutFired","clearInterval","clearTimeout","messageReceived"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,SAAS,CAACC,SAAV,GAAsB,MAAMA,SAAN,CAAgB;AACpCC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,SAAKC,iBAAL,GAAyBD,OAAO,CAACC,iBAAjC;AACA,SAAKC,gBAAL,GAAwBF,OAAO,CAACE,gBAAhC;AACA,SAAKC,SAAL,GAAiBH,OAAO,CAACI,QAAzB;AACA,SAAKC,UAAL,GAAkBL,OAAO,CAACM,SAA1B;AACA,SAAKC,WAAL,GAAmB,KAAnB;AAEA,SAAKC,wBAAL,GAAgC,IAAhC;AACA,SAAKC,uBAAL,GAA+B,IAA/B;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACL,SAAKC,4BAAL;;AACA,SAAKC,2BAAL;AACD;;AAEDC,EAAAA,KAAK,GAAG;AACN,SAAKH,IAAL;;AACA,SAAKI,4BAAL;AACD;;AAEDA,EAAAA,4BAA4B,GAAG;AAC7B,SAAKN,wBAAL,GAAgCO,MAAM,CAACC,WAAP,CAC9B,MAAM,KAAKC,uBAAL,EADwB,EAE9B,KAAKhB,iBAFyB,CAAhC;AAID;;AAEDiB,EAAAA,2BAA2B,GAAG;AAC5B,SAAKT,uBAAL,GAA+BM,MAAM,CAACI,UAAP,CAC7B,MAAM,KAAKC,sBAAL,EADuB,EAE7B,KAAKlB,gBAFwB,CAA/B;AAID;;AAEDS,EAAAA,4BAA4B,GAAG;AAC7B,QAAI,KAAKH,wBAAT,EAAmC;AACjCO,MAAAA,MAAM,CAACM,aAAP,CAAqB,KAAKb,wBAA1B;AACA,WAAKA,wBAAL,GAAgC,IAAhC;AACD;AACF;;AAEDI,EAAAA,2BAA2B,GAAG;AAC5B,QAAI,KAAKH,uBAAT,EAAkC;AAChCM,MAAAA,MAAM,CAACO,YAAP,CAAoB,KAAKb,uBAAzB;AACA,WAAKA,uBAAL,GAA+B,IAA/B;AACD;AACF,GAhDmC,CAkDpC;;;AACAQ,EAAAA,uBAAuB,GAAG;AACxB;AACA;AACA;AACA;AACA;AACA,QAAI,CAAE,KAAKV,WAAP,IAAsB,CAAE,KAAKE,uBAAjC,EAA0D;AACxD,WAAKN,SAAL,GADwD,CAExD;;;AACA,WAAKe,2BAAL;AACD;;AACD,SAAKX,WAAL,GAAmB,KAAnB;AACD,GA/DmC,CAiEpC;AACA;;;AACAa,EAAAA,sBAAsB,GAAG;AACvB,SAAKX,uBAAL,GAA+B,IAA/B;;AACA,SAAKJ,UAAL;AACD;;AAEDkB,EAAAA,eAAe,GAAG;AAChB;AACA;AACA,SAAKhB,WAAL,GAAmB,IAAnB,CAHgB,CAIhB;;AACA,QAAI,KAAKE,uBAAT,EAAkC;AAChC,WAAKG,2BAAL;AACD;AACF;;AAhFmC,CAAtC","sourcesContent":["// Heartbeat options:\n//   heartbeatInterval: interval to send pings, in milliseconds.\n//   heartbeatTimeout: timeout to close the connection if a reply isn't\n//     received, in milliseconds.\n//   sendPing: function to call to send a ping on the connection.\n//   onTimeout: function to call to close the connection.\n\nDDPCommon.Heartbeat = class Heartbeat {\n  constructor(options) {\n    this.heartbeatInterval = options.heartbeatInterval;\n    this.heartbeatTimeout = options.heartbeatTimeout;\n    this._sendPing = options.sendPing;\n    this._onTimeout = options.onTimeout;\n    this._seenPacket = false;\n\n    this._heartbeatIntervalHandle = null;\n    this._heartbeatTimeoutHandle = null;\n  }\n\n  stop() {\n    this._clearHeartbeatIntervalTimer();\n    this._clearHeartbeatTimeoutTimer();\n  }\n\n  start() {\n    this.stop();\n    this._startHeartbeatIntervalTimer();\n  }\n\n  _startHeartbeatIntervalTimer() {\n    this._heartbeatIntervalHandle = Meteor.setInterval(\n      () => this._heartbeatIntervalFired(),\n      this.heartbeatInterval\n    );\n  }\n\n  _startHeartbeatTimeoutTimer() {\n    this._heartbeatTimeoutHandle = Meteor.setTimeout(\n      () => this._heartbeatTimeoutFired(),\n      this.heartbeatTimeout\n    );\n  }\n\n  _clearHeartbeatIntervalTimer() {\n    if (this._heartbeatIntervalHandle) {\n      Meteor.clearInterval(this._heartbeatIntervalHandle);\n      this._heartbeatIntervalHandle = null;\n    }\n  }\n\n  _clearHeartbeatTimeoutTimer() {\n    if (this._heartbeatTimeoutHandle) {\n      Meteor.clearTimeout(this._heartbeatTimeoutHandle);\n      this._heartbeatTimeoutHandle = null;\n    }\n  }\n\n  // The heartbeat interval timer is fired when we should send a ping.\n  _heartbeatIntervalFired() {\n    // don't send ping if we've seen a packet since we last checked,\n    // *or* if we have already sent a ping and are awaiting a timeout.\n    // That shouldn't happen, but it's possible if\n    // `this.heartbeatInterval` is smaller than\n    // `this.heartbeatTimeout`.\n    if (! this._seenPacket && ! this._heartbeatTimeoutHandle) {\n      this._sendPing();\n      // Set up timeout, in case a pong doesn't arrive in time.\n      this._startHeartbeatTimeoutTimer();\n    }\n    this._seenPacket = false;\n  }\n\n  // The heartbeat timeout timer is fired when we sent a ping, but we\n  // timed out waiting for the pong.\n  _heartbeatTimeoutFired() {\n    this._heartbeatTimeoutHandle = null;\n    this._onTimeout();\n  }\n\n  messageReceived() {\n    // Tell periodic checkin that we have seen a packet, and thus it\n    // does not need to send a ping this cycle.\n    this._seenPacket = true;\n    // If we were waiting for a pong, we got it.\n    if (this._heartbeatTimeoutHandle) {\n      this._clearHeartbeatTimeoutTimer();\n    }\n  }\n};\n"]},"sourceType":"script","hash":"06ba26eff07af38329c038e8673fd9797b78f9e3"}
