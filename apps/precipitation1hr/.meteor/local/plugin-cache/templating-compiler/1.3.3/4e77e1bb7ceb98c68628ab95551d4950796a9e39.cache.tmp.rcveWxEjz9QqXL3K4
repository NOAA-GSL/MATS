{"head":"","body":"","js":"\nTemplate.__checkName(\"GraphStandAlone\");\nTemplate[\"GraphStandAlone\"] = new Template(\"Template.GraphStandAlone\", (function() {\n  var view = this;\n  return [ HTML.HEAD(\"\\n        \", HTML.SCRIPT({\n    src: \"https://cdn.plot.ly/plotly-latest.min.js\"\n  }), \"\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"graph-container\",\n    class: \"container-fluid pull-left\",\n    style: function() {\n      return [ \"padding-left: 5%; display:\", Spacebars.mustache(view.lookup(\"graphFunctionDispay\")), \";\" ];\n    }\n  }, \"\\n        \", HTML.DIV({\n    id: \"header\",\n    class: \"row\"\n  }, \"\\n            \", HTML.H4(HTML.SPAN(Blaze.View(\"lookup:Title\", function() {\n    return Spacebars.mustache(view.lookup(\"Title\"));\n  }), \" : \"), HTML.SPAN(Blaze.View(\"lookup:plotText\", function() {\n    return Spacebars.mustache(view.lookup(\"plotText\"));\n  })), HTML.SPAN(\" \", Blaze.View(\"lookup:plotName\", function() {\n    return Spacebars.mustache(view.lookup(\"plotName\"));\n  }))), \"\\n        \"), \"\\n        \", HTML.Raw('<div id=\"gsaSpinner\" name=\"gsaSpinner\" style=\"display:block\">\\n            <img src=\"../../../../img/spinner.gif\" alt=\"Loading...\" height=\"5%\" width=\"5%\"> <span style=\"color:red\">Loading ...</span>\\n        </div>'), \"\\n        \", HTML.DIV({\n    class: \"row form-inline previewCurveButtons\"\n  }, \"\\n            \", HTML.SPAN(\"\\n                \", HTML.INPUT({\n    class: \"input-sm col-sm-5\",\n    id: \"exportFileName\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"matsplotFilemname\"));\n    }\n  }), \"\\n                \", HTML.Raw('<button class=\"btn btn-xs col-sm-3 pull-right btn-primary exportpdf\" id=\"exportpdf\">save pdf</button>'), \"\\n                \", HTML.Raw('<button class=\"btn btn-xs col-sm-3 pull-right btn-primary exportpng\" id=\"exportpng\">save png</button>'), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    id: \"curves\",\n    class: \"row\"\n  }, \"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"curves\"));\n  }, function() {\n    return [ \"\\n                \", HTML.SPAN({\n      style: function() {\n        return [ \"color:\", Spacebars.mustache(view.lookup(\"color\")), \"; font-weight: bolder;\" ];\n      }\n    }, \"--- \"), HTML.SPAN({\n      style: \"font-size:small;\"\n    }, Blaze.View(\"lookup:curveText\", function() {\n      return Spacebars.mustache(view.lookup(\"curveText\"));\n    })), \"\\n                \", HTML.DIV({\n      id: function() {\n        return [ \"curve-text-buttons-grp-\", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")) ];\n      },\n      class: \"btn-group btn-group-xs previewCurveButtons\"\n    }, \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"annotateVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"annotateButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide-annotate\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"annotateShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                \"), \"\\n                \", HTML.BR(), \"\\n            \" ];\n  }), \"\\n            \", HTML.Raw(\"<hr>\"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    id: \"graphView\",\n    style: \"height:100%;margin:0;padding:0;\",\n    class: \"row\"\n  }, \"\\n            \", HTML.Raw('<div id=\"legendContainer\" name=\"legendContainer\"></div>'), \"\\n            \", HTML.DIV({\n    id: \"placeholder\",\n    class: \"row\",\n    name: \"placeholder\",\n    style: function() {\n      return [ \"float:left;width:\", Spacebars.mustache(view.lookup(\"width\")), \"; height:\", Spacebars.mustache(view.lookup(\"height\")), \";\" ];\n    }\n  }, \"\\n                \\n            \"), \"\\n            \", HTML.SPAN({\n    style: \"display: none\"\n  }, Blaze.View(\"lookup:graphFunction\", function() {\n    return Spacebars.mustache(view.lookup(\"graphFunction\"));\n  })), \"\\n        \"), \"\\n    \") ];\n}));\n","bodyAttrs":{}}