{"head":"","body":"","js":"\nTemplate.__checkName(\"graph\");\nTemplate[\"graph\"] = new Template(\"Template.graph\", (function() {\n  var view = this;\n  return [ \"\\n    \", HTML.HEAD(\"\\n        \", HTML.SCRIPT({\n    src: \"https://cdn.plot.ly/plotly-latest.min.js\"\n  }), \"\\n    \"), \"\\n    \", HTML.DIV({\n    id: \"graph-container\",\n    class: \"container-fluid pull-left\",\n    style: \"margin-top: 0.5em; padding-left: 5%; display:none;\"\n  }, \"\\n        \", HTML.DIV({\n    id: \"graph-control\",\n    class: \"row\"\n  }, \"\\n            \", HTML.SPAN({\n    id: \"all-plot-buttons-grp\",\n    class: \"btn-group btn-group-sm\"\n  }, \"\\n                \", HTML.Raw('<button id=\"backButton\" type=\"button\" class=\"back btn btn-primary fa fa-long-arrow-left\" style=\"border-radius: 5px;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"return to parameters\">&nbsp;&nbsp;<strong>Back</strong></button>'), \"\\n                \", HTML.Raw('<button id=\"gc-spacer\" type=\"button\" class=\"btn spacebutton\"></button>'), \"\\n                \", HTML.Raw('<button id=\"previewButton\" type=\"button\" class=\"preview btn btn-primary fa fa-print\" style=\"border-top-left-radius: 5px; border-bottom-left-radius: 5px;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"preview graph in separate window\">&nbsp;&nbsp;<strong>Preview</strong></button>'), \"\\n                \", HTML.Raw('<button id=\"basisButton\" type=\"button\" class=\"basis btn btn-primary fa fa-info\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"view data details\">&nbsp;&nbsp;<strong>Data Lineage</strong></button>'), \"\\n                \", HTML.Raw('<span id=\"text-page-button-group\" class=\"btn-group btn-group-sm\" style=\"display:none;\">\\n                    <button id=\"exportButton\" type=\"button\" class=\"export btn btn-primary fa fa-floppy-o\" style=\"border-top-right-radius: 5px; border-bottom-right-radius: 5px;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"export current text data to csv file\">&nbsp;&nbsp;<strong>Export</strong></button>\\n                    <button id=\"gc-spacer\" type=\"button\" class=\"btn spacebutton\"></button>\\n                    <button id=\"plotButton\" type=\"button\" class=\"plotButton btn btn-primary fa fa-line-chart\" style=\"border-radius: 5px; display:block;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"change to plot view\">&nbsp;&nbsp;<strong>Plot</strong></button>\\n                    <button id=\"gc-spacer\" type=\"button\" class=\"btn spacebutton\"></button>\\n                    <button id=\"firstPageButton\" type=\"button\" class=\"firstPageButton btn btn-info fa fa-fast-backward\" style=\"border-top-left-radius: 5px; border-bottom-left-radius: 5px; display:block;background-color: #003399;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"first page\">&nbsp;&nbsp;<strong>First page</strong></button>\\n                    <button id=\"previousTenPageButton\" type=\"button\" class=\"previousTenPageButton btn btn-info fa fa-step-backward\" style=\"display:block;background-color: #003399;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"previous 10 pages\">&nbsp;&nbsp;<strong>Back 10 pages</strong></button>\\n                    <button id=\"previousPageButton\" type=\"button\" class=\"previousPageButton btn btn-info fa fa-chevron-left\" style=\"display:block;background-color: #003399;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"previous page\">&nbsp;&nbsp;<strong>Prev page</strong></button>\\n                    <button id=\"nextPageButton\" type=\"button\" class=\"nextPageButton btn btn-info fa fa-chevron-right\" style=\"display:block;background-color: #003399;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"next page\">&nbsp;&nbsp;<strong>Next page</strong></button>\\n                    <button id=\"nextTenPageButton\" type=\"button\" class=\"nextTenPageButton btn btn-info fa fa-step-forward\" style=\"display:block;background-color: #003399;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"next 10 pages\">&nbsp;&nbsp;<strong>Forward 10 pages</strong></button>\\n                    <button id=\"lastPageButton\" type=\"button\" class=\"lastPageButton btn btn-info fa fa-fast-forward\" style=\"border-top-right-radius: 5px; border-bottom-right-radius: 5px; display:block;background-color: #003399;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"last page\">&nbsp;&nbsp;<strong>Last page</strong></button>\\n                </span>'), \"\\n                \", HTML.SPAN({\n    id: \"plot-page-button-group\",\n    class: \"btn-group btn-group-sm\",\n    style: \"display:block;\"\n  }, \"\\n                    \", HTML.SPAN({\n    id: \"plot-control-button-group\",\n    class: \"btn-group btn-group-sm\",\n    style: \"display:block;\"\n  }, \"\\n                        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isNotMap\"));\n  }, function() {\n    return [ \"\\n                            \", HTML.BUTTON({\n      id: \"axisLimitButton\",\n      type: \"button\",\n      class: \"axisLimitButton btn btn-primary fa fa-arrows\",\n      style: \"display:block;\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"modify axis\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.STRONG(\"Axes\")), \"\\n                        \" ];\n  }), \"\\n                        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isLinePlot\"));\n  }, function() {\n    return [ \"\\n                            \", HTML.BUTTON({\n      id: \"lineTypeButton\",\n      type: \"button\",\n      class: \"lineTypeButton btn btn-primary fa fa-bars\",\n      style: \"display:block;\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"modify axis\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.STRONG(\"Line Styles\")), \"\\n                        \" ];\n  }), \"\\n                        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isProfile\"));\n  }, function() {\n    return [ \"\\n                            \", HTML.BUTTON({\n      id: \"axisYScale\",\n      type: \"button\",\n      class: \"axisYScale btn btn-primary fa fa-arrows\",\n      style: \"display:block;\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"toggle linear/log Y axis\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.STRONG(\"Y Linear/Log\")), \"\\n                        \" ];\n  }), \"\\n                        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isContour\"));\n  }, function() {\n    return [ \"\\n                            \", HTML.BUTTON({\n      id: \"colorbarButton\",\n      type: \"button\",\n      class: \"colorbarButton btn btn-primary fa fa-paint-brush\",\n      style: \"display:block;\",\n      \"data-toggle\": \"tooltip\",\n      \"data-placement\": \"top\",\n      title: \"modify colorbar\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.STRONG(\"Colorbar\")), \"\\n                        \" ];\n  }), \"\\n                        \", HTML.BUTTON({\n    id: \"replotZoomButton\",\n    type: \"button\",\n    class: \"replotZoomButton btn btn-primary fa fa-line-chart\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"displayReplotZoom\")), \";\" ];\n    },\n    \"data-toggle\": \"tooltip\",\n    \"data-placement\": \"top\",\n    title: \"replot graph to current zoom setting\"\n  }, HTML.Raw(\"&nbsp;\"), HTML.Raw(\"&nbsp;\"), HTML.Raw(\"<strong>Re-sample</strong>\")), \"\\n                        \", HTML.Raw('<button id=\"reCacheButton\" type=\"button\" class=\"reCacheButton btn btn-primary fa fa-line-chart\" style=\"display:block;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"replot graph and refresh cache with new data\">&nbsp;&nbsp;<strong>Re-cache</strong></button>'), \"\\n                    \"), \"\\n                    \", HTML.Raw('<button id=\"textButton\" type=\"button\" class=\"textButton btn btn-primary fa fa-file-text-o\" style=\"border-top-right-radius: 5px; border-bottom-right-radius: 5px; display:block;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"change to text view\">&nbsp;&nbsp;<strong>Text</strong></button>'), \"\\n                    \", HTML.Raw('<button id=\"gc-spacer\" type=\"button\" class=\"btn spacebutton\"></button>'), \"\\n                \"), \"\\n                \", HTML.Raw('<span id=\"graph-touch-controls\" class=\"btn-group btn-group-sm\" role=\"group\" aria-label=\"touchcontrol\">\\n                    <button id=\"refresh-plot\" type=\"button\" class=\"btn btn-info fa fa-refresh\" style=\"border-radius: 15px; background-color: #00badb;\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"reset plot to original (or last re-sample)\"></button>\\n                </span>'), \"\\n                \", HTML.SPAN(\"\\n                    \", HTML.DIV({\n    id: \"mv-controls\",\n    class: \"btn-group btn-group-xs\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"metApp\")) ];\n    },\n    role: \"group\",\n    \"aria-label\": \"touchcontrol\"\n  }, \"\\n                        \", HTML.BUTTON({\n    type: \"button\",\n    id: \"mvloading\",\n    class: \"btn btn-xs btn-warning\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"mvLoading\")) ];\n    }\n  }, \"mvbatch\"), \"\\n                        \", HTML.SPAN({\n    class: \"btn btn-xs btn-warning fas fa-spinner fa-pulse\",\n    style: function() {\n      return [ \"display:\", Spacebars.mustache(view.lookup(\"mvLoading\")) ];\n    }\n  }), \"\\n                        \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"mvFiles\"));\n  }, function() {\n    return [ \"\\n                                \", HTML.BUTTON({\n      type: \"button\",\n      id: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"name\"));\n      },\n      class: \"btn btn-xs btn-info mvCtrlButton\",\n      style: function() {\n        return [ \"display:\", Spacebars.mustache(view.lookup(\"mvDisabled\")) ];\n      }\n    }, \"mv-\", Blaze.View(\"lookup:..name\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"name\"));\n    })), \"\\n                        \" ];\n  }), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    id: \"sendModal\",\n    class: \"modal row\",\n    role: \"dialog\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"modal-dialog\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n                    \", HTML.Raw('<div class=\"modal-header\">\\n                        <h4>Send To ?</h4>\\n                    </div>'), \"\\n                    \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                        \", HTML.DIV(\"\\n                            \", HTML.Raw(\"<label>Send Address ...</label>\"), \"\\n                            \", HTML.Raw('<input id=\"sendAddress\" class=\"send-address data-input textInput\" type=\"text\" name=\"send address\">'), \"\\n                            \", HTML.SELECT({\n    class: \"data-input sentAddresses\",\n    size: \"5\",\n    name: \"sentAddresses\",\n    id: \"sentAddresses\"\n  }, \"\\n                                \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"sentAddresses\"));\n  }, function() {\n    return [ \"\\n                                    \", HTML.OPTION(Blaze.View(\"lookup:.\", function() {\n      return Spacebars.mustache(view.lookup(\".\"));\n    })), \"\\n                                \" ];\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.Raw('<div class=\"modal-footer btn-group\">\\n                        <button type=\"button\" class=\"cancel-send btn btn-info\" data-dismiss=\"modal\">&nbsp;&nbsp;Cancel</button>\\n                        <button name=\"send\" type=\"submit\" class=\"send btn btn-primary\">&nbsp;&nbsp;Send</button>\\n                    </div>'), \"\\n                \"), \"\\n                \", HTML.Raw(\"<!-- /.modal-content -->\"), \"\\n            \"), \"\\n            \", HTML.Raw(\"<!-- /.modal-dialog -->\"), \"\\n        \"), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isNotMap\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      id: \"axisLimitModal\",\n      class: \"modal container\",\n      role: \"dialog\"\n    }, \"\\n                \", HTML.DIV({\n      class: \"modal-dialog\"\n    }, \"\\n                    \", HTML.DIV({\n      class: \"modal-content\"\n    }, \"\\n                        \", HTML.DIV({\n      class: \"modal-header\"\n    }, \"\\n                            \", HTML.H3(\"Select axis limits and labels: \"), \"\\n                            \", HTML.H4(\"* Leave a field blank to preserve its original value. \"), \"\\n                            \", HTML.H4(\"* Only data from your original time range has been queried and is available to plot. \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"modal-body\"\n    }, \"\\n                            \", Blaze.Each(function() {\n      return {\n        _sequence: Spacebars.call(view.lookup(\"xAxes\")),\n        _variable: \"xAxis\"\n      };\n    }, function() {\n      return [ \"\\n                                \", HTML.DIV(HTML.BR()), \"\\n                                \", HTML.DIV({\n        id: function() {\n          return [ \"x\", Spacebars.mustache(Spacebars.dot(view.lookup(\"xAxis\"), \"label\")), \"AxisCustomControls\" ];\n        },\n        style: \"display:block;\"\n      }, \"\\n                                    \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                        \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"X\", Blaze.View(\"lookup:xAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"xAxis\"));\n      }), \" label: \"), \"\\n                                        \", HTML.INPUT({\n        id: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisLabel\" ];\n        },\n        class: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"-axis-label data-input textInput col-sm-3\" ];\n        },\n        type: \"text\",\n        value: \"\",\n        name: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisLabel\" ];\n        }\n      }), \"\\n                                    \"), \"\\n                                    \", HTML.DIV({\n        id: \"xAxisControlsNumber\",\n        style: function() {\n          return [ \"display:\", Spacebars.mustache(view.lookup(\"xAxisControlsNumberVisibility\")), \";\" ];\n        }\n      }, \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"X\", Blaze.View(\"lookup:xAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"xAxis\"));\n      }), \"_min: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMin\" ];\n        },\n        class: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"-axis-min data-input numberInput col-sm-3\" ];\n        },\n        type: \"number\",\n        value: \"\",\n        name: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMin\" ];\n        }\n      }), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"X\", Blaze.View(\"lookup:xAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"xAxis\"));\n      }), \"_max: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMax\" ];\n        },\n        class: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"-axis-max data-input numberInput col-sm-3\" ];\n        },\n        type: \"number\",\n        value: \"\",\n        name: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMax\" ];\n        }\n      }), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                    \", HTML.DIV({\n        id: \"xAxisControlsText\",\n        style: function() {\n          return [ \"display:\", Spacebars.mustache(view.lookup(\"xAxisControlsTextVisibility\")), \";\" ];\n        }\n      }, \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"X\", Blaze.View(\"lookup:xAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"xAxis\"));\n      }), \"_min: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMinText\" ];\n        },\n        class: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"-axis-min data-input textInput col-sm-3\" ];\n        },\n        type: \"text\",\n        value: \"\",\n        name: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMinText\" ];\n        }\n      }), \"\\n                                            \", HTML.SPAN({\n        class: \"col-sm-5\"\n      }, \"YYYY-MM-DD HH:MM format\"), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"X\", Blaze.View(\"lookup:xAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"xAxis\"));\n      }), \"_max: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMaxText\" ];\n        },\n        class: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"-axis-max data-input textInput col-sm-3\" ];\n        },\n        type: \"text\",\n        value: \"\",\n        name: function() {\n          return [ \"x\", Spacebars.mustache(view.lookup(\"xAxis\")), \"AxisMaxText\" ];\n        }\n      }), \"\\n                                            \", HTML.SPAN({\n        class: \"col-sm-5\"\n      }, \"YYYY-MM-DD HH:MM format\"), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \" ];\n    }), \"\\n                            \", Blaze.Each(function() {\n      return {\n        _sequence: Spacebars.call(view.lookup(\"yAxes\")),\n        _variable: \"yAxis\"\n      };\n    }, function() {\n      return [ \"\\n                                \", HTML.DIV(HTML.BR()), \"\\n                                \", HTML.DIV({\n        id: function() {\n          return [ \"y\", Spacebars.mustache(Spacebars.dot(view.lookup(\"yAxis\"), \"label\")), \"AxisCustomControls\" ];\n        },\n        style: \"display:block;\"\n      }, \"\\n                                    \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                        \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"Y\", Blaze.View(\"lookup:yAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"yAxis\"));\n      }), \" label: \"), \"\\n                                        \", HTML.INPUT({\n        id: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisLabel\" ];\n        },\n        class: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"-axis-label data-input textInput col-sm-3\" ];\n        },\n        type: \"text\",\n        value: \"\",\n        name: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisLabel\" ];\n        }\n      }), \"\\n                                    \"), \"\\n                                    \", HTML.DIV({\n        id: \"yAxisControlsNumber\",\n        style: function() {\n          return [ \"display:\", Spacebars.mustache(view.lookup(\"yAxisControlsNumberVisibility\")), \";\" ];\n        }\n      }, \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"Y\", Blaze.View(\"lookup:yAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"yAxis\"));\n      }), \"_min: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMin\" ];\n        },\n        class: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"-axis-min data-input numberInput col-sm-3\" ];\n        },\n        type: \"number\",\n        value: \"\",\n        name: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMin\" ];\n        }\n      }), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"Y\", Blaze.View(\"lookup:yAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"yAxis\"));\n      }), \"_max: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMax\" ];\n        },\n        class: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"-axis-max data-input numberInput col-sm-3\" ];\n        },\n        type: \"number\",\n        value: \"\",\n        name: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMax\" ];\n        }\n      }), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                    \", HTML.DIV({\n        id: \"yAxisControlsText\",\n        style: function() {\n          return [ \"display:\", Spacebars.mustache(view.lookup(\"yAxisControlsTextVisibility\")), \";\" ];\n        }\n      }, \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"Y\", Blaze.View(\"lookup:yAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"yAxis\"));\n      }), \"_min: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMinText\" ];\n        },\n        class: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"-axis-min data-input textInput col-sm-3\" ];\n        },\n        type: \"text\",\n        value: \"\",\n        name: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMinText\" ];\n        }\n      }), \"\\n                                            \", HTML.SPAN({\n        class: \"col-sm-5\"\n      }, \"YYYY-MM-DD HH:MM format\"), \"\\n                                        \"), \"\\n                                        \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                            \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, \"Y\", Blaze.View(\"lookup:yAxis\", function() {\n        return Spacebars.mustache(view.lookup(\"yAxis\"));\n      }), \"_max: \"), \"\\n                                            \", HTML.INPUT({\n        id: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMaxText\" ];\n        },\n        class: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"-axis-max data-input textInput col-sm-3\" ];\n        },\n        type: \"text\",\n        value: \"\",\n        name: function() {\n          return [ \"y\", Spacebars.mustache(view.lookup(\"yAxis\")), \"AxisMaxText\" ];\n        }\n      }), \"\\n                                            \", HTML.SPAN({\n        class: \"col-sm-5\"\n      }, \"YYYY-MM-DD HH:MM format\"), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \" ];\n    }), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"modal-footer btn-group\"\n    }, \"\\n                            \", HTML.BUTTON({\n      type: \"button\",\n      class: \"cancel-send btn btn-info\",\n      \"data-dismiss\": \"modal\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Cancel\"), \"\\n                            \", HTML.BUTTON({\n      name: \"axisSubmit\",\n      id: \"axisSubmit\",\n      type: \"submit\",\n      class: \"send btn btn-primary\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Submit\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.Comment(\" /.modal-content \"), \"\\n                \"), \"\\n                \", HTML.Comment(\" /.modal-dialog \"), \"\\n            \"), \"\\n        \" ];\n  }), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isLinePlot\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      id: \"lineTypeModal\",\n      class: \"modal container\",\n      role: \"dialog\"\n    }, \"\\n                \", HTML.DIV({\n      class: \"modal-dialog\"\n    }, \"\\n                    \", HTML.DIV({\n      class: \"modal-content\"\n    }, \"\\n                        \", HTML.DIV({\n      class: \"modal-header\"\n    }, \"\\n                            \", HTML.H3(\"Select line styles and markers: \"), \"\\n                            \", HTML.H4(\"* Leave a field blank to preserve its original value. \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"modal-body\"\n    }, \"\\n                            \", HTML.DIV(HTML.BR()), \"\\n                            \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                \", HTML.LABEL({\n      class: \"col-sm-2\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    })), \"\\n                                \", HTML.LABEL({\n      class: \"col-sm-3\"\n    }, \"Line style \"), \"\\n                                \", HTML.LABEL({\n      class: \"col-sm-3\"\n    }, \"Line weight \"), \"\\n                                \", HTML.LABEL({\n      class: \"col-sm-3\"\n    }, \"Line marker \"), \"\\n                            \"), \"\\n                            \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"curves\"));\n    }, function() {\n      return [ \"\\n                                \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                    \", HTML.LABEL({\n        class: \"col-sm-2\"\n      }, Blaze.View(\"lookup:..label\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\"));\n      }), \": \"), \"\\n                                    \", HTML.SELECT({\n        id: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"LineStyle\" ];\n        },\n        class: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-line-style col-sm-3\" ];\n        }\n      }, \"\\n                                        \", HTML.OPTION({\n        value: \"solid\",\n        selected: \"selected\"\n      }, \"Solid\"), \"\\n                                        \", HTML.OPTION({\n        value: \"dash\"\n      }, \"Dash\"), \"\\n                                        \", HTML.OPTION({\n        value: \"dot\"\n      }, \"Dot\"), \"\\n                                        \", HTML.OPTION({\n        value: \"dashdot\"\n      }, \"Dash-dot\"), \"\\n                                    \"), \"\\n                                    \", HTML.INPUT({\n        id: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"LineWeight\" ];\n        },\n        class: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-line-weight data-input numberInput col-sm-3\" ];\n        },\n        type: \"number\",\n        value: \"2\",\n        name: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"Weight\" ];\n        }\n      }), \"\\n                                    \", HTML.SELECT({\n        id: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"LineMarker\" ];\n        },\n        class: function() {\n          return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-line-marker col-sm-3\" ];\n        }\n      }, \"\\n                                        \", HTML.OPTION({\n        value: \"circle\",\n        selected: \"selected\"\n      }, \"Solid circle\"), \"\\n                                        \", HTML.OPTION({\n        value: \"circle-open\"\n      }, \"Open circle\"), \"\\n                                        \", HTML.OPTION({\n        value: \"square\"\n      }, \"Solid Square\"), \"\\n                                        \", HTML.OPTION({\n        value: \"square-open\"\n      }, \"Open Square\"), \"\\n                                        \", HTML.OPTION({\n        value: \"star-square\"\n      }, \"Concave Square\"), \"\\n                                        \", HTML.OPTION({\n        value: \"diamond-tall\"\n      }, \"Solid Diamond\"), \"\\n                                        \", HTML.OPTION({\n        value: \"diamond-tall-open\"\n      }, \"Open Diamond\"), \"\\n                                        \", HTML.OPTION({\n        value: \"star-diamond\"\n      }, \"Concave Diamond\"), \"\\n                                        \", HTML.OPTION({\n        value: \"star\"\n      }, \"Solid star\"), \"\\n                                        \", HTML.OPTION({\n        value: \"star-open\"\n      }, \"Open star\"), \"\\n                                        \", HTML.OPTION({\n        value: \"x\"\n      }, \"Solid X\"), \"\\n                                        \", HTML.OPTION({\n        value: \"x-open\"\n      }, \"Open X\"), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \" ];\n    }), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"modal-footer btn-group\"\n    }, \"\\n                            \", HTML.BUTTON({\n      type: \"button\",\n      class: \"cancel-send btn btn-info\",\n      \"data-dismiss\": \"modal\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Cancel\"), \"\\n                            \", HTML.BUTTON({\n      name: \"lineTypeSubmit\",\n      id: \"lineTypeSubmit\",\n      type: \"submit\",\n      class: \"send btn btn-primary\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Submit\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.Comment(\" /.modal-content \"), \"\\n                \"), \"\\n                \", HTML.Comment(\" /.modal-dialog \"), \"\\n            \"), \"\\n        \" ];\n  }), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"isContour\"));\n  }, function() {\n    return [ \"\\n            \", HTML.DIV({\n      id: \"colorbarModal\",\n      class: \"modal container\",\n      role: \"dialog\"\n    }, \"\\n                \", HTML.DIV({\n      class: \"modal-dialog\"\n    }, \"\\n                    \", HTML.DIV({\n      class: \"modal-content\"\n    }, \"\\n                        \", HTML.DIV({\n      class: \"modal-header\"\n    }, \"\\n                            \", HTML.H3(\"Select colorbar limits and label: \"), \"\\n                            \", HTML.H4(\"* Leave a field blank to preserve its original value. \"), \"\\n                            \", HTML.H4(\"* Choose either a contour step OR a number of contours. If both are given, the number of contours will be used.\"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"modal-body\"\n    }, \"\\n                            \", HTML.DIV(HTML.BR()), \"\\n                            \", HTML.DIV({\n      id: \"colorbarCustomControls\",\n      style: \"display:block;\"\n    }, \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Colorbar label: \"), \"\\n                                    \", HTML.INPUT({\n      id: \"colorbarLabel\",\n      class: \"colorbar-label data-input textInput col-sm-5\",\n      type: \"text\",\n      value: \"\",\n      name: \"colorbarLabel\"\n    }), \"\\n                                \"), \"\\n                                \", HTML.DIV(HTML.BR()), \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Minimum contour value: \"), \"\\n                                    \", HTML.INPUT({\n      id: \"colorbarMin\",\n      class: \"colorbar-min data-input numberInput col-sm-5\",\n      type: \"number\",\n      value: \"\",\n      name: \"colorbarMin\"\n    }), \"\\n                                \"), \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Maximum contour value: \"), \"\\n                                    \", HTML.INPUT({\n      id: \"colorbarMax\",\n      class: \"colorbar-max data-input numberInput col-sm-5\",\n      type: \"number\",\n      value: \"\",\n      name: \"colorbarMax\"\n    }), \"\\n                                \"), \"\\n                                \", HTML.DIV(HTML.BR()), \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Number of contours: \"), \"\\n                                    \", HTML.INPUT({\n      id: \"colorbarNumber\",\n      class: \"colorbar-number data-input numberInput col-sm-5\",\n      type: \"number\",\n      value: \"\",\n      name: \"colorbarNumber\"\n    }), \"\\n                                \"), \"\\n                                \", HTML.DIV(\"OR\"), \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Contour value step: \"), \"\\n                                    \", HTML.INPUT({\n      id: \"colorbarStep\",\n      class: \"colorbar-step data-input numberInput col-sm-5\",\n      type: \"number\",\n      value: \"\",\n      name: \"colorbarStep\"\n    }), \"\\n                                \"), \"\\n                                \", HTML.DIV(HTML.BR()), \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Reverse colormap: \"), \"\\n                                    \", HTML.INPUT({\n      id: \"colorbarReverse\",\n      class: \"colorbar-reverse data-input checkboxInput col-sm-5\",\n      type: \"checkbox\",\n      value: \"\",\n      name: \"colorbarReverse\"\n    }), \"\\n                                \"), \"\\n                                \", HTML.DIV(HTML.BR()), \"\\n                                \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n                                    \", HTML.LABEL({\n      class: \"col-sm-5\"\n    }, \"Select colormap: \"), \"\\n                                    \", HTML.SELECT({\n      id: \"colormapSelect\"\n    }, \"\\n                                        \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"isContourDiff\"));\n    }, function() {\n      return [ \"\\n                                            \", HTML.OPTION({\n        value: \"RdBu\"\n      }, \"RedBlue\"), \"\\n                                            \", HTML.OPTION({\n        value: '[[0,\"rgb(5,10,172)\"],[0.35,\"rgb(106,137,247)\"],[0.45,\"rgb(255,255,255)\"],[0.55,\"rgb(255,255,255)\"],[0.6,\"rgb(220,170,132)\"],[0.7,\"rgb(230,145,90)\"],[1,\"rgb(178,10,28)\"]]',\n        selected: \"selected\"\n      }, \"RedWhiteBlue\"), \"\\n                                        \" ];\n    }, function() {\n      return [ \"\\n                                            \", HTML.OPTION({\n        value: \"RdBu\",\n        selected: \"selected\"\n      }, \"RedBlue\"), \"\\n                                            \", HTML.OPTION({\n        value: '[[0,\"rgb(5,10,172)\"],[0.35,\"rgb(106,137,247)\"],[0.45,\"rgb(255,255,255)\"],[0.55,\"rgb(255,255,255)\"],[0.6,\"rgb(220,170,132)\"],[0.7,\"rgb(230,145,90)\"],[1,\"rgb(178,10,28)\"]]'\n      }, \"RedWhiteBlue\"), \"\\n                                        \" ];\n    }), \"\\n                                        \", HTML.OPTION({\n      value: \"Jet\"\n    }, \"Jet\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Portland\"\n    }, \"Portland\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Rainbow\"\n    }, \"Rainbow\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Blackbody\"\n    }, \"Blackbody\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Earth\"\n    }, \"Earth\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Electric\"\n    }, \"Electric\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Hot\"\n    }, \"Hot\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Picnic\"\n    }, \"Picnic\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Reds\"\n    }, \"Reds\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Greens\"\n    }, \"Greens\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Blues\"\n    }, \"Blues\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Greys\"\n    }, \"Greys\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Viridis\"\n    }, \"Viridis\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Cividis\"\n    }, \"Cividis\"), \"\\n                                        \", HTML.OPTION({\n      value: \"Bluered\"\n    }, \"BlueRed\"), \"\\n                                        \", HTML.OPTION({\n      value: \"YlGnBu\"\n    }, \"YellowGreenBlue\"), \"\\n                                        \", HTML.OPTION({\n      value: \"YlOrRd\"\n    }, \"YellowOrangeRed\"), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"modal-footer btn-group\"\n    }, \"\\n                            \", HTML.BUTTON({\n      type: \"button\",\n      class: \"cancel-send btn btn-info\",\n      \"data-dismiss\": \"modal\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Cancel\"), \"\\n                            \", HTML.BUTTON({\n      name: \"colorbarSubmit\",\n      id: \"colorbarSubmit\",\n      type: \"submit\",\n      class: \"send btn btn-primary\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"Submit\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                    \", HTML.Comment(\" /.modal-content \"), \"\\n                \"), \"\\n                \", HTML.Comment(\" /.modal-dialog \"), \"\\n            \"), \"\\n        \" ];\n  }), \"\\n        \", HTML.DIV({\n    id: \"header\",\n    class: \"row\"\n  }, \"\\n            \", HTML.SPAN(\"\\n                \", HTML.H4({\n    class: \"col-8\"\n  }, \"\\n                    \", HTML.SPAN(Blaze.View(\"lookup:Title\", function() {\n    return Spacebars.mustache(view.lookup(\"Title\"));\n  }), \" : \"), HTML.SPAN(Blaze.View(\"lookup:plotText\", function() {\n    return Spacebars.mustache(view.lookup(\"plotText\"));\n  })), HTML.SPAN(\" \", Blaze.View(\"lookup:plotName\", function() {\n    return Spacebars.mustache(view.lookup(\"plotName\"));\n  })), \"\\n                    \", HTML.Raw('<button class=\"btn btn-xs col-2 btn-danger closeapp\">Close All Preview Windows</button>'), \"\\n                    \", HTML.Raw('<span class=\"col-2 pull-right\"> </span>'), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.SPAN({\n    style: \"display: none\"\n  }, Blaze.View(\"lookup:graphFunction\", function() {\n    return Spacebars.mustache(view.lookup(\"graphFunction\"));\n  })), \"\\n        \"), \"\\n        \", HTML.DIV({\n    id: \"curves\",\n    class: \"row\"\n  }, \"\\n            \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"curves\"));\n  }, function() {\n    return [ \"\\n                \", HTML.SPAN({\n      style: function() {\n        return [ \"color:\", Spacebars.mustache(view.lookup(\"color\")), \"; font-weight: bolder;\" ];\n      }\n    }, \"--- \"), HTML.SPAN({\n      style: \"font-size:small;\"\n    }, Blaze.View(\"lookup:curveText\", function() {\n      return Spacebars.mustache(view.lookup(\"curveText\"));\n    })), \"\\n                \", HTML.DIV({\n      id: function() {\n        return [ \"curve-text-buttons-grp-\", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")) ];\n      },\n      class: \"btn-group btn-group-xs\"\n    }, \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"curveVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"hideButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"curveShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"pointsVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"pointsButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide-points\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"pointsShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"errorBarVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"errorBarButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide-errorbars\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"errorbarsShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"barVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"barChartButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide-bars\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"barsShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"annotateVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"annotateButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide-annotate\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"annotateShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                    \", HTML.INPUT({\n      type: \"button\",\n      class: \"heatMapVisibility btn btn-primary\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"heatMapButtonText\"));\n      },\n      id: function() {\n        return [ Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"label\")), \"-curve-show-hide-heatmap\" ];\n      },\n      style: function() {\n        return [ \"border-radius: 5px; display:\", Spacebars.mustache(view.lookup(\"heatMapShowHideDisplay\")), \"; background-color: #FFFFFF; border-color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")), \"; color: \", Spacebars.mustache(Spacebars.dot(view.lookup(\".\"), \"color\")) ];\n      }\n    }), \"\\n                \"), \"\\n                \", HTML.BR(), \"\\n            \" ];\n  }), \"\\n            \", HTML.Raw(\"<hr>\"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    id: \"textView\",\n    style: \"display:none;\"\n  }, \"\\n            \", Spacebars.include(view.lookupTemplate(\"textOutput\")), \"\\n        \"), \"\\n        \", HTML.DIV({\n    id: \"graphView\",\n    style: \"height:100%;margin:0;padding:0;\",\n    class: \"row\"\n  }, \"\\n            \", HTML.Raw('<div id=\"legendContainer\" name=\"legendContainer\"></div>'), \"\\n            \", HTML.DIV({\n    id: \"placeholder\",\n    class: \"row\",\n    name: \"placeholder\",\n    style: function() {\n      return [ \"float:left;width:\", Spacebars.mustache(view.lookup(\"width\")), \"; height:\", Spacebars.mustache(view.lookup(\"height\")), \";\" ];\n    }\n  }, \"\\n                \\n            \"), \"\\n        \"), \"\\n        \", HTML.H5({\n    class: \"row text-center\",\n    id: \"confidenceNote\",\n    style: function() {\n      return [ \"font-size:large;display:\", Spacebars.mustache(view.lookup(\"confidenceDisplay\")), \";\" ];\n    }\n  }, \"Error\\n            Bars show 95% confidence\"), \"\\n    \") ];\n}));\n","bodyAttrs":{}}