debugSource('~/series.R')
dfBoot
debugSource('~/series.R')
debugSource('~/series.R')
source('~/series.R')
dfOut
debugSource('~/series.R')
d
debugSource('~/series.R')
dfSeriesSums
strStat
debugSource('~/series.R')
listTotal
d
total
d[i,][[ paste(strPerm, "fabar", sep="_") ]]
sum( d[i,][[ paste(strPerm, "fabar", sep="_") ]]  * listTotal, na.rm=TRUE ) / total
debugSource('~/series.R')
debugSource('~/series.R')
source('~/series.R')
dfOut
source('~/series.R')
dfOut
source('~/series.R')
source('~/series.R')
source('~/series.R')
dfOut
source('~/series.R')
dfOut
source('~/series.R')
source('~/series.R')
dfOut
source('~/series.R')
dfOut
debugSource('~/series.R')
debugSource('~/series.R')
dfOut
debugSource('~/series.R')
debugSource('~/series.R')
dfSeriesSums
debugSource('~/series.R')
dfSeriesSums
sum( d[i,][[ paste(strPerm, "var_mean", sep="_") ]] * listTotal, na.rm=TRUE ) / total
d[i,][[ paste(strPerm, "var_mean", sep="_") ]]
names(d)
debugSource('~/series.R')
listFields
listBoot
d
debugSource('~/series.R')
dfBoot
listBoot
listBoot
debugSource('~/series.R')
listBoot
names(listBoot)
strCount
strCount
listFields
strCount
strCount
listCounts
dfStatsPerm
debugSource('~/series.R')
listBoot
debugSource('~/series.R')
listBoot
d[i,][[ paste(strPerm, "var_mean", sep="_") ]]
dfSeriesSums
d[i,][[ paste(strPerm, "bin_n", sep="_") ]]
dfSeriesSums
dfOut
install.packages("gsl")
library(gsl)
q()
source('~/series.R')
listHistData
listHistData
listHistData[1]
listHistData[1][]
listHistData[][1]
listHistData[[1]]
listHistData[*][1]
listHistData[2][1]
listHistData[2,]
source('~/series.R')
listHistData[,1]
source('~/series.R')
source('~/series.R')
source('~/series.R')
counts
mtcars$vs
mtcars$gear
mtcars
source('~/series.R')
source('~/series.R')
listHistData
names(counts)
dfPlot
table(Ni <- stats::rpois(100, lambda = 5))
r <- barplot(tN, col = rainbow(20))
tN <- table(Ni <- stats::rpois(100, lambda = 5))
r <- barplot(tN, col = rainbow(20))
lines(r, tN, type = "h", col = "red", lwd = 2)
barplot(tN, space = 1.5, axisnames = FALSE,
sub = "barplot(..., space= 1.5, axisnames = FALSE)")
require(grDevices)
r <- barplot(tN, col = rainbow(20))
barplot(tN, col = rainbow(20))
hh <- t(VADeaths)[, 5:1]
hh
height = cbind(x = c(465, 91) / 465 * 100,
y = c(840, 200) / 840 * 100,
z = c(37, 17) / 37 * 100)
height
barplot(height = cbind(x = c(465, 91) / 465 * 100,
y = c(840, 200) / 840 * 100,
z = c(37, 17) / 37 * 100),
beside = FALSE,
width = c(465, 840, 37),
col = c(1, 2),
legend.text = c("A", "B"),
args.legend = list(x = "topleft"))
source('~/series.R')
source('~/series.R')
height
source('~/series.R')
height
listHistData
listHistData[,1]
a=as.table(listHistData)
a
source('~/series.R')
listX
listHistData
length(listHistData)
length(listHistData[1])
length(listHistData[1,])
source('~/series.R')
source('~/series.R')
source('~/series.R')
listHistData
nrow(listHistData)
listX
is.list(listX)
is.vector(listX)
source('~/series.R')
dfPlot
nrow(dfPlot)
source('~/series.R')
source('~/series.R')
source('~/series.R')
debugSource('~/series.R')
strIndyVar
listIndyVal
listSeries1Val
debugSource('~/series.R')
debugSource('~/series.R')
strIndyVar
listIndyVal
listSeries1Val
listFixVars
listFixVarVals
listSeriesValNoGroups
dfStatsEq
strSeriesVar
valSeries
listSeriesValNoGroups
listFixVarVals
listFixVars
debugSource('~/series.R')
listSeriesValNoGroups
listSeriesValNoGroups
index
listFixVars[index]
listFixVarVals[index]
listFixVarVals[[index]]
debugSource('~/series.R')
debugSource('~/series.R')
listSeriesValNoGroups
dfSeriesPerm
permute(listSeriesValNoGroups)
dfSeriesPerm
nrow(dfSeriesPerm)
dfSeriesPerm[1]
dfSeriesPerm[1,]
a=1
dfSeriesPerm[a,]
b='model'
dfSeriesPerm[a,][b]
debugSource('~/series.R')
dfSeriesPerm
strVar
debugSource('~/series.R')
dfComp[dfComp[[strVar]] == dfSeriesPerm[index,][strVar]]
dfComp[dfComp[[strVar]] == dfSeriesPerm[index,][strVar]],]
dfComp[dfComp[[strVar]] == dfSeriesPerm[index,][strVar],]
dfComp
dfStats
debugSource('~/series.R')
debugSource('~/series.R')
dfComp[dfComp[[strVar]] == dfSeriesPerm[index,][strVar],]
dfSeriesPerm[index,][strVar]
source('/Volumes/d1/tatiana/cvs/apps/verif/metviewer/R_work/include/util_plot.R')
debugSource('~/series.R')
dfSeriesPerm[index,][strVar]
dfSeriesPerm
dfSeriesPerm
source('/Volumes/d1/tatiana/cvs/apps/verif/metviewer/R_work/include/util_plot.R')
debugSource('~/series.R')
dfSeriesPerm[index,][strVar]
dfSeriesPerm[[index,]]
dfSeriesPerm[index,]
debugSource('~/series.R')
dfSeriesPerm[index,]
dfSeriesPerm[index,]$model
dfSeriesPerm[index,][[strVar]]
dfComp[[strVar]] == dfSeriesPerm[index,][[strVar]]
debugSource('~/series.R')
View(dfComp)
names(dfComp)
names(dfStats)
debugSource('~/series.R')
View(dfComp)
listEqualize
listEqualize
sum(is.na(listEqualize))
listDiscard
listInd
listDiscard
listInd
listEqualize
listDiscard
debugSource('~/series.R')
debugSource('~/series.R')
debugSource('~/series.R')
debugSource('~/series.R')
0 < sum(is.na(listEqualize) ) || nrow(listEqualize) == 0
nrow(listEqualize) == 0
0 < sum(is.na(listEqualize) )
debugSource('~/series.R')
debugSource('~/series.R')
listEqualize
strVar
strVar
strVar
dfSeriesPerm[index,][[strVar]]
View(dfComp)
listInd
listEqualize
unique(dfComp$equalize)
listDiscard
listDiscard
dfComp$equalize[ !(dfComp$equalize %in% listEqualize) ]
listEqualize
dfComp$equalize
dfComp$equalize %in% listEqualize
!(dfComp$equalize %in% listEqualize) ]
!(dfComp$equalize %in% listEqualize)
dfComp$equalize[ !(dfComp$equalize %in% listEqualize) ]
listDiscard
listEqualize
listEqualize[listInd]
dfComp
debugSource('~/series.R')
listSeriesValNoGroups
listEqualize
unique(dfComp$equalize)
listEqualize
listInd
listEqualize
dfIndyEq
listEqualize
dfStats$equalize
dfStats$equalize %in% listEqualize,
dfStats$equalize %in% listEqualize
dfStats[dfStats$equalize %in% listEqualize,]
debugSource('~/series.R')
debugSource('~/series.R')
debugSource('~/series.R')
length(listFixVars) > 0
debugSource('~/series.R')
debugSource('~/series.R')
debugSource('~/series.R')
debugSource('~/series.R')
debugSource('~/series.R')
debugSource('~/series.R')
strIndyVar
debugSource('~/series.R')
debugSource('~/series.R')
strIndyVar
listVarsForEE
listFixVars
length(listFixVars)
length(listFixVars) > 0
strVar
dfVarsForEEPerm[index,][[strVar]]
dfVarsForEEPerm
debugSource('~/series.R')
dfVarsForEEPerm
index
dfVarsForEEPerm[index,]
dfVarsForEEPerm[index]
dfVarsForEEPerm[index]$model
dfVarsForEEPerm[index,]$model
dfVarsForEEPerm[index,]$model
dfVarsForEEPerm[index,]
dfVarsForEEPerm[index,][1]
ncol(dfVarsForEEPerm)
a=1
dfVarsForEEPerm[index,][a]
dfVarsForEEPerm[index,][[a]]
debugSource('~/series.R')
debugSource('~/series.R')
strVarIndex
dfComp
dfVarsForEEPerm[index,][[strVarIndex]]
dfComp
debugSource('~/series.R')
fPlot
dfStatsRec
strDep1Name
debugSource('~/series.R')
debugSource('~/series.R')
source('~/series.R')
debugSource('~/series.R')
listDep1Plot
listSeries1Val
View(fPlot)
View(dfPlot)
debugSource('~/series.R')
debugSource('~/series.R')
strIndyVar
listIndy
listSeries1Val
listFixVars
listFixVarVals
boolEqualizeByIndep
dfStats
dfVarsForEEPerm
dfComp
strVarIndex
dfVarsForEEPerm[index,][[strVarIndex]]
strVar
dfComp[[strVarIndex]]
dfComp[strVarIndex]
names(dfVarsForEEPerm)
names(dfVarsForEEPerm)[strVarIndex]
dfComp[[names(dfVarsForEEPerm)[strVarIndex]]]
dfComp[names(dfVarsForEEPerm)[strVarIndex]]
dfStats[names(dfVarsForEEPerm)[strVarIndex]]
dfStats[[names(dfVarsForEEPerm)[strVarIndex]]]
debugSource('~/series.R')
debugSource('~/series.R')
dfComp
dfComp
debugSource('~/series.R')
View(dfPlot)
source('~/series.R')
debugSource('~/series.R')
names(dfVarsForEEPerm)[strVarIndex]
names(dfVarsForEEPerm)[strVarIndex]
names(dfVarsForEEPerm)[strVarIndex]
dfComp
dfVarsForEEPerm[index,][[strVarIndex]]
dfComp[dfComp[[names(dfVarsForEEPerm)[strVarIndex]]] == dfVarsForEEPerm[index,][[strVarIndex]],]
Q
debugSource('~/series.R')
dfComp[[names(dfVarsForEEPerm)[strVarIndex]]]
dfVarsForEEPerm[index,][[strVarIndex]]
dfVarsForEEPerm[index][strVarIndex]
index
strVarIndex
dfVarsForEEPerm[index, strVarIndex]
dfComp[[names(dfVarsForEEPerm)[strVarIndex]]] == dfVarsForEEPerm[index,strVarIndex]
debugSource('~/series.R')
dfComp[,strVarIndex]
dfComp[,strVarIndex] == dfVarsForEEPerm[index,strVarIndex]
debugSource('~/series.R')
dfComp[,strVarIndex]
dfComp[,strVarIndex]
dfComp[,strVarIndex]
dfComp[strVarIndex]
dfComp
dfComp
dfComp[strVarIndex]
strVarIndex
debugSource('~/series.R')
strVarIndex
dfComp[strVarIndex]
dfVarsForEEPerm[index,strVarIndex]
dfComp[strVarIndex] == dfVarsForEEPerm[index,strVarIndex]
dfComp[strVarIndex] == dfVarsForEEPerm[index,strVarIndex][1]
dfComp[strVarIndex] == 'CNRFC_d01'
dfVarsForEEPerm[index]
dfVarsForEEPerm[index][[strVarIndex]]
debugSource('~/series.R')
dfVarsForEEPerm
dfComp[strVarIndex] == dfVarsForEEPerm[index,strVarIndex]
dfComp[strVarIndex] == dfVarsForEEPerm[index,strVarIndex]
dfComp[[strVarIndex]]
dfComp[[strVarIndex]] == dfVarsForEEPerm[index,strVarIndex]
debugSource('~/series.R')
dfVarsForEEPerm
dfVarsForEEPerm[index,strVarIndex]
dfComp[strVarIndex] == dfVarsForEEPerm[index,strVarIndex]
source('~/series.R')
source('~/series.R')
debugSource('~/series.R')
names(listVarsForEE)
names(listVarsForEE)[strVarIndex]
names(listVarsForEE)[strVarIndex]
as.character(dfComp[strVarIndex])
dfComp[strVarIndex]
dfComp[[strVarIndex]]
dfComp[[strVarIndex]] == dfVarsForEEPerm[index,strVarIndex]
as.character(dfComp[[strVarIndex]]) == dfVarsForEEPerm[index,strVarIndex]
debugSource('~/series.R')
source('~/series.R')
debugSource('~/series.R')
debugSource('~/series.R')
debugSource('~/series.R')
debugSource('~/series.R')
names(listVarsForEE)
dfComp[[strVarIndex]]
names(listVarsForEE)[strVarIndex]
dfComp
dfComp[[names(listVarsForEE)[strVarIndex]]]
debugSource('~/series.R')
debugSource('~/series.R')
names(listVarsForEE)[strVarIndex]
dfComp[[names(listVarsForEE)[strVarIndex]]]
as.character(dfComp[[names(listVarsForEE)[strVarIndex]]])
debugSource('~/series.R')
dfVarsForEEPerm
debugSource('~/series.R')
listEqualize
dfComp
listInd
debugSource('~/series.R')
listEqualize
unique(dfComp$equalize)
listDiscard
listDiscard
debugSource('~/series.R')
dfVarsForEEPerm
listEqualize
listInd
listDiscard
!(dfComp$equalize %in% listEqualize)
dfComp$equalize %in% listEqualize
listEqualize
dfComp$equalize
dfComp$equalize[ !(dfComp$equalize %in% listEqualize) ]
!(dfComp$equalize %in% listEqualize)
length(unique(dfComp$equalize))
length(listEqualize)
debugSource('~/series.R')
dfVarsForEEPerm[dfVarsForEEPerm,]
dfVarsForEEPerm[index,]
debugSource('~/series.R')
debugSource('/Volumes/d1/tatiana/cvs/apps/verif/metviewer/R_work/include/util_plot.R')
source('~/series.R')
source('~/series.R')
debugSource('~/series.R')
debugSource('~/series.R')
listDiscard
nrow(dfStats)
nrow(dfStatsEq)
source('~/series.R')
install.packages("addinslist")
library("addinslist", lib.loc="~/Library/R/3.3/library")
addinslist:::addinslistAddin()
debugSource('~/series.R')
View(dfStatsRec)
View(eeStats)
strDep1Name
View(fPlot)
eeStatsEqualizeUnique
dfStats
-version
-v
v
R.Version()
a="CNTSUM_OSA"
substring(a, 1, nchar("CNTSUM")) == "CNTSUM"
debugSource('~/series.R')
listAllStatsName
listAllStats[[listAllStatsName]]
strDep1Stat
source('~/series.R')
debugSource('~/series.R')
dfSeriesSums
debugSource('~/series.R')
debugSource('~/series.R')
debugSource('~/series.R')
source('~/series.R')
source('~/series.R')
debugSource('~/series.R')
d
listTotal
total
sum( as.numeric(d[i,][[ paste(strPerm, "fobar", sep="_") ]] * listTotal), na.rm=TRUE ) / total
as.numeric(d[i,][[ paste(strPerm, "fobar", sep="_") ]] * listTotal)
d
d[i,][[ paste(strPerm, "fobar", sep="_") ]]
d[i,][[ paste(strPerm, "fobar", sep="_") ]] * listTotal
listTotal
as.numeric(d[i,][[ paste(strPerm, "fobar", sep="_") ]])
as.numeric(d[i,][[ paste(strPerm, "fobar", sep="_") ]]) * listTotal
debugSource('~/series.R')
sum( as.numeric(d[i,][[ paste(strPerm, "fobar", sep="_") ]]) * listTotal, na.rm=TRUE ) / total
