{"version":3,"sources":["meteor://ðŸ’»app/packages/accounts-ui-unstyled/accounts_ui.js","meteor://ðŸ’»app/packages/accounts-ui-unstyled/login_buttons_session.js","meteor://ðŸ’»app/packages/accounts-ui-unstyled/login_buttons.js","meteor://ðŸ’»app/packages/accounts-ui-unstyled/login_buttons_single.js","meteor://ðŸ’»app/packages/accounts-ui-unstyled/login_buttons_dropdown.js","meteor://ðŸ’»app/packages/accounts-ui-unstyled/login_buttons_dialogs.js"],"names":["module","export","passwordSignupFields","Accounts","ui","_options","requestPermissions","Object","create","requestOfflineToken","forceApprovalPrompt","VALID_OPTIONS","Set","add","VALID_PASSWORD_SIGNUP_FIELDS","isValidPasswordSignupField","field","has","config","options","keys","forEach","key","Error","handlePasswordSignupFields","handleRequestPermissions","handleRequestOfflineToken","handleForceApprovalPrompt","reportInvalid","Array","isArray","every","assign","service","scope","VALID_KEYS","validateKey","includes","KEY_PREFIX","set","value","_set","Session","get","closeDropdown","resetMessages","infoMessage","message","ensureMessageVisible","errorMessage","isMessageDialogVisible","configureService","name","Meteor","isCordova","_loginButtonsSession","displayName","getLoginServices","hasPasswordService","dropdown","validateUsername","validateEmail","validatePassword","link","v","loginButtonsSession","Template","loginButtons","events","logout","registerHelper","user","profile","username","emails","address","services","Package","oauth","serviceNames","sort","push","map","length","email","password","_loginButtonsLoggedOut","helpers","singleService","configurationLoaded","loginServicesConfigured","_loginButtonsLoggedIn","_loginButtonsLoggedInSingleLogoutButton","_loginButtonsMessages","_loginButtonsLoggingInPadding","loginResultCallback","serviceName","err","LoginCancelledError","ServiceConfiguration","ConfigError","_configureLoginServiceDialog","templateForService","capitalize","reason","onPageLoadLogin","attemptInfo","type","error","_loginButtonsLoggedOutSingleLoginButton","loginWithService","cannotConfigure","configurations","findOne","configured","capitalizedName","input","str","String","charAt","toUpperCase","slice","elementValueById","id","element","document","getElementById","trimmedElementValueById","replace","loginOrSignup","signup","login","usernameOrEmail","loginSelector","loginWithPassword","result","matchPasswordAgainIfPresent","createUser","forgotPassword","changePassword","oldPassword","passwordAgain","isInPasswordSignupFields","fieldOrFields","signupFields","reduce","prev","_loginButtonsLoggedInDropdown","inChangePasswordFlow","inMessageOnlyFlow","dropdownVisible","_loginButtonsLoggedInDropdownActions","allowChangingPassword","_loginButtonsLoggedOutDropdown","event","preventDefault","keyCode","Tracker","flush","redraw","style","display","offsetHeight","usernameOrEmailInput","additionalClasses","_loginButtonsLoggedOutAllServices","isPasswordService","hasOtherServices","_loginButtonsLoggedOutPasswordService","fields","loginFields","fieldName","fieldLabel","autocomplete","visible","inputType","inForgotPasswordFlow","inLoginFlow","inSignupFlow","showCreateAccountLink","forbidClientAccountCreation","showForgotPasswordLink","_loginButtonsFormField","_loginButtonsChangePassword","fieldStyle","fieldValue","doneCallback","onResetPasswordLink","token","done","onEnrollmentLink","onEmailVerificationLink","verifyEmail","_resetPasswordDialog","resetPassword","newPassword","inResetPasswordFlow","_justResetPasswordDialog","enrollAccount","_enrollAccountDialog","inEnrollAccountFlow","_justVerifiedEmailDialog","_loginButtonsMessagesDialog","hasMessage","configuration","configurationFields","property","inputs","call","getElementsByTagName","loginStyle","querySelector","connection","_debug","target","indexOf","updateSaveDisabled","anyFieldEmpty","template","configurationSteps","saveDisabled","_configureLoginOnDesktopDialog"],"mappings":"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","file":"/packages/accounts-ui-unstyled.js","sourcesContent":["/**\n * @summary Accounts UI\n * @namespace\n * @memberOf Accounts\n * @importFromPackage accounts-base\n */\nAccounts.ui = {\n  _options: {\n    requestPermissions: Object.create(null),\n    requestOfflineToken: Object.create(null),\n    forceApprovalPrompt: Object.create(null),\n  },\n};\n\nconst VALID_OPTIONS = new Set()\n  .add('passwordSignupFields')\n  .add('requestPermissions')\n  .add('requestOfflineToken')\n  .add('forceApprovalPrompt');\n\nconst VALID_PASSWORD_SIGNUP_FIELDS = new Set()\n  .add(\"USERNAME_AND_EMAIL\")\n  .add(\"USERNAME_AND_OPTIONAL_EMAIL\")\n  .add(\"USERNAME_ONLY\")\n  .add(\"EMAIL_ONLY\");\n\nfunction isValidPasswordSignupField(field) {\n  return VALID_PASSWORD_SIGNUP_FIELDS.has(field);\n}\n\n/**\n * @summary Configure the behavior of [`{{> loginButtons}}`](#accountsui).\n * @locus Client\n * @param {Object} options\n * @param {Object} options.requestPermissions Which [permissions](#requestpermissions) to request from the user for each external service.\n * @param {Object} options.requestOfflineToken To ask the user for permission to act on their behalf when offline, map the relevant external service to `true`. Currently only supported with Google. See [Meteor.loginWithExternalService](#meteor_loginwithexternalservice) for more details.\n * @param {Object} options.forceApprovalPrompt If true, forces the user to approve the app's permissions, even if previously approved. Currently only supported with Google.\n * @param {String} options.passwordSignupFields Which fields to display in the user creation form. One of '`USERNAME_AND_EMAIL`', '`USERNAME_AND_OPTIONAL_EMAIL`', '`USERNAME_ONLY`', or '`EMAIL_ONLY`' (default).\n * @importFromPackage accounts-base\n */\nAccounts.ui.config = options => {\n  Object.keys(options).forEach(key => {\n    if (!VALID_OPTIONS.has(key)) {\n      throw new Error(`Accounts.ui.config: Invalid option: ${key}`);\n    }\n  });\n\n  handlePasswordSignupFields(options);\n  handleRequestPermissions(options);\n  handleRequestOfflineToken(options);\n  handleForceApprovalPrompt(options);\n};\n\nfunction handlePasswordSignupFields(options) {\n  let { passwordSignupFields } = options;\n\n  if (passwordSignupFields) {\n    const reportInvalid = () => {\n      throw new Error(`Accounts.ui.config: Invalid option for \\`passwordSignupFields\\`: ${passwordSignupFields}`);\n    };\n\n    if (typeof passwordSignupFields === \"string\") {\n      passwordSignupFields = [passwordSignupFields];\n    } else if (!Array.isArray(passwordSignupFields)) {\n      reportInvalid();\n    }\n\n    if (passwordSignupFields.every(isValidPasswordSignupField)) {\n      if (Accounts.ui._options.passwordSignupFields) {\n        throw new Error(\"Accounts.ui.config: Can't set `passwordSignupFields` more than once\");\n      }\n      Object.assign(Accounts.ui._options, { passwordSignupFields });\n      return;\n    }\n\n    reportInvalid();\n  }\n}\n\nexport function passwordSignupFields() {\n  const { passwordSignupFields } = Accounts.ui._options;\n\n  if (Array.isArray(passwordSignupFields)) {\n    return passwordSignupFields;\n  }\n\n  if (typeof passwordSignupFields === 'string') {\n    return [passwordSignupFields];\n  }\n\n  return [\"EMAIL_ONLY\"];\n}\n\n\nfunction handleRequestPermissions({ requestPermissions }) {\n  if (requestPermissions) {\n    Object.keys(requestPermissions).forEach(service => {\n      if (Accounts.ui._options.requestPermissions[service]) {\n        throw new Error(`Accounts.ui.config: Can't set \\`requestPermissions\\` more than once for ${service}`);\n      }\n\n      const scope = requestPermissions[service];\n\n      if (!Array.isArray(scope)) {\n        throw new Error(\"Accounts.ui.config: Value for `requestPermissions` must be an array\");\n      }\n\n      Accounts.ui._options.requestPermissions[service] = scope;\n    });\n  }\n}\n\nfunction handleRequestOfflineToken({ requestOfflineToken }) {\n  if (requestOfflineToken) {\n    Object.keys(requestOfflineToken).forEach(service => {\n      if (service !== 'google') {\n        throw new Error(\"Accounts.ui.config: `requestOfflineToken` only supported for Google login at the moment.\");\n      }\n\n      if (Accounts.ui._options.requestOfflineToken[service]) {\n        throw new Error(`Accounts.ui.config: Can't set \\`requestOfflineToken\\` more than once for ${service}`);\n      }\n\n      Accounts.ui._options.requestOfflineToken[service] =\n        requestOfflineToken[service];\n    });\n  }\n}\n\nfunction handleForceApprovalPrompt({ forceApprovalPrompt }) {\n  if (forceApprovalPrompt) {\n    Object.keys(forceApprovalPrompt).forEach(service => {\n      if (service !== 'google') {\n        throw new Error(\"Accounts.ui.config: `forceApprovalPrompt` only supported for Google login at the moment.\");\n      }\n\n      if (Accounts.ui._options.forceApprovalPrompt[service]) {\n        throw new Error(`Accounts.ui.config: Can't set \\`forceApprovalPrompt\\` more than once for ${service}`);\n      }\n\n      Accounts.ui._options.forceApprovalPrompt[service] =\n        forceApprovalPrompt[service];\n    });\n  }\n}\n","const VALID_KEYS = [\n  'dropdownVisible',\n\n  // XXX consider replacing these with one key that has an enum for values.\n  'inSignupFlow',\n  'inForgotPasswordFlow',\n  'inChangePasswordFlow',\n  'inMessageOnlyFlow',\n\n  'errorMessage',\n  'infoMessage',\n\n  // dialogs with messages (info and error)\n  'resetPasswordToken',\n  'enrollAccountToken',\n  'justVerifiedEmail',\n  'justResetPassword',\n\n  'configureLoginServiceDialogVisible',\n  'configureLoginServiceDialogServiceName',\n  'configureLoginServiceDialogSaveDisabled',\n  'configureOnDesktopVisible',\n];\n\nconst validateKey = key => {\n  if (!VALID_KEYS.includes(key))\n    throw new Error(`Invalid key in loginButtonsSession: ${key}`);\n};\n\nconst KEY_PREFIX = \"Meteor.loginButtons.\";\n\n// XXX This should probably be package scope rather than exported\n// (there was even a comment to that effect here from before we had\n// namespacing) but accounts-ui-viewer uses it, so leave it as is for\n// now\nconst set = (key, value) => {\n  validateKey(key);\n  if (['errorMessage', 'infoMessage'].includes(key))\n    throw new Error(\"Don't set errorMessage or infoMessage directly. Instead, use errorMessage() or infoMessage().\");\n\n  _set(key, value);\n};\n\nconst _set = (key, value) => Session.set(KEY_PREFIX + key, value);\n\nconst get = key => {\n  validateKey(key);\n  return Session.get(KEY_PREFIX + key);\n};\n\nconst closeDropdown = () => {\n  set('inSignupFlow', false);\n  set('inForgotPasswordFlow', false);\n  set('inChangePasswordFlow', false);\n  set('inMessageOnlyFlow', false);\n  set('dropdownVisible', false);\n  resetMessages();\n};\n\nconst infoMessage = message => {\n  _set(\"errorMessage\", null);\n  _set(\"infoMessage\", message);\n  ensureMessageVisible();\n};\n\nconst errorMessage = message => {\n  _set(\"errorMessage\", message);\n  _set(\"infoMessage\", null);\n  ensureMessageVisible();\n};\n\n// is there a visible dialog that shows messages (info and error)\nconst isMessageDialogVisible = () => {\n  return get('resetPasswordToken') ||\n    get('enrollAccountToken') ||\n    get('justVerifiedEmail');\n};\n\n// ensure that somethings displaying a message (info or error) is\n// visible. If a dialog with messages is open, do nothing;\n// otherwise open the dropdown.\n//\n// Notably this doesn't matter when only displaying a single login\n// button since then we have an explicit message dialog\n// (_loginButtonsMessageDialog), and dropdownVisible is ignored in\n// this case.\nconst ensureMessageVisible = () => {\n  if (!isMessageDialogVisible())\n    set(\"dropdownVisible\", true);\n};\n\nconst resetMessages = () => {\n  _set(\"errorMessage\", null);\n  _set(\"infoMessage\", null);\n};\n\nconst configureService = name => {\n  if (Meteor.isCordova) {\n    set('configureOnDesktopVisible', true);\n  } else {\n    set('configureLoginServiceDialogVisible', true);\n    set('configureLoginServiceDialogServiceName', name);\n    set('configureLoginServiceDialogSaveDisabled', true);\n  }\n};\n\nAccounts._loginButtonsSession = {\n  set,\n  _set,\n  get,\n  closeDropdown,\n  infoMessage,\n  errorMessage,\n  isMessageDialogVisible,\n  ensureMessageVisible,\n  resetMessages,\n  configureService,\n};\n","import { passwordSignupFields } from './accounts_ui.js';\n\n// for convenience\nconst loginButtonsSession = Accounts._loginButtonsSession;\n\n// shared between dropdown and single mode\nTemplate.loginButtons.events({\n  'click #login-buttons-logout': () =>\n    Meteor.logout(() => loginButtonsSession.closeDropdown()),\n});\n\nTemplate.registerHelper('loginButtons', () => {\n  throw new Error(\"Use {{> loginButtons}} instead of {{loginButtons}}\");\n});\n\n//\n// helpers\n//\n\nexport const displayName = () => {\n  const user = Meteor.user();\n  if (!user)\n    return '';\n\n  if (user.profile && user.profile.name)\n    return user.profile.name;\n  if (user.username)\n    return user.username;\n  if (user.emails && user.emails[0] && user.emails[0].address)\n    return user.emails[0].address;\n\n  return '';\n};\n\n// returns an array of the login services used by this app. each\n// element of the array is an object (eg {name: 'facebook'}), since\n// that makes it useful in combination with handlebars {{#each}}.\n//\n// don't cache the output of this function: if called during startup (before\n// oauth packages load) it might not include them all.\n//\n// NOTE: It is very important to have this return password last\n// because of the way we render the different providers in\n// login_buttons_dropdown.html\nexport const getLoginServices = () => {\n  // First look for OAuth services.\n  const services = Package['accounts-oauth'] ? Accounts.oauth.serviceNames() : [];\n\n  // Be equally kind to all login services. This also preserves\n  // backwards-compatibility. (But maybe order should be\n  // configurable?)\n  services.sort();\n\n  // Add password, if it's there; it must come last.\n  if (hasPasswordService())\n    services.push('password');\n\n  return services.map(name => ({ name }));\n};\n\nexport const hasPasswordService = () => !!Package['accounts-password'];\n\nexport const dropdown = () => \n  hasPasswordService() || getLoginServices().length > 1;\n\n// XXX improve these. should this be in accounts-password instead?\n//\n// XXX these will become configurable, and will be validated on\n// the server as well.\nexport const validateUsername = username => {\n  if (username.length >= 3) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Username must be at least 3 characters long\");\n    return false;\n  }\n};\n\nexport const validateEmail = email => {\n  if (passwordSignupFields() === \"USERNAME_AND_OPTIONAL_EMAIL\" && email === '')\n    return true;\n\n  if (email.includes('@')) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Invalid email\");\n    return false;\n  }\n};\n\nexport const validatePassword = password => {\n  if (password.length >= 6) {\n    return true;\n  } else {\n    loginButtonsSession.errorMessage(\"Password must be at least 6 characters long\");\n    return false;\n  }\n};\n\n//\n// loginButtonLoggedOut template\n//\n\nTemplate._loginButtonsLoggedOut.helpers({\n  dropdown,\n  services: getLoginServices,\n  singleService: () => {\n    const services = getLoginServices();\n    if (services.length !== 1)\n      throw new Error(\n        \"Shouldn't be rendering this template with more than one configured service\");\n    return services[0];\n  },\n  configurationLoaded: () => Accounts.loginServicesConfigured(),\n});\n\n\n//\n// loginButtonsLoggedIn template\n//\n\n  // decide whether we should show a dropdown rather than a row of\n  // buttons\nTemplate._loginButtonsLoggedIn.helpers({ dropdown });\n\n\n\n//\n// loginButtonsLoggedInSingleLogoutButton template\n//\n\nTemplate._loginButtonsLoggedInSingleLogoutButton.helpers({ displayName });\n\n\n\n//\n// loginButtonsMessage template\n//\n\nTemplate._loginButtonsMessages.helpers({\n  errorMessage: () => loginButtonsSession.get('errorMessage'),\n});\n\nTemplate._loginButtonsMessages.helpers({\n  infoMessage: () => loginButtonsSession.get('infoMessage'),\n});\n\n\n//\n// loginButtonsLoggingInPadding template\n//\n\nTemplate._loginButtonsLoggingInPadding.helpers({ dropdown });\n","import { getLoginServices } from './login_buttons.js';\n\n// for convenience\nconst loginButtonsSession = Accounts._loginButtonsSession;\n\n\nconst loginResultCallback = (serviceName, err) => {\n  if (!err) {\n    loginButtonsSession.closeDropdown();\n  } else if (err instanceof Accounts.LoginCancelledError) {\n    // do nothing\n  } else if (err instanceof ServiceConfiguration.ConfigError) {\n    if (Template._configureLoginServiceDialog.templateForService(serviceName)) {\n      loginButtonsSession.configureService(serviceName);\n    } else {\n      loginButtonsSession.errorMessage(\n        `No configuration for ${capitalize(serviceName)}.\\n` +\n        \"Use `ServiceConfiguration` to configure it or \" +\n        `install the \\`${serviceName}-config-ui\\` package.`\n      );\n    }\n  } else {\n    loginButtonsSession.errorMessage(err.reason || \"Unknown error\");\n  }\n};\n\n\n// In the login redirect flow, we'll have the result of the login\n// attempt at page load time when we're redirected back to the\n// application.  Register a callback to update the UI (i.e. to close\n// the dialog on a successful login or display the error on a failed\n// login).\n//\nAccounts.onPageLoadLogin(attemptInfo => {\n  // Ignore if we have a left over login attempt for a service that is no longer registered.\n  if (\n    getLoginServices()\n      .map(service => service.name)\n      .includes(attemptInfo.type)\n  )\n    loginResultCallback(attemptInfo.type, attemptInfo.error);\n});\n\n\nTemplate._loginButtonsLoggedOutSingleLoginButton.events({\n  'click .login-button': function () {\n    const serviceName = this.name;\n    loginButtonsSession.resetMessages();\n\n    // XXX Service providers should be able to specify their\n    // `Meteor.loginWithX` method name.\n    const loginWithService = Meteor[`loginWith${\n                                  (serviceName === 'meteor-developer' ?\n                                   'MeteorDeveloperAccount' :\n                                   capitalize(serviceName))}`];\n\n    const options = {}; // use default scope unless specified\n    if (Accounts.ui._options.requestPermissions[serviceName])\n      options.requestPermissions = Accounts.ui._options.requestPermissions[serviceName];\n    if (Accounts.ui._options.requestOfflineToken[serviceName])\n      options.requestOfflineToken = Accounts.ui._options.requestOfflineToken[serviceName];\n    if (Accounts.ui._options.forceApprovalPrompt[serviceName])\n      options.forceApprovalPrompt = Accounts.ui._options.forceApprovalPrompt[serviceName];\n\n    loginWithService(options, err => {\n      loginResultCallback(serviceName, err);\n    });\n  }\n});\n\nTemplate._loginButtonsLoggedOutSingleLoginButton.helpers({\n  // not configured and has no config UI\n  cannotConfigure: function () { \n    return !ServiceConfiguration.configurations.findOne({service: this.name}) && \n      !Template._configureLoginServiceDialog.templateForService(this.name);\n  },\n  configured: function () {\n    return !!ServiceConfiguration.configurations.findOne({service: this.name});\n  },\n  capitalizedName: function () {\n    if (this.name === 'github')\n      // XXX we should allow service packages to set their capitalized name\n      return 'GitHub';\n    else if (this.name === 'meteor-developer')\n      return 'Meteor';\n    else\n      return capitalize(this.name);\n  }\n});\n\n// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js\nconst capitalize = input => {\n  str = input == null ? '' : String(input);\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n","import { passwordSignupFields } from './accounts_ui.js';\nimport {\n  displayName,\n  getLoginServices,\n  hasPasswordService,\n  validateUsername,\n  validateEmail,\n  validatePassword,\n} from './login_buttons.js';\n\n// for convenience\nconst loginButtonsSession = Accounts._loginButtonsSession;\n\n//\n// helpers\n//\n\nconst elementValueById = id => {\n  const element = document.getElementById(id);\n  if (!element)\n    return null;\n  else\n    return element.value;\n};\n\nconst trimmedElementValueById = id => {\n  const element = document.getElementById(id);\n  if (!element)\n    return null;\n  else\n    return element.value.replace(/^\\s*|\\s*$/g, \"\"); // trim() doesn't work on IE8;\n};\n\nconst loginOrSignup = () => {\n  if (loginButtonsSession.get('inSignupFlow'))\n    signup();\n  else\n    login();\n};\n\nconst login = () => {\n  loginButtonsSession.resetMessages();\n\n  const username = trimmedElementValueById('login-username');\n  const email = trimmedElementValueById('login-email');\n  const usernameOrEmail = trimmedElementValueById('login-username-or-email');\n  // notably not trimmed. a password could (?) start or end with a space\n  const password = elementValueById('login-password');\n\n  let loginSelector;\n  if (username !== null) {\n    if (!validateUsername(username))\n      return;\n    else\n      loginSelector = {username: username};\n  } else if (email !== null) {\n    if (!validateEmail(email))\n      return;\n    else\n      loginSelector = {email: email};\n  } else if (usernameOrEmail !== null) {\n    // XXX not sure how we should validate this. but this seems good enough (for now),\n    // since an email must have at least 3 characters anyways\n    if (!validateUsername(usernameOrEmail))\n      return;\n    else\n      loginSelector = usernameOrEmail;\n  } else {\n    throw new Error(\"Unexpected -- no element to use as a login user selector\");\n  }\n\n  Meteor.loginWithPassword(loginSelector, password, (error, result) => {\n    if (error) {\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n    } else {\n      loginButtonsSession.closeDropdown();\n    }\n  });\n};\n\nconst signup = () => {\n  loginButtonsSession.resetMessages();\n\n  const options = {}; // to be passed to Accounts.createUser\n\n  const username = trimmedElementValueById('login-username');\n  if (username !== null) {\n    if (!validateUsername(username))\n      return;\n    else\n      options.username = username;\n  }\n\n  const email = trimmedElementValueById('login-email');\n  if (email !== null) {\n    if (!validateEmail(email))\n      return;\n    else\n      options.email = email;\n  }\n\n  // notably not trimmed. a password could (?) start or end with a space\n  const password = elementValueById('login-password');\n  if (!validatePassword(password))\n    return;\n  else\n    options.password = password;\n\n  if (!matchPasswordAgainIfPresent())\n    return;\n\n  Accounts.createUser(options, error => {\n    if (error) {\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n    } else {\n      loginButtonsSession.closeDropdown();\n    }\n  });\n};\n\nconst forgotPassword = () => {\n  loginButtonsSession.resetMessages();\n\n  const email = trimmedElementValueById(\"forgot-password-email\");\n  if (email.includes('@')) {\n    Accounts.forgotPassword({email: email}, error => {\n      if (error)\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n      else\n        loginButtonsSession.infoMessage(\"Email sent\");\n    });\n  } else {\n    loginButtonsSession.errorMessage(\"Invalid email\");\n  }\n};\n\nconst changePassword = () => {\n  loginButtonsSession.resetMessages();\n\n  // notably not trimmed. a password could (?) start or end with a space\n  const oldPassword = elementValueById('login-old-password');\n\n  // notably not trimmed. a password could (?) start or end with a space\n  const password = elementValueById('login-password');\n  if (!validatePassword(password))\n    return;\n\n  if (!matchPasswordAgainIfPresent())\n    return;\n\n  Accounts.changePassword(oldPassword, password, error => {\n    if (error) {\n      loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n    } else {\n      loginButtonsSession.set('inChangePasswordFlow', false);\n      loginButtonsSession.set('inMessageOnlyFlow', true);\n      loginButtonsSession.infoMessage(\"Password changed\");\n    }\n  });\n};\n\nconst matchPasswordAgainIfPresent = () => {\n  // notably not trimmed. a password could (?) start or end with a space\n  const passwordAgain = elementValueById('login-password-again');\n  if (passwordAgain !== null) {\n    // notably not trimmed. a password could (?) start or end with a space\n    const password = elementValueById('login-password');\n    if (password !== passwordAgain) {\n      loginButtonsSession.errorMessage(\"Passwords don't match\");\n      return false;\n    }\n  }\n  return true;\n};\n\n// Utility containment function that works with both arrays and single values\nconst isInPasswordSignupFields = (fieldOrFields) => {\n  const signupFields = passwordSignupFields();\n\n  if (Array.isArray(fieldOrFields)) {\n    return signupFields.reduce(\n      (prev, field) => prev && fieldOrFields.includes(field),\n      true,\n    )\n  }\n\n  return signupFields.includes(fieldOrFields);\n};\n\n// events shared between loginButtonsLoggedOutDropdown and\n// loginButtonsLoggedInDropdown\nTemplate.loginButtons.events({\n  'click #login-name-link, click #login-sign-in-link': () =>\n    loginButtonsSession.set('dropdownVisible', true),\n  'click .login-close-text': loginButtonsSession.closeDropdown,\n});\n\n\n//\n// loginButtonsLoggedInDropdown template and related\n//\n\nTemplate._loginButtonsLoggedInDropdown.events({\n  'click #login-buttons-open-change-password': () => {\n    loginButtonsSession.resetMessages();\n    loginButtonsSession.set('inChangePasswordFlow', true);\n  }\n});\n\nTemplate._loginButtonsLoggedInDropdown.helpers({\n  displayName,\n  inChangePasswordFlow: () => loginButtonsSession.get('inChangePasswordFlow'),\n  inMessageOnlyFlow: () => loginButtonsSession.get('inMessageOnlyFlow'),\n  dropdownVisible: () => loginButtonsSession.get('dropdownVisible'),\n});\n\nTemplate._loginButtonsLoggedInDropdownActions.helpers({\n  allowChangingPassword: () => {\n    // it would be more correct to check whether the user has a password set,\n    // but in order to do that we'd have to send more data down to the client,\n    // and it'd be preferable not to send down the entire service.password document.\n    //\n    // instead we use the heuristic: if the user has a username or email set.\n    const user = Meteor.user();\n    return user.username || (user.emails && user.emails[0] && user.emails[0].address);\n  }\n});\n\n\n//\n// loginButtonsLoggedOutDropdown template and related\n//\n\nTemplate._loginButtonsLoggedOutDropdown.events({\n  'click #login-buttons-password': event => {\n    event.preventDefault();\n    loginOrSignup();\n  },\n\n  'keypress #forgot-password-email': event => {\n    if (event.keyCode === 13)\n      forgotPassword();\n  },\n\n  'click #login-buttons-forgot-password': forgotPassword,\n\n  'click #signup-link': () => {\n    loginButtonsSession.resetMessages();\n\n    // store values of fields before swtiching to the signup form\n    const username = trimmedElementValueById('login-username');\n    const email = trimmedElementValueById('login-email');\n    const usernameOrEmail = trimmedElementValueById('login-username-or-email');\n    // notably not trimmed. a password could (?) start or end with a space\n    const password = elementValueById('login-password');\n\n    loginButtonsSession.set('inSignupFlow', true);\n    loginButtonsSession.set('inForgotPasswordFlow', false);\n    // force the ui to update so that we have the approprate fields to fill in\n    Tracker.flush();\n\n    // update new fields with appropriate defaults\n    if (username !== null)\n      document.getElementById('login-username').value = username;\n    else if (email !== null)\n      document.getElementById('login-email').value = email;\n    else if (usernameOrEmail !== null)\n      if (!usernameOrEmail.includes('@'))\n        document.getElementById('login-username').value = usernameOrEmail;\n    else\n      document.getElementById('login-email').value = usernameOrEmail;\n\n    if (password !== null)\n      document.getElementById('login-password').value = password;\n\n    // Force redrawing the `login-dropdown-list` element because of\n    // a bizarre Chrome bug in which part of the DIV is not redrawn\n    // in case you had tried to unsuccessfully log in before\n    // switching to the signup form.\n    //\n    // Found tip on how to force a redraw on\n    // http://stackoverflow.com/questions/3485365/how-can-i-force-webkit-to-redraw-repaint-to-propagate-style-changes/3485654#3485654\n    const redraw = document.getElementById('login-dropdown-list');\n    redraw.style.display = 'none';\n    redraw.offsetHeight; // it seems that this line does nothing but is necessary for the redraw to work\n    redraw.style.display = 'block';\n  },\n  'click #forgot-password-link': () => {\n    loginButtonsSession.resetMessages();\n\n    // store values of fields before swtiching to the signup form\n    const email = trimmedElementValueById('login-email');\n    const usernameOrEmail = trimmedElementValueById('login-username-or-email');\n\n    loginButtonsSession.set('inSignupFlow', false);\n    loginButtonsSession.set('inForgotPasswordFlow', true);\n    // force the ui to update so that we have the approprate fields to fill in\n    Tracker.flush();\n\n    // update new fields with appropriate defaults\n    if (email !== null)\n      document.getElementById('forgot-password-email').value = email;\n    else if (usernameOrEmail !== null)\n      if (usernameOrEmail.includes('@'))\n        document.getElementById('forgot-password-email').value = usernameOrEmail;\n\n  },\n  'click #back-to-login-link': () => {\n    loginButtonsSession.resetMessages();\n\n    const username = trimmedElementValueById('login-username');\n    const email = trimmedElementValueById('login-email')\n          || trimmedElementValueById('forgot-password-email'); // Ughh. Standardize on names?\n    // notably not trimmed. a password could (?) start or end with a space\n    const password = elementValueById('login-password');\n\n    loginButtonsSession.set('inSignupFlow', false);\n    loginButtonsSession.set('inForgotPasswordFlow', false);\n    // force the ui to update so that we have the approprate fields to fill in\n    Tracker.flush();\n\n    if (document.getElementById('login-username') && username !== null)\n      document.getElementById('login-username').value = username;\n    if (document.getElementById('login-email') && email !== null)\n      document.getElementById('login-email').value = email;\n\n    const usernameOrEmailInput = document.getElementById('login-username-or-email');\n    if (usernameOrEmailInput) {\n      if (email !== null)\n        usernameOrEmailInput.value = email;\n      if (username !== null)\n        usernameOrEmailInput.value = username;\n    }\n\n    if (password !== null)\n      document.getElementById('login-password').value = password;\n  },\n  'keypress #login-username, keypress #login-email, keypress #login-username-or-email, keypress #login-password, keypress #login-password-again': event => {\n    if (event.keyCode === 13)\n      loginOrSignup();\n  }\n});\n\nTemplate._loginButtonsLoggedOutDropdown.helpers({\n  // additional classes that can be helpful in styling the dropdown\n  additionalClasses: () => {\n    if (!hasPasswordService()) {\n      return false;\n    } else {\n      if (loginButtonsSession.get('inSignupFlow')) {\n        return 'login-form-create-account';\n      } else if (loginButtonsSession.get('inForgotPasswordFlow')) {\n        return 'login-form-forgot-password';\n      } else {\n        return 'login-form-sign-in';\n      }\n    }\n  },\n\n  dropdownVisible: () => loginButtonsSession.get('dropdownVisible'),\n\n  hasPasswordService,\n});\n\n// return all login services, with password last\nTemplate._loginButtonsLoggedOutAllServices.helpers({\n  services: getLoginServices,\n  isPasswordService: function () {\n    return this.name === 'password';\n  },\n  hasOtherServices: () => getLoginServices().length > 1,\n  hasPasswordService,\n});\n\nTemplate._loginButtonsLoggedOutPasswordService.helpers({\n  fields: () => {\n    const loginFields = [\n      {fieldName: 'username-or-email', fieldLabel: 'Username or Email',\n        autocomplete: 'username email',\n        visible: () => isInPasswordSignupFields(\n          [\"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\"]\n        ),\n      },\n      {fieldName: 'username', fieldLabel: 'Username', autocomplete: 'username',\n        visible: () => isInPasswordSignupFields(\"USERNAME_ONLY\"),\n      },\n      {fieldName: 'email', fieldLabel: 'Email', inputType: 'email',\n        autocomplete: 'email',\n        visible: () => isInPasswordSignupFields(\"EMAIL_ONLY\"),\n      },\n      {fieldName: 'password', fieldLabel: 'Password', inputType: 'password',\n        autocomplete: 'current-password',\n        visible: () => true,\n      }\n    ];\n\n    const signupFields = [\n      {fieldName: 'username', fieldLabel: 'Username', autocomplete: 'username',\n        visible: () => isInPasswordSignupFields([\n          \"USERNAME_AND_EMAIL\",\n          \"USERNAME_AND_OPTIONAL_EMAIL\",\n          \"USERNAME_ONLY\",\n        ]),\n      },\n      {fieldName: 'email', fieldLabel: 'Email', inputType: 'email',\n        autocomplete: 'email',\n        visible: () => isInPasswordSignupFields(\n          [\"USERNAME_AND_EMAIL\", \"EMAIL_ONLY\"]\n        ),\n      },\n      {fieldName: 'email', fieldLabel: 'Email (optional)', inputType: 'email',\n        autocomplete: 'email',\n        visible: () => isInPasswordSignupFields(\"USERNAME_AND_OPTIONAL_EMAIL\"),\n      },\n      {fieldName: 'password', fieldLabel: 'Password', inputType: 'password',\n        autocomplete: 'new-password',\n        visible: () => true,\n      },\n      {fieldName: 'password-again', fieldLabel: 'Password (again)',\n       inputType: 'password', autocomplete: 'new-password',\n        // No need to make users double-enter their password if\n        // they'll necessarily have an email set, since they can use\n        // the \"forgot password\" flow.\n        visible: () => isInPasswordSignupFields(\n          [\"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"]\n        ),\n      },\n    ];\n\n    return loginButtonsSession.get('inSignupFlow') ? signupFields : loginFields;\n  },\n\n  inForgotPasswordFlow: () => loginButtonsSession.get('inForgotPasswordFlow'),\n\n  inLoginFlow: () =>\n    !loginButtonsSession.get('inSignupFlow') &&\n    !loginButtonsSession.get('inForgotPasswordFlow'),\n\n  inSignupFlow: () => loginButtonsSession.get('inSignupFlow'),\n\n  showCreateAccountLink: () => !Accounts._options.forbidClientAccountCreation,\n\n  showForgotPasswordLink: () => isInPasswordSignupFields(\n    [\"USERNAME_AND_EMAIL\", \"USERNAME_AND_OPTIONAL_EMAIL\", \"EMAIL_ONLY\"]\n  ),\n});\n\nTemplate._loginButtonsFormField.helpers({\n  inputType: function () {\n    return this.inputType || \"text\"\n  }\n});\n\n\n//\n// loginButtonsChangePassword template\n//\n\nTemplate._loginButtonsChangePassword.events({\n  'keypress #login-old-password, keypress #login-password, keypress #login-password-again': event => {\n    if (event.keyCode === 13)\n      changePassword();\n  },\n  'click #login-buttons-do-change-password': changePassword,\n});\n\nTemplate._loginButtonsChangePassword.helpers({\n  fields: () => {\n    const { username, emails } = Meteor.user()\n    let email;\n    if (emails) {\n      email = emails[0].address;\n    }\n    return [\n      // The username and email fields are included here to address an\n      // accessibility warning in Chrome, but the fields don't actually display.\n      // The warning states that there should be an optionally hidden\n      // username/email field on password forms.\n      // XXX I think we should not use a CSS class here because this is the\n      // `unstyled` package. So instead we apply an inline style.\n      {fieldName: 'username', fieldLabel: 'Username', autocomplete: 'username',\n        fieldStyle: 'display: none;', fieldValue: username,\n        visible: () => isInPasswordSignupFields([\n          \"USERNAME_AND_EMAIL\",\n          \"USERNAME_AND_OPTIONAL_EMAIL\",\n          \"USERNAME_ONLY\",\n        ]),\n      },\n      {fieldName: 'email', fieldLabel: 'Email', inputType: 'email',\n        autocomplete: 'email', fieldStyle: 'display: none;', fieldValue: email,\n        visible: () => isInPasswordSignupFields(\n          [\"USERNAME_AND_EMAIL\", \"EMAIL_ONLY\"]\n        ),\n      },\n      {fieldName: 'old-password', fieldLabel: 'Current Password', inputType: 'password',\n        autocomplete: 'current-password', visible: () => true,\n      },\n      {fieldName: 'password', fieldLabel: 'New Password', inputType: 'password',\n        autocomplete: 'new-password', visible: () => true,\n      },\n      {fieldName: 'password-again', fieldLabel: 'New Password (again)',\n        inputType: 'password', autocomplete: 'new-password',\n        // No need to make users double-enter their password if\n        // they'll necessarily have an email set, since they can use\n        // the \"forgot password\" flow.\n        visible: () => isInPasswordSignupFields(\n          [\"USERNAME_AND_OPTIONAL_EMAIL\", \"USERNAME_ONLY\"]\n        ),\n      },\n    ];\n  }\n});\n","import { displayName, dropdown, validatePassword } from './login_buttons.js';\n// for convenience\nconst loginButtonsSession = Accounts._loginButtonsSession;\n\n// since we don't want to pass around the callback that we get from our event\n// handlers, we just make it a variable for the whole file\nlet doneCallback;\n\nAccounts.onResetPasswordLink((token, done) => {\n  loginButtonsSession.set(\"resetPasswordToken\", token);\n  doneCallback = done;\n});\n\nAccounts.onEnrollmentLink((token, done) => {\n  loginButtonsSession.set(\"enrollAccountToken\", token);\n  doneCallback = done;\n});\n\nAccounts.onEmailVerificationLink((token, done) => {\n  Accounts.verifyEmail(token, error => {\n    if (! error) {\n      loginButtonsSession.set('justVerifiedEmail', true);\n    }\n\n    done();\n    // XXX show something if there was an error.\n  });\n});\n\n\n//\n// resetPasswordDialog template\n//\n\nTemplate._resetPasswordDialog.events({\n  'click #login-buttons-reset-password-button': () => resetPassword(),\n  'keypress #reset-password-new-password': event => {\n    if (event.keyCode === 13)\n      resetPassword();\n  },\n  'click #login-buttons-cancel-reset-password': () => {\n    loginButtonsSession.set('resetPasswordToken', null);\n    if (doneCallback)\n      doneCallback();\n  }\n});\n\nconst resetPassword = () => {\n  loginButtonsSession.resetMessages();\n  const newPassword = document.getElementById('reset-password-new-password').value;\n  if (!validatePassword(newPassword))\n    return;\n\n  Accounts.resetPassword(\n    loginButtonsSession.get('resetPasswordToken'), newPassword,\n    error => {\n      if (error) {\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n      } else {\n        loginButtonsSession.set('resetPasswordToken', null);\n        loginButtonsSession.set('justResetPassword', true);\n        if (doneCallback)\n          doneCallback();\n      }\n    });\n};\n\nTemplate._resetPasswordDialog.helpers({\n  displayName,\n  inResetPasswordFlow: () => loginButtonsSession.get('resetPasswordToken'),\n});\n\n//\n// justResetPasswordDialog template\n//\n\nTemplate._justResetPasswordDialog.events({\n  'click #just-verified-dismiss-button': () =>\n    loginButtonsSession.set('justResetPassword', false),\n});\n\nTemplate._justResetPasswordDialog.helpers({\n  visible: () => loginButtonsSession.get('justResetPassword'),\n  displayName,\n});\n\n\n\n//\n// enrollAccountDialog template\n//\n\nconst enrollAccount = () => {\n  loginButtonsSession.resetMessages();\n  const password = document.getElementById('enroll-account-password').value;\n  if (!validatePassword(password))\n    return;\n\n  Accounts.resetPassword(\n    loginButtonsSession.get('enrollAccountToken'), password,\n    error => {\n      if (error) {\n        loginButtonsSession.errorMessage(error.reason || \"Unknown error\");\n      } else {\n        loginButtonsSession.set('enrollAccountToken', null);\n        if (doneCallback)\n          doneCallback();\n      }\n    });\n};\n\nTemplate._enrollAccountDialog.events({\n  'click #login-buttons-enroll-account-button': enrollAccount,\n  'keypress #enroll-account-password': event => {\n    if (event.keyCode === 13)\n      enrollAccount();\n  },\n  'click #login-buttons-cancel-enroll-account': () => {\n    loginButtonsSession.set('enrollAccountToken', null);\n    if (doneCallback)\n      doneCallback();\n  }\n});\n\nTemplate._enrollAccountDialog.helpers({\n  displayName,\n  inEnrollAccountFlow: () => loginButtonsSession.get('enrollAccountToken'),\n});\n\n\n//\n// justVerifiedEmailDialog template\n//\n\nTemplate._justVerifiedEmailDialog.events({\n  'click #just-verified-dismiss-button': () =>\n    loginButtonsSession.set('justVerifiedEmail', false),\n});\n\nTemplate._justVerifiedEmailDialog.helpers({\n  visible: () => loginButtonsSession.get('justVerifiedEmail'),\n  displayName,\n});\n\n\n//\n// loginButtonsMessagesDialog template\n//\n\nTemplate._loginButtonsMessagesDialog.events({\n  'click #messages-dialog-dismiss-button': () =>\n    loginButtonsSession.resetMessages(),\n});\n\nTemplate._loginButtonsMessagesDialog.helpers({\n  visible: () => {\n    const hasMessage = loginButtonsSession.get('infoMessage') || loginButtonsSession.get('errorMessage');\n    return !dropdown() && hasMessage;\n  }\n});\n\n\n//\n// configureLoginServiceDialog template\n//\n\nTemplate._configureLoginServiceDialog.events({\n  'click .configure-login-service-dismiss-button': () =>\n    loginButtonsSession.set('configureLoginServiceDialogVisible', false),\n  'click #configure-login-service-dialog-save-configuration': () => {\n    if (loginButtonsSession.get('configureLoginServiceDialogVisible') &&\n        ! loginButtonsSession.get('configureLoginServiceDialogSaveDisabled')) {\n      // Prepare the configuration document for this login service\n      const serviceName = loginButtonsSession.get('configureLoginServiceDialogServiceName');\n      const configuration = {\n        service: serviceName\n      };\n\n      // Fetch the value of each input field\n      configurationFields().forEach(field => {\n        configuration[field.property] = document.getElementById(\n          `configure-login-service-dialog-${field.property}`).value\n          .replace(/^\\s*|\\s*$/g, \"\"); // trim() doesnt work on IE8;\n      });\n\n      // Replacement of single use of jQuery in this package so we can remove\n      // the dependency\n      const inputs = [].slice.call( // Because HTMLCollections aren't arrays\n        document\n          .getElementById('configure-login-service-dialog')\n          .getElementsByTagName('input')\n      );\n\n      configuration.loginStyle =\n        document.querySelector('#configure-login-service-dialog input[name=\"loginStyle\"]:checked').value;\n\n      // Configure this login service\n      Accounts.connection.call(\n        \"configureLoginService\", configuration, (error, result) => {\n          if (error)\n            Meteor._debug(`Error configuring login service ${serviceName}`,\n                          error);\n          else\n            loginButtonsSession.set('configureLoginServiceDialogVisible',\n                                    false);\n        });\n    }\n  },\n  // IE8 doesn't support the 'input' event, so we'll run this on the keyup as\n  // well. (Keeping the 'input' event means that this also fires when you use\n  // the mouse to change the contents of the field, eg 'Cut' menu item.)\n  'input, keyup input': event => {\n    // if the event fired on one of the configuration input fields,\n    // check whether we should enable the 'save configuration' button\n    if (event.target.id.indexOf('configure-login-service-dialog') === 0)\n      updateSaveDisabled();\n  }\n});\n\n// check whether the 'save configuration' button should be enabled.\n// this is a really strange way to implement this and a Forms\n// Abstraction would make all of this reactive, and simpler.\nconst updateSaveDisabled = () => {\n  const anyFieldEmpty = configurationFields().reduce((prev, field) =>\n    prev || document.getElementById(\n      `configure-login-service-dialog-${field.property}`\n    ).value === '',\n    false\n  );\n\n  loginButtonsSession.set('configureLoginServiceDialogSaveDisabled', anyFieldEmpty);\n};\n\n// Returns the appropriate template for this login service.  This\n// template should be defined in the service's package\nTemplate._configureLoginServiceDialog.templateForService = serviceName => {\n  serviceName = serviceName || loginButtonsSession.get('configureLoginServiceDialogServiceName');\n  // XXX Service providers should be able to specify their configuration\n  // template name.\n  return Template[`configureLoginServiceDialogFor${\n                  serviceName === 'meteor-developer' ?\n                   'MeteorDeveloper' :\n                   capitalize(serviceName)}`];\n};\n\nconst configurationFields = () => {\n  const template = Template._configureLoginServiceDialog.templateForService();\n  return template.fields();\n};\n\nTemplate._configureLoginServiceDialog.helpers({\n  configurationFields,\n  visible: () => loginButtonsSession.get('configureLoginServiceDialogVisible'),\n  // renders the appropriate template\n  configurationSteps: () =>\n    Template._configureLoginServiceDialog.templateForService(),\n  saveDisabled: () =>\n    loginButtonsSession.get('configureLoginServiceDialogSaveDisabled'),\n});\n\n// XXX from http://epeli.github.com/underscore.string/lib/underscore.string.js\nconst capitalize = str => {\n  str = str == null ? '' : String(str);\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\n\nTemplate._configureLoginOnDesktopDialog.helpers({\n  visible: () => loginButtonsSession.get('configureOnDesktopVisible'),\n});\n\nTemplate._configureLoginOnDesktopDialog.events({\n  'click #configure-on-desktop-dismiss-button': () =>\n    loginButtonsSession.set('configureOnDesktopVisible', false),\n});\n"]}