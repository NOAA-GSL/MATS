name: "Build"
on:
  push:
    branches: [main, development]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-rc[0-9]+'
  pull_request:
    branches: [main, development]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        app: 
          - aircraft
          - anomalycor
          - cb-ceiling
          - ceiling
          - ceiling15
          - compositeReflectivity
          - echotop
          - landuse
          - precipGauge
          - precipitation1hr
          - precipitation24hr
          - precipitationSub24hr
          - ptype
          - raobamdar
          - surface
          - surfrad
          - upperair
          - vil
          - visibility
          - visibility15
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set env variables
        shell: bash
        # Note - this doesn't support branch names with "/" in them
        run: |
          RC_TAG="^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+-rc[0-9]+$"
          RELEASE_TAG="^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$"
          if [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            # PR build
            echo "BRANCH=${GITHUB_HEAD_REF}" >> $GITHUB_ENV
            echo "VERSION=dev-${{ github.sha }}" >> $GITHUB_ENV
            echo "REGISTRY=ghcr.io/noaa-gsl/mats/development" >> $GITHUB_ENV
          elif [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
            # Handle differences between branches/tags
            if [[ "${GITHUB_REF}" == *"heads"* ]]; then
              # branch build
              echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV
              echo "VERSION=dev-${{ github.sha }}" >> $GITHUB_ENV
              echo "REGISTRY=ghcr.io/noaa-gsl/mats/development" >> $GITHUB_ENV
            elif [[ "${GITHUB_REF}" =~ $RC_TAG ]]; then
              # release candidate tag
              echo "BRANCH=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
              echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
              echo "REGISTRY=ghcr.io/noaa-gsl/mats/development" >> $GITHUB_ENV
            elif [[ "${GITHUB_REF}" =~ $RELEASE_TAG ]]; then
              # production tag
              echo "BRANCH=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
              echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
              echo "REGISTRY=ghcr.io/noaa-gsl/mats/production" >> $GITHUB_ENV
            else
              echo "ERROR: Unanticipated Git Ref"
              exit 1
            fi
          else
            echo "ERROR: Unanticipated GitHub Event"
            exit 1
          fi
        id: git-info

      - name: Create lowercase app names
        # Docker tags must be lowercase
        env: 
          APP: '${{ matrix.app }}'
        run: |
          echo "APP_LOWERCASE=${APP,,}" >> $GITHUB_ENV

      - name: Build container
        run: |
          docker build \
            --build-arg APPNAME=${{ matrix.app }} \
            --build-arg BUILDVER="${{ env.VERSION }}" \
            --build-arg COMMITBRANCH=${{ env.BRANCH }} \
            --build-arg COMMITSHA=${{ github.sha }} \
            -t ${{ env.REGISTRY }}/${{ env.APP_LOWERCASE }}:${{ env.BRANCH }} \
            .

      - name: Scan container with Trivy
        uses: aquasecurity/trivy-action@0.0.20
        with:
          image-ref: '${{ env.REGISTRY }}/${{ env.APP_LOWERCASE }}:${{ env.BRANCH }}'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results-${{ env.APP_LOWERCASE }}.sarif'
          ignore-unfixed: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: 'trivy-results-${{ env.APP_LOWERCASE }}.sarif'

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push container
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.APP_LOWERCASE }}:${{ env.BRANCH }}
