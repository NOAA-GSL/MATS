version: "2"
services:
 met-http:
  container_name: "met-http"
  image: randytpierce/mats1:met-http
  ports:
    - "8080:8080"
  volumes:
   - $HOME/metexpress_app_configuration/web:/web

  restart: always

 mongo:
  container_name: "mongo"
  image: randytpierce/mats1:met-mongo
  ports:
   - "27017:27017"
  volumes:
   - $HOME/mongodata:/data/db
  restart: always

 met-anomalycor:
  container_name: "met-anomalycor"
  image: randytpierce/mats1:met-anomalycor-dev-2.1.4
  environment:
    - DELAY=2
  ports:
   - "3001:80"
  links:
   - mongo
  volumes:
   - $HOME/metexpress_app_configuration/settings:/usr/app/settings
  depends_on:
   - mongo
  restart: always

 met-surface:
  container_name: "met-surface"
  image: randytpierce/mats1:met-surface-dev-2.1.4
  environment:
    - DELAY=2
  ports:
   - "3002:80"
  links:
   - mongo
  volumes:
   - $HOME/metexpress_app_configuration/settings:/usr/app/settings
  depends_on:
   - mongo
  restart: always

 met-upperair:
  container_name: "met-upperair"
  image: randytpierce/mats1:met-upperair-dev-2.1.4
  environment:
    - DELAY=2
  ports:
   - "3003:80"
  links:
   - mongo
  volumes:
   - $HOME/metexpress_app_configuration/settings:/usr/app/settings
  depends_on:
   - mongo
  restart: always
