version: "2"

networks:
  web:
  internal:
    external: false

services:

# traefik:
#   container_name: traefik
#   image: traefik:1.7.2-alpine
#   restart: always
#   networks:
#     - web
#   ports:
#     - "80:80"
#     - "443:443"
#   volumes:
#     - /var/run/docker.sock:/var/run/docker.sock
#     - $HOME/metexpress_app_configuration/traefik.toml:/traefik.toml
#     - $HOME/metexpress_app_configuration/acme.json:/acme.json
#   labels:
#    - traefik.frontend.rule=Host:proxy.localhost
#    - traefik.port=8090

 met-http:
  container_name: "met-http"
  image: randytpierce/mats1:met-http
  ports:
   - "8080:8080"
  volumes:
   - $HOME/metexpress_app_configuration/web:/web
  restart: always


 mongo:
  container_name: "mongo"
  image: randytpierce/mats1:met-mongo
  ports:
   - "27017:27017"
  volumes:
   - $HOME/mongodata:/data/db
  restart: always
  networks:
   - internal

 met-anomalycor:
  container_name: "met-anomalycor"
  image: randytpierce/mats1:met-anomalycor-dev-2.1.4-2019.03.26.06.51
  environment:
    - DELAY=3
  links:
   - mongo
  ports:
    - "3001:80"
  volumes:
   - $HOME/metexpress_app_configuration/settings:/usr/app/settings
  depends_on:
   - mongo
  restart: always
  labels:
   - traefik.backend=met-anomalycor
   - traefik.frontend.rule=Host:met-anomalycor.localhost
   - traefik.docker.network=web
   - traefik.port=80
  networks:
   - web
   - internal

 met-surface:
  container_name: "met-surface"
  image: randytpierce/mats1:met-surface-dev-2.1.4-2019.03.26.22.14
  environment:
    - DELAY=2
  links:
   - mongo
  ports:
    - "3002:80"
  volumes:
   - $HOME/metexpress_app_configuration/settings:/usr/app/settings
  depends_on:
   - mongo
  restart: always
  labels:
   - traefik.backend=met-surface
   - traefik.frontend.rule=Host:met-surface.localhost
   - traefik.docker.network=web
   - traefik.port=80
  networks:
   - web
   - internal


 met-upperair:
  container_name: "met-upperair"
  image: randytpierce/mats1:met-upperair-dev-2.1.4-2019.03.26.06.16
  environment:
    - DELAY=2
  links:
   - mongo
  ports:
    - "3003:80"
  volumes:
   - $HOME/metexpress_app_configuration/settings:/usr/app/settings
  depends_on:
   - mongo
  restart: always
  labels:
   - traefik.backend=met-upperair
   - traefik.frontend.rule=Host:met-upperair.localhost
   - traefik.docker.network=web
   - traefik.port=80
  networks:
   - web
   - internal
